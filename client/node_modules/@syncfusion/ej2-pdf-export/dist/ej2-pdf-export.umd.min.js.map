{"version":3,"file":"ej2-pdf-export.umd.min.js","sources":["../src/implementation/collections/utils.js","../src/implementation/collections/dictionary.js","../src/implementation/primitives/pdf-name.js","../src/implementation/input-output/pdf-operators.js","../src/implementation/input-output/pdf-dictionary-properties.js","../src/implementation/primitives/pdf-dictionary.js","../src/implementation/primitives/pdf-number.js","../src/implementation/primitives/pdf-array.js","../src/implementation/primitives/pdf-stream.js","../src/implementation/primitives/pdf-string.js","../src/implementation/primitives/pdf-reference.js","../src/implementation/actions/action.js","../src/implementation/actions/uri-action.js","../src/implementation/graphics/enum.js","../src/implementation/graphics/pdf-color.js","../src/implementation/drawing/pdf-drawing.js","../src/implementation/graphics/brushes/pdf-brush.js","../src/implementation/graphics/brushes/pdf-solid-brush.js","../src/implementation/graphics/fonts/enum.js","../src/implementation/graphics/fonts/pdf-string-format.js","../src/implementation/graphics/fonts/string-tokenizer.js","../src/implementation/graphics/fonts/string-layouter.js","../src/implementation/graphics/fonts/pdf-font.js","../src/implementation/input-output/pdf-writer.js","../src/implementation/input-output/enum.js","../src/implementation/input-output/pdf-main-object-collection.js","../src/implementation/document/pdf-document-base.js","../src/implementation/input-output/cross-table.js","../src/implementation/primitives/pdf-boolean.js","../src/implementation/document/pdf-viewer-preferences.js","../src/implementation/document/pdf-catalog.js","../src/implementation/input-output/pdf-cross-table.js","../src/implementation/pages/pdf-page-size.js","../src/implementation/pages/enum.js","../src/implementation/graphics/pdf-margins.js","../src/implementation/pages/pdf-page-settings.js","../src/implementation/input-output/pdf-stream-writer.js","../src/implementation/graphics/pdf-pen.js","../src/implementation/graphics/pdf-transformation-matrix.js","../src/implementation/graphics/constants.js","../src/implementation/collections/object-object-pair/dictionary.js","../src/implementation/graphics/pdf-transparency.js","../src/implementation/document/automatic-fields/automatic-field-info-collection.js","../src/implementation/graphics/figures/base/graphics-element.js","../src/implementation/document/automatic-fields/automatic-field.js","../src/implementation/document/automatic-fields/automatic-field-info.js","../src/implementation/graphics/images/byte-array.js","../src/implementation/graphics/images/image-decoder.js","../src/implementation/graphics/unit-convertor.js","../src/implementation/graphics/images/pdf-image.js","../src/implementation/graphics/images/pdf-bitmap.js","../src/implementation/graphics/fonts/ttf-table-info.js","../src/implementation/graphics/fonts/ttf-name-table.js","../src/implementation/graphics/fonts/ttf-name-record.js","../src/implementation/graphics/fonts/ttf-head-table.js","../src/implementation/graphics/fonts/ttf-metrics.js","../src/implementation/graphics/fonts/ttf-horizontal-header-table.js","../src/implementation/graphics/fonts/ttf-OS2-Table.js","../src/implementation/graphics/fonts/ttf-post-table.js","../src/implementation/graphics/fonts/ttf-long-hor-metric.js","../src/implementation/graphics/fonts/ttf-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-cmap-table.js","../src/implementation/graphics/fonts/ttf-glyph-info.js","../src/implementation/graphics/fonts/ttf-loca-table.js","../src/implementation/graphics/fonts/ttf-apple-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-microsoft-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-trimmed-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-glyph-header.js","../src/implementation/input-output/big-endian-writer.js","../src/implementation/graphics/fonts/ttf-reader.js","../src/implementation/graphics/fonts/pdf-font-metrics.js","../src/implementation/graphics/fonts/unicode-true-type-font.js","../src/implementation/graphics/fonts/rtl/rtl-text-shape.js","../src/implementation/graphics/fonts/rtl/rtl-bidirectional.js","../src/implementation/graphics/fonts/rtl-renderer.js","../src/implementation/graphics/figures/enum.js","../src/implementation/graphics/brushes/pdf-gradient-brush.js","../src/implementation/graphics/figures/pdf-template.js","../src/implementation/graphics/pdf-resources.js","../src/implementation/graphics/brushes/pdf-tiling-brush.js","../src/implementation/graphics/pdf-graphics.js","../src/implementation/pages/pdf-page-layer.js","../src/implementation/general/pdf-collection.js","../src/implementation/pages/pdf-page-layer-collection.js","../src/implementation/pages/pdf-page-base.js","../src/implementation/annotations/annotation-collection.js","../src/implementation/pages/pdf-page.js","../src/implementation/pages/page-added-event-arguments.js","../src/implementation/pages/pdf-section-page-collection.js","../src/implementation/document/pdf-document-template.js","../src/implementation/pages/pdf-section-templates.js","../src/implementation/pages/pdf-section.js","../src/implementation/pages/pdf-section-collection.js","../src/implementation/pages/pdf-document-page-collection.js","../src/implementation/general/pdf-cache-collection.js","../src/implementation/document/pdf-document.js","../src/implementation/graphics/fonts/pdf-standard-font-metrics-factory.js","../src/implementation/graphics/fonts/pdf-standard-font.js","../src/implementation/annotations/annotation.js","../src/implementation/annotations/link-annotation.js","../src/implementation/annotations/action-link-annotation.js","../src/implementation/annotations/document-link-annotation.js","../src/implementation/graphics/figures/base/element-layouter.js","../src/implementation/structured-elements/grid/styles/pdf-borders.js","../src/implementation/graphics/figures/layout-element.js","../src/implementation/graphics/figures/base/text-layouter.js","../src/implementation/graphics/figures/text-element.js","../src/implementation/annotations/uri-annotation.js","../src/implementation/annotations/pdf-text-web-link.js","../src/implementation/document/automatic-fields/pdf-numbers-convertor.js","../src/implementation/document/automatic-fields/pdf-template-value-pair.js","../src/implementation/document/automatic-fields/multiple-value-field.js","../src/implementation/document/automatic-fields/pdf-page-number-field.js","../src/implementation/document/automatic-fields/composite-field.js","../src/implementation/document/automatic-fields/single-value-field.js","../src/implementation/document/automatic-fields/page-count-field.js","../src/implementation/general/enum.js","../src/implementation/general/pdf-destination.js","../src/implementation/graphics/brushes/enum.js","../src/implementation/general/functions/pdf-function.js","../src/implementation/general/functions/pdf-sampled-function.js","../src/implementation/graphics/brushes/pdf-brushes.js","../src/implementation/graphics/brushes/pdf-blend.js","../src/implementation/graphics/brushes/pdf-color-blend.js","../src/implementation/graphics/brushes/pdf-linear-gradient-brush.js","../src/implementation/graphics/brushes/pdf-radial-gradient-brush.js","../src/implementation/structured-elements/tables/light-tables/enum.js","../src/implementation/structured-elements/grid/styles/style.js","../src/implementation/structured-elements/grid/pdf-grid-cell.js","../src/implementation/structured-elements/grid/pdf-grid-column.js","../src/implementation/structured-elements/grid/pdf-grid-row.js","../src/implementation/structured-elements/grid/pdf-grid.js","../src/implementation/structured-elements/grid/layout/grid-layouter.js","../src/implementation/graphics/figures/base/shape-layouter.js","../src/implementation/graphics/figures/base/pdf-shape-element.js","../src/implementation/graphics/figures/base/draw-element.js","../src/implementation/graphics/figures/base/fill-element.js","../src/implementation/graphics/figures/path.js","../src/implementation/graphics/figures/rectangle-area.js","../src/implementation/graphics/figures/ellipse-part.js","../src/implementation/graphics/figures/arc.js","../src/implementation/graphics/fonts/pdf-true-type-font.js","../src/implementation/pages/pdf-page-template-element.js"],"sourcesContent":["/**\n * @private\n * @hidden\n */\nexport function defaultToString(item) {\n    // if (item === null) {\n    //     return 'COLLECTION_NULL';\n    // } else if (typeof item === 'undefined') {\n    //     return 'COLLECTION_UNDEFINED';\n    // } else if (Object.prototype.toString.call(item) === '[object String]') {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n","/**\n * Dictionary.ts class for EJ2-PDF\n * @private\n * @hidden\n */\nimport { defaultToString } from './utils';\n/**\n * @private\n * @hidden\n */\nvar Dictionary = /** @class */ (function () {\n    /**\n     * @private\n     * @hidden\n     */\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || defaultToString;\n    }\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.setValue = function (key, value) {\n        // if (typeof key === 'undefined' || typeof value === 'undefined') {\n        //     return undefined;\n        // }\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement === 'undefined') {\n        this.nElements++;\n        ret = undefined;\n        // }\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.remove = function (key) {\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement !== 'undefined') {\n        delete this.table[k];\n        this.nElements--;\n        return previousElement.value;\n        // }\n        // return undefined;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfKeys[index1])) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n            // }\n        }\n        return keysArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.values = function () {\n        var valuesArray = [];\n        var namesOfValues = Object.keys(this.table);\n        for (var index2 = 0; index2 < namesOfValues.length; index2++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfValues[index2])) {\n            var pair2 = this.table[namesOfValues[index2]];\n            valuesArray.push(pair2.value);\n            // }\n        }\n        return valuesArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.clear = function () {\n        this.table = {};\n        this.nElements = 0;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}()); // End of dictionary\nexport { Dictionary };\n","/**\n * `PdfName` class is used to perform name (element names) related primitive operations.\n * @private\n */\nvar PdfName = /** @class */ (function () {\n    function PdfName(value) {\n        /**\n         * `Start symbol` of the name object.\n         * @default /\n         * @private\n         */\n        this.stringStartMark = '/';\n        /**\n         * `Value` of the element.\n         * @private\n         */\n        this.internalValue = '';\n        /**\n         * Indicates if the object is currently in `saving state or not`.\n         * @default false\n         * @private\n         */\n        this.isSaving6 = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position6 = -1;\n        this.internalValue = this.normalizeValue(value);\n    }\n    Object.defineProperty(PdfName.prototype, \"status\", {\n        //property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status6;\n        },\n        set: function (value) {\n            this.status6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving6;\n        },\n        set: function (value) {\n            this.isSaving6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index6;\n        },\n        set: function (value) {\n            this.index6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position6;\n        },\n        set: function (value) {\n            this.position6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        set: function (value) {\n            // if (value !== this.value) {\n            var val = value;\n            if (value !== null && value.length > 0) {\n                // val = (value.substring(0, 1) === this.stringStartMark) ? value.substring(1) : value;\n                val = value;\n                this.internalValue = this.normalizeValue(val);\n            }\n            else {\n                this.internalValue = val;\n            }\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public methods\n    /**\n     * `Saves` the name using the specified writer.\n     * @private\n     */\n    PdfName.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.toString());\n    };\n    /**\n     * Gets `string` representation of the primitive.\n     * @private\n     */\n    PdfName.prototype.toString = function () {\n        return (this.stringStartMark + this.escapeString(this.value));\n    };\n    /**\n     * Creates a `copy of PdfName`.\n     * @private\n     */\n    PdfName.prototype.clone = function (crossTable) {\n        var newName = new PdfName();\n        newName.value = this.internalValue;\n        return newName;\n    };\n    /**\n     * Replace some characters with its `escape sequences`.\n     * @private\n     */\n    PdfName.prototype.escapeString = function (stringValue) {\n        // if (str === null) {\n        //     throw new Error('ArgumentNullException : str');\n        // }\n        // if (str === '') {\n        //     return str;\n        // }\n        var result = '';\n        var len = 0;\n        for (var i = 0, len_1 = stringValue.length; i < len_1; i++) {\n            var ch = stringValue[i];\n            var index = PdfName.delimiters.indexOf(ch);\n            // switch (ch) {\n            //     case '\\r' :\n            //         result = result + '\\\\r';\n            //         break;\n            //     case '\\n' :\n            //         result = result + '\\n';\n            //         break;\n            //     case '(' :\n            //     case ')' :\n            //     case '\\\\' :\n            //         //result.Append( '\\\\' ).Append( ch );\n            //         result = result + ch;\n            //         break;\n            //     default :\n            //         result = result + ch;\n            //         break;\n            // }\n            result = result + ch;\n        }\n        return result;\n    };\n    //methiods\n    /**\n     * Replace a symbol with its code with the precedence of the `sharp sign`.\n     * @private\n     */\n    PdfName.prototype.normalizeValue = function (value, c) {\n        // if (typeof c === undefined) {\n        //     let str : string = value;\n        //     for (let i : number = 0; i < PdfName.replacements.length; i++) {\n        //         str = this.normalizeValue(str, c);\n        //     }\n        //     return str;\n        // } else {\n        var strFormat = '#{0:X}';\n        //return value.replace(c.toString(),String.format(strFormat,c));\n        return value;\n        // }\n    };\n    /**\n     * PDF `special characters`.\n     * @private\n     */\n    PdfName.delimiters = '()<>[]{}/%}';\n    /**\n     * The symbols that are not allowed in PDF names and `should be replaced`.\n     * @private\n     */\n    PdfName.replacements = [' ', '\\t', '\\n', '\\r'];\n    return PdfName;\n}());\nexport { PdfName };\n","/**\n * PdfOperators.ts class for EJ2-PDF\n * Class of string PDF common operators.\n * @private\n */\nvar Operators = /** @class */ (function () {\n    /**\n     * Create an instance of `PdfOperator` class.\n     * @private\n     */\n    function Operators() {\n        /**\n         * Specifies the value of `test`.\n         * @private\n         */\n        this.forTest = 'test';\n        this.forTest = Operators.obj;\n    }\n    /**\n     * Specifies the value of `obj`.\n     * @private\n     */\n    Operators.obj = 'obj';\n    /**\n     * Specifies the value of `endObj`.\n     * @private\n     */\n    Operators.endObj = 'endobj';\n    /**\n     * Specifies the value of `R`.\n     * @private\n     */\n    Operators.r = 'R';\n    /**\n     * Specifies the value of ` `.\n     * @private\n     */\n    Operators.whiteSpace = ' ';\n    /**\n     * Specifies the value of `/`.\n     * @private\n     */\n    Operators.slash = '/';\n    /**\n     * Specifies the value of `\\r\\n`.\n     * @private\n     */\n    Operators.newLine = '\\r\\n';\n    /**\n     * Specifies the value of `stream`.\n     * @private\n     */\n    Operators.stream = 'stream';\n    /**\n     * Specifies the value of `endStream`.\n     * @private\n     */\n    Operators.endStream = 'endstream';\n    /**\n     * Specifies the value of `xref`.\n     * @private\n     */\n    Operators.xref = 'xref';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.f = 'f';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.n = 'n';\n    /**\n     * Specifies the value of `trailer`.\n     * @private\n     */\n    Operators.trailer = 'trailer';\n    /**\n     * Specifies the value of `startxref`.\n     * @private\n     */\n    Operators.startxref = 'startxref';\n    /**\n     * Specifies the value of `eof`.\n     * @private\n     */\n    Operators.eof = '%%EOF';\n    /**\n     * Specifies the value of `header`.\n     * @private\n     */\n    Operators.header = '%PDF-1.5';\n    /**\n     * Specifies the value of `beginText`.\n     * @private\n     */\n    Operators.beginText = 'BT';\n    /**\n     * Specifies the value of `endText`.\n     * @private\n     */\n    Operators.endText = 'ET';\n    /**\n     * Specifies the value of `m`.\n     * @private\n     */\n    Operators.beginPath = 'm';\n    /**\n     * Specifies the value of `l`.\n     * @private\n     */\n    Operators.appendLineSegment = 'l';\n    /**\n     * Specifies the value of `S`.\n     * @private\n     */\n    Operators.stroke = 'S';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.fill = 'f';\n    /**\n     * Specifies the value of `f*`.\n     * @private\n     */\n    Operators.fillEvenOdd = 'f*';\n    /**\n     * Specifies the value of `B`.\n     * @private\n     */\n    Operators.fillStroke = 'B';\n    /**\n     * Specifies the value of `B*`.\n     * @private\n     */\n    Operators.fillStrokeEvenOdd = 'B*';\n    /**\n     * Specifies the value of `c`.\n     * @private\n     */\n    Operators.appendbeziercurve = 'c';\n    /**\n     * Specifies the value of `re`.\n     * @private\n     */\n    Operators.appendRectangle = 're';\n    /**\n     * Specifies the value of `q`.\n     * @private\n     */\n    Operators.saveState = 'q';\n    /**\n     * Specifies the value of `Q`.\n     * @private\n     */\n    Operators.restoreState = 'Q';\n    /**\n     * Specifies the value of `Do`.\n     * @private\n     */\n    Operators.paintXObject = 'Do';\n    /**\n     * Specifies the value of `cm`.\n     * @private\n     */\n    Operators.modifyCtm = 'cm';\n    /**\n     * Specifies the value of `Tm`.\n     * @private\n     */\n    Operators.modifyTM = 'Tm';\n    /**\n     * Specifies the value of `w`.\n     * @private\n     */\n    Operators.setLineWidth = 'w';\n    /**\n     * Specifies the value of `J`.\n     * @private\n     */\n    Operators.setLineCapStyle = 'J';\n    /**\n     * Specifies the value of `j`.\n     * @private\n     */\n    Operators.setLineJoinStyle = 'j';\n    /**\n     * Specifies the value of `d`.\n     * @private\n     */\n    Operators.setDashPattern = 'd';\n    /**\n     * Specifies the value of `i`.\n     * @private\n     */\n    Operators.setFlatnessTolerance = 'i';\n    /**\n     * Specifies the value of `h`.\n     * @private\n     */\n    Operators.closePath = 'h';\n    /**\n     * Specifies the value of `s`.\n     * @private\n     */\n    Operators.closeStrokePath = 's';\n    /**\n     * Specifies the value of `b`.\n     * @private\n     */\n    Operators.closeFillStrokePath = 'b';\n    /**\n     * Specifies the value of `setCharacterSpace`.\n     * @private\n     */\n    Operators.setCharacterSpace = 'Tc';\n    /**\n     * Specifies the value of `setWordSpace`.\n     * @private\n     */\n    Operators.setWordSpace = 'Tw';\n    /**\n     * Specifies the value of `setHorizontalScaling`.\n     * @private\n     */\n    Operators.setHorizontalScaling = 'Tz';\n    /**\n     * Specifies the value of `setTextLeading`.\n     * @private\n     */\n    Operators.setTextLeading = 'TL';\n    /**\n     * Specifies the value of `setFont`.\n     * @private\n     */\n    Operators.setFont = 'Tf';\n    /**\n     * Specifies the value of `setRenderingMode`.\n     * @private\n     */\n    Operators.setRenderingMode = 'Tr';\n    /**\n     * Specifies the value of `setTextRise`.\n     * @private\n     */\n    Operators.setTextRise = 'Ts';\n    /**\n     * Specifies the value of `setTextScaling`.\n     * @private\n     */\n    Operators.setTextScaling = 'Tz';\n    /**\n     * Specifies the value of `setCoords`.\n     * @private\n     */\n    Operators.setCoords = 'Td';\n    /**\n     * Specifies the value of `goToNextLine`.\n     * @private\n     */\n    Operators.goToNextLine = 'T*';\n    /**\n     * Specifies the value of `setText`.\n     * @private\n     */\n    Operators.setText = 'Tj';\n    /**\n     * Specifies the value of `setTextWithFormatting`.\n     * @private\n     */\n    Operators.setTextWithFormatting = 'TJ';\n    /**\n     * Specifies the value of `setTextOnNewLine`.\n     * @private\n     */\n    Operators.setTextOnNewLine = '\\'';\n    /**\n     * Specifies the value of `selectcolorspaceforstroking`.\n     * @private\n     */\n    Operators.selectcolorspaceforstroking = 'CS';\n    /**\n     * Specifies the value of `selectcolorspacefornonstroking`.\n     * @private\n     */\n    Operators.selectcolorspacefornonstroking = 'cs';\n    /**\n     * Specifies the value of `setrbgcolorforstroking`.\n     * @private\n     */\n    Operators.setrbgcolorforstroking = 'RG';\n    /**\n     * Specifies the value of `setrbgcolorfornonstroking`.\n     * @private\n     */\n    Operators.setrbgcolorfornonstroking = 'rg';\n    /**\n     * Specifies the value of `K`.\n     * @private\n     */\n    Operators.setcmykcolorforstroking = 'K';\n    /**\n     * Specifies the value of `k`.\n     * @private\n     */\n    Operators.setcmykcolorfornonstroking = 'k';\n    /**\n     * Specifies the value of `G`.\n     * @private\n     */\n    Operators.setgraycolorforstroking = 'G';\n    /**\n     * Specifies the value of `g`.\n     * @private\n     */\n    Operators.setgraycolorfornonstroking = 'g';\n    /**\n     * Specifies the value of `W`.\n     * @private\n     */\n    Operators.clipPath = 'W';\n    /**\n     * Specifies the value of `clipPathEvenOdd`.\n     * @private\n     */\n    Operators.clipPathEvenOdd = 'W*';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.endPath = 'n';\n    /**\n     * Specifies the value of `setGraphicsState`.\n     * @private\n     */\n    Operators.setGraphicsState = 'gs';\n    /**\n     * Specifies the value of `%`.\n     * @private\n     */\n    Operators.comment = '%';\n    /**\n     * Specifies the value of `*`.\n     * @private\n     */\n    Operators.evenOdd = '*';\n    /**\n     * Specifies the value of `M`.\n     * @private\n     */\n    Operators.setMiterLimit = 'M';\n    /**\n     * Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased color spaces. For non-stroking operations.\n     * @public\n     */\n    Operators.setColorAndPattern = 'scn';\n    /**\n     * Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased color spaces. For stroking.\n     */\n    Operators.setColorAndPatternStroking = 'SCN';\n    return Operators;\n}());\nexport { Operators };\n","/**\n * dictionaryProperties.ts class for EJ2-PDF\n * PDF dictionary properties.\n * @private\n */\nvar DictionaryProperties = /** @class */ (function () {\n    /**\n     * Initialize an instance for `PdfDictionaryProperties` class.\n     * @private\n     */\n    function DictionaryProperties() {\n        /**\n         * Specifies the value of `Pages`.\n         * @private\n         */\n        this.pages = 'Pages';\n        /**\n         * Specifies the value of `Kids`.\n         * @private\n         */\n        this.kids = 'Kids';\n        /**\n         * Specifies the value of `Count`.\n         * @private\n         */\n        this.count = 'Count';\n        /**\n         * Specifies the value of `Resources`.\n         * @private\n         */\n        this.resources = 'Resources';\n        /**\n         * Specifies the value of `Type`.\n         * @private\n         */\n        this.type = 'Type';\n        /**\n         * Specifies the value of `Size`.\n         * @private\n         */\n        this.size = 'Size';\n        /**\n         * Specifies the value of `MediaBox`.\n         * @private\n         */\n        this.mediaBox = 'MediaBox';\n        /**\n         * Specifies the value of `Parent`.\n         * @private\n         */\n        this.parent = 'Parent';\n        /**\n         * Specifies the value of `Root`.\n         * @private\n         */\n        this.root = 'Root';\n        /**\n         * Specifies the value of `DecodeParms`.\n         * @private\n         */\n        this.decodeParms = 'DecodeParms';\n        /**\n         * Specifies the value of `Filter`.\n         * @private\n         */\n        this.filter = 'Filter';\n        /**\n         * Specifies the value of `Font`.\n         * @private\n         */\n        this.font = 'Font';\n        /**\n         * Specifies the value of `Type1`.\n         * @private\n         */\n        this.type1 = 'Type1';\n        /**\n         * Specifies the value of `BaseFont`.\n         * @private\n         */\n        this.baseFont = 'BaseFont';\n        /**\n         * Specifies the value of `Encoding`.\n         * @private\n         */\n        this.encoding = 'Encoding';\n        /**\n         * Specifies the value of `Subtype`.\n         * @private\n         */\n        this.subtype = 'Subtype';\n        /**\n         * Specifies the value of `Contents`.\n         * @private\n         */\n        this.contents = 'Contents';\n        /**\n         * Specifies the value of `ProcSet`.\n         * @private\n         */\n        this.procset = 'ProcSet';\n        /**\n         * Specifies the value of `ColorSpace`.\n         * @private\n         */\n        this.colorSpace = 'ColorSpace';\n        /**\n         * Specifies the value of `ExtGState`.\n         * @private\n         */\n        this.extGState = 'ExtGState';\n        /**\n         * Specifies the value of `Pattern`.\n         * @private\n         */\n        this.pattern = 'Pattern';\n        /**\n         * Specifies the value of `XObject`.\n         * @private\n         */\n        this.xObject = 'XObject';\n        /**\n         * Specifies the value of `Length`.\n         * @private\n         */\n        this.length = 'Length';\n        /**\n         * Specifies the value of `Width`.\n         * @private\n         */\n        this.width = 'Width';\n        /**\n         * Specifies the value of `Height`.\n         * @private\n         */\n        this.height = 'Height';\n        /**\n         * Specifies the value of `BitsPerComponent`.\n         * @private\n         */\n        this.bitsPerComponent = 'BitsPerComponent';\n        /**\n         * Specifies the value of `Image`.\n         * @private\n         */\n        this.image = 'Image';\n        /**\n         * Specifies the value of `dctdecode`.\n         * @private\n         */\n        this.dctdecode = 'DCTDecode';\n        /**\n         * Specifies the value of `Columns`.\n         * @private\n         */\n        this.columns = 'Columns';\n        /**\n         * Specifies the value of `BlackIs1`.\n         * @private\n         */\n        this.blackIs1 = 'BlackIs1';\n        /**\n         * Specifies the value of `K`.\n         * @private\n         */\n        this.k = 'K';\n        /**\n         * Specifies the value of `S`.\n         * @private\n         */\n        this.s = 'S';\n        /**\n         * Specifies the value of `Predictor`.\n         * @private\n         */\n        this.predictor = 'Predictor';\n        /**\n         * Specifies the value of `DeviceRGB`.\n         * @private\n         */\n        this.deviceRgb = 'DeviceRGB';\n        /**\n         * Specifies the value of `Next`.\n         * @private\n         */\n        this.next = 'Next';\n        /**\n         * Specifies the value of `Action`.\n         * @private\n         */\n        this.action = 'Action';\n        /**\n         * Specifies the value of `Link`.\n         * @private\n         */\n        this.link = 'Link';\n        /**\n         *\n         * Specifies the value of `A`.\n         * @private\n         */\n        this.a = 'A';\n        /**\n         * Specifies the value of `Annot`.\n         * @private\n         */\n        this.annot = 'Annot';\n        /**\n         * Specifies the value of `P`.\n         * @private\n         */\n        this.p = 'P';\n        /**\n         * Specifies the value of `C`.\n         * @private\n         */\n        this.c = 'C';\n        /**\n         * Specifies the value of `Rect`.\n         * @private\n         */\n        this.rect = 'Rect';\n        /**\n         * Specifies the value of `URI`.\n         * @private\n         */\n        this.uri = 'URI';\n        /**\n         * Specifies the value of `Annots`.\n         * @private\n         */\n        this.annots = 'Annots';\n        /**\n         * Specifies the value of `ca`.\n         * @private\n         */\n        this.ca = 'ca';\n        /**\n         * Specifies the value of `CA`.\n         * @private\n         */\n        this.CA = 'CA';\n        /**\n         * Specifies the value of `XYZ`.\n         * @private\n         */\n        this.xyz = 'XYZ';\n        /**\n         * Specifies the value of `Fit`.\n         * @private\n         */\n        this.fit = 'Fit';\n        /**\n         * Specifies the value of `Dest`.\n         * @private\n         */\n        this.dest = 'Dest';\n        /**\n         * Specifies the value of `BM`.\n         * @private\n         */\n        this.BM = 'BM';\n        /**\n         * Specifies the value of `flatedecode`.\n         * @private\n         */\n        this.flatedecode = 'FlateDecode';\n        /**\n         * Specifies the value of `Rotate`.\n         * @private\n         */\n        this.rotate = 'Rotate';\n        /**\n         * Specifies the value of 'bBox'.\n         * @private\n         */\n        this.bBox = 'BBox';\n        /**\n         * Specifies the value of 'form'.\n         * @private\n         */\n        this.form = 'Form';\n        /**\n         * Specifies the value of 'w'.\n         * @private\n         */\n        this.w = 'W';\n        /**\n         * Specifies the value of 'cIDFontType2'.\n         * @private\n         */\n        this.cIDFontType2 = 'CIDFontType2';\n        /**\n         * Specifies the value of 'cIDToGIDMap'.\n         * @private\n         */\n        this.cIDToGIDMap = 'CIDToGIDMap';\n        /**\n         * Specifies the value of 'identity'.\n         * @private\n         */\n        this.identity = 'Identity';\n        /**\n         * Specifies the value of 'dw'.\n         * @private\n         */\n        this.dw = 'DW';\n        /**\n         * Specifies the value of 'fontDescriptor'.\n         * @private\n         */\n        this.fontDescriptor = 'FontDescriptor';\n        /**\n         * Specifies the value of 'cIDSystemInfo'.\n         * @private\n         */\n        this.cIDSystemInfo = 'CIDSystemInfo';\n        /**\n         * Specifies the value of 'fontName'.\n         * @private\n         */\n        this.fontName = 'FontName';\n        /**\n         * Specifies the value of 'flags'.\n         * @private\n         */\n        this.flags = 'Flags';\n        /**\n         * Specifies the value of 'fontBBox'.\n         * @private\n         */\n        this.fontBBox = 'FontBBox';\n        /**\n         * Specifies the value of 'missingWidth'.\n         * @private\n         */\n        this.missingWidth = 'MissingWidth';\n        /**\n         * Specifies the value of 'stemV'.\n         * @private\n         */\n        this.stemV = 'StemV';\n        /**\n         * Specifies the value of 'italicAngle'.\n         * @private\n         */\n        this.italicAngle = 'ItalicAngle';\n        /**\n         * Specifies the value of 'capHeight'.\n         * @private\n         */\n        this.capHeight = 'CapHeight';\n        /**\n         * Specifies the value of 'ascent'.\n         * @private\n         */\n        this.ascent = 'Ascent';\n        /**\n         * Specifies the value of 'descent'.\n         * @private\n         */\n        this.descent = 'Descent';\n        /**\n         * Specifies the value of 'leading'.\n         * @private\n         */\n        this.leading = 'Leading';\n        /**\n         * Specifies the value of 'avgWidth'.\n         * @private\n         */\n        this.avgWidth = 'AvgWidth';\n        /**\n         * Specifies the value of 'fontFile2'.\n         * @private\n         */\n        this.fontFile2 = 'FontFile2';\n        /**\n         * Specifies the value of 'maxWidth'.\n         * @private\n         */\n        this.maxWidth = 'MaxWidth';\n        /**\n         * Specifies the value of 'xHeight'.\n         * @private\n         */\n        this.xHeight = 'XHeight';\n        /**\n         * Specifies the value of 'stemH'.\n         * @private\n         */\n        this.stemH = 'StemH';\n        /**\n         * Specifies the value of 'registry'.\n         * @private\n         */\n        this.registry = 'Registry';\n        /**\n         * Specifies the value of 'ordering'.\n         * @private\n         */\n        this.ordering = 'Ordering';\n        /**\n         * Specifies the value of 'supplement'.\n         * @private\n         */\n        this.supplement = 'Supplement';\n        /**\n         * Specifies the value of 'type0'.\n         * @private\n         */\n        this.type0 = 'Type0';\n        /**\n         * Specifies the value of 'identityH'.\n         * @private\n         */\n        this.identityH = 'Identity-H';\n        /**\n         * Specifies the value of 'toUnicode'.\n         * @private\n         */\n        this.toUnicode = 'ToUnicode';\n        /**\n         * Specifies the value of 'descendantFonts'.\n         * @private\n         */\n        this.descendantFonts = 'DescendantFonts';\n        /**\n         * Specifies the value of 'background'.\n         * @private\n         */\n        this.background = 'Background';\n        /**\n         * Specifies the value of 'shading'.\n         * @private\n         */\n        this.shading = 'Shading';\n        /**\n         * Specifies the value of 'matrix'.\n         * @private\n         */\n        this.matrix = 'Matrix';\n        /**\n         * Specifies the value of 'antiAlias'.\n         * @private\n         */\n        this.antiAlias = 'AntiAlias';\n        /**\n         * Specifies the value of 'function'.\n         * @private\n         */\n        this.function = 'Function';\n        /**\n         * Specifies the value of 'extend'.\n         * @private\n         */\n        this.extend = 'Extend';\n        /**\n         * Specifies the value of 'shadingType'.\n         * @private\n         */\n        this.shadingType = 'ShadingType';\n        /**\n         * Specifies the value of 'coords'.\n         * @private\n         */\n        this.coords = 'Coords';\n        /**\n         * Specifies the value of 'domain'.\n         * @private\n         */\n        this.domain = 'Domain';\n        /**\n         * Specifies the value of 'range'.\n         * @private\n         */\n        this.range = 'Range';\n        /**\n         * Specifies the value of 'functionType'.\n         * @private\n         */\n        this.functionType = 'FunctionType';\n        /**\n         * Specifies the value of 'bitsPerSample'.\n         * @private\n         */\n        this.bitsPerSample = 'BitsPerSample';\n        /**\n         * Specifies the value of 'patternType'.\n         * @private\n         */\n        this.patternType = 'PatternType';\n        /**\n         * Specifies the value of 'paintType'.\n         * @private\n         */\n        this.paintType = 'PaintType';\n        /**\n         * Specifies the value of 'tilingType'.\n         * @private\n         */\n        this.tilingType = 'TilingType';\n        /**\n         * Specifies the value of 'xStep'.\n         * @private\n         */\n        this.xStep = 'XStep';\n        /**\n         * Specifies the value of 'yStep'.\n         * @private\n         */\n        this.yStep = 'YStep';\n        /**\n         * Specifies the value of viewer preferences.\n         * @private\n         */\n        this.viewerPreferences = 'ViewerPreferences';\n        /**\n         * Specifies the value of center window.\n         * @private\n         */\n        this.centerWindow = 'CenterWindow';\n        /**\n         * Specifies the value of display title.\n         * @private\n         */\n        this.displayTitle = 'DisplayTitle';\n        /**\n         * Specifies the value of fit window.\n         * @private\n         */\n        this.fitWindow = 'FitWindow';\n        /**\n         * Specifies the value of hide menu bar.\n         * @private\n         */\n        this.hideMenuBar = 'HideMenubar';\n        /**\n         * Specifies the value of hide tool bar.\n         * @private\n         */\n        this.hideToolBar = 'HideToolbar';\n        /**\n         * Specifies the value of hide window UI.\n         * @private\n         */\n        this.hideWindowUI = 'HideWindowUI';\n        /**\n         * Specifies the value of page mode.\n         * @private\n         */\n        this.pageMode = 'PageMode';\n        /**\n         * Specifies the value of page layout.\n         * @private\n         */\n        this.pageLayout = 'PageLayout';\n        /**\n         * Specifies the value of duplex.\n         * @private\n         */\n        this.duplex = 'Duplex';\n        /**\n         * Specifies the value of print scaling.\n         * @private\n         */\n        this.printScaling = 'PrintScaling';\n        //\n    }\n    return DictionaryProperties;\n}());\nexport { DictionaryProperties };\n","import { Dictionary } from './../collections/dictionary';\nimport { PdfName } from './pdf-name';\nimport { Operators } from './../input-output/pdf-operators';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDictionary` class is used to perform primitive operations.\n * @private\n */\nvar PdfDictionary = /** @class */ (function () {\n    function PdfDictionary(dictionary) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position7 = -1;\n        /**\n         * The `IPdfSavable` with the specified key.\n         * @private\n         */\n        this.primitiveItems = new Dictionary();\n        /**\n         * `Start marker` for dictionary.\n         * @private\n         */\n        this.prefix = '<<';\n        /**\n         * `End marker` for dictionary.\n         * @private\n         */\n        this.suffix = '>>';\n        /**\n         * @hidden\n         * @private\n         */\n        this.resources = [];\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.object = null;\n        /**\n         * Flag for PDF file formar 1.5 is dictionary `archiving` needed.\n         * @default true\n         * @private\n         */\n        this.archive = true;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isResource = false;\n        if (typeof dictionary === 'undefined') {\n            this.primitiveItems = new Dictionary();\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n        else {\n            this.primitiveItems = new Dictionary();\n            var keys = dictionary.items.keys();\n            var values = dictionary.items.values();\n            for (var index = 0; index < dictionary.items.size(); index++) {\n                this.primitiveItems.setValue(keys[index], values[index]);\n            }\n            this.status = dictionary.status;\n            this.freezeChanges(this);\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n    }\n    Object.defineProperty(PdfDictionary.prototype, \"items\", {\n        //Properties\n        /**\n         * Gets or sets the `IPdfSavable` with the specified key.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status7;\n        },\n        set: function (value) {\n            this.status7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving7;\n        },\n        set: function (value) {\n            this.isSaving7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index7;\n        },\n        set: function (value) {\n            this.index7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position7;\n        },\n        set: function (value) {\n            this.position7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems.size();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Dictionary\", {\n        /**\n         * Collection of `items` in the object.\n         * @private\n         */\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.getArchive = function () {\n        return this.archive;\n    };\n    /**\n     * Set flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.setArchive = function (value) {\n        this.archive = value;\n    };\n    /**\n     * Sets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.setEncrypt = function (value) {\n        this.encrypt = value;\n        this.modify();\n    };\n    /**\n     * Gets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.getEncrypt = function () {\n        return this.encrypt;\n    };\n    /**\n     * `Freezes` the changes.\n     * @private\n     */\n    PdfDictionary.prototype.freezeChanges = function (freezer) {\n        this.bChanged = false;\n    };\n    /**\n     * Creates a `copy of PdfDictionary`.\n     * @private\n     */\n    PdfDictionary.prototype.clone = function (crossTable) {\n        //Need to add more codings\n        var newDict = new PdfDictionary();\n        return newDict;\n    };\n    /**\n     * `Mark` this instance modified.\n     * @private\n     */\n    PdfDictionary.prototype.modify = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Removes` the specified key.\n     * @private\n     */\n    PdfDictionary.prototype.remove = function (key) {\n        if (typeof key !== 'string') {\n            this.primitiveItems.remove(key.value);\n            this.modify();\n        }\n        else {\n            this.remove(new PdfName(key));\n        }\n    };\n    /**\n     * `Determines` whether the dictionary contains the key.\n     * @private\n     */\n    PdfDictionary.prototype.containsKey = function (key) {\n        var returnValue = false;\n        returnValue = this.primitiveItems.containsKey(key.toString());\n        return returnValue;\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginSave = function () {\n        this.beginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `Font Dictionary BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onFontDictionaryBeginSave = function () {\n        this.fontDictionaryBeginSave.sender.fontDictionaryBeginSave();\n    };\n    /**\n     * Raises event `Descendant Font BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onDescendantFontBeginSave = function () {\n        this.descendantFontBeginSave.sender.descendantFontBeginSave();\n    };\n    /**\n     * Raises event 'BeginSave'.\n     * @private\n     */\n    PdfDictionary.prototype.onTemplateBeginSave = function () {\n        this.pageBeginDrawTemplate.sender.pageBeginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginAnnotationSave = function () {\n        this.annotationBeginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onSectionBeginSave = function (writer) {\n        var saveEvent = this.sectionBeginSave;\n        saveEvent.sender.beginSave(saveEvent.state, writer);\n    };\n    PdfDictionary.prototype.save = function (writer, bRaiseEvent) {\n        if (typeof bRaiseEvent === 'undefined') {\n            this.save(writer, true);\n        }\n        else {\n            writer.write(this.prefix);\n            if (typeof this.beginSave !== 'undefined') {\n                this.onBeginSave();\n            }\n            if (typeof this.descendantFontBeginSave !== 'undefined') {\n                this.onDescendantFontBeginSave();\n            }\n            if (typeof this.fontDictionaryBeginSave !== 'undefined') {\n                this.onFontDictionaryBeginSave();\n            }\n            if (typeof this.annotationBeginSave !== 'undefined') {\n                this.onBeginAnnotationSave();\n            }\n            if (typeof this.sectionBeginSave !== 'undefined') {\n                this.onSectionBeginSave(writer);\n            }\n            if (typeof this.pageBeginDrawTemplate !== 'undefined') {\n                this.onTemplateBeginSave();\n            }\n            // }\n            if (this.Count > 0) {\n                this.saveItems(writer);\n            }\n            writer.write(this.suffix);\n            writer.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Save dictionary items`.\n     * @private\n     */\n    PdfDictionary.prototype.saveItems = function (writer) {\n        writer.write(Operators.newLine);\n        var keys = this.primitiveItems.keys();\n        var values = this.primitiveItems.values();\n        for (var index = 0; index < keys.length; index++) {\n            var key = keys[index];\n            var name_1 = new PdfName(key);\n            name_1.save(writer);\n            writer.write(Operators.whiteSpace);\n            var resources = values[index];\n            resources.save(writer);\n            writer.write(Operators.newLine);\n        }\n    };\n    return PdfDictionary;\n}());\nexport { PdfDictionary };\nvar SaveSectionCollectionEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveSectionCollectionEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveSectionCollectionEventHandler;\n}());\nexport { SaveSectionCollectionEventHandler };\nvar SaveDescendantFontEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveDescendantFontEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveDescendantFontEventHandler;\n}());\nexport { SaveDescendantFontEventHandler };\nvar SaveFontDictionaryEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontDictionaryEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontDictionaryEventHandler;\n}());\nexport { SaveFontDictionaryEventHandler };\nvar SaveAnnotationEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save annotation event handler` class.\n     * @private\n     */\n    function SaveAnnotationEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveAnnotationEventHandler;\n}());\nexport { SaveAnnotationEventHandler };\nvar SaveSectionEventHandler = /** @class */ (function () {\n    // constructors\n    /**\n     * New instance for `save section event handler` class.\n     * @private\n     */\n    function SaveSectionEventHandler(sender, state) {\n        this.sender = sender;\n        this.state = state;\n    }\n    return SaveSectionEventHandler;\n}());\nexport { SaveSectionEventHandler };\n/**\n * SaveTemplateEventHandler class used to store information about template elements.\n * @private\n * @hidden\n */\nvar SaveTemplateEventHandler = /** @class */ (function () {\n    /**\n     * New instance for save section collection event handler class.\n     * @public\n     */\n    function SaveTemplateEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveTemplateEventHandler;\n}());\nexport { SaveTemplateEventHandler };\n","/**\n * `PdfNumber` class is used to perform number related primitive operations.\n * @private\n */\nvar PdfNumber = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfNumber` class.\n     * @private\n     */\n    function PdfNumber(value) {\n        /**\n         * Sotres the `position`.\n         * @default -1\n         * @private\n         */\n        this.position5 = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfNumber.prototype, \"intValue\", {\n        /**\n         * Gets or sets the `integer` value.\n         * @private\n         */\n        get: function () {\n            return this.value;\n        },\n        set: function (value) {\n            this.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isInteger\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is integer`.\n         * @private\n         */\n        get: function () {\n            return this.integer;\n        },\n        set: function (value) {\n            this.integer = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status5;\n        },\n        set: function (value) {\n            this.status5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving5;\n        },\n        set: function (value) {\n            this.isSaving5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index5;\n        },\n        set: function (value) {\n            this.index5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position5;\n        },\n        set: function (value) {\n            this.position5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves the object`.\n     * @private\n     */\n    PdfNumber.prototype.save = function (writer) {\n        writer.write(this.intValue.toString()); //tostring(CultureInfo.InletiantCulture)\n    };\n    /**\n     * Creates a `copy of PdfNumber`.\n     * @private\n     */\n    PdfNumber.prototype.clone = function (crossTable) {\n        var newNumber = new PdfNumber(this.value);\n        return newNumber;\n    };\n    /**\n     * Converts a `float value to a string` using Adobe PDF rules.\n     * @private\n     */\n    PdfNumber.floatToString = function (number) {\n        // let tempString1 : string = number.toString();\n        // let tempString2 : string = tempString1.indexOf('.') != -1 ? tempString1.substring(0, tempString1.indexOf('.')) : tempString1;\n        var returnString = number.toFixed(2);\n        if (returnString === '0.00') {\n            returnString = '.00';\n        }\n        // let prefixLength : number = (22 - tempString2.length) >= 0 ? (22 - tempString2.length) : 0;\n        // for (let index : number = 0; index < prefixLength; index++) {\n        //     returnString += '0';\n        // }\n        // returnString += tempString2 + '.00';\n        // returnString += (tempString3.length > 6) ? tempString3.substring(0,6) : tempString3;\n        // let suffixLength : number = (6 - tempString3.length) >= 0 ? (6 - tempString3.length) : 0;\n        // for (let index : number = 0; index < suffixLength; index++) {\n        //     returnString += '0';\n        // }\n        return returnString;\n    };\n    /**\n     * Determines the `minimum of the three values`.\n     * @private\n     */\n    PdfNumber.min = function (x, y, z) {\n        var r = Math.min(x, y);\n        return Math.min(z, r);\n    };\n    return PdfNumber;\n}());\nexport { PdfNumber };\n","import { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\n/**\n * `PdfArray` class is used to perform array related primitive operations.\n * @private\n */\nvar PdfArray = /** @class */ (function () {\n    function PdfArray(array) {\n        //Fields\n        /**\n         * `startMark` - '['\n         * @private\n         */\n        this.startMark = '[';\n        /**\n         * `endMark` - ']'.\n         * @private\n         */\n        this.endMark = ']';\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position9 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject9 = null;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isFont = false;\n        if (typeof array === 'undefined') {\n            this.internalElements = [];\n        }\n        else {\n            if (typeof array !== 'undefined' && !(array instanceof PdfArray)) {\n                var tempNumberArray = array;\n                for (var index = 0; index < tempNumberArray.length; index++) {\n                    var pdfNumber = new PdfNumber(tempNumberArray[index]);\n                    this.add(pdfNumber);\n                }\n                // } else if (typeof array !== 'undefined' && (array instanceof PdfArray)) {\n            }\n            else {\n                var tempArray = array;\n                // if (tempArray.Elements.length > 0) {\n                this.internalElements = [];\n                for (var index = 0; index < tempArray.elements.length; index++) {\n                    this.internalElements.push(tempArray.elements[index]);\n                }\n                // }\n            }\n        }\n    }\n    //property\n    /**\n     * Gets the `IPdfSavable` at the specified index.\n     * @private\n     */\n    PdfArray.prototype.items = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index, The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    Object.defineProperty(PdfArray.prototype, \"count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.internalElements.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status9;\n        },\n        set: function (value) {\n            this.status9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving9;\n        },\n        set: function (value) {\n            this.isSaving9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject9;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position9;\n        },\n        set: function (value) {\n            this.position9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index9;\n        },\n        set: function (value) {\n            this.index9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"elements\", {\n        /**\n         * Gets the `elements` of the Pdf Array.\n         * @private\n         */\n        get: function () {\n            return this.internalElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element to the PDF array.\n     * @private\n     */\n    PdfArray.prototype.add = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : obj');\n        // }\n        if (typeof this.internalElements === 'undefined') {\n            this.internalElements = [];\n        }\n        this.internalElements.push(element);\n        this.markedChange();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markedChange = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Determines` whether the specified element is within the array.\n     * @private\n     */\n    PdfArray.prototype.contains = function (element) {\n        var returnValue = false;\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var tempElement = this.internalElements[index];\n            var inputElement = element;\n            if (tempElement != null && typeof tempElement !== 'undefined' && inputElement != null && typeof inputElement !== 'undefined') {\n                if (tempElement.value === inputElement.value) {\n                    return true;\n                }\n            }\n            // if (this.internalElements[index] === element) {\n            //     returnValue = true;\n            // }\n        }\n        return returnValue;\n    };\n    /**\n     * Returns the `primitive object` of input index.\n     * @private\n     */\n    PdfArray.prototype.getItems = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index , The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfArray.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.startMark);\n        for (var i = 0, len = this.count; i < len; i++) {\n            this.getItems(i).save(writer);\n            if (i + 1 !== len) {\n                writer.write(Operators.whiteSpace);\n            }\n        }\n        writer.write(this.endMark);\n    };\n    /**\n     * Creates a `copy of PdfArray`.\n     * @private\n     */\n    PdfArray.prototype.clone = function (crossTable) {\n        // if (this.clonedObject9 !== null && this.clonedObject9.CrossTable === crossTable) {\n        //     return this.clonedObject9;\n        // } else {\n        this.clonedObject9 = null;\n        // Else clone the object.\n        var newArray = new PdfArray();\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var obj = this.internalElements[index];\n            newArray.add(obj.clone(crossTable));\n        }\n        newArray.pdfCrossTable = crossTable;\n        this.clonedObject9 = newArray;\n        return newArray;\n    };\n    /**\n     * Creates filled PDF array `from the rectangle`.\n     * @private\n     */\n    PdfArray.fromRectangle = function (bounds) {\n        var values = [bounds.x, bounds.y, bounds.width, bounds.height];\n        var array = new PdfArray(values);\n        return array;\n    };\n    // /**\n    //  * Creates the rectangle from filled PDF array.\n    //  * @private\n    //  */\n    // public ToRectangle() : RectangleF {\n    //     if (this.Count < 4) {\n    //         throw Error('InvalidOperationException-Can not convert to rectangle.');\n    //     }\n    //     let x1 : number;\n    //     let x2 : number;\n    //     let y1 : number;\n    //     let y2 : number;\n    //     let num : PdfNumber = this.getItems(0) as PdfNumber;\n    //     x1 = num.IntValue;\n    //     num = this.getItems(1) as PdfNumber;\n    //     y1 = num.IntValue;\n    //     num = this.getItems(2) as PdfNumber;\n    //     x2 = num.IntValue;\n    //     num = this.getItems(3) as PdfNumber;\n    //     y2 = num.IntValue;\n    //     let x : number = Math.min(x1, x2);\n    //     let y : number = Math.min(y1, y2);\n    //     let width : number = Math.abs(x1 - x2);\n    //     let height : number = Math.abs(y1 - y2);\n    //     let rect : RectangleF = new RectangleF(new PointF(x, y), new SizeF(width, height));\n    //     return rect;\n    // }\n    /**\n     * `Inserts` the element into the array.\n     * @private\n     */\n    PdfArray.prototype.insert = function (index, element) {\n        if (index < this.internalElements.length && index > 0) {\n            var tempElements = [];\n            for (var i = 0; i < index; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            tempElements.push(element);\n            for (var i = index; i < this.internalElements.length; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            this.internalElements = tempElements;\n        }\n        else {\n            this.internalElements.push(element);\n        }\n        this.markChanged();\n    };\n    /**\n     * `Checks whether array contains the element`.\n     * @private\n     */\n    PdfArray.prototype.indexOf = function (element) {\n        return this.internalElements.indexOf(element);\n    };\n    /**\n     * `Removes` element from the array.\n     * @private\n     */\n    PdfArray.prototype.remove = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : element');\n        // }\n        var index = this.internalElements.indexOf(element);\n        // if (index >= 0 && index < this.internalElements.length) {\n        this.internalElements[index] = null;\n        // }\n        this.markChanged();\n    };\n    /**\n     * `Remove` the element from the array by its index.\n     * @private\n     */\n    PdfArray.prototype.removeAt = function (index) {\n        // this.internalElements.RemoveAt(index);\n        if (this.internalElements.length > index) {\n            var tempArray = [];\n            for (var i = 0; i < index; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            for (var i = index + 1; i < this.internalElements.length; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            this.internalElements = tempArray;\n        }\n        this.markChanged();\n    };\n    /**\n     * `Clear` the array.\n     * @private\n     */\n    PdfArray.prototype.clear = function () {\n        this.internalElements = [];\n        this.markChanged();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markChanged = function () {\n        this.bChanged = true;\n    };\n    return PdfArray;\n}());\nexport { PdfArray };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDictionary } from './pdf-dictionary';\nimport { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\nimport { PdfName } from './pdf-name';\nimport { PdfArray } from './pdf-array';\nimport { PdfReferenceHolder } from './pdf-reference';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\n/**\n * `PdfStream` class is used to perform stream related primitive operations.\n * @private\n */\nvar PdfStream = /** @class */ (function (_super) {\n    __extends(PdfStream, _super);\n    function PdfStream(dictionary, data) {\n        var _this = _super.call(this, dictionary) || this;\n        //Constants\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicPrefix = 'stream';\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicSuffix = 'endstream';\n        /**\n         * Internal variable to hold `cloned object`.\n         * @private\n         */\n        _this.clonedObject2 = null;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.bCompress = true;\n        if (typeof dictionary !== 'undefined' || typeof data !== 'undefined') {\n            _this.dataStream2 = [];\n            _this.dataStream2 = data;\n            _this.bCompress2 = false;\n        }\n        else {\n            _this.dataStream2 = [];\n            _this.bCompress2 = true;\n            //Pending\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfStream.prototype, \"internalStream\", {\n        /**\n         * Gets the `internal` stream.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"compress\", {\n        /**\n         * Gets or sets `compression` flag.\n         * @private\n         */\n        get: function () {\n            return this.bCompress;\n        },\n        set: function (value) {\n            this.bCompress = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"data\", {\n        /**\n         * Gets or sets the `data`.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clear` the internal stream.\n     * @private\n     */\n    PdfStream.prototype.clearStream = function () {\n        this.internalStream = [];\n        if (this.items.containsKey(this.dictionaryProperties.filter)) {\n            this.remove(this.dictionaryProperties.filter);\n        }\n        this.bCompress = true;\n        this.modify();\n    };\n    /**\n     * `Writes` the specified string.\n     * @private\n     */\n    PdfStream.prototype.write = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (text.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty string, text');\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * `Writes` the specified bytes.\n     * @private\n     */\n    PdfStream.prototype.writeBytes = function (data) {\n        if (data === null) {\n            throw new Error('ArgumentNullException:data');\n        }\n        if (data.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty bytes, data');\n        }\n        var text = '';\n        for (var i = 0; i < data.length; i++) {\n            text += String.fromCharCode(data[i]);\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * Raises event `Cmap BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onCmapBeginSave = function () {\n        this.cmapBeginSave.sender.cmapBeginSave();\n    };\n    /**\n     * Raises event `Font Program BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onFontProgramBeginSave = function () {\n        this.fontProgramBeginSave.sender.fontProgramBeginSave();\n    };\n    /**\n     * `Compresses the content` if it's required.\n     * @private\n     */\n    PdfStream.prototype.compressContent = function (data, writer) {\n        if (this.bCompress) {\n            var byteArray = [];\n            for (var i = 0; i < data.length; i++) {\n                byteArray.push(data.charCodeAt(i));\n            }\n            var dataArray = new Uint8Array(byteArray);\n            var sw = new CompressedStreamWriter();\n            // data = 'Hello World!!!';\n            sw.write(dataArray, 0, dataArray.length);\n            sw.close();\n            data = sw.getCompressedString;\n            this.addFilter(this.dictionaryProperties.flatedecode);\n        }\n        return data;\n    };\n    /**\n     * `Adds a filter` to the filter array.\n     * @private\n     */\n    PdfStream.prototype.addFilter = function (filterName) {\n        var obj = this.items.getValue(this.dictionaryProperties.filter);\n        if (obj instanceof PdfReferenceHolder) {\n            var rh = obj;\n            obj = rh.object;\n        }\n        var array = obj;\n        var name = obj;\n        if (name != null) {\n            array = new PdfArray();\n            array.insert(0, name);\n            this.items.setValue(this.dictionaryProperties.filter, array);\n        }\n        name = new PdfName(filterName);\n        if (array == null) {\n            this.items.setValue(this.dictionaryProperties.filter, name);\n        }\n        else {\n            array.insert(0, name);\n        }\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfStream.prototype.save = function (writer) {\n        if (typeof this.cmapBeginSave !== 'undefined') {\n            this.onCmapBeginSave();\n        }\n        if (typeof this.fontProgramBeginSave !== 'undefined') {\n            this.onFontProgramBeginSave();\n        }\n        var data = '';\n        for (var i = 0; i < this.data.length; i++) {\n            data = data + this.data[i];\n        }\n        if (data.length > 1 && !this.isResource) {\n            data = 'q\\r\\n' + data + 'Q\\r\\n';\n        }\n        data = this.compressContent(data, writer);\n        var length = data.length;\n        this.items.setValue(this.dictionaryProperties.length, new PdfNumber(length));\n        _super.prototype.save.call(this, writer, false);\n        writer.write(this.dicPrefix);\n        writer.write(Operators.newLine);\n        if (data.length > 0) {\n            writer.write(data);\n        }\n        writer.write(Operators.newLine);\n        writer.write(this.dicSuffix);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Converts `bytes to string`.\n     * @private\n     */\n    PdfStream.bytesToString = function (byteArray) {\n        var output = '';\n        for (var i = 0; i < byteArray.length; i++) {\n            output = output + String.fromCharCode(byteArray[i]);\n        }\n        return output;\n    };\n    return PdfStream;\n}(PdfDictionary));\nexport { PdfStream };\nvar SaveCmapEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveCmapEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveCmapEventHandler;\n}());\nexport { SaveCmapEventHandler };\nvar SaveFontProgramEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontProgramEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontProgramEventHandler;\n}());\nexport { SaveFontProgramEventHandler };\n","/**\n * `PdfString` class is used to perform string related primitive operations.\n * @private\n */\nexport var InternalEnum;\n(function (InternalEnum) {\n    //Internals\n    /**\n     * public Enum for `ForceEncoding`.\n     * @private\n     */\n    var ForceEncoding;\n    (function (ForceEncoding) {\n        /**\n         * Specifies the type of `None`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"None\"] = 0] = \"None\";\n        /**\n         * Specifies the type of `Ascii`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Ascii\"] = 1] = \"Ascii\";\n        /**\n         * Specifies the type of `Unicode`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    })(ForceEncoding = InternalEnum.ForceEncoding || (InternalEnum.ForceEncoding = {}));\n    /**\n     * public Enum for `SourceType`.\n     * @private\n     */\n    var SourceType;\n    (function (SourceType) {\n        /**\n         * Specifies the type of `StringValue`.\n         * @private\n         */\n        SourceType[SourceType[\"StringValue\"] = 0] = \"StringValue\";\n        /**\n         * Specifies the type of `ByteBuffer`.\n         * @private\n         */\n        SourceType[SourceType[\"ByteBuffer\"] = 1] = \"ByteBuffer\";\n    })(SourceType || (SourceType = {}));\n})(InternalEnum || (InternalEnum = {}));\nvar PdfString = /** @class */ (function () {\n    function PdfString(value) {\n        /**\n         * Value indicating whether the string was converted to hex.\n         * @default false\n         * @private\n         */\n        this.bHex = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position1 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject1 = null;\n        /**\n         * `Shows` if the data of the stream was decrypted.\n         * @default false\n         * @private\n         */\n        this.bDecrypted = false;\n        /**\n         * Shows if the data of the stream `was decrypted`.\n         * @default false\n         * @private\n         */\n        this.isParentDecrypted = false;\n        /**\n         * Gets a value indicating whether the object is `packed or not`.\n         * @default false\n         * @private\n         */\n        this.isPacked = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isFormField = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isColorSpace = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isHexString = true;\n        if (typeof value === 'undefined') {\n            this.bHex = false;\n        }\n        else {\n            if (!(value.length > 0 && value[0] === '0xfeff')) {\n                this.stringValue = value;\n                this.data = [];\n                for (var i = 0; i < value.length; ++i) {\n                    this.data.push(value.charCodeAt(i));\n                }\n            }\n        }\n    }\n    Object.defineProperty(PdfString.prototype, \"hex\", {\n        //Property\n        /**\n         * Gets a value indicating whether string is in `hex`.\n         * @private\n         */\n        get: function () {\n            return this.bHex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"value\", {\n        /**\n         * Gets or sets string `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.stringValue;\n        },\n        set: function (value) {\n            this.stringValue = value;\n            this.data = null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status1;\n        },\n        set: function (value) {\n            this.status1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving1;\n        },\n        set: function (value) {\n            this.isSaving1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index1;\n        },\n        set: function (value) {\n            this.index1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position1;\n        },\n        set: function (value) {\n            this.position1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"converted\", {\n        /**\n         * Gets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        get: function () {\n            return this.bConverted;\n        },\n        /**\n         * sets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        set: function (value) {\n            this.bConverted = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"encode\", {\n        /**\n         * Gets value indicating whether we should convert data to Unicode.\n         */\n        get: function () {\n            return this.bForceEncoding;\n        },\n        set: function (value) {\n            this.bForceEncoding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * Converts `bytes to string using hex format` for representing string.\n     * @private\n     */\n    PdfString.bytesToHex = function (bytes) {\n        if (bytes == null) {\n            return '';\n        }\n        var builder = '';\n        return builder;\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfString.prototype.save = function (writer) {\n        if (writer === null) {\n            throw new Error('ArgumentNullException : writer');\n        }\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            writer.write(this.pdfEncode());\n        }\n        else {\n            writer.write(PdfString.stringMark[0] + this.value + PdfString.stringMark[1]);\n        }\n    };\n    PdfString.prototype.pdfEncode = function () {\n        var result = '';\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            var data = this.escapeSymbols(this.value);\n            for (var i = 0; i < data.length; i++) {\n                result += String.fromCharCode(data[i]);\n            }\n            result = PdfString.stringMark[0] + result + PdfString.stringMark[1];\n        }\n        else {\n            result = this.value;\n        }\n        return result;\n    };\n    PdfString.prototype.escapeSymbols = function (value) {\n        var data = [];\n        for (var i = 0; i < value.length; i++) {\n            var currentData = value.charCodeAt(i);\n            switch (currentData) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                default:\n                    data.push(currentData);\n                    break;\n            }\n        }\n        return data;\n    };\n    /**\n     * Creates a `copy of PdfString`.\n     * @private\n     */\n    PdfString.prototype.clone = function (crossTable) {\n        if (this.clonedObject1 !== null && this.clonedObject1.CrossTable === crossTable) {\n            return this.clonedObject1;\n        }\n        else {\n            this.clonedObject1 = null;\n        }\n        var newString = new PdfString(this.stringValue);\n        newString.bHex = this.bHex;\n        newString.crossTable = crossTable;\n        newString.isColorSpace = this.isColorSpace;\n        this.clonedObject1 = newString;\n        return newString;\n    };\n    /**\n     * Converts string to array of unicode symbols.\n     */\n    PdfString.toUnicodeArray = function (value, bAddPrefix) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var startIndex = 0;\n        var output = [];\n        for (var i = 0; i < value.length; i++) {\n            var code = value.charCodeAt(i);\n            output.push(code / 256 >>> 0);\n            output.push(code & 0xff);\n        }\n        return output;\n    };\n    /**\n     * Converts byte data to string.\n     */\n    PdfString.byteToString = function (data) {\n        if (data == null) {\n            throw new Error('Argument Null Exception : stream');\n        }\n        var result = '';\n        for (var i = 0; i < data.length; ++i) {\n            result += String.fromCharCode(data[i]);\n        }\n        return result;\n    };\n    //constants = ;\n    /**\n     * `General markers` for string.\n     * @private\n     */\n    PdfString.stringMark = '()';\n    /**\n     * `Hex markers` for string.\n     * @private\n     */\n    PdfString.hexStringMark = '<>';\n    /**\n     * Format of password data.\n     * @private\n     */\n    PdfString.hexFormatPattern = '{0:X2}';\n    return PdfString;\n}());\nexport { PdfString };\n","import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfString } from './../primitives/pdf-string';\n/**\n * `PdfReference` class is used to perform reference related primitive operations.\n * @private\n */\nvar PdfReference = /** @class */ (function () {\n    function PdfReference(objNumber, genNumber) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index3 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position3 = -1;\n        /**\n         * Holds the `object number`.\n         * @default 0\n         * @private\n         */\n        this.objNumber = 0;\n        /**\n         * Holds the `generation number` of the object.\n         * @default 0\n         * @private\n         */\n        this.genNumber = 0;\n        if (typeof objNumber === 'number' && typeof genNumber === 'number') {\n            this.objNumber = objNumber;\n            this.genNumber = genNumber;\n            // } else if (typeof objNum === 'string' && typeof genNum === 'string') {\n        }\n        else {\n            this.objNumber = Number(objNumber);\n            this.genNumber = Number(genNumber);\n        }\n    }\n    Object.defineProperty(PdfReference.prototype, \"status\", {\n        //Property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status3;\n        },\n        set: function (value) {\n            this.status3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving3;\n        },\n        set: function (value) {\n            this.isSaving3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index3;\n        },\n        set: function (value) {\n            this.index3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position3;\n        },\n        set: function (value) {\n            this.position3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var returnObject3 = null;\n            return returnObject3;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IPdfPrimitives methods\n    /**\n     * `Saves` the object.\n     * @private\n     */\n    PdfReference.prototype.save = function (writer) {\n        writer.write(this.toString());\n    };\n    /**\n     * Returns a `string` representing the object.\n     * @private\n     */\n    PdfReference.prototype.toString = function () {\n        return this.objNumber.toString() + ' ' + this.genNumber.toString() + ' R';\n    };\n    /**\n     * Creates a `deep copy` of the IPdfPrimitive object.\n     * @private\n     */\n    PdfReference.prototype.clone = function (crossTable) {\n        return null;\n    };\n    return PdfReference;\n}());\nexport { PdfReference };\n/**\n * `PdfReferenceHolder` class is used to perform reference holder related primitive operations.\n * @private\n */\nvar PdfReferenceHolder = /** @class */ (function () {\n    function PdfReferenceHolder(obj1, obj2) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index4 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position4 = -1;\n        /**\n         * The `index` of the object within the object collection.\n         * @default -1\n         * @private\n         */\n        this.objectIndex = -1;\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (typeof obj2 === 'undefined') {\n        this.initialize(obj1);\n        // }\n        // else {\n        //     if (obj2 === null) {\n        //         throw new Error('ArgumentNullException : crossTable');\n        //     }\n        //     if (obj1 === null) {\n        //         throw new Error('ArgumentNullException : reference');\n        //     }\n        //     this.crossTable = obj2;\n        //     let tempObj1 : PdfReference = <PdfReference>obj1;\n        //     this.reference = tempObj1;\n        // }\n    }\n    Object.defineProperty(PdfReferenceHolder.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status4;\n        },\n        set: function (value) {\n            this.status4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving4;\n        },\n        set: function (value) {\n            this.isSaving4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index4;\n        },\n        set: function (value) {\n            this.index4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position4;\n        },\n        set: function (value) {\n            this.position4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"object\", {\n        /**\n         * Gets the `object` the reference is of.\n         * @private\n         */\n        get: function () {\n            // if ((this.reference != null) || (this.object == null)) {\n            //     this.object = this.GetterObject();\n            // }\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"index\", {\n        /**\n         * Gets the `index` of the object.\n         * @private\n         */\n        get: function () {\n            // let items : PdfMainObjectCollection = this.crossTable.PdfObjects;\n            // this.objectIndex = items.GetObjectIndex(this.reference);\n            // if (this.objectIndex < 0) {\n            //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.reference);\n            //     this.objectIndex = items.Count - 1;\n            // }\n            return this.objectIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"element\", {\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfReferenceHolder.prototype.initialize = function (obj1) {\n        if (obj1 instanceof PdfArray\n            || obj1 instanceof PdfDictionary\n            || obj1 instanceof PdfName\n            || obj1 instanceof PdfNumber\n            || obj1 instanceof PdfStream\n            || obj1 instanceof PdfReference\n            || obj1 instanceof PdfString) {\n            this.primitiveObject = obj1;\n        }\n        else {\n            var tempObj = obj1;\n            this.initialize(tempObj.element);\n        }\n    };\n    /**\n     * `Writes` a reference into a PDF document.\n     * @private\n     */\n    PdfReferenceHolder.prototype.save = function (writer) {\n        // if (writer == null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        var position = writer.position;\n        var cTable = writer.document.crossTable;\n        // if (cTable.Document instanceof PdfDocument) {\n        this.object.isSaving = true;\n        // }\n        var reference = null;\n        // if (writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true) {\n        //     if (this.reference === null) {\n        //         reference = cTable.GetReference(this.Object);\n        //     } else {\n        //         reference = this.reference;\n        //     }\n        // } else {\n        //     reference = cTable.GetReference(this.Object);\n        // }\n        // if (!(writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true)) {\n        reference = cTable.getReference(this.object);\n        // }\n        // if (writer.Position !== position) {\n        //     writer.Position = position;\n        // }\n        reference.save(writer);\n    };\n    /**\n     * Creates a `copy of PdfReferenceHolder`.\n     * @private\n     */\n    PdfReferenceHolder.prototype.clone = function (crossTable) {\n        var refHolder = null;\n        var temp = null;\n        var refNum = '';\n        var reference = null;\n        // Restricts addition of same object multiple time.\n        /* if (this.Reference != null && this.crossTable != null && this.crossTable.PageCorrespondance.containsKey(this.Reference)) {\n            refHolder = new PdfReferenceHolder(this.crossTable.PageCorrespondance.getValue(this.Reference) as PdfReference, crossTable);\n            return refHolder;\n        }\n        if (Object instanceof PdfNumber) {\n            return new PdfNumber((Object as PdfNumber).IntValue);\n        }\n        */\n        // if (Object instanceof PdfDictionary) {\n        //     // Meaning the referenced page is not available for import.\n        //     let type : PdfName = new PdfName(this.dictionaryProperties.type);\n        //     let dict : PdfDictionary = Object as PdfDictionary;\n        //     if (dict.ContainsKey(type)) {\n        //         let pageName : PdfName = dict.Items.getValue(type.Value) as PdfName;\n        //         if (pageName !== null) {\n        //             if (pageName.Value === 'Page') {\n        //                 return new PdfNull();\n        //             }\n        //         }\n        //     }\n        // }\n        /* if (Object instanceof PdfName) {\n            return new PdfName ((Object as PdfName ).Value);\n        }\n        */\n        // Resolves circular references.\n        // if (crossTable.PrevReference !== null && (crossTable.PrevReference.indexOf(this.Reference) !== -1)) {\n        //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.Reference).ClonedObject;\n        //     if (obj !== null) {\n        //         reference = crossTable.GetReference(obj);\n        //         return new PdfReferenceHolder(reference, crossTable);\n        //     } else {\n        //         return new PdfNull();\n        //     }\n        // }\n        /*if (this.Reference !== null) {\n            crossTable.PrevReference.push(this.Reference);\n        }\n        reference = crossTable.GetReference(temp);\n        refHolder = new PdfReferenceHolder(reference, crossTable);\n        return refHolder;\n        */\n        return null;\n    };\n    return PdfReferenceHolder;\n}());\nexport { PdfReferenceHolder };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfAction` class represents base class for all action types.\n * @private\n */\nvar PdfAction = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize instance for `Action` class.\n     * @private\n     */\n    function PdfAction() {\n        /**\n         * Specifies the Next `action` to perform.\n         * @private\n         */\n        this.action = null;\n        /**\n         * Specifies the Internal variable to store `dictionary properties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // super(); -> Object()\n        this.initialize();\n    }\n    Object.defineProperty(PdfAction.prototype, \"next\", {\n        // Properties\n        /**\n         * Gets and Sets the `Next` action to perform.\n         * @private\n         */\n        get: function () {\n            return this.action;\n        },\n        set: function (value) {\n            // if (this.action !== value) {\n            this.action = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.next, new PdfReferenceHolder(this.action));\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAction.prototype, \"dictionary\", {\n        /**\n         * Gets and Sets the instance of PdfDictionary class for `Dictionary`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfDictionary === 'undefined') {\n                this.pdfDictionary = new PdfDictionary();\n            }\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the action type.\n     * @private\n     */\n    PdfAction.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.action));\n    };\n    Object.defineProperty(PdfAction.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` as IPdfPrimitive class.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAction;\n}());\nexport { PdfAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAction } from './action';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfUriAction` class for initialize the uri related internals.\n * @private\n */\nvar PdfUriAction = /** @class */ (function (_super) {\n    __extends(PdfUriAction, _super);\n    function PdfUriAction(uri) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Specifies the `uri` string.\n         * @default ''.\n         * @private\n         */\n        _this.uniformResourceIdentifier = '';\n        return _this;\n    }\n    Object.defineProperty(PdfUriAction.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `Uri`.\n         * @private\n         */\n        get: function () {\n            return this.uniformResourceIdentifier;\n        },\n        set: function (value) {\n            this.uniformResourceIdentifier = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.uri, new PdfString(this.uniformResourceIdentifier));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the internals.\n     * @private\n     */\n    PdfUriAction.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.s, new PdfName(this.dictionaryProperties.uri));\n    };\n    return PdfUriAction;\n}(PdfAction));\nexport { PdfUriAction };\n","/**\n * public Enum for `PdfHorizontalAlignment`.\n * @private\n */\nexport var PdfHorizontalAlignment;\n(function (PdfHorizontalAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Right\"] = 2] = \"Right\";\n})(PdfHorizontalAlignment || (PdfHorizontalAlignment = {}));\n/**\n * public Enum for `PdfVerticalAlignment`.\n * @private\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Top\"] = 0] = \"Top\";\n    /**\n     * Specifies the type of `Middle`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Middle\"] = 1] = \"Middle\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Bottom\"] = 2] = \"Bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n/**\n * public Enum for `public`.\n * @private\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Right\"] = 2] = \"Right\";\n    /**\n     * Specifies the type of `Justify`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Justify\"] = 3] = \"Justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * public Enum for `TextRenderingMode`.\n * @private\n */\nexport var TextRenderingMode;\n(function (TextRenderingMode) {\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Fill\"] = 0] = \"Fill\";\n    /**\n     * Specifies the type of `Stroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Stroke\"] = 1] = \"Stroke\";\n    /**\n     * Specifies the type of `FillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"FillStroke\"] = 2] = \"FillStroke\";\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"None\"] = 3] = \"None\";\n    /**\n     * Specifies the type of `ClipFlag`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFlag\"] = 4] = \"ClipFlag\";\n    /**\n     * Specifies the type of `ClipFill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFill\"] = 4] = \"ClipFill\";\n    /**\n     * Specifies the type of `ClipStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipStroke\"] = 5] = \"ClipStroke\";\n    /**\n     * Specifies the type of `ClipFillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFillStroke\"] = 6] = \"ClipFillStroke\";\n    /**\n     * Specifies the type of `Clip`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Clip\"] = 7] = \"Clip\";\n})(TextRenderingMode || (TextRenderingMode = {}));\n/**\n * public Enum for `PdfLineJoin`.\n * @private\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `Miter`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Miter\"] = 0] = \"Miter\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Bevel`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Bevel\"] = 2] = \"Bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\n/**\n * public Enum for `PdfLineCap`.\n * @private\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `Flat`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Flat\"] = 0] = \"Flat\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Square`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Square\"] = 2] = \"Square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * public Enum for `PdfDashStyle`.\n * @private\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `Solid`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Solid\"] = 0] = \"Solid\";\n    /**\n     * Specifies the type of `Dash`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dash\"] = 1] = \"Dash\";\n    /**\n     * Specifies the type of `Dot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dot\"] = 2] = \"Dot\";\n    /**\n     * Specifies the type of `DashDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDot\"] = 3] = \"DashDot\";\n    /**\n     * Specifies the type of `DashDotDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDotDot\"] = 4] = \"DashDotDot\";\n    /**\n     * Specifies the type of `Custom`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Custom\"] = 5] = \"Custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * public Enum for `PdfFillMode`.\n * @private\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `Winding`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Winding\"] = 0] = \"Winding\";\n    /**\n     * Specifies the type of `Alternate`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Alternate\"] = 1] = \"Alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * public Enum for `PdfColorSpace`.\n * @private\n */\nexport var PdfColorSpace;\n(function (PdfColorSpace) {\n    /**\n     * Specifies the type of `Rgb`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Rgb\"] = 0] = \"Rgb\";\n    /**\n     * Specifies the type of `Cmyk`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Cmyk\"] = 1] = \"Cmyk\";\n    /**\n     * Specifies the type of `GrayScale`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"GrayScale\"] = 2] = \"GrayScale\";\n    /**\n     * Specifies the type of `Indexed`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Indexed\"] = 3] = \"Indexed\";\n})(PdfColorSpace || (PdfColorSpace = {}));\n/**\n * public Enum for `PdfBlendMode`.\n * @private\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * Specifies the type of `Multiply`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Multiply\"] = 1] = \"Multiply\";\n    /**\n     * Specifies the type of `Screen`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Screen\"] = 2] = \"Screen\";\n    /**\n     * Specifies the type of `Overlay`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Overlay\"] = 3] = \"Overlay\";\n    /**\n     * Specifies the type of `Darken`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Darken\"] = 4] = \"Darken\";\n    /**\n     * Specifies the type of `Lighten`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Lighten\"] = 5] = \"Lighten\";\n    /**\n     * Specifies the type of `ColorDodge`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorDodge\"] = 6] = \"ColorDodge\";\n    /**\n     * Specifies the type of `ColorBurn`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorBurn\"] = 7] = \"ColorBurn\";\n    /**\n     * Specifies the type of `HardLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"HardLight\"] = 8] = \"HardLight\";\n    /**\n     * Specifies the type of `SoftLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"SoftLight\"] = 9] = \"SoftLight\";\n    /**\n     * Specifies the type of `Difference`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Difference\"] = 10] = \"Difference\";\n    /**\n     * Specifies the type of `Exclusion`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Exclusion\"] = 11] = \"Exclusion\";\n    /**\n     * Specifies the type of `Hue`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Hue\"] = 12] = \"Hue\";\n    /**\n     * Specifies the type of `Saturation`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Saturation\"] = 13] = \"Saturation\";\n    /**\n     * Specifies the type of `Color`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Color\"] = 14] = \"Color\";\n    /**\n     * Specifies the type of `Luminosity`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Luminosity\"] = 15] = \"Luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * public Enum for `PdfGraphicsUnit`.\n * @private\n */\nexport var PdfGraphicsUnit;\n(function (PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `Centimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Centimeter\"] = 0] = \"Centimeter\";\n    /**\n     * Specifies the type of `Pica`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pica\"] = 1] = \"Pica\";\n    /**\n     * Specifies the type of `Pixel`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pixel\"] = 2] = \"Pixel\";\n    /**\n     * Specifies the type of `Point`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Point\"] = 3] = \"Point\";\n    /**\n     * Specifies the type of `Inch`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Inch\"] = 4] = \"Inch\";\n    /**\n     * Specifies the type of `Document`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Document\"] = 5] = \"Document\";\n    /**\n     * Specifies the type of `Millimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Millimeter\"] = 6] = \"Millimeter\";\n})(PdfGraphicsUnit || (PdfGraphicsUnit = {}));\n/**\n * public Enum for `PdfGridImagePosition`.\n * @private\n */\nexport var PdfGridImagePosition;\n(function (PdfGridImagePosition) {\n    /**\n     * Specifies the type of `Fit`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Fit\"] = 0] = \"Fit\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Stretch`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Stretch\"] = 2] = \"Stretch\";\n    /**\n     * Specifies the type of `Tile`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Tile\"] = 3] = \"Tile\";\n})(PdfGridImagePosition || (PdfGridImagePosition = {}));\n/**\n * public Enum for `the text rendering direction`.\n * @private\n */\nexport var PdfTextDirection;\n(function (PdfTextDirection) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `LeftToRight`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"LeftToRight\"] = 1] = \"LeftToRight\";\n    /**\n     * Specifies the type of `RightToLeft`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"RightToLeft\"] = 2] = \"RightToLeft\";\n})(PdfTextDirection || (PdfTextDirection = {}));\n","import { PdfColorSpace } from './enum';\nimport { Operators } from './../input-output/pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfArray } from './../primitives/pdf-array';\n/**\n * Implements structures and routines working with `color`.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // set color\n * let brushColor : PdfColor = new PdfColor(0, 0, 0);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(brushColor);\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n * @default black color\n */\nvar PdfColor = /** @class */ (function () {\n    function PdfColor(color1, color2, color3, color4) {\n        if (typeof color1 === 'undefined') {\n            if (typeof color2 !== 'undefined' && typeof color3 !== 'undefined' && typeof color4 !== 'undefined') {\n                this.assignRGB(color2, color3, color4);\n            }\n            else {\n                this.filled = false;\n            }\n        }\n        else if (color1 instanceof PdfColor) {\n            this.redColor = color1.r;\n            this.greenColor = color1.g;\n            this.blueColor = color1.b;\n            this.grayColor = color1.gray;\n            this.alpha = color1.alpha;\n            this.filled = (this.alpha !== 0);\n            /* tslint:disable-next-line:max-line-length */\n        }\n        else if (typeof color1 === 'number' && typeof color2 === 'undefined' && typeof color3 === 'undefined' && typeof color4 === 'undefined') {\n            if (color1 < 0) {\n                color1 = 0;\n            }\n            if (color1 > 1) {\n                color1 = 1;\n            }\n            this.redColor = color1 * PdfColor.maxColourChannelValue;\n            this.greenColor = color1 * PdfColor.maxColourChannelValue;\n            this.blueColor = color1 * PdfColor.maxColourChannelValue;\n            this.cyanColor = color1;\n            this.magentaColor = color1;\n            this.yellowColor = color1;\n            this.blackColor = color1;\n            this.grayColor = color1;\n            this.alpha = PdfColor.maxColourChannelValue;\n            this.filled = true;\n        }\n        else if (typeof color4 === 'undefined') {\n            this.assignRGB(color1, color2, color3);\n        }\n        else {\n            this.assignRGB(color2, color3, color4, color1);\n        }\n    }\n    /**\n     * `Assign` red, green, blue colors with alpha value..\n     * @private\n     */\n    PdfColor.prototype.assignRGB = function (r, g, b, a) {\n        if (typeof r === 'undefined' || typeof g === 'undefined' || typeof b === 'undefined') {\n            this.filled = false;\n        }\n        else {\n            this.cyanColor = 0;\n            this.magentaColor = 0;\n            this.yellowColor = 0;\n            this.blackColor = 0;\n            this.grayColor = 0;\n            this.redColor = r;\n            this.greenColor = g;\n            this.blueColor = b;\n            if (typeof a === 'undefined') {\n                this.alpha = PdfColor.maxColourChannelValue;\n            }\n            else {\n                this.alpha = a;\n            }\n            this.filled = true;\n            this.assignCMYK(r, g, b);\n        }\n    };\n    /**\n     * `Calculate and assign` cyan, megenta, yellow colors from rgb values..\n     * @private\n     */\n    PdfColor.prototype.assignCMYK = function (r, g, b) {\n        var red = r / PdfColor.maxColourChannelValue;\n        var green = g / PdfColor.maxColourChannelValue;\n        var blue = b / PdfColor.maxColourChannelValue;\n        var black = PdfNumber.min(1 - red, 1 - green, 1 - blue);\n        var cyan = (black === 1.0) ? 0 : (1 - red - black) / (1 - black);\n        var magenta = (black === 1.0) ? 0 : (1 - green - black) / (1 - black);\n        var yellow = (black === 1.0) ? 0 : (1 - blue - black) / (1 - black);\n        this.blackColor = black;\n        this.cyanColor = cyan;\n        this.magentaColor = magenta;\n        this.yellowColor = yellow;\n    };\n    Object.defineProperty(PdfColor.prototype, \"r\", {\n        //Properties\n        // public static get Empty():PdfColor\n        // {\n        //     return this.s_emptyColor\n        // }\n        /**\n         * Gets or sets `Red` channel value.\n         * @private\n         */\n        get: function () {\n            return this.redColor;\n        },\n        set: function (value) {\n            this.redColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"red\", {\n        /**\n         * Gets the `Red` color\n         * @private\n         */\n        get: function () {\n            return (this.r / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"b\", {\n        /**\n         * Gets or sets `Blue` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blueColor;\n        },\n        set: function (value) {\n            this.blueColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"blue\", {\n        /**\n         * Gets the `blue` color.\n         * @private\n         */\n        get: function () {\n            return (this.b / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"c\", {\n        /**\n         * Gets or sets `Cyan` channel value.\n         * @private\n         */\n        get: function () {\n            return this.cyanColor;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.cyanColor = 0;\n            }\n            else if (value > 1) {\n                this.cyanColor = 1;\n            }\n            else {\n                this.cyanColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"k\", {\n        /**\n         * Gets or sets `Black` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blackColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.blackColor = 0;\n            }\n            else if ((value > 1)) {\n                this.blackColor = 1;\n            }\n            else {\n                this.blackColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"m\", {\n        /**\n         * Gets or sets `Magenta` channel value.\n         * @private\n         */\n        get: function () {\n            return this.magentaColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.magentaColor = 0;\n            }\n            else if ((value > 1)) {\n                this.magentaColor = 1;\n            }\n            else {\n                this.magentaColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"y\", {\n        /**\n         * Gets or sets `Yellow` channel value.\n         * @private\n         */\n        get: function () {\n            return this.yellowColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.yellowColor = 0;\n            }\n            else if ((value > 1)) {\n                this.yellowColor = 1;\n            }\n            else {\n                this.yellowColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"g\", {\n        /**\n         *  Gets or sets `Green` channel value.\n         * @private\n         */\n        get: function () {\n            return this.greenColor;\n        },\n        set: function (value) {\n            this.greenColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"green\", {\n        /**\n         * Gets the `Green` color.\n         * @private\n         */\n        get: function () {\n            return (this.g / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"gray\", {\n        /**\n         * Gets or sets `Gray` channel value.\n         * @private\n         */\n        get: function () {\n            return ((((this.redColor + this.greenColor) + this.blueColor)) / (PdfColor.maxColourChannelValue * 3));\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.grayColor = 0;\n            }\n            else if (value > 1) {\n                this.grayColor = 1;\n            }\n            else {\n                this.grayColor = value;\n            }\n            this.r = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.g = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.b = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"isEmpty\", {\n        /**\n         * Gets whether the PDFColor `is Empty` or not.\n         * @private\n         */\n        get: function () {\n            return !this.filled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"a\", {\n        /**\n         * Gets or sets `Alpha` channel value.\n         * @private\n         */\n        get: function () {\n            return this.alpha;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.alpha = 0;\n            }\n            else {\n                // if (this.alpha !== value) {\n                this.alpha = value;\n                // }\n            }\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Converts `PDFColor to PDF string` representation.\n     * @private\n     */\n    PdfColor.prototype.toString = function (colorSpace, stroke) {\n        if (this.isEmpty) {\n            return '';\n        }\n        var str = '';\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                str = this.rgbToString(stroke);\n                break;\n            case PdfColorSpace.GrayScale:\n                str = this.grayScaleToString(stroke);\n                break;\n            case PdfColorSpace.Cmyk:\n                str = this.cmykToString(stroke);\n                break;\n        }\n        return str;\n    };\n    /**\n     * Sets `GrayScale` color.\n     * @private\n     */\n    PdfColor.prototype.grayScaleToString = function (ifStroking) {\n        var gray = this.gray;\n        var colour = '';\n        var obj = null;\n        /* tslint:disable-next-line:max-line-length */\n        obj = (ifStroking) ? PdfColor.grayStringsSroke.containsKey(gray) ? PdfColor.grayStringsSroke.getValue(gray) : null : PdfColor.grayStringsFill.containsKey(gray) ? PdfColor.grayStringsFill.getValue(gray) : null;\n        if (obj == null) {\n            if (ifStroking) {\n                colour = gray.toString() + ' G';\n                PdfColor.grayStringsSroke.setValue(gray, colour);\n            }\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /**\n     * Sets `RGB` color.\n     * @private\n     */\n    PdfColor.prototype.rgbToString = function (ifStroking) {\n        var r = this.r;\n        var g = this.g;\n        var b = this.b;\n        var key = (r << 16) + (g << 8) + b;\n        if (ifStroking) {\n            key += 1 << 24;\n        }\n        var colour = '';\n        var obj = null;\n        if (PdfColor.rgbStrings.containsKey(key)) {\n            obj = PdfColor.rgbStrings.getValue(key);\n        }\n        if (obj == null) {\n            var red = r / PdfColor.maxColourChannelValue;\n            var green = g / PdfColor.maxColourChannelValue;\n            var blue = b / PdfColor.maxColourChannelValue;\n            if (ifStroking) {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' RG';\n            }\n            else {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' rg';\n            }\n            PdfColor.rgbStrings.setValue(key, colour);\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /***\n     * Sets `CMYK` color.\n     * @private\n     */\n    PdfColor.prototype.cmykToString = function (ifStroking) {\n        var cyan = this.c;\n        var magenta = this.m;\n        var yellow = this.y;\n        var black = this.b;\n        var colour = '';\n        colour = cyan.toString() + ' ' + magenta.toString() + ' ' + yellow.toString() + ' ' + black.toString() + ' K';\n        return colour + Operators.newLine;\n    };\n    /**\n     * Converts `colour to a PDF array`.\n     * @private\n     */\n    PdfColor.prototype.toArray = function (colorSpace) {\n        var array = new PdfArray();\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                array.add(new PdfNumber(this.red));\n                array.add(new PdfNumber(this.green));\n                array.add(new PdfNumber(this.blue));\n                break;\n        }\n        return array;\n    };\n    //Fields\n    /**\n     * Holds `RGB colors` converted into strings.\n     * @private\n     */\n    PdfColor.rgbStrings = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `stroking`.\n     * @private\n     */\n    PdfColor.grayStringsSroke = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `filling`.\n     * @private\n     */\n    PdfColor.grayStringsFill = new Dictionary();\n    /**\n     * `Max value` of color channel.\n     * @private\n     */\n    PdfColor.maxColourChannelValue = 255.0;\n    return PdfColor;\n}());\nexport { PdfColor };\n","/**\n * Coordinates of Position for `PointF`.\n * @private\n */\nvar PointF = /** @class */ (function () {\n    function PointF(x, y) {\n        if (typeof x === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n        }\n        else {\n            if (x !== null) {\n                this.x = x;\n            }\n            else {\n                this.x = 0;\n            }\n            if (y !== null) {\n                this.y = y;\n            }\n            else {\n                this.y = 0;\n            }\n        }\n    }\n    return PointF;\n}());\nexport { PointF };\n/**\n * Width and Height as `Size`.\n * @private\n */\nvar SizeF = /** @class */ (function () {\n    function SizeF(width, height) {\n        if (typeof height === 'undefined') {\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (height !== null) {\n                this.height = height;\n            }\n            else {\n                this.height = 0;\n            }\n            if (width !== null) {\n                this.width = width;\n            }\n            else {\n                this.width = 0;\n            }\n        }\n    }\n    return SizeF;\n}());\nexport { SizeF };\n/**\n * `RectangleF` with Position and size.\n * @private\n */\nvar RectangleF = /** @class */ (function () {\n    function RectangleF(arg1, arg2, arg3, arg4) {\n        if (typeof arg1 === typeof arg1 && typeof arg1 === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n                var pointf = arg1;\n                this.x = pointf.x;\n                this.y = pointf.y;\n                var sizef = arg2;\n                this.height = sizef.height;\n                this.width = sizef.width;\n            }\n            else {\n                var x = arg1;\n                var y = arg2;\n                var width = arg3;\n                var height = arg4;\n                this.x = x;\n                this.y = y;\n                this.height = height;\n                this.width = width;\n            }\n        }\n    }\n    return RectangleF;\n}());\nexport { RectangleF };\n/**\n * `Rectangle` with left, right, top and bottom.\n * @private\n */\nvar Rectangle = /** @class */ (function () {\n    /**\n     * Instance of `RectangleF` class with X, Y, Width and Height.\n     * @private\n     */\n    function Rectangle(left, top, right, bottom) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n    Object.defineProperty(Rectangle.prototype, \"width\", {\n        /**\n         * Gets a value of width\n         */\n        get: function () {\n            return this.right - this.left;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"height\", {\n        /**\n         * Gets a value of height\n         */\n        get: function () {\n            return this.bottom - this.top;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"topLeft\", {\n        /**\n         * Gets a value of Top and Left\n         */\n        get: function () {\n            return new PointF(this.left, this.top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"size\", {\n        /**\n         * Gets a value of size\n         */\n        get: function () {\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Rectangle.prototype.toString = function () {\n        return this.topLeft + 'x' + this.size;\n    };\n    return Rectangle;\n}());\nexport { Rectangle };\n","/**\n * `PdfBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Creates instanceof `PdfBrush` class.\n     * @hidden\n     * @private\n     */\n    function PdfBrush() {\n        //\n    }\n    //IClonable implementation\n    PdfBrush.prototype.clone = function () {\n        return this;\n    };\n    return PdfBrush;\n}());\nexport { PdfBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorSpace } from './../enum';\nimport { PdfBrush } from './pdf-brush';\n/**\n * Represents a brush that fills any object with a solid color.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSolidBrush = /** @class */ (function (_super) {\n    __extends(PdfSolidBrush, _super);\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfSolidBrush` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param color color of the brush\n     */\n    function PdfSolidBrush(color) {\n        var _this = _super.call(this) || this;\n        _this.pdfColor = color;\n        return _this;\n    }\n    Object.defineProperty(PdfSolidBrush.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color` of the brush.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Monitors` the changes of the brush and modify PDF state respectively.\n     * @private\n     */\n    PdfSolidBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        if (streamWriter == null) {\n            throw new Error('ArgumentNullException:streamWriter');\n        }\n        var diff = false;\n        if (brush == null) {\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n        else {\n            var sBrush = brush;\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n    };\n    /**\n     * `Resets` the changes, which were made by the brush.\n     * @private\n     */\n    PdfSolidBrush.prototype.resetChanges = function (streamWriter) {\n        streamWriter.setColorAndSpace(new PdfColor(0, 0, 0), PdfColorSpace.Rgb, false);\n    };\n    return PdfSolidBrush;\n}(PdfBrush));\nexport { PdfSolidBrush };\n","/**\n * public Enum for `PdfFontStyle`.\n * @private\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the type of `Regular`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Regular\"] = 0] = \"Regular\";\n    /**\n     * Specifies the type of `Bold`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Bold\"] = 1] = \"Bold\";\n    /**\n     * Specifies the type of `Italic`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Italic\"] = 2] = \"Italic\";\n    /**\n     * Specifies the type of `Underline`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Underline\"] = 4] = \"Underline\";\n    /**\n     * Specifies the type of `Strikeout`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Strikeout\"] = 8] = \"Strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Specifies the font family from the standard font.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `Helvetica` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Helvetica\"] = 0] = \"Helvetica\";\n    /**\n     * Specifies the `Courier` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Courier\"] = 1] = \"Courier\";\n    /**\n     * Specifies the `TimesRoman` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"TimesRoman\"] = 2] = \"TimesRoman\";\n    /**\n     * Specifies the `Symbol` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Symbol\"] = 3] = \"Symbol\";\n    /**\n     * Specifies the `ZapfDingbats` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"ZapfDingbats\"] = 4] = \"ZapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * public Enum for `PdfFontType`.\n * @private\n */\nexport var PdfFontType;\n(function (PdfFontType) {\n    /**\n     * Specifies the type of `Standard`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"Standard\"] = 0] = \"Standard\";\n    /**\n     * Specifies the type of `TrueType`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueType\"] = 1] = \"TrueType\";\n    /**\n     * Specifies the type of `TrueTypeEmbedded`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueTypeEmbedded\"] = 2] = \"TrueTypeEmbedded\";\n})(PdfFontType || (PdfFontType = {}));\n/**\n * public Enum for `PdfWordWrapType`.\n * @private\n */\nexport var PdfWordWrapType;\n(function (PdfWordWrapType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Word`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Word\"] = 1] = \"Word\";\n    /**\n     * Specifies the type of `WordOnly`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"WordOnly\"] = 2] = \"WordOnly\";\n    /**\n     * Specifies the type of `Character`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Character\"] = 3] = \"Character\";\n})(PdfWordWrapType || (PdfWordWrapType = {}));\n/**\n * public Enum for `PdfSubSuperScript`.\n * @private\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `SuperScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SuperScript\"] = 1] = \"SuperScript\";\n    /**\n     * Specifies the type of `SubScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SubScript\"] = 2] = \"SubScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * public Enum for `FontEncoding`.\n * @private\n */\nexport var FontEncoding;\n(function (FontEncoding) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `StandardEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"StandardEncoding\"] = 1] = \"StandardEncoding\";\n    /**\n     * Specifies the type of `MacRomanEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacRomanEncoding\"] = 2] = \"MacRomanEncoding\";\n    /**\n     * Specifies the type of `MacExpertEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacExpertEncoding\"] = 3] = \"MacExpertEncoding\";\n    /**\n     * Specifies the type of `WinAnsiEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"WinAnsiEncoding\"] = 4] = \"WinAnsiEncoding\";\n    /**\n     * Specifies the type of `PdfDocEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"PdfDocEncoding\"] = 5] = \"PdfDocEncoding\";\n    /**\n     * Specifies the type of `IdentityH`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"IdentityH\"] = 6] = \"IdentityH\";\n})(FontEncoding || (FontEncoding = {}));\n/**\n * public Enum for `TtfCmapFormat`.\n * @private\n */\nexport var TtfCmapFormat;\n(function (TtfCmapFormat) {\n    /**\n     * This is the Apple standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Apple\"] = 0] = \"Apple\";\n    /**\n     * This is the Microsoft standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Microsoft\"] = 4] = \"Microsoft\";\n    /**\n     * Format 6: Trimmed table mapping.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Trimmed\"] = 6] = \"Trimmed\";\n})(TtfCmapFormat || (TtfCmapFormat = {}));\n/**\n * Enumerator that implements CMAP encodings.\n * @private\n */\nexport var TtfCmapEncoding;\n(function (TtfCmapEncoding) {\n    /**\n     * Unknown encoding.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * When building a symbol font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Symbol\"] = 1] = \"Symbol\";\n    /**\n     * When building a Unicode font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    /**\n     * For font that will be used on a Macintosh.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Macintosh\"] = 3] = \"Macintosh\";\n})(TtfCmapEncoding || (TtfCmapEncoding = {}));\n/**\n * Ttf platform ID.\n * @private\n */\nexport var TtfPlatformID;\n(function (TtfPlatformID) {\n    /**\n     * Apple platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"AppleUnicode\"] = 0] = \"AppleUnicode\";\n    /**\n     * Macintosh platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Macintosh\"] = 1] = \"Macintosh\";\n    /**\n     * Iso platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Iso\"] = 2] = \"Iso\";\n    /**\n     * Microsoft platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Microsoft\"] = 3] = \"Microsoft\";\n})(TtfPlatformID || (TtfPlatformID = {}));\n/**\n * Microsoft encoding ID.\n * @private\n */\nexport var TtfMicrosoftEncodingID;\n(function (TtfMicrosoftEncodingID) {\n    /**\n     * Undefined encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Undefined\"] = 0] = \"Undefined\";\n    /**\n     * Unicode encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Unicode\"] = 1] = \"Unicode\";\n})(TtfMicrosoftEncodingID || (TtfMicrosoftEncodingID = {}));\n/**\n * Macintosh encoding ID.\n * @private\n */\nexport var TtfMacintoshEncodingID;\n(function (TtfMacintoshEncodingID) {\n    /**\n     * Roman encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Roman\"] = 0] = \"Roman\";\n    /**\n     * Japanese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Japanese\"] = 1] = \"Japanese\";\n    /**\n     * Chinese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Chinese\"] = 2] = \"Chinese\";\n})(TtfMacintoshEncodingID || (TtfMacintoshEncodingID = {}));\n/**\n * Enumerator that implements font descriptor flags.\n * @private\n */\nexport var FontDescriptorFlags;\n(function (FontDescriptorFlags) {\n    /**\n     * All glyphs have the same width (as opposed to proportional or variable-pitch fonts, which have different widths).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"FixedPitch\"] = 1] = \"FixedPitch\";\n    /**\n     * Glyphs have serifs, which are short strokes drawn at an angle on the top and\n     * bottom of glyph stems (as opposed to sans serif fonts, which do not).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Serif\"] = 2] = \"Serif\";\n    /**\n     * Font contains glyphs outside the Adobe standard Latin character set. The\n     * flag and the nonsymbolic flag cannot both be set or both be clear.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Symbolic\"] = 4] = \"Symbolic\";\n    /**\n     * Glyphs resemble cursive handwriting.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Script\"] = 8] = \"Script\";\n    /**\n     * Font uses the Adobe standard Latin character set or a subset of it.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Nonsymbolic\"] = 32] = \"Nonsymbolic\";\n    /**\n     * Glyphs have dominant vertical strokes that are slanted.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Italic\"] = 64] = \"Italic\";\n    /**\n     * Bold font.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"ForceBold\"] = 262144] = \"ForceBold\";\n})(FontDescriptorFlags || (FontDescriptorFlags = {}));\n/**\n * true type font composite glyph flags.\n * @private\n */\nexport var TtfCompositeGlyphFlags;\n(function (TtfCompositeGlyphFlags) {\n    /**\n     * The Arg1And2AreWords.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\n    /**\n     * The ArgsAreXyValues.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\n    /**\n     * The RoundXyToGrid.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\n    /**\n     * The WeHaveScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\n    /**\n     * The Reserved.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Reserved\"] = 16] = \"Reserved\";\n    /**\n     * The MoreComponents.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"MoreComponents\"] = 32] = \"MoreComponents\";\n    /**\n     * The WeHaveAnXyScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\n    /**\n     * The WeHaveTwoByTwo\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\n    /**\n     * The WeHaveInstructions.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\n    /**\n     * The UseMyMetrics.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\n})(TtfCompositeGlyphFlags || (TtfCompositeGlyphFlags = {}));\n","/**\n * PdfStringFormat.ts class for EJ2-PDF\n */\nimport { PdfVerticalAlignment } from './../../graphics/enum';\nimport { PdfSubSuperScript, PdfWordWrapType } from './../../graphics/fonts/enum';\n/**\n * `PdfStringFormat` class represents the text layout information on PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * // set the format for string\n * let stringFormat : PdfStringFormat = new PdfStringFormat();\n * // set the text alignment\n * stringFormat.alignment = PdfTextAlignment.Center;\n * // set the vertical alignment\n * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n * //\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        /**\n         * The `scaling factor` of the text being drawn.\n         * @private\n         */\n        this.scalingFactor = 100.0;\n        /**\n         * Indicates text `wrapping` type.\n         * @private\n         */\n        this.wordWrapType = PdfWordWrapType.Word;\n        this.internalLineLimit = true;\n        this.wordWrapType = PdfWordWrapType.Word;\n        if ((typeof arg1 !== 'undefined') && (typeof arg1 !== 'string')) {\n            this.textAlignment = arg1;\n        }\n        if (typeof arg2 !== 'undefined') {\n            this.verticalAlignment = arg2;\n        }\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"alignment\", {\n        //Properties\n        /**\n         * Gets or sets the `horizontal` text alignment\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the text alignment\n         * stringFormat.alignment = PdfTextAlignment.Center;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.textAlignment;\n        },\n        set: function (value) {\n            this.textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"textDirection\", {\n        get: function () {\n            return this.direction;\n        },\n        set: function (value) {\n            this.direction = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineAlignment\", {\n        /**\n         * Gets or sets the `vertical` text alignment.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the vertical alignment\n         * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.verticalAlignment === 'undefined' || this.verticalAlignment == null) {\n                return PdfVerticalAlignment.Top;\n            }\n            else {\n                return this.verticalAlignment;\n            }\n        },\n        set: function (value) {\n            this.verticalAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"rightToLeft\", {\n        /**\n         * Gets or sets the value that indicates text `direction` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.isRightToLeft === 'undefined' || this.isRightToLeft == null) {\n                return false;\n            }\n            else {\n                return this.isRightToLeft;\n            }\n        },\n        set: function (value) {\n            this.isRightToLeft = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the characters in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set character spacing\n         * stringFormat.characterSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalCharacterSpacing === 'undefined' || this.internalCharacterSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalCharacterSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the words in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set word spacing\n         * stringFormat.wordSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalWordSpacing === 'undefined' || this.internalWordSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalWordSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineSpacing\", {\n        /**\n         * Gets or sets value that indicates the `vertical distance` between the baselines of adjacent lines of text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set string\n         * let text : string = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n         * incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitati';\n         * // set rectangle bounds\n         * let rectangle : RectangleF = new RectangleF({x : 0, y : 0}, {width : 300, height : 100})\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set line spacing\n         * stringFormat.lineSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString(text, font, blackBrush, rectangle, stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.leading === 'undefined' || this.leading == null) {\n                return 0;\n            }\n            else {\n                return this.leading;\n            }\n        },\n        set: function (value) {\n            this.leading = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"clipPath\", {\n        /**\n         * Gets or sets a value indicating whether the text is `clipped` or not.\n         * @private\n         */\n        get: function () {\n            if (typeof this.clip === 'undefined' || this.clip == null) {\n                return false;\n            }\n            else {\n                return this.clip;\n            }\n        },\n        set: function (value) {\n            this.clip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets or sets value indicating whether the text is in `subscript or superscript` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfSubSuperScript === 'undefined' || this.pdfSubSuperScript == null) {\n                return PdfSubSuperScript.None;\n            }\n            else {\n                return this.pdfSubSuperScript;\n            }\n        },\n        set: function (value) {\n            this.pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the paragraph.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalParagraphIndent === 'undefined' || this.internalParagraphIndent == null) {\n                return 0;\n            }\n            else {\n                return this.internalParagraphIndent;\n            }\n        },\n        set: function (value) {\n            this.internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineLimit\", {\n        /**\n         * Gets or sets a value indicating whether [`line limit`].\n         * @private\n         */\n        get: function () {\n            return this.internalLineLimit;\n        },\n        set: function (value) {\n            this.internalLineLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"measureTrailingSpaces\", {\n        /**\n         * Gets or sets a value indicating whether [`measure trailing spaces`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.trailingSpaces === 'undefined' || this.trailingSpaces == null) {\n                return false;\n            }\n            else {\n                return this.trailingSpaces;\n            }\n        },\n        set: function (value) {\n            this.trailingSpaces = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"noClip\", {\n        /**\n         * Gets or sets a value indicating whether [`no clip`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.isNoClip === 'undefined' || this.isNoClip == null) {\n                return false;\n            }\n            else {\n                return this.isNoClip;\n            }\n        },\n        set: function (value) {\n            this.isNoClip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordWrap\", {\n        /**\n         * Gets or sets value indicating type of the text `wrapping`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.wrapType === 'undefined' || this.wrapType == null) {\n            //     return PdfWordWrapType.Word;\n            // } else {\n            return this.wordWrapType;\n            // }\n        },\n        set: function (value) {\n            this.wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"horizontalScalingFactor\", {\n        /**\n         * Gets or sets the `scaling factor`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.scalingFactor === 'undefined' || this.scalingFactor == null) {\n            //     return 100;\n            // } else {\n            return this.scalingFactor;\n            // }\n        },\n        set: function (value) {\n            if (value <= 0) {\n                throw new Error('ArgumentOutOfRangeException:The scaling factor cant be less of equal to zero, ScalingFactor');\n            }\n            this.scalingFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"firstLineIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the text.\n         * @private\n         */\n        get: function () {\n            if (typeof this.initialLineIndent === 'undefined' || this.initialLineIndent == null) {\n                return 0;\n            }\n            else {\n                return this.initialLineIndent;\n            }\n        },\n        set: function (value) {\n            this.initialLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    //IClonable implementation\n    PdfStringFormat.prototype.clone = function () {\n        var format = this;\n        return format;\n    };\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n","/**\n * StringTokenizer.ts class for EJ2-PDF\n * Utility class for working with strings.\n * @private\n */\nvar StringTokenizer = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringTokenizer` class.\n     * @private\n     */\n    function StringTokenizer(textValue) {\n        /**\n         * Current `position`.\n         * @private\n         */\n        this.currentPosition = 0;\n        if (textValue == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this.text = textValue;\n    }\n    Object.defineProperty(StringTokenizer.prototype, \"length\", {\n        // Properties\n        /**\n         * Gets text `length`.\n         * @private\n         */\n        get: function () {\n            return this.text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"end\", {\n        get: function () {\n            return (this.currentPosition === this.text.length);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"position\", {\n        /**\n         * Gets or sets the position.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StringTokenizer.getCharsCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:wholeText');\n            }\n            var numSymbols = 0;\n            var curIndex = 0;\n            for (;;) {\n                curIndex = text.indexOf(symbols, curIndex);\n                if (curIndex === -1) {\n                    break;\n                }\n                else {\n                    numSymbols++;\n                    curIndex++;\n                }\n            }\n            return numSymbols;\n        }\n        else {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (symbols == null) {\n                throw new Error('ArgumentNullException:symbols');\n            }\n            var count = 0;\n            for (var i = 0, len = text.length; i < len; i++) {\n                var ch = text[i];\n                if (this.contains(symbols, ch)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.readLine = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n': {\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekLine = function () {\n        var pos = this.currentPosition;\n        var line = this.readLine();\n        this.currentPosition = pos;\n        return line;\n    };\n    /**\n     * Reads a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.readWord = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    var textValue = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return textValue;\n                case ' ':\n                case '\\t': {\n                    if (pos === this.currentPosition) {\n                        pos++;\n                    }\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos;\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Peeks a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekWord = function () {\n        var pos = this.currentPosition;\n        var word = this.readWord();\n        this.currentPosition = pos;\n        return word;\n    };\n    StringTokenizer.prototype.read = function (count) {\n        if (typeof count === 'undefined') {\n            var ch = '0';\n            if (!this.end) {\n                ch = this.text[this.currentPosition];\n                this.currentPosition++;\n            }\n            return ch;\n        }\n        else {\n            var num = 0;\n            var builder = '';\n            while (!this.end && num < count) {\n                var ch = this.read();\n                builder = builder + ch;\n                num++;\n            }\n            return builder;\n        }\n    };\n    /**\n     * Peeks char form the data.\n     * @private\n     */\n    StringTokenizer.prototype.peek = function () {\n        var ch = '0';\n        if (!this.end) {\n            ch = this.text[this.currentPosition];\n        }\n        return ch;\n    };\n    /**\n     * Closes a reader.\n     * @private\n     */\n    StringTokenizer.prototype.close = function () {\n        this.text = null;\n    };\n    StringTokenizer.prototype.readToEnd = function () {\n        var text;\n        if (this.currentPosition === 0) {\n            text = this.text;\n        }\n        else {\n            text = this.text.substr(this.currentPosition, this.length - this.currentPosition);\n        }\n        this.currentPosition = this.length;\n        return text;\n    };\n    //Implementation\n    /**\n     * Checks whether array contains a symbol.\n     * @private\n     */\n    StringTokenizer.contains = function (array, symbol) {\n        var contains = false;\n        for (var i = 0; i < array.length; i++) {\n            if (array[i] === symbol) {\n                contains = true;\n                break;\n            }\n        }\n        return contains;\n    };\n    // Constants\n    /**\n     * `Whitespace` symbol.\n     * @private\n     */\n    StringTokenizer.whiteSpace = ' ';\n    /**\n     * `tab` symbol.\n     * @private\n     */\n    StringTokenizer.tab = '\\t';\n    /**\n     * Array of `spaces`.\n     * @private\n     */\n    StringTokenizer.spaces = [StringTokenizer.whiteSpace, StringTokenizer.tab];\n    /**\n     * `Pattern` for WhiteSpace.\n     * @private\n     */\n    StringTokenizer.whiteSpacePattern = '^[ \\t]+$';\n    return StringTokenizer;\n}());\nexport { StringTokenizer };\n","import { SizeF, RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfWordWrapType } from './enum';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Class `lay outing the text`.\n */\nvar PdfStringLayouter = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    function PdfStringLayouter() {\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        //\n    }\n    PdfStringLayouter.prototype.layout = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg4 instanceof RectangleF) {\n            this.initialize(arg1, arg2, arg3, arg4, arg5);\n            this.isOverloadWithPosition = arg6;\n            this.clientSize = arg7;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n        else {\n            this.initialize(arg1, arg2, arg3, arg4);\n            this.isOverloadWithPosition = arg5;\n            this.clientSize = arg6;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n    };\n    PdfStringLayouter.prototype.initialize = function (text, font, format, rectSize, pageHeight) {\n        if (typeof pageHeight === 'number') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.text = text;\n            this.font = font;\n            this.format = format;\n            this.size = new SizeF(rectSize.width, rectSize.height);\n            this.rectangle = rectSize;\n            this.pageHeight = pageHeight;\n            this.reader = new StringTokenizer(text);\n        }\n        else {\n            this.initialize(text, font, format, new RectangleF(new PointF(0, 0), rectSize), 0);\n        }\n    };\n    /**\n     * `Clear` all resources.\n     * @private\n     */\n    PdfStringLayouter.prototype.clear = function () {\n        this.font = null;\n        this.format = null;\n        this.reader.close();\n        this.reader = null;\n        this.text = null;\n    };\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    PdfStringLayouter.prototype.doLayout = function () {\n        var result = new PdfStringLayoutResult();\n        var lineResult = new PdfStringLayoutResult();\n        var lines = [];\n        var line = this.reader.peekLine();\n        var lineIndent = this.getLineIndent(true);\n        while (line != null) {\n            lineResult = this.layoutLine(line, lineIndent);\n            if (lineResult !== null || typeof lineResult !== 'undefined') {\n                var numSymbolsInserted = 0;\n                /* tslint:disable */\n                var returnedValue = this.copyToResult(result, lineResult, lines, /*out*/ numSymbolsInserted);\n                /* tslint:enable */\n                var success = returnedValue.success;\n                numSymbolsInserted = returnedValue.numInserted;\n                if (!success) {\n                    this.reader.read(numSymbolsInserted);\n                    break;\n                }\n            }\n            // if (lineResult.textRemainder != null && lineResult.textRemainder.length > 0 ) {\n            //     break;\n            // }\n            this.reader.readLine();\n            line = this.reader.peekLine();\n            lineIndent = this.getLineIndent(false);\n        }\n        this.finalizeResult(result, lines);\n        return result;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this.format != null) {\n            lineIndent = (firstLine) ? this.format.firstLineIndent : this.format.paragraphIndent;\n            lineIndent = (this.size.width > 0) ? Math.min(this.size.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates `height` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineHeight = function () {\n        var height = this.font.height;\n        if (this.format != null && this.format.lineSpacing !== 0) {\n            height = this.format.lineSpacing + this.font.height;\n        }\n        return height;\n    };\n    /**\n     * Calculates `width` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineWidth = function (line) {\n        var width = this.font.getLineWidth(line, this.format);\n        return width;\n    };\n    // tslint:disable\n    /**\n     * `Layouts` line.\n     * @private\n     */\n    PdfStringLayouter.prototype.layoutLine = function (line, lineIndent) {\n        var lineResult = new PdfStringLayoutResult();\n        lineResult.layoutLineHeight = this.getLineHeight();\n        var lines = [];\n        var maxWidth = this.size.width;\n        var lineWidth = this.getLineWidth(line) + lineIndent;\n        var lineType = LineType.FirstParagraphLine;\n        var readWord = true;\n        // line is in bounds.\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this.addToLineResult(lineResult, lines, line, lineWidth, LineType.NewLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new StringTokenizer(line);\n            var word = reader.peekWord();\n            var isSingleWord = false;\n            if (word.length !== reader.length) {\n                if (word === ' ') {\n                    curLine = curLine + word;\n                    builder = builder + word;\n                    reader.position += 1;\n                    word = reader.peekWord();\n                }\n            }\n            while (word != null) {\n                curLine = curLine + word;\n                var curLineWidth = this.getLineWidth(curLine.toString()) + curIndent /*)*/;\n                if (curLine.toString() === ' ') {\n                    curLine = '';\n                    curLineWidth = 0;\n                }\n                if (curLineWidth > maxWidth) {\n                    if (this.getWrapType() === PdfWordWrapType.None) {\n                        break;\n                    }\n                    if (curLine.length === word.length) {\n                        //  Character wrap is disabled or one symbol is greater than bounds.\n                        if (this.getWrapType() === PdfWordWrapType.WordOnly) {\n                            lineResult.textRemainder = line.substring(reader.position);\n                            break;\n                        }\n                        else if (curLine.length === 1) {\n                            builder = builder + word;\n                            break;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            word = reader.peek().toString();\n                            continue;\n                        }\n                    }\n                    else {\n                        if (this.getLineWidth(word.toString()) > maxWidth) {\n                            this.format.wordWrap = PdfWordWrapType.Character;\n                        }\n                        else {\n                            if (typeof this.format !== 'undefined' && this.format !== null) {\n                                this.format.wordWrap = PdfWordWrapType.Word;\n                            }\n                        }\n                        if (this.getWrapType() !== PdfWordWrapType.Character || !readWord) {\n                            var ln = builder.toString();\n                            // if (ln.indexOf(' ') === -1) {\n                            //     isSingleWord = true;\n                            //     this.addToLineResult(lineResult, lines, curLine, lineWidth, LineType.LayoutBreak | lineType);\n                            // } else {\n                            //     this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            // }                          \n                            if (ln !== ' ') {\n                                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            }\n                            if (this.isOverloadWithPosition) {\n                                maxWidth = this.clientSize.width;\n                            }\n                            curLine = '';\n                            builder = '';\n                            lineWidth = 0;\n                            curIndent = 0;\n                            curLineWidth = 0;\n                            lineType = LineType.None;\n                            // if (isSingleWord) {\n                            //     reader.readWord();\n                            //     readWord = false;\n                            // }\n                            word = (readWord) ? word : reader.peekWord();\n                            //isSingleWord = false;\n                            readWord = true;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            curLine = curLine + builder.toString();\n                            word = reader.peek().toString();\n                        }\n                        continue;\n                    }\n                }\n                /*tslint:disable:max-func-body-length */\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader.readWord();\n                    word = reader.peekWord();\n                    //isSingleWord = false;\n                }\n                else {\n                    reader.read();\n                    word = reader.peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                var ln = builder.toString();\n                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.NewLineBreak | LineType.LastParagraphLine);\n            }\n            reader.close();\n        }\n        lineResult.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult.layoutLines.push(lines[index]);\n        }\n        lines = [];\n        return lineResult;\n    };\n    /**\n     * `Adds` line to line result.\n     * @private\n     */\n    PdfStringLayouter.prototype.addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new LineInfo();\n        info.text = line;\n        info.width = lineWidth;\n        info.lineType = breakType;\n        lines.push(info);\n        var size = lineResult.actualSize;\n        size.height += this.getLineHeight();\n        size.width = Math.max(size.width, lineWidth);\n        lineResult.size = size;\n    };\n    /**\n     * `Copies` layout result from line result to entire result. Checks whether we can proceed lay outing or not.\n     * @private\n     */\n    PdfStringLayouter.prototype.copyToResult = function (result, lineResult, lines, \n    /*out*/ numInserted) {\n        var success = true;\n        var allowPartialLines = (this.format != null && !this.format.lineLimit);\n        var height = result.actualSize.height;\n        var maxHeight = this.size.height;\n        if ((this.pageHeight > 0) && (maxHeight + this.rectangle.y > this.pageHeight)) {\n            maxHeight = this.rectangle.y - this.pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        numInserted = 0;\n        if (lineResult.lines != null) {\n            for (var i = 0, len = lineResult.lines.length; i < len; i++) {\n                var expHeight = height + lineResult.lineHeight;\n                if (expHeight <= maxHeight || maxHeight <= 0 || allowPartialLines) {\n                    var info = lineResult.lines[i];\n                    numInserted += info.text.length;\n                    info = this.trimLine(info, (lines.length === 0));\n                    lines.push(info);\n                    // Update width.\n                    var size = result.actualSize;\n                    size.width = Math.max(size.width, info.width);\n                    result.size = size;\n                    // The part of the line fits only and it's allowed to use partial lines.\n                    // if (expHeight >= maxHeight && maxHeight > 0 && allowPartialLines)\n                    // {\n                    //     let shouldClip : boolean = (this.format == null || !this.format.noClip);\n                    //     if (shouldClip)\n                    //     {\n                    //         let exceededHeight : number = expHeight - maxHeight;\n                    //         let fitHeight : number  = /*Utils.Round(*/ lineResult.lineHeight - exceededHeight /*)*/;\n                    //         height = /*Utils.Round(*/ height + fitHeight /*)*/;\n                    //     }\n                    //     else\n                    //     {\n                    //         height = expHeight;\n                    //     }\n                    //     success = false;\n                    //     break;\n                    // } else {\n                    height = expHeight;\n                    // }\n                }\n                else {\n                    success = false;\n                    break;\n                }\n            }\n        }\n        if (height != result.size.height) {\n            var size1 = result.actualSize;\n            size1.height = height;\n            result.size = size1;\n        }\n        return { success: success, numInserted: numInserted };\n    };\n    /**\n     * `Finalizes` final result.\n     * @private\n     */\n    PdfStringLayouter.prototype.finalizeResult = function (result, lines) {\n        result.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result.layoutLines.push(lines[index]);\n        }\n        result.layoutLineHeight = this.getLineHeight();\n        if (!this.reader.end) {\n            result.textRemainder = this.reader.readToEnd();\n        }\n        lines = [];\n    };\n    /**\n     * `Trims` whitespaces at the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.trimLine = function (info, firstLine) {\n        var line = info.text;\n        var lineWidth = info.width;\n        // Trim start whitespaces if the line is not a start of the paragraph only.\n        var trimStartSpaces = ((info.lineType & LineType.FirstParagraphLine) === 0);\n        var start = (this.format == null || !this.format.rightToLeft);\n        var spaces = StringTokenizer.spaces;\n        line = (start) ? line.trim() : line.trim();\n        // Recalculate line width.\n        if (line.length !== info.text.length) {\n            lineWidth = this.getLineWidth(line);\n            if ((info.lineType & LineType.FirstParagraphLine) > 0) {\n                lineWidth += this.getLineIndent(firstLine);\n            }\n        }\n        info.text = line;\n        info.width = lineWidth;\n        return info;\n    };\n    /**\n     * Returns `wrap` type.\n     * @private\n     */\n    PdfStringLayouter.prototype.getWrapType = function () {\n        var wrapType = (this.format != null) ? this.format.wordWrap : PdfWordWrapType.Word;\n        return wrapType;\n    };\n    return PdfStringLayouter;\n}());\nexport { PdfStringLayouter };\n//Internal declaration\nvar PdfStringLayoutResult = /** @class */ (function () {\n    function PdfStringLayoutResult() {\n    }\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets the `text` which is not lay outed.\n         * @private\n         */\n        get: function () {\n            return this.textRemainder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"actualSize\", {\n        /**\n         * Gets the actual layout text `bounds`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.size === 'undefined') {\n                this.size = new SizeF(0, 0);\n            }\n            return this.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lines\", {\n        /**\n         * Gets layout `lines` information.\n         * @private\n         */\n        get: function () {\n            return this.layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineHeight\", {\n        /**\n         * Gets the `height` of the line.\n         * @private\n         */\n        get: function () {\n            return this.layoutLineHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"empty\", {\n        /**\n         * Gets value that indicates whether any layout text [`empty`].\n         * @private\n         */\n        get: function () {\n            return (this.layoutLines == null || this.layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineCount\", {\n        /**\n         * Gets `number of` the layout lines.\n         * @private\n         */\n        get: function () {\n            var count = (!this.empty) ? this.layoutLines.length : 0;\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringLayoutResult;\n}());\nexport { PdfStringLayoutResult };\nvar LineInfo = /** @class */ (function () {\n    function LineInfo() {\n    }\n    Object.defineProperty(LineInfo.prototype, \"lineType\", {\n        //Properties\n        /**\n         * Gets the `type` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.type;\n        },\n        set: function (value) {\n            this.type = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"text\", {\n        /**\n         * Gets the line `text`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"width\", {\n        /**\n         * Gets `width` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.lineWidth;\n        },\n        set: function (value) {\n            this.lineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LineInfo;\n}());\nexport { LineInfo };\n/**\n* Break type of the `line`.\n* @private\n*/\nexport var LineType;\n(function (LineType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    LineType[LineType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `NewLineBreak`.\n     * @private\n     */\n    LineType[LineType[\"NewLineBreak\"] = 1] = \"NewLineBreak\";\n    /**\n     * Specifies the type of `LayoutBreak`.\n     * @private\n     */\n    LineType[LineType[\"LayoutBreak\"] = 2] = \"LayoutBreak\";\n    /**\n     * Specifies the type of `FirstParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"FirstParagraphLine\"] = 4] = \"FirstParagraphLine\";\n    /**\n     * Specifies the type of `LastParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"LastParagraphLine\"] = 8] = \"LastParagraphLine\";\n})(LineType || (LineType = {}));\n","/**\n * PdfFont.ts class for EJ2-PDF\n */\nimport { PdfFontStyle } from './enum';\nimport { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfStringFormat } from './pdf-string-format';\nimport { PdfStringLayouter } from './string-layouter';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Defines a particular format for text, including font face, size, and style attributes.\n * @private\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        /**\n         * `Style` of the font.\n         * @private\n         */\n        this.fontStyle = PdfFontStyle.Regular;\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this.fontSize = size;\n        }\n        else {\n            this.fontSize = size;\n            this.setStyle(style);\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"name\", {\n        //Properties\n        /**\n         * Gets the face name of this Font.\n         * @private\n         */\n        get: function () {\n            return this.metrics.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of this font.\n         * @private\n         */\n        get: function () {\n            return this.fontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the height of the font in points.\n         * @private\n         */\n        get: function () {\n            return this.metrics.getHeight(null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style information for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontStyle;\n        },\n        set: function (value) {\n            this.fontStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"bold\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `bold`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"italic\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` has the `italic` style applied.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"strikeout\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `strikeout`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Strikeout) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"underline\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `underline`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Underline) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"metrics\", {\n        /**\n         * Gets or sets the `metrics` for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontMetrics;\n        },\n        set: function (value) {\n            this.fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"element\", {\n        // /**\n        //  * Gets and Sets the font `internals`.\n        //  * @private\n        //  */\n        // public get fontInternal() : IPdfPrimitive {\n        //     return this.pdfFontInternals;\n        // }\n        // public set fontInternal(value : IPdfPrimitive) {\n        //     this.pdfFontInternals = value;\n        // }\n        //IPdfWrapper Members\n        /**\n         * Gets the `element` representing the font.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontInternals;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = new SizeF(arg2, 0);\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else {\n            if (text == null) {\n                throw Error(\"ArgumentNullException(\\\"text\\\")\");\n            }\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(text, this, temparg3, temparg2, false, new SizeF(0, 0));\n            // arg4 = (result.Remainder == null) ? text.length : text.length - result.Remainder.length;\n            arg4 = text.length;\n            arg5 = (result.empty) ? 0 : result.lines.length;\n            return result.actualSize;\n        }\n    };\n    /* tslint:enable */\n    //IPdfCache Members\n    /**\n     * `Checks` whether the object is similar to another object.\n     * @private\n     */\n    PdfFont.prototype.equalsTo = function (obj) {\n        var result = this.equalsToFont(obj);\n        return result;\n    };\n    /**\n     * Returns `internals` of the object.\n     * @private\n     */\n    PdfFont.prototype.getInternals = function () {\n        return this.pdfFontInternals;\n    };\n    /**\n     * Sets `internals` to the object.\n     * @private\n     */\n    PdfFont.prototype.setInternals = function (internals) {\n        if (internals == null) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this.pdfFontInternals = internals;\n    };\n    /**\n     * Sets the `style` of the font.\n     * @private\n     */\n    PdfFont.prototype.setStyle = function (style) {\n        this.fontStyle = style;\n    };\n    /**\n     * Applies `settings` to the default line width.\n     * @private\n     */\n    PdfFont.prototype.applyFormatSettings = function (line, format, width) {\n        // if (line == null) {\n        //     throw new Error(`ArgumentNullException:line`);\n        // }\n        var realWidth = width;\n        if (format != null && width > 0) {\n            // Space among characters is not default.\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            // Space among words is not default.\n            if (format.wordSpacing !== 0) {\n                var symbols = StringTokenizer.spaces;\n                var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n                realWidth += whitespacesCount * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    //Constants\n    /**\n     * `Multiplier` of the symbol width.\n     * @default 0.001\n     * @private\n     */\n    PdfFont.charSizeMultiplier = 0.001;\n    /**\n     * `Synchronization` object.\n     * @private\n     */\n    PdfFont.syncObject = new Object();\n    return PdfFont;\n}());\nexport { PdfFont };\n","/**\n * Used to `write a string` into output file.\n * @private\n */\nvar PdfWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfWriter` class.\n     * @private\n     */\n    function PdfWriter(stream) {\n        this.streamWriter = stream;\n    }\n    Object.defineProperty(PdfWriter.prototype, \"document\", {\n        //properties\n        /**\n         * Gets and Sets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"position\", {\n        /**\n         * Gets the `position`.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"length\", {\n        /**\n         * Gets  the `length` of the stream'.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"stream\", {\n        /**\n         * Gets the `stream`.\n         * @private\n         */\n        get: function () {\n            var result = this.streamWriter;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public Methods\n    /**\n     * `Writes the specified data`.\n     * @private\n     */\n    PdfWriter.prototype.write = function (overload) {\n        var data = [];\n        var tempOverload = overload;\n        this.streamWriter.write(tempOverload);\n    };\n    return PdfWriter;\n}());\nexport { PdfWriter };\n","/**\n * public Enum for `CompositeFontType`.\n * @private\n */\nexport var ObjectStatus;\n(function (ObjectStatus) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Registered`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"Registered\"] = 1] = \"Registered\";\n})(ObjectStatus || (ObjectStatus = {}));\n","/**\n * PdfMainObjectCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\nimport { ObjectStatus } from './enum';\n/**\n * The collection of all `objects` within a PDF document.\n * @private\n */\nvar PdfMainObjectCollection = /** @class */ (function () {\n    function PdfMainObjectCollection() {\n        //Fields\n        /**\n         * The collection of the `indirect objects`.\n         * @default []\n         * @private\n         */\n        this.objectCollections = [];\n        /**\n         * The collection of the `Indirect objects`.\n         * @default new Dictionary<number, ObjectInfo>()\n         * @private\n         */\n        this.mainObjectCollection = new Dictionary();\n        /**\n         * The collection of `primitive objects`.\n         * @private\n         */\n        this.primitiveObjectCollection = new Dictionary();\n    }\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.objectCollections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the value of `ObjectInfo` from object collection.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.items = function (index) {\n        return this.objectCollections[index];\n    };\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"outIsNew\", {\n        //Methods\n        /**\n         * Specifies the value of `IsNew`.\n         * @private\n         */\n        get: function () {\n            return this.isNew;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.add = function (element) {\n        var objInfo = new ObjectInfo(element);\n        this.objectCollections.push(objInfo);\n        if (!this.primitiveObjectCollection.containsKey(element)) {\n            this.primitiveObjectCollection.setValue(element, this.objectCollections.length - 1);\n        }\n        element.position = this.index = this.objectCollections.length - 1;\n        element.status = ObjectStatus.Registered;\n    };\n    /**\n     * `Looks` through the collection for the object specified.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.lookFor = function (obj) {\n        var index = -1;\n        if (obj.position !== -1) {\n            return obj.position;\n        }\n        if (this.primitiveObjectCollection.containsKey(obj) && this.count === this.primitiveObjectCollection.size()) {\n            index = this.primitiveObjectCollection.getValue(obj);\n        }\n        else {\n            for (var i = this.count - 1; i >= 0; i--) {\n                var oi = this.objectCollections[i];\n                if (oi.object === obj) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    /**\n     * Gets the `reference of the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.getReference = function (index, isNew) {\n        this.index = this.lookFor(index);\n        var reference;\n        this.isNew = false;\n        var oi = this.objectCollections[this.index];\n        reference = oi.reference;\n        var obj = { reference: reference, wasNew: isNew };\n        return obj;\n    };\n    /**\n     * Tries to set the `reference to the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.trySetReference = function (obj, reference, found) {\n        var result = true;\n        found = true;\n        this.index = this.lookFor(obj);\n        var oi = this.objectCollections[this.index];\n        oi.setReference(reference);\n        return result;\n    };\n    PdfMainObjectCollection.prototype.destroy = function () {\n        for (var _i = 0, _a = this.objectCollections; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            if (obj !== undefined) {\n                obj.pdfObject.position = -1;\n                obj.pdfObject.isSaving = undefined;\n                obj.pdfObject.objectCollectionIndex = undefined;\n                obj.pdfObject.position = undefined;\n            }\n        }\n        this.objectCollections = [];\n        this.mainObjectCollection = new Dictionary();\n        this.primitiveObjectCollection = new Dictionary();\n    };\n    return PdfMainObjectCollection;\n}());\nexport { PdfMainObjectCollection };\nvar ObjectInfo = /** @class */ (function () {\n    function ObjectInfo(obj, reference) {\n        this.pdfObject = obj;\n        this.pdfReference = reference;\n    }\n    Object.defineProperty(ObjectInfo.prototype, \"object\", {\n        //Properties\n        /**\n         * Gets the `object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfObject;\n        },\n        set: function (value) {\n            this.pdfObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObjectInfo.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `reference`.\n     * @private\n     */\n    ObjectInfo.prototype.setReference = function (reference) {\n        this.pdfReference = reference;\n    };\n    return ObjectInfo;\n}());\nexport { ObjectInfo };\n","import { StreamWriter } from '@syncfusion/ej2-file-utils';\nimport { Encoding } from '@syncfusion/ej2-file-utils';\nimport { PdfDocument } from './pdf-document';\n/**\n * `PdfDocumentBase` class represent common properties of PdfDocument classes.\n * @private\n */\nvar PdfDocumentBase = /** @class */ (function () {\n    function PdfDocumentBase(document) {\n        /**\n         * If the stream is copied,  then it specifies true.\n         * @private\n         */\n        this.isStreamCopied = false;\n        if (document instanceof PdfDocument) {\n            this.document = document;\n        }\n    }\n    Object.defineProperty(PdfDocumentBase.prototype, \"pdfObjects\", {\n        //Prpperties\n        /**\n         * Gets the `PDF objects` collection, which stores all objects and references to it..\n         * @private\n         */\n        get: function () {\n            return this.objects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross-reference` table.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"currentSavingObj\", {\n        /**\n         * Gets or sets the current saving `object number`.\n         * @private\n         */\n        get: function () {\n            return this.currentSavingObject;\n        },\n        set: function (value) {\n            this.currentSavingObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"catalog\", {\n        /**\n         * Gets the PDF document `catalog`.\n         * @private\n         */\n        get: function () {\n            return this.pdfCatalog;\n        },\n        set: function (value) {\n            this.pdfCatalog = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"viewerPreferences\", {\n        /**\n         * Gets viewer preferences for presenting the PDF document in a viewer.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets viewer preferences\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfCatalog.viewerPreferences;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Sets the `main object collection`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setMainObjectCollection = function (mainObjectCollection) {\n        this.objects = mainObjectCollection;\n    };\n    /**\n     * Sets the `cross table`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCrossTable = function (cTable) {\n        this.pdfCrossTable = cTable;\n    };\n    /**\n     * Sets the `catalog`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCatalog = function (catalog) {\n        this.pdfCatalog = catalog;\n    };\n    PdfDocumentBase.prototype.save = function (filename) {\n        var _this = this;\n        var encoding = new Encoding(true);\n        var SW = new StreamWriter(encoding);\n        if (typeof filename === 'undefined') {\n            var encoding_1 = new Encoding(true);\n            var SW_1 = new StreamWriter(encoding_1);\n            return new Promise(function (resolve, reject) {\n                /* tslint:disable-next-line:no-any */\n                var obj = {};\n                obj.blobData = new Blob([_this.document.docSave(SW_1, true)], { type: 'application/pdf' });\n                resolve(obj);\n            });\n        }\n        else {\n            this.document.docSave(SW, filename, true);\n        }\n    };\n    /**\n     * `Clone` of parent object - PdfDocument.\n     * @private\n     */\n    PdfDocumentBase.prototype.clone = function () {\n        return this.document;\n    };\n    return PdfDocumentBase;\n}());\nexport { PdfDocumentBase };\n","/**\n * public Enum for `ObjectType`.\n * @private\n */\nexport var ObjectType;\n(function (ObjectType) {\n    /**\n     * Specifies the type of `Free`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Free\"] = 0] = \"Free\";\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Normal\"] = 1] = \"Normal\";\n    /**\n     * Specifies the type of `Packed`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Packed\"] = 2] = \"Packed\";\n})(ObjectType || (ObjectType = {}));\n","/**\n * `PdfBoolean` class is used to perform boolean related primitive operations.\n * @private\n */\nvar PdfBoolean = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfBoolean` class.\n     * @private\n     */\n    function PdfBoolean(value) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.currentPosition = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfBoolean.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.objectStatus;\n        },\n        set: function (value) {\n            this.objectStatus = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.saving;\n        },\n        set: function (value) {\n            this.saving = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index;\n        },\n        set: function (value) {\n            this.index = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfBoolean.prototype.save = function (writer) {\n        writer.write(this.boolToStr(this.value));\n    };\n    /**\n     * Creates a `copy of PdfBoolean`.\n     * @private\n     */\n    PdfBoolean.prototype.clone = function (crossTable) {\n        var newNumber = new PdfBoolean(this.value);\n        return newNumber;\n    };\n    // Implementation\n    /**\n     * Converts `boolean to string` - 0/1 'true'/'false'.\n     * @private\n     */\n    PdfBoolean.prototype.boolToStr = function (value) {\n        return value ? 'true' : 'false';\n    };\n    return PdfBoolean;\n}());\nexport { PdfBoolean };\n","import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfBoolean } from './../primitives/pdf-boolean';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Defines the way the document is to be presented on the screen or in print.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets viewer preferences\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfViewerPreferences = /** @class */ (function () {\n    /**\n     * Initialize a new instance of `PdfViewerPreferences` class.\n     *\n     * @private\n     * ```\n    */\n    function PdfViewerPreferences(catalog) {\n        this._dictionaryProperties = new DictionaryProperties();\n        this._centerWindow = false;\n        this._fitWindow = false;\n        this._displayTitle = false;\n        this._splitWindow = false;\n        this._hideMenuBar = false;\n        this._hideToolBar = false;\n        this._hideWindowUI = false;\n        this._pageMode = PdfPageMode.UseNone;\n        this._pageLayout = PdfPageLayout.SinglePage;\n        this._dictionary = new PdfDictionary();\n        this._duplex = DuplexMode.None;\n        this._catalog = catalog;\n    }\n    Object.defineProperty(PdfViewerPreferences.prototype, \"centerWindow\", {\n        /**\n         * A flag specifying whether to position the document’s window in the center of the screen.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the center window\n         * let centerWindow : boolean = viewerPreferences.centerWindow;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._centerWindow;\n        },\n        /**\n         * A flag specifying whether to position the document’s window in the center of the screen.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the center window\n         * viewerPreferences.centerWindow = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._centerWindow = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.centerWindow, new PdfBoolean(this._centerWindow));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"displayTitle\", {\n        /**\n         * A flag specifying whether the window’s title bar should display the document title taken\n         * from the Title entry of the document information dictionary. If false, the title bar\n         * should instead display the name of the PDF file containing the document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the display title\n         * let displayTitle : boolean = viewerPreferences.displayTitle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._displayTitle;\n        },\n        /**\n         * A flag specifying whether the window’s title bar should display the document title taken\n         * from the Title entry of the document information dictionary. If false, the title bar\n         * should instead display the name of the PDF file containing the document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the display title\n         * viewerPreferences.displayTitle = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._displayTitle = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.displayTitle, new PdfBoolean(this._displayTitle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"fitWindow\", {\n        /**\n         * A flag specifying whether to resize the document’s window to fit the size of the first\n         * displayed page.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the fit window\n         * let fitWindow : boolean = viewerPreferences.fitWindow;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fitWindow;\n        },\n        /**\n         * A flag specifying whether to resize the document’s window to fit the size of the first\n         * displayed page.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the fit window\n         * viewerPreferences.fitWindow = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._fitWindow = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.fitWindow, new PdfBoolean(this._fitWindow));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideMenuBar\", {\n        /**\n         * A flag specifying whether to hide the viewer application’s menu bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide menu bar\n         * let hideMenuBar: boolean = viewerPreferences.hideMenuBar;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideMenuBar;\n        },\n        /**\n         * A flag specifying whether to hide the viewer application’s menu bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide menu bar\n         * viewerPreferences.hideMenuBar = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideMenuBar = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideMenuBar, new PdfBoolean(this._hideMenuBar));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideToolBar\", {\n        /**\n         * A flag specifying whether to hide the viewer application’s tool bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide tool bar\n         * let hideToolBar: boolean = viewerPreferences.hideToolBar;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideToolBar;\n        },\n        /**\n         * A flag specifying whether to hide the viewer application’s tool bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide tool bar\n         * viewerPreferences.hideToolbar = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideToolBar = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideToolBar, new PdfBoolean(this._hideToolBar));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideWindowUI\", {\n        /**\n         * A flag specifying whether to hide user interface elements in the document’s window\n         * (such as scroll bars and navigation controls), leaving only the document’s contents displayed.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide window UI\n         * let hideWindowUI: boolean = viewerPreferences.hideWindowUI;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideWindowUI;\n        },\n        /**\n         * A flag specifying whether to hide user interface elements in the document’s window\n         * (such as scroll bars and navigation controls), leaving only the document’s contents displayed.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide window UI\n         * viewerPreferences.hideWindowUI = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideWindowUI = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideWindowUI, new PdfBoolean(this._hideWindowUI));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageMode\", {\n        /**\n         * A name object specifying how the document should be displayed when opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page mode\n         * let pageMode: PdfPageMode = viewerPreferences.pageMode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageMode;\n        },\n        /**\n         * A name object specifying how the document should be displayed when opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page mode\n         * viewerPreferences.pageMode = PdfPageMode.UseOutlines;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageMode = value;\n            this._catalog.items.setValue(this._dictionaryProperties.pageMode, new PdfName(this._mapPageMode(this._pageMode)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"duplex\", {\n        /**\n         * Gets print duplex mode handling option to use when printing the file from the print dialog.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the duplex\n         * let duplex : DuplexMode = viewerPreferences.duplex;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._duplex;\n        },\n        /**\n         * Sets print duplex mode handling option to use when printing the file from the print dialog.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the duplex\n         * viewerPreferences.duplex = DuplexMode.DuplexFlipLongEdge;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._duplex = value;\n            this._catalog.items.setValue(this._dictionaryProperties.duplex, new PdfName(this._mapDuplexMode(this._duplex)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageLayout\", {\n        /**\n         * A name object specifying the page layout to be used when the document is opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page layout\n         * let pageLayout : PdfPageLayout = viewerPreferences.pageLayout;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageLayout;\n        },\n        /**\n         * A name object specifying the page layout to be used when the document is opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page layout\n         * viewerPreferences.pageLayout = PdfPageLayout.TwoColumnLeft;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageLayout = value;\n            this._catalog.items.setValue(this._dictionaryProperties.pageLayout, new PdfName(this._mapPageLayout(this._pageLayout)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageScaling\", {\n        /**\n         * Gets the page scaling option to be selected\n         * when a print dialog is displayed for this document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page scaling\n         * let pageScaling : PageScalingMode = viewerPreferences.pageScaling;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageScaling;\n        },\n        /**\n         * Sets the page scaling option to be selected\n         * when a print dialog is displayed for this document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page scaling\n         * viewerPreferences.pageScaling = PageScalingMode.None;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageScaling = value;\n            if (this._pageScaling === PageScalingMode.AppDefault && this._dictionary.items.containsKey(this._dictionaryProperties.printScaling)) {\n                this._dictionary.items.remove(this._dictionaryProperties.printScaling);\n            }\n            else if (this._pageScaling === PageScalingMode.None) {\n                this._dictionary.items.setValue(this._dictionaryProperties.printScaling, new PdfName('None'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"element\", {\n        /**\n         * Primivie element\n         *\n         * @private\n         */\n        get: function () {\n            return this._dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfViewerPreferences.prototype._mapDuplexMode = function (mode) {\n        switch (mode) {\n            case DuplexMode.Simplex:\n                return 'Simplex';\n            case DuplexMode.DuplexFlipShortEdge:\n                return 'DuplexFlipShortEdge';\n            case DuplexMode.DuplexFlipLongEdge:\n                return 'DuplexFlipLongEdge';\n            case DuplexMode.None:\n                return 'None';\n        }\n    };\n    PdfViewerPreferences.prototype._mapPageMode = function (mode) {\n        switch (mode) {\n            case PdfPageMode.UseNone:\n                return 'UseNone';\n            case PdfPageMode.UseOutlines:\n                return 'UseOutlines';\n            case PdfPageMode.UseThumbs:\n                return 'UseThumbs';\n            case PdfPageMode.FullScreen:\n                return 'FullScreen';\n            case PdfPageMode.UseOC:\n                return 'UseOC';\n            case PdfPageMode.UseAttachments:\n                return 'UseAttachments';\n        }\n    };\n    PdfViewerPreferences.prototype._mapPageLayout = function (layout) {\n        switch (layout) {\n            case PdfPageLayout.SinglePage:\n                return 'SinglePage';\n            case PdfPageLayout.OneColumn:\n                return 'OneColumn';\n            case PdfPageLayout.TwoColumnLeft:\n                return 'TwoColumnLeft';\n            case PdfPageLayout.TwoColumnRight:\n                return 'TwoColumnRight';\n            case PdfPageLayout.TwoPageLeft:\n                return 'TwoPageLeft';\n            case PdfPageLayout.TwoPageRight:\n                return 'TwoPageRight';\n        }\n    };\n    return PdfViewerPreferences;\n}());\nexport { PdfViewerPreferences };\n/**\n * Represents mode of document displaying.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page mode\n * viewerPreferences.pageMode = PdfPageMode.UseOutlines;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageMode;\n(function (PdfPageMode) {\n    /**\n     * Default value. Neither document outline nor thumbnail images visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseNone\"] = 0] = \"UseNone\";\n    /**\n     * Document outline visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseOutlines\"] = 1] = \"UseOutlines\";\n    /**\n     * Thumbnail images visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseThumbs\"] = 2] = \"UseThumbs\";\n    /**\n     * Full-screen mode, with no menu bar, window controls, or any other window visible.\n     */\n    PdfPageMode[PdfPageMode[\"FullScreen\"] = 3] = \"FullScreen\";\n    /**\n     * Optional content group panel visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseOC\"] = 4] = \"UseOC\";\n    /**\n     * Attachments are visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseAttachments\"] = 5] = \"UseAttachments\";\n})(PdfPageMode || (PdfPageMode = {}));\n/**\n * A name object specifying the page layout to be used when the document is opened.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page layout\n * viewerPreferences.pageLayout = PdfPageLayout.TwoColumnLeft;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageLayout;\n(function (PdfPageLayout) {\n    /**\n     * Default Value. Display one page at a time.\n     */\n    PdfPageLayout[PdfPageLayout[\"SinglePage\"] = 0] = \"SinglePage\";\n    /**\n     * Display the pages in one column.\n     */\n    PdfPageLayout[PdfPageLayout[\"OneColumn\"] = 1] = \"OneColumn\";\n    /**\n     * Display the pages in two columns, with odd numbered\n     * pages on the left.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoColumnLeft\"] = 2] = \"TwoColumnLeft\";\n    /**\n     * Display the pages in two columns, with odd numbered\n     * pages on the right.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoColumnRight\"] = 3] = \"TwoColumnRight\";\n    /**\n     * Display the pages two at a time, with odd-numbered pages on the left.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoPageLeft\"] = 4] = \"TwoPageLeft\";\n    /**\n     * Display the pages two at a time, with odd-numbered pages on the right.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoPageRight\"] = 5] = \"TwoPageRight\";\n})(PdfPageLayout || (PdfPageLayout = {}));\n/**\n * The paper handling option to use when printing the file from the print dialog.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the duplex\n * viewerPreferences.duplex = DuplexMode.DuplexFlipLongEdge;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var DuplexMode;\n(function (DuplexMode) {\n    /**\n     * Print single-sided.\n     */\n    DuplexMode[DuplexMode[\"Simplex\"] = 0] = \"Simplex\";\n    /**\n     * Duplex and flip on the short edge of the sheet.\n     */\n    DuplexMode[DuplexMode[\"DuplexFlipShortEdge\"] = 1] = \"DuplexFlipShortEdge\";\n    /**\n     * Duplex and flip on the long edge of the sheet.\n     */\n    DuplexMode[DuplexMode[\"DuplexFlipLongEdge\"] = 2] = \"DuplexFlipLongEdge\";\n    /**\n     * Default value.\n     */\n    DuplexMode[DuplexMode[\"None\"] = 3] = \"None\";\n})(DuplexMode || (DuplexMode = {}));\n/**\n * Specifies the different page scaling option that shall be selected\n * when a print dialog is displayed for this document.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page scaling\n * viewerPreferences.pageScaling = PageScalingMode.None;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PageScalingMode;\n(function (PageScalingMode) {\n    /**\n     * Indicates the conforming reader’s default print scaling.\n     */\n    PageScalingMode[PageScalingMode[\"AppDefault\"] = 0] = \"AppDefault\";\n    /**\n     * Indicates no page scaling.\n     */\n    PageScalingMode[PageScalingMode[\"None\"] = 1] = \"None\";\n})(PageScalingMode || (PageScalingMode = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCatalog.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfViewerPreferences } from './pdf-viewer-preferences';\n/**\n * `PdfCatalog` class represents internal catalog of the Pdf document.\n * @private\n */\nvar PdfCatalog = /** @class */ (function (_super) {\n    __extends(PdfCatalog, _super);\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfCatalog` class.\n     * @private\n     */\n    function PdfCatalog() {\n        var _this = _super.call(this) || this;\n        //fields\n        /**\n         * Internal variable to store collection of `sections`.\n         * @default null\n         * @private\n         */\n        _this.sections = null;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        _this.tempDictionaryProperties = new DictionaryProperties();\n        _this.items.setValue(new DictionaryProperties().type, new PdfName('Catalog'));\n        return _this;\n    }\n    Object.defineProperty(PdfCatalog.prototype, \"pages\", {\n        //Properties\n        /**\n         * Gets or sets the sections, which contain `pages`.\n         * @private\n         */\n        get: function () {\n            return this.sections;\n        },\n        set: function (value) {\n            var dictionary = value.element;\n            // if (this.sections !== value) {\n            //     this.sections = value;\n            //     this.Items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n            // }\n            this.sections = value;\n            this.items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCatalog.prototype, \"viewerPreferences\", {\n        /**\n         * Gets the viewer preferences of the PDF document.\n         * @private\n         */\n        get: function () {\n            if (this._viewerPreferences === null || typeof this._viewerPreferences === 'undefined') {\n                this._viewerPreferences = new PdfViewerPreferences(this);\n                this.items.setValue(this.tempDictionaryProperties.viewerPreferences, new PdfReferenceHolder(this._viewerPreferences.element));\n            }\n            return this._viewerPreferences;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCatalog;\n}(PdfDictionary));\nexport { PdfCatalog };\n","import { ObjectStatus } from './../input-output/enum';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './pdf-dictionary-properties';\nimport { Operators } from './pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfReference } from './../primitives/pdf-reference';\nimport { ObjectType } from './cross-table';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfCatalog } from './../document/pdf-catalog';\n/**\n * `PdfCrossTable` is responsible for intermediate level parsing\n * and savingof a PDF document.\n * @private\n */\nvar PdfCrossTable = /** @class */ (function () {\n    function PdfCrossTable() {\n        /**\n         * The modified `objects` that should be saved.\n         * @private\n         */\n        this.objects = new Dictionary();\n        /**\n         * Holds `maximal generation number` or offset to object.\n         * @default 0\n         * @private\n         */\n        this.maxGenNumIndex = 0;\n        /**\n         * The `number of the objects`.\n         * @default 0\n         * @private\n         */\n        this.objectCount = 0;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new PdfDictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n    }\n    Object.defineProperty(PdfCrossTable.prototype, \"isMerging\", {\n        //Properties\n        /**\n         * Gets or sets if the document `is merged`.\n         * @private\n         */\n        get: function () {\n            return this.merging;\n        },\n        set: function (value) {\n            this.merging = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"trailer\", {\n        /**\n         * Gets the `trailer`.\n         * @private\n         */\n        get: function () {\n            if (this.internalTrailer == null) {\n                this.internalTrailer = new PdfStream();\n            }\n            return this.internalTrailer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"document\", {\n        /**\n         * Gets or sets the main `PdfDocument` class instance.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n            this.items = this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"pdfObjects\", {\n        /**\n         * Gets the catched `PDF object` main collection.\n         * @private\n         */\n        get: function () {\n            return this.items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"objectCollection\", {\n        /**\n         * Gets the `object collection`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"count\", {\n        /**\n         * Gets or sets the `number of the objects` within the document.\n         * @private\n         */\n        get: function () {\n            return this.objectCount;\n        },\n        set: function (value) {\n            this.objectCount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"nextObjNumber\", {\n        /**\n         * Returns `next available object number`.\n         * @private\n         */\n        get: function () {\n            this.count = this.count + 1;\n            return this.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCrossTable.prototype.save = function (writer, filename) {\n        this.saveHead(writer);\n        var state = false;\n        this.mappedReferences = null;\n        this.objects.clear();\n        this.markTrailerReferences();\n        this.saveObjects(writer);\n        var saveCount = this.count;\n        var xrefPos = writer.position;\n        this.registerObject(0, new PdfReference(0, -1), true);\n        var prevXRef = 0;\n        writer.write(Operators.xref);\n        writer.write(Operators.newLine);\n        this.saveSections(writer);\n        this.saveTrailer(writer, this.count, prevXRef);\n        this.saveTheEndess(writer, xrefPos);\n        this.count = saveCount;\n        for (var i = 0; i < this.objectCollection.count; ++i) {\n            var oi = this.objectCollection.items(i);\n            oi.object.isSaving = false;\n        }\n        if (typeof filename === 'undefined') {\n            return writer.stream.buffer;\n        }\n        else {\n            writer.stream.save(filename);\n        }\n    };\n    /**\n     * `Saves the endess` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTheEndess = function (writer, xrefPos) {\n        writer.write(Operators.newLine + Operators.startxref + Operators.newLine);\n        writer.write(xrefPos.toString() + Operators.newLine);\n        writer.write(Operators.eof + Operators.newLine);\n    };\n    /**\n     * `Saves the new trailer` dictionary.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTrailer = function (writer, count, prevXRef) {\n        writer.write(Operators.trailer + Operators.newLine);\n        // Save the dictionary.\n        var trailer = this.trailer;\n        trailer.items.setValue(this.dictionaryProperties.size, new PdfNumber(this.objectCount + 1));\n        trailer = new PdfDictionary(trailer); // Make it real dictionary.\n        trailer.setEncrypt(false);\n        trailer.save(writer);\n    };\n    /**\n     * `Saves the xref section`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSections = function (writer) {\n        var objectNum = 0;\n        var count = 0;\n        do {\n            count = this.prepareSubsection(objectNum);\n            this.saveSubsection(writer, objectNum, count);\n            objectNum += count;\n        } while (count !== 0);\n    };\n    /**\n     * `Saves a subsection`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSubsection = function (writer, objectNum, count) {\n        if (count <= 0 || objectNum >= this.count) {\n            return;\n        }\n        var subsectionHead = '{0} {1}{2}';\n        writer.write(objectNum + ' ' + (count + 1) + Operators.newLine);\n        for (var i = objectNum; i <= objectNum + count; ++i) {\n            var obj = this.objects.getValue(i);\n            var str = '';\n            if (obj.type === ObjectType.Free) {\n                str = this.getItem(obj.offset, 65535, true);\n            }\n            else {\n                str = this.getItem(obj.offset, obj.generation, false);\n            }\n            writer.write(str);\n        }\n    };\n    /**\n     * Generates string for `xref table item`.\n     * @private\n     */\n    PdfCrossTable.prototype.getItem = function (offset, genNumber, isFree) {\n        var returnString = '';\n        var addOffsetLength = 10 - offset.toString().length;\n        if (genNumber <= 0) {\n            genNumber = 0;\n        }\n        var addGenNumberLength = (5 - genNumber.toString().length) <= 0 ? 0 : (5 - genNumber.toString().length);\n        for (var index = 0; index < addOffsetLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + offset.toString() + ' ';\n        for (var index = 0; index < addGenNumberLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + genNumber.toString() + ' ';\n        returnString = returnString + ((isFree) ? Operators.f : Operators.n) + Operators.newLine;\n        return returnString;\n    };\n    /**\n     * `Prepares a subsection` of the current section within the cross-reference table.\n     * @private\n     */\n    PdfCrossTable.prototype.prepareSubsection = function (objectNum) {\n        var count = 0;\n        var i;\n        var total = this.count;\n        for (var k = 0; k < this.document.pdfObjects.count; k++) {\n            var reference = this.document.pdfObjects.items(k).reference;\n            var refString = reference.toString();\n            var refArray = refString.split(' ');\n        }\n        if (objectNum >= total) {\n            return count;\n        }\n        // search for first changed indirect object.\n        for (i = objectNum; i < total; ++i) {\n            break;\n        }\n        objectNum = i;\n        // look up for all indirect objects in one subsection.\n        for (; i < total; ++i) {\n            ++count;\n        }\n        return count;\n    };\n    /**\n     * `Marks the trailer references` being saved.\n     * @private\n     */\n    PdfCrossTable.prototype.markTrailerReferences = function () {\n        var tempArray;\n        var keys = this.trailer.items.keys();\n        var values = this.trailer.items.values();\n    };\n    /**\n     * `Saves the head`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveHead = function (writer) {\n        var version = this.generateFileVersion(writer.document);\n        writer.write('%PDF-' + version);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Generates the `version` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.generateFileVersion = function (document) {\n        var iVersion = 4;\n        var version = '1.' + iVersion.toString();\n        return version;\n    };\n    PdfCrossTable.prototype.getReference = function (obj, bNew) {\n        if (typeof bNew === 'undefined') {\n            var wasNew = false;\n            return this.getReference(obj, wasNew);\n        }\n        else {\n            //code splitted for reducing lines of code exceeds 100.\n            return this.getSubReference(obj, bNew);\n        }\n    };\n    /**\n     * Retrieves the `reference` of the object given.\n     * @private\n     */\n    PdfCrossTable.prototype.getSubReference = function (obj, bNew) {\n        var isNew = false;\n        var wasNew;\n        var reference = null;\n        // if (obj.IsSaving) {\n        if (this.items.count > 0 && obj.objectCollectionIndex > 0 && this.items.count > obj.objectCollectionIndex - 1) {\n            var tempObj = this.document.pdfObjects.getReference(obj, wasNew);\n            reference = tempObj.reference;\n            wasNew = tempObj.wasNew;\n        }\n        if (reference == null) {\n            if (obj.status === ObjectStatus.Registered) {\n                wasNew = false;\n            }\n            else {\n                wasNew = true;\n            }\n        }\n        else {\n            wasNew = false;\n        }\n        // need to add mapped reference code\n        if (reference == null) {\n            var objnumber = this.nextObjNumber;\n            reference = new PdfReference(objnumber, 0);\n            var found = void 0;\n            if (wasNew) {\n                this.document.pdfObjects.add(obj);\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n                var tempIndex = this.document.pdfObjects.count - 1;\n                var tempkey = this.document.pdfObjects.objectCollections[tempIndex].reference.objNumber;\n                var tempvalue = this.document.pdfObjects.objectCollections[this.document.pdfObjects.count - 1];\n                this.document.pdfObjects.mainObjectCollection.setValue(tempkey, tempvalue);\n                obj.position = -1;\n            }\n            else {\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n            }\n            obj.objectCollectionIndex = reference.objNumber;\n            obj.status = ObjectStatus.None;\n            isNew = true;\n        }\n        bNew = isNew || this.bForceNew;\n        return reference;\n    };\n    /**\n     * `Saves all objects` in the collection.\n     * @private\n     */\n    PdfCrossTable.prototype.saveObjects = function (writer) {\n        var objectCollection = this.objectCollection;\n        for (var i = 0; i < objectCollection.count; ++i) {\n            var oi = objectCollection.items(i);\n            var obj = oi.object;\n            obj.isSaving = true;\n            this.saveIndirectObject(obj, writer);\n        }\n    };\n    /**\n     * `Saves indirect object`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveIndirectObject = function (obj, writer) {\n        var reference = this.getReference(obj);\n        if (obj instanceof PdfCatalog) {\n            this.trailer.items.setValue(this.dictionaryProperties.root, reference);\n        }\n        // NOTE :  This is needed for correct string objects encryption.\n        this.pdfDocument.currentSavingObj = reference;\n        var tempArchive = false;\n        tempArchive = obj.getArchive();\n        var allowedType = !((obj instanceof PdfStream) || !tempArchive || (obj instanceof PdfCatalog));\n        var sigFlag = false;\n        this.registerObject(writer.position, reference);\n        this.doSaveObject(obj, reference, writer);\n    };\n    /**\n     * Performs `real saving` of the save object.\n     * @private\n     */\n    PdfCrossTable.prototype.doSaveObject = function (obj, reference, writer) {\n        var correctPosition = writer.length;\n        writer.write(reference.objNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(reference.genNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(Operators.obj);\n        writer.write(Operators.newLine);\n        obj.save(writer);\n        var stream = writer.stream;\n        writer.write(Operators.endObj);\n        writer.write(Operators.newLine);\n    };\n    PdfCrossTable.prototype.registerObject = function (offset, reference, free) {\n        if (typeof free === 'boolean') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference, free));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n        else if (typeof free === 'undefined') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n    };\n    /**\n     * `Dereferences` the specified primitive object.\n     * @private\n     */\n    PdfCrossTable.dereference = function (obj) {\n        var rh = obj;\n        if (rh != null) {\n            obj = rh.object;\n        }\n        return obj;\n    };\n    return PdfCrossTable;\n}());\nexport { PdfCrossTable };\nvar RegisteredObject = /** @class */ (function () {\n    function RegisteredObject(offset, reference, free) {\n        var tempOffset = offset;\n        this.offsetNumber = tempOffset;\n        var tempReference = reference;\n        this.generation = tempReference.genNumber;\n        this.object = tempReference.objNumber;\n        if (typeof free === 'undefined') {\n            this.type = ObjectType.Normal;\n        }\n        else {\n            this.type = ObjectType.Free;\n        }\n    }\n    Object.defineProperty(RegisteredObject.prototype, \"objectNumber\", {\n        //Properties\n        /**\n         * Gets the `object number`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RegisteredObject.prototype, \"offset\", {\n        /**\n         * Gets the `offset`.\n         * @private\n         */\n        get: function () {\n            var result;\n            result = this.offsetNumber;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RegisteredObject;\n}());\nexport { RegisteredObject };\n","/**\n * PdfPageSize.ts class for EJ2-PDF\n */\nimport { SizeF } from './../drawing/pdf-drawing';\n/**\n * Represents information about various predefined `page sizes`.\n */\nvar PdfPageSize = /** @class */ (function () {\n    //constructor\n    /**\n     * Initialize an instance for `PdfPageSize` class.\n     * @private\n     */\n    function PdfPageSize() {\n        // \n    }\n    /**\n     * Specifies the size of `letter`.\n     * @private\n     */\n    PdfPageSize.letter = new SizeF(612, 792);\n    /**\n     * Specifies the size of `note`.\n     * @private\n     */\n    PdfPageSize.note = new SizeF(540, 720);\n    /**\n     * Specifies the size of `legal`.\n     * @private\n     */\n    PdfPageSize.legal = new SizeF(612, 1008);\n    /**\n     * Specifies the size of `a0`.\n     * @private\n     */\n    PdfPageSize.a0 = new SizeF(2380, 3368);\n    /**\n     * Specifies the size of `a1`.\n     * @private\n     */\n    PdfPageSize.a1 = new SizeF(1684, 2380);\n    /**\n     * Specifies the size of `a2`.\n     * @private\n     */\n    PdfPageSize.a2 = new SizeF(1190, 1684);\n    /**\n     * Specifies the size of `a3`.\n     * @private\n     */\n    PdfPageSize.a3 = new SizeF(842, 1190);\n    /**\n     * Specifies the size of `a4`.\n     * @private\n     */\n    PdfPageSize.a4 = new SizeF(595, 842);\n    /**\n     * Specifies the size of `a5`.\n     * @private\n     */\n    PdfPageSize.a5 = new SizeF(421, 595);\n    /**\n     * Specifies the size of `a6`.\n     * @private\n     */\n    PdfPageSize.a6 = new SizeF(297, 421);\n    /**\n     * Specifies the size of `a7`.\n     * @private\n     */\n    PdfPageSize.a7 = new SizeF(210, 297);\n    /**\n     * Specifies the size of `a8`.\n     * @private\n     */\n    PdfPageSize.a8 = new SizeF(148, 210);\n    /**\n     * Specifies the size of `a9`.\n     * @private\n     */\n    PdfPageSize.a9 = new SizeF(105, 148);\n    /**\n     * Specifies the size of `a10`.\n     * @private\n     */\n    PdfPageSize.a10 = new SizeF(74, 105);\n    /**\n     * Specifies the size of `b0`.\n     * @private\n     */\n    PdfPageSize.b0 = new SizeF(2836, 4008);\n    /**\n     * Specifies the size of `b1`.\n     * @private\n     */\n    PdfPageSize.b1 = new SizeF(2004, 2836);\n    /**\n     * Specifies the size of `b2`.\n     * @private\n     */\n    PdfPageSize.b2 = new SizeF(1418, 2004);\n    /**\n     * Specifies the size of `b3`.\n     * @private\n     */\n    PdfPageSize.b3 = new SizeF(1002, 1418);\n    /**\n     * Specifies the size of `b4`.\n     * @private\n     */\n    PdfPageSize.b4 = new SizeF(709, 1002);\n    /**\n     * Specifies the size of `b5`.\n     * @private\n     */\n    PdfPageSize.b5 = new SizeF(501, 709);\n    /**\n     * Specifies the size of `archE`.\n     * @private\n     */\n    PdfPageSize.archE = new SizeF(2592, 3456);\n    /**\n     * Specifies the size of `archD`.\n     * @private\n     */\n    PdfPageSize.archD = new SizeF(1728, 2592);\n    /**\n     * Specifies the size of `archC`.\n     * @private\n     */\n    PdfPageSize.archC = new SizeF(1296, 1728);\n    /**\n     * Specifies the size of `archB`.\n     * @private\n     */\n    PdfPageSize.archB = new SizeF(864, 1296);\n    /**\n     * Specifies the size of `archA`.\n     * @private\n     */\n    PdfPageSize.archA = new SizeF(648, 864);\n    /**\n     * Specifies the size of `flsa`.\n     * @private\n     */\n    PdfPageSize.flsa = new SizeF(612, 936);\n    /**\n     * Specifies the size of `halfLetter`.\n     * @private\n     */\n    PdfPageSize.halfLetter = new SizeF(396, 612);\n    /**\n     * Specifies the size of `letter11x17`.\n     * @private\n     */\n    PdfPageSize.letter11x17 = new SizeF(792, 1224);\n    /**\n     * Specifies the size of `ledger`.\n     * @private\n     */\n    PdfPageSize.ledger = new SizeF(1224, 792);\n    return PdfPageSize;\n}());\nexport { PdfPageSize };\n","/**\n * public Enum for `PdfPageOrientation`.\n * @private\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `Portrait`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Portrait\"] = 0] = \"Portrait\";\n    /**\n     * Specifies the type of `Landscape`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Landscape\"] = 1] = \"Landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * public Enum for `PdfPageRotateAngle`.\n * @private\n */\nexport var PdfPageRotateAngle;\n(function (PdfPageRotateAngle) {\n    /**\n     * Specifies the type of `RotateAngle0`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle0\"] = 0] = \"RotateAngle0\";\n    /**\n     * Specifies the type of `RotateAngle90`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle90\"] = 1] = \"RotateAngle90\";\n    /**\n     * Specifies the type of `RotateAngle180`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle180\"] = 2] = \"RotateAngle180\";\n    /**\n     * Specifies the type of `RotateAngle270`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle270\"] = 3] = \"RotateAngle270\";\n})(PdfPageRotateAngle || (PdfPageRotateAngle = {}));\n/**\n * public Enum for `PdfNumberStyle`.\n * @private\n */\nexport var PdfNumberStyle;\n(function (PdfNumberStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Numeric`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"Numeric\"] = 1] = \"Numeric\";\n    /**\n     * Specifies the type of `LowerLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerLatin\"] = 2] = \"LowerLatin\";\n    /**\n     * Specifies the type of `LowerRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerRoman\"] = 3] = \"LowerRoman\";\n    /**\n     * Specifies the type of `UpperLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperLatin\"] = 4] = \"UpperLatin\";\n    /**\n     * Specifies the type of `UpperRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperRoman\"] = 5] = \"UpperRoman\";\n})(PdfNumberStyle || (PdfNumberStyle = {}));\n/**\n * public Enum for `PdfDockStyle`.\n * @private\n */\nexport var PdfDockStyle;\n(function (PdfDockStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Bottom\"] = 1] = \"Bottom\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Top\"] = 2] = \"Top\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Right\"] = 4] = \"Right\";\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Fill\"] = 5] = \"Fill\";\n})(PdfDockStyle || (PdfDockStyle = {}));\n/**\n * public Enum for `PdfAlignmentStyle`.\n * @private\n */\nexport var PdfAlignmentStyle;\n(function (PdfAlignmentStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `TopLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopLeft\"] = 1] = \"TopLeft\";\n    /**\n     * Specifies the type of `TopCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopCenter\"] = 2] = \"TopCenter\";\n    /**\n     * Specifies the type of `TopRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopRight\"] = 3] = \"TopRight\";\n    /**\n     * Specifies the type of `MiddleLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleLeft\"] = 4] = \"MiddleLeft\";\n    /**\n     * Specifies the type of `MiddleCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleCenter\"] = 5] = \"MiddleCenter\";\n    /**\n     * Specifies the type of `MiddleRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleRight\"] = 6] = \"MiddleRight\";\n    /**\n     * Specifies the type of `BottomLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomLeft\"] = 7] = \"BottomLeft\";\n    /**\n     * Specifies the type of `BottomCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomCenter\"] = 8] = \"BottomCenter\";\n    /**\n     * Specifies the type of `BottomRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomRight\"] = 9] = \"BottomRight\";\n})(PdfAlignmentStyle || (PdfAlignmentStyle = {}));\n/**\n * public Enum for `TemplateType`.\n * @private\n */\nexport var TemplateType;\n(function (TemplateType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TemplateType[TemplateType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Top\"] = 1] = \"Top\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Bottom\"] = 2] = \"Bottom\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Right\"] = 4] = \"Right\";\n})(TemplateType || (TemplateType = {}));\n","/**\n * PdfMargins.ts class for EJ2-PDF\n * A class representing PDF page margins.\n */\nvar PdfMargins = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfMargins` class.\n     * @private\n     */\n    function PdfMargins() {\n        /**\n         * Represents the `Default Page Margin` value.\n         * @default 0.0\n         * @private\n         */\n        this.pdfMargin = 40.0;\n        this.setMargins(this.pdfMargin);\n    }\n    Object.defineProperty(PdfMargins.prototype, \"left\", {\n        //Properties\n        /**\n         * Gets or sets the `left margin` size.\n         * @private\n         */\n        get: function () {\n            return this.leftMargin;\n        },\n        set: function (value) {\n            this.leftMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"top\", {\n        /**\n         * Gets or sets the `top margin` size.\n         * @private\n         */\n        get: function () {\n            return this.topMargin;\n        },\n        set: function (value) {\n            this.topMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"right\", {\n        /**\n         * Gets or sets the `right margin` size.\n         * @private\n         */\n        get: function () {\n            return this.rightMargin;\n        },\n        set: function (value) {\n            this.rightMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom margin` size.\n         * @private\n         */\n        get: function () {\n            return this.bottomMargin;\n        },\n        set: function (value) {\n            this.bottomMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"all\", {\n        /**\n         * Sets the `margins`.\n         * @private\n         */\n        set: function (value) {\n            this.setMargins(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfMargins.prototype.setMargins = function (margin1, margin2, margin3, margin4) {\n        if (typeof margin2 === 'undefined') {\n            this.leftMargin = this.topMargin = this.rightMargin = this.bottomMargin = margin1;\n        }\n        else {\n            if (typeof margin3 === 'undefined') {\n                this.leftMargin = this.rightMargin = margin1;\n                this.bottomMargin = this.topMargin = margin2;\n            }\n            else {\n                this.leftMargin = margin1;\n                this.topMargin = margin2;\n                this.rightMargin = margin3;\n                this.bottomMargin = margin4;\n            }\n        }\n    };\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    PdfMargins.prototype.clone = function () {\n        return this;\n    };\n    return PdfMargins;\n}());\nexport { PdfMargins };\n","/**\n * PdfPageSettings.ts class for EJ2-PDF\n */\nimport { SizeF, PointF } from './../drawing/pdf-drawing';\nimport { PdfPageSize } from './pdf-page-size';\nimport { PdfPageRotateAngle, PdfPageOrientation } from './enum';\nimport { PdfMargins } from './../graphics/pdf-margins';\n/**\n * The class provides various `setting` related with PDF pages.\n */\nvar PdfPageSettings = /** @class */ (function () {\n    function PdfPageSettings(margins) {\n        //Fields\n        /**\n         * The page `margins`.\n         * @private\n         */\n        this.pageMargins = new PdfMargins();\n        /**\n         * The page `size`.\n         * @default a4\n         * @private\n         */\n        this.pageSize = PdfPageSize.a4;\n        /**\n         * The page `rotation angle`.\n         * @default PdfPageRotateAngle.RotateAngle0\n         * @private\n         */\n        this.rotateAngle = PdfPageRotateAngle.RotateAngle0;\n        /**\n         * The page `orientation`.\n         * @default PdfPageOrientation.Portrait\n         * @private\n         */\n        this.pageOrientation = PdfPageOrientation.Portrait;\n        /**\n         * The page `origin`.\n         * @default 0,0\n         * @private\n         */\n        this.pageOrigin = new PointF(0, 0);\n        /**\n         * Checks the Whether the `rotation` is applied or not.\n         * @default false\n         * @private\n         */\n        this.isRotation = false;\n        if (typeof margins === 'number') {\n            this.pageMargins.setMargins(margins);\n        }\n    }\n    Object.defineProperty(PdfPageSettings.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets or sets the `size` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.setSize(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"orientation\", {\n        /**\n         * Gets or sets the page `orientation`.\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (orientation) {\n            if (this.pageOrientation !== orientation) {\n                this.pageOrientation = orientation;\n                this.updateSize(orientation);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"margins\", {\n        /**\n         * Gets or sets the `margins` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageMargins;\n        },\n        set: function (value) {\n            this.pageMargins = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.width;\n        },\n        set: function (value) {\n            this.pageSize.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.height;\n        },\n        set: function (value) {\n            this.pageSize.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"origin\", {\n        /**\n         * Gets or sets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"rotate\", {\n        /**\n         * Gets or sets the number of degrees by which the page should be `rotated` clockwise when displayed or printed.\n         * @private\n         */\n        get: function () {\n            return this.rotateAngle;\n        },\n        set: function (value) {\n            this.rotateAngle = value;\n            this.isRotation = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Update page size` depending on orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.updateSize = function (orientation) {\n        var min = Math.min(this.pageSize.width, this.pageSize.height);\n        var max = Math.max(this.pageSize.width, this.pageSize.height);\n        switch (orientation) {\n            case PdfPageOrientation.Portrait:\n                this.pageSize = new SizeF(min, max);\n                break;\n            case PdfPageOrientation.Landscape:\n                this.pageSize = new SizeF(max, min);\n                break;\n        }\n    };\n    /**\n     * Creates a `clone` of the object.\n     * @private\n     */\n    PdfPageSettings.prototype.clone = function () {\n        var settings = this;\n        settings.pageMargins = this.pageMargins.clone();\n        // if (GetTransition() != null)\n        // {\n        //     settings.Transition = (PdfPageTransition)Transition.clone();\n        // }\n        return settings;\n    };\n    /**\n     * Returns `size`, shrinked by the margins.\n     * @private\n     */\n    PdfPageSettings.prototype.getActualSize = function () {\n        var width = this.width - (this.margins.left + this.margins.right);\n        var height = this.height - (this.margins.top + this.margins.bottom);\n        var size = new SizeF(width, height);\n        return size;\n    };\n    /**\n     * Sets `size` to the page aaccording to the orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.setSize = function (size) {\n        var min = Math.min(size.width, size.height);\n        var max = Math.max(size.width, size.height);\n        if (this.orientation === PdfPageOrientation.Portrait) {\n            this.pageSize = new SizeF(min, max);\n        }\n        else {\n            this.pageSize = new SizeF(max, min);\n        }\n    };\n    return PdfPageSettings;\n}());\nexport { PdfPageSettings };\n","import { Operators } from './pdf-operators';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Helper class to `write PDF graphic streams` easily.\n * @private\n */\nvar PdfStreamWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfStreamWriter` class.\n     * @private\n     */\n    function PdfStreamWriter(stream) {\n        if (stream == null) {\n            throw new Error('ArgumentNullException:stream');\n        }\n        this.stream = stream;\n    }\n    //Implementation\n    /**\n     * `Clear` the stream.\n     * @public\n     */\n    PdfStreamWriter.prototype.clear = function () {\n        this.stream.clearStream();\n    };\n    PdfStreamWriter.prototype.setGraphicsState = function (dictionaryName) {\n        if (dictionaryName instanceof PdfName) {\n            this.stream.write(dictionaryName.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n        else {\n            this.stream.write(Operators.slash);\n            this.stream.write(dictionaryName);\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n    };\n    /**\n     * `Executes the XObject`.\n     * @private\n     */\n    PdfStreamWriter.prototype.executeObject = function (name) {\n        this.stream.write(name.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.paintXObject);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes path object`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closePath = function () {\n        this.writeOperator(Operators.closePath);\n    };\n    /**\n     * `Clips the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.clipPath = function (useEvenOddRule) {\n        this.stream.write(Operators.clipPath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n        }\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.endPath);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes, then fills and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.closeFillStrokePath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills and strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.fillStroke);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillPath = function (useEvenOddRule) {\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Ends the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endPath = function () {\n        this.writeOperator(Operators.n);\n    };\n    /**\n     * `Closes and fills the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillPath = function (useEvenOddRule) {\n        this.writeOperator(Operators.closePath);\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Closes and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeStrokePath = function () {\n        this.writeOperator(Operators.closeStrokePath);\n    };\n    /**\n     * `Sets the text scaling`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextScaling = function (textScaling) {\n        this.stream.write(PdfNumber.floatToString(textScaling));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextScaling);\n    };\n    /**\n     * `Strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.strokePath = function () {\n        this.writeOperator(Operators.stroke);\n    };\n    /**\n     * `Restores` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.restoreGraphicsState = function () {\n        this.writeOperator(Operators.restoreState);\n    };\n    /**\n     * `Saves` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.saveGraphicsState = function () {\n        this.writeOperator(Operators.saveState);\n    };\n    PdfStreamWriter.prototype.startNextLine = function (arg1, arg2) {\n        if (typeof arg1 === 'undefined') {\n            this.writeOperator(Operators.goToNextLine);\n        }\n        else if (arg1 instanceof PointF) {\n            this.writePoint(arg1);\n            this.writeOperator(Operators.setCoords);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.setCoords);\n        }\n    };\n    /**\n     * Shows the `text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.showText = function (text) {\n        this.checkTextParam(text);\n        this.writeText(text);\n        this.writeOperator(Operators.setText);\n    };\n    /**\n     * Sets `text leading`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLeading = function (leading) {\n        this.stream.write(PdfNumber.floatToString(leading));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextLeading);\n    };\n    /**\n     * `Begins the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginPath = function (x, y) {\n        this.writePoint(x, y);\n        this.writeOperator(Operators.beginPath);\n    };\n    /**\n     * `Begins text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginText = function () {\n        this.writeOperator(Operators.beginText);\n    };\n    /**\n     * `Ends text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endText = function () {\n        this.writeOperator(Operators.endText);\n    };\n    PdfStreamWriter.prototype.appendRectangle = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.appendRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writeOperator(Operators.appendRectangle);\n        }\n    };\n    PdfStreamWriter.prototype.appendLineSegment = function (arg1, arg2) {\n        if (arg1 instanceof PointF) {\n            this.appendLineSegment(arg1.x, arg1.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.appendLineSegment);\n        }\n    };\n    /**\n     * Sets the `text rendering mode`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextRenderingMode = function (renderingMode) {\n        this.stream.write(renderingMode.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setRenderingMode);\n    };\n    /**\n     * Sets the `character spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setCharacterSpacing = function (charSpacing) {\n        this.stream.write(PdfNumber.floatToString(charSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.setCharacterSpace);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `word spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setWordSpacing = function (wordSpacing) {\n        this.stream.write(PdfNumber.floatToString(wordSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setWordSpace);\n    };\n    PdfStreamWriter.prototype.showNextLineText = function (arg1, arg2) {\n        if (arg1 instanceof PdfString) {\n            this.checkTextParam(arg1);\n            this.writeText(arg1);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n        else {\n            this.checkTextParam(arg1);\n            this.writeText(arg1, arg2);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n    };\n    PdfStreamWriter.prototype.setColorSpace = function (arg1, arg2) {\n        if (arg1 instanceof PdfName && typeof arg2 === 'boolean') {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            // if (temparg1 == null) {\n            //     throw new Error('ArgumentNullException:name');\n            // }\n            var op = (temparg2) ? Operators.selectcolorspaceforstroking : Operators.selectcolorspacefornonstroking;\n            this.stream.write(temparg1.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(op);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.setColorSpace(new PdfName(temparg1), temparg2);\n        }\n    };\n    /**\n     * Modifies current `transformation matrix`.\n     * @private\n     */\n    PdfStreamWriter.prototype.modifyCtm = function (matrix) {\n        if (matrix == null) {\n            throw new Error('ArgumentNullException:matrix');\n        }\n        this.stream.write(matrix.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.modifyCtm);\n    };\n    PdfStreamWriter.prototype.setFont = function (font, name, size) {\n        if (typeof name === 'string') {\n            this.setFont(font, new PdfName(name), size);\n        }\n        else {\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.stream.write(name.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(PdfNumber.floatToString(size));\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setFont);\n        }\n    };\n    /**\n     * `Writes the operator`.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeOperator = function (opcode) {\n        this.stream.write(opcode);\n        this.stream.write(Operators.newLine);\n    };\n    PdfStreamWriter.prototype.checkTextParam = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (typeof text === 'string' && text === '') {\n            throw new Error('ArgumentException:The text can not be an empty string, text');\n        }\n    };\n    PdfStreamWriter.prototype.writeText = function (arg1, arg2) {\n        if ((arg1 instanceof PdfString) && (typeof arg2 === 'undefined')) {\n            this.stream.write(arg1.pdfEncode());\n        }\n        else {\n            var start = void 0;\n            var end = void 0;\n            if (arg2) {\n                start = PdfString.hexStringMark[0];\n                end = PdfString.hexStringMark[1];\n            }\n            else {\n                start = PdfString.stringMark[0];\n                end = PdfString.stringMark[1];\n            }\n            this.stream.write(start);\n            this.stream.write(arg1);\n            this.stream.write(end);\n        }\n    };\n    PdfStreamWriter.prototype.writePoint = function (arg1, arg2) {\n        if ((arg1 instanceof PointF) && (typeof arg2 === 'undefined')) {\n            this.writePoint(arg1.x, arg1.y);\n        }\n        else {\n            var temparg1 = arg1;\n            this.stream.write(PdfNumber.floatToString(temparg1));\n            this.stream.write(Operators.whiteSpace);\n            // NOTE: Change Y co-ordinate because we shifted co-ordinate system only.\n            arg2 = this.updateY(arg2);\n            this.stream.write(PdfNumber.floatToString(arg2));\n            this.stream.write(Operators.whiteSpace);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfStreamWriter.prototype.updateY = function (arg) {\n        return -arg;\n    };\n    /**\n     * `Writes string` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += Operators.newLine;\n        this.writeOperator(builder);\n    };\n    /**\n     * `Writes comment` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeComment = function (comment) {\n        if (comment != null && comment.length > 0) {\n            var builder = '';\n            builder += Operators.comment;\n            builder += Operators.whiteSpace;\n            builder += comment;\n            //builder.Append( Operators.NewLine );\n            this.writeOperator(builder);\n        }\n        else {\n            throw new Error('Invalid comment');\n        }\n    };\n    /**\n     * Sets the `color and space`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setColorAndSpace = function (color, colorSpace, forStroking) {\n        if (!color.isEmpty) {\n            // bool test = color is PdfExtendedColor;\n            this.stream.write(color.toString(colorSpace, forStroking));\n            this.stream.write(Operators.newLine);\n        }\n    };\n    // public setLineDashPattern(pattern : number[], patternOffset : number) : void\n    // {\n    //     let pat : PdfArray = new PdfArray(pattern);\n    //     let off : PdfNumber = new PdfNumber(patternOffset);\n    //     this.setLineDashPatternHelper(pat, off);\n    // }\n    // private setLineDashPatternHelper(pattern : PdfArray, patternOffset : PdfNumber) : void\n    // {\n    //     pattern.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     patternOffset.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     this.writeOperator(Operators.setDashPattern);\n    // }\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPattern = function (pattern, patternOffset) {\n        // let pat : PdfArray = new PdfArray(pattern);\n        // let off : PdfNumber = new PdfNumber(patternOffset);\n        // this.setLineDashPatternHelper(pat, off);\n        this.setLineDashPatternHelper(pattern, patternOffset);\n    };\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPatternHelper = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString();\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' ';\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' ' + Operators.setDashPattern;\n        this.stream.write(tempPattern);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `miter limit`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setMiterLimit = function (miterLimit) {\n        this.stream.write(PdfNumber.floatToString(miterLimit));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setMiterLimit);\n    };\n    /**\n     * Sets the `width of the line`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineWidth = function (width) {\n        this.stream.write(PdfNumber.floatToString(width));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineWidth);\n    };\n    /**\n     * Sets the `line cap`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineCap = function (lineCapStyle) {\n        this.stream.write((lineCapStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineCapStyle);\n    };\n    /**\n     * Sets the `line join`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineJoin = function (lineJoinStyle) {\n        this.stream.write((lineJoinStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineJoinStyle);\n    };\n    Object.defineProperty(PdfStreamWriter.prototype, \"position\", {\n        //IPdfWriter members\n        /**\n         * Gets or sets the current `position` within the stream.\n         * @private\n         */\n        get: function () {\n            return this.stream.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"length\", {\n        /**\n         * Gets `stream length`.\n         * @private\n         */\n        get: function () {\n            var returnValue = 0;\n            if (this.stream.data.length !== 0 && this.stream.data.length !== -1) {\n                for (var index = 0; index < this.stream.data.length; index++) {\n                    returnValue += this.stream.data[index].length;\n                }\n            }\n            return returnValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"document\", {\n        /**\n         * Gets and Sets the `current document`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* tslint:disable-next-line:max-line-length */\n    PdfStreamWriter.prototype.appendBezierSegment = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF) {\n            this.writePoint(arg1.x, arg1.y);\n            this.writePoint(arg2.x, arg2.y);\n            this.writePoint(arg3.x, arg3.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writePoint(arg5, arg6);\n        }\n        this.writeOperator(Operators.appendbeziercurve);\n    };\n    PdfStreamWriter.prototype.setColourWithPattern = function (colours, patternName, forStroking) {\n        if ((colours != null)) {\n            var count = colours.length;\n            var i = 0;\n            for (i = 0; i < count; ++i) {\n                this.stream.write(colours[i].toString());\n                this.stream.write(Operators.whiteSpace);\n            }\n        }\n        if ((patternName != null)) {\n            this.stream.write(patternName.toString());\n            this.stream.write(Operators.whiteSpace);\n        }\n        if (forStroking) {\n            this.writeOperator(Operators.setColorAndPatternStroking);\n        }\n        else {\n            this.writeOperator(Operators.setColorAndPattern);\n        }\n    };\n    return PdfStreamWriter;\n}());\nexport { PdfStreamWriter };\n","/**\n * PdfPen.ts class for EJ2-PDF\n */\nimport { PdfColor } from './pdf-color';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfDashStyle, PdfColorSpace } from './enum';\nimport { PdfBrush } from './brushes/pdf-brush';\n/**\n * `PdfPen` class defining settings for drawing operations, that determines the color,\n * width, and style of the drawing elements.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create a new page\n * let page1 : PdfPage = document.pages.add();\n * // set pen\n * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n * // draw rectangle\n * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    function PdfPen(arg1, arg2) {\n        //Fields\n        /**\n         * Specifies the `color of the pen`.\n         * @default new PdfColor()\n         * @private\n         */\n        this.pdfColor = new PdfColor(0, 0, 0);\n        /**\n         * Specifies the `dash offset of the pen`.\n         * @default 0\n         * @private\n         */\n        this.dashOffsetValue = 0;\n        /**\n         * Specifies the `dash pattern of the pen`.\n         * @default [0]\n         * @private\n         */\n        this.penDashPattern = [0];\n        /**\n         * Specifies the `dash style of the pen`.\n         * @default Solid\n         * @private\n         */\n        this.pdfDashStyle = PdfDashStyle.Solid;\n        /**\n         * Specifies the `line cap of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineCap = 0;\n        /**\n         * Specifies the `line join of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineJoin = 0;\n        /**\n         * Specifies the `width of the pen`.\n         * @default 1.0\n         * @private\n         */\n        this.penWidth = 1.0;\n        /**\n         * Specifies the `mitter limit of the pen`.\n         * @default 0.0\n         * @private\n         */\n        this.internalMiterLimit = 0.0;\n        /**\n         * Stores the `colorspace` value.\n         * @default Rgb\n         * @private\n         */\n        this.colorSpace = PdfColorSpace.Rgb;\n        if (arg1 instanceof PdfBrush) {\n            this.setBrush(arg1);\n        }\n        else if (arg1 instanceof PdfColor) {\n            this.color = arg1;\n        }\n        if (typeof arg2 === 'number') {\n            this.width = arg2;\n        }\n    }\n    Object.defineProperty(PdfPen.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashOffset\", {\n        /**\n         * Gets or sets the `dash offset of the pen`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.dashOffsetValue === 'undefined' || this.dashOffsetValue == null) {\n                return 0;\n            }\n            else {\n                return this.dashOffsetValue;\n            }\n        },\n        set: function (value) {\n            this.dashOffsetValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashPattern\", {\n        /**\n         * Gets or sets the `dash pattern of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.penDashPattern;\n        },\n        set: function (value) {\n            this.penDashPattern = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashStyle\", {\n        /**\n         * Gets or sets the `dash style of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen style\n         * pen.dashStyle = PdfDashStyle.DashDot;\n         * // get pen style\n         * let style : PdfDashStyle = pen.dashStyle;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfDashStyle;\n        },\n        set: function (value) {\n            if (this.pdfDashStyle !== value) {\n                this.pdfDashStyle = value;\n                switch (this.pdfDashStyle) {\n                    case PdfDashStyle.Custom:\n                        break;\n                    case PdfDashStyle.Dash:\n                        this.penDashPattern = [3, 1];\n                        break;\n                    case PdfDashStyle.Dot:\n                        this.penDashPattern = [1, 1];\n                        break;\n                    case PdfDashStyle.DashDot:\n                        this.penDashPattern = [3, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.DashDotDot:\n                        this.penDashPattern = [3, 1, 1, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.Solid:\n                        break;\n                    default:\n                        this.pdfDashStyle = PdfDashStyle.Solid;\n                        this.penDashPattern = [0];\n                        break;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineCap\", {\n        /**\n         * Gets or sets the `line cap of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineCap;\n        },\n        set: function (value) {\n            this.pdfLineCap = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineJoin\", {\n        /**\n         * Gets or sets the `line join style of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineJoin;\n        },\n        set: function (value) {\n            this.pdfLineJoin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"miterLimit\", {\n        /**\n         * Gets or sets the `miter limit`.\n         * @private\n         */\n        get: function () {\n            return this.internalMiterLimit;\n        },\n        set: function (value) {\n            this.internalMiterLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"width\", {\n        /**\n         * Gets or sets the `width of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen width\n         * pen.width = 2;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.penWidth;\n        },\n        set: function (value) {\n            this.penWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Helper\n    /**\n     * `Clones` this instance of PdfPen class.\n     * @private\n     */\n    PdfPen.prototype.clone = function () {\n        var pen = this;\n        return pen;\n    };\n    /**\n     * `Sets the brush`.\n     * @private\n     */\n    PdfPen.prototype.setBrush = function (brush) {\n        var sBrush = brush;\n        if ((sBrush != null && sBrush instanceof PdfSolidBrush)) {\n            this.color = sBrush.color;\n            this.pdfBrush = sBrush;\n        }\n        this.color = sBrush.color;\n        this.pdfBrush = sBrush;\n    };\n    /**\n     * `Monitors the changes`.\n     * @private\n     */\n    PdfPen.prototype.monitorChanges = function (currentPen, streamWriter, getResources, saveState, currentColorSpace, matrix) {\n        var diff = false;\n        saveState = true;\n        if (currentPen == null) {\n            diff = true;\n        }\n        diff = this.dashControl(currentPen, saveState, streamWriter);\n        streamWriter.setLineWidth(this.width);\n        streamWriter.setLineJoin(this.lineJoin);\n        streamWriter.setLineCap(this.lineCap);\n        var miterLimit = this.miterLimit;\n        if (miterLimit > 0) {\n            streamWriter.setMiterLimit(miterLimit);\n            diff = true;\n        }\n        var brush = this.pdfBrush;\n        streamWriter.setColorAndSpace(this.color, currentColorSpace, true);\n        diff = true;\n        return diff;\n    };\n    /**\n     * `Controls the dash style` and behaviour of each line.\n     * @private\n     */\n    PdfPen.prototype.dashControl = function (pen, saveState, streamWriter) {\n        saveState = true;\n        var lineWidth = this.width;\n        var pattern = this.getPattern();\n        streamWriter.setLineDashPattern(pattern, this.dashOffset * lineWidth);\n        return saveState;\n    };\n    /**\n     * `Gets the pattern` of PdfPen.\n     * @private\n     */\n    PdfPen.prototype.getPattern = function () {\n        var pattern = this.dashPattern;\n        for (var i = 0; i < pattern.length; ++i) {\n            pattern[i] *= this.width;\n        }\n        return pattern;\n    };\n    return PdfPen;\n}());\nexport { PdfPen };\n","/**\n * PdfTransformationMatrix.ts class for EJ2-PDF\n */\nimport { PointF } from './../drawing/pdf-drawing';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * Class for representing Root `transformation matrix`.\n */\nvar PdfTransformationMatrix = /** @class */ (function () {\n    function PdfTransformationMatrix(value) {\n        /**\n         * Value for `angle converting`.\n         * @default 180.0 / Math.PI\n         * @private\n         */\n        this.radDegFactor = 180.0 / Math.PI;\n        if (typeof value === 'undefined') {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, 1.00, 0.00, 0.00);\n        }\n        else {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, -1.00, 0.00, 0.00);\n        }\n    }\n    Object.defineProperty(PdfTransformationMatrix.prototype, \"matrix\", {\n        // Properties\n        /**\n         * Gets or sets the `internal matrix object`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        set: function (value) {\n            this.transformationMatrix = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.translate = function (offsetX, offsetY) {\n        this.transformationMatrix.translate(offsetX, offsetY);\n    };\n    /**\n     * `Scales` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.scale = function (scaleX, scaleY) {\n        this.transformationMatrix.elements[0] = scaleX;\n        this.transformationMatrix.elements[3] = scaleY;\n    };\n    /**\n     * `Rotates` coordinate system in counterclockwise direction.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.rotate = function (angle) {\n        //Convert from degree to radian \n        angle = (angle * Math.PI) / 180;\n        //Rotation \n        this.transformationMatrix.elements[0] = Math.cos(angle);\n        this.transformationMatrix.elements[1] = Math.sin(angle);\n        this.transformationMatrix.elements[2] = -Math.sin(angle);\n        this.transformationMatrix.elements[3] = Math.cos(angle);\n    };\n    // Overrides\n    /**\n     * Gets `PDF representation`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.toString = function () {\n        var builder = '';\n        var whitespace = ' ';\n        for (var i = 0, len = this.transformationMatrix.elements.length; i < len; i++) {\n            var temp = this.matrix.elements[i];\n            builder += PdfNumber.floatToString(this.transformationMatrix.elements[i]);\n            builder += whitespace;\n        }\n        return builder;\n    };\n    // Implementation\n    /**\n     * `Multiplies` matrices (changes coordinate system.)\n     * @private\n     */\n    PdfTransformationMatrix.prototype.multiply = function (matrix) {\n        this.transformationMatrix.multiply(matrix.matrix);\n    };\n    /**\n     * Converts `degrees to radians`.\n     * @private\n     */\n    PdfTransformationMatrix.degreesToRadians = function (degreesX) {\n        return this.degRadFactor * degreesX;\n    };\n    /**\n     * Converts `radians to degrees`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.radiansToDegrees = function (radians) {\n        return this.radDegFactor * radians;\n    };\n    /**\n     * `Clones` this instance of PdfTransformationMatrix.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.clone = function () {\n        return this;\n    };\n    // Constants\n    /**\n     * Value for `angle converting`.\n     * @default Math.PI / 180.0\n     * @private\n     */\n    PdfTransformationMatrix.degRadFactor = Math.PI / 180.0;\n    return PdfTransformationMatrix;\n}());\nexport { PdfTransformationMatrix };\nvar Matrix = /** @class */ (function () {\n    function Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this.metrixElements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this.metrixElements = [];\n            this.metrixElements.push(arg1);\n            this.metrixElements.push(arg2);\n            this.metrixElements.push(arg3);\n            this.metrixElements.push(arg4);\n            this.metrixElements.push(arg5);\n            this.metrixElements.push(arg6);\n        }\n        else {\n            this.metrixElements = arg1;\n        }\n    }\n    Object.defineProperty(Matrix.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `elements`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetX\", {\n        /**\n         * Gets the off set `X`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetY\", {\n        /**\n         * Gets the off set `Y`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    Matrix.prototype.translate = function (offsetX, offsetY) {\n        this.metrixElements[4] = offsetX;\n        this.metrixElements[5] = offsetY;\n    };\n    /**\n     * `Translates` the specified offset X.\n     * @private\n     */\n    Matrix.prototype.transform = function (point) {\n        var x = point.x;\n        var y = point.y;\n        var x2 = x * this.elements[0] + y * this.elements[2] + this.offsetX;\n        var y2 = x * this.elements[1] + y * this.elements[3] + this.offsetY;\n        return new PointF(x2, y2);\n    };\n    /**\n     * `Multiplies matrices` (changes coordinate system.)\n     * @private\n     */\n    Matrix.prototype.multiply = function (matrix) {\n        var tempMatrix = [];\n        tempMatrix.push(this.elements[0] * matrix.elements[0] + this.elements[1] * matrix.elements[2]);\n        tempMatrix[1] = (this.elements[0] * matrix.elements[1] + this.elements[1] * matrix.elements[3]);\n        tempMatrix[2] = (this.elements[2] * matrix.elements[0] + this.elements[3] * matrix.elements[2]);\n        tempMatrix[3] = (this.elements[2] * matrix.elements[1] + this.elements[3] * matrix.elements[3]);\n        tempMatrix[4] = (this.offsetX * matrix.elements[0] + this.offsetY * matrix.elements[2] + matrix.offsetX);\n        tempMatrix[5] = (this.offsetX * matrix.elements[1] + this.offsetY * matrix.elements[3] + matrix.offsetY);\n        for (var i = 0; i < tempMatrix.length; i++) {\n            this.elements[i] = tempMatrix[i];\n        }\n    };\n    // IDisposable Members\n    /**\n     * `Dispose` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.dispose = function () {\n        this.metrixElements = null;\n    };\n    // ICloneable Members\n    /**\n     * `Clones` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.clone = function () {\n        var m = new Matrix(this.metrixElements);\n        return m;\n    };\n    return Matrix;\n}());\nexport { Matrix };\n","/**\n * `constants.ts` class for EJ2-PDF\n * @private\n */\nvar ProcedureSets = /** @class */ (function () {\n    function ProcedureSets() {\n        /**\n         * Specifies the `PDF` procedure set.\n         * @private\n         */\n        this.pdf = 'PDF';\n        /**\n         * Specifies the `Text` procedure set.\n         * @private\n         */\n        this.text = 'Text';\n        /**\n         * Specifies the `ImageB` procedure set.\n         * @private\n         */\n        this.imageB = 'ImageB';\n        /**\n         * Specifies the `ImageC` procedure set.\n         * @private\n         */\n        this.imageC = 'ImageC';\n        /**\n         * Specifies the `ImageI` procedure set.\n         * @private\n         */\n        this.imageI = 'ImageI';\n    }\n    return ProcedureSets;\n}());\nexport { ProcedureSets };\n","/**\n * Dictionary class\n * @private\n * @hidden\n */\nvar TemporaryDictionary = /** @class */ (function () {\n    function TemporaryDictionary() {\n        /**\n         * @hidden\n         * @private\n         */\n        this.mKeys = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.mValues = [];\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.size = function () {\n        return this.mKeys.length;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.add = function (key, value) {\n        if (key === undefined || key === null || value === undefined || value === null) {\n            throw new ReferenceError('Provided key or value is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n            return 1;\n        }\n        else {\n            throw new RangeError('An item with the same key has already been added.');\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.keys = function () {\n        return this.mKeys;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.values = function () {\n        return this.mValues;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.getValue = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            return this.mValues[index];\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.setValue = function (key, value) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n        }\n        else {\n            this.mValues[index] = value;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.remove = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            this.mKeys.splice(index, 1);\n            this.mValues.splice(index, 1);\n            return true;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.containsKey = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.clear = function () {\n        this.mKeys = [];\n        this.mValues = [];\n    };\n    return TemporaryDictionary;\n}());\nexport { TemporaryDictionary };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents a simple `transparency`.\n * @private\n */\nvar PdfTransparency = /** @class */ (function () {\n    // Properties\n    // /**\n    //  * Gets the `stroke` operation alpha value.\n    //  * @private\n    //  */\n    // public get stroke() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.CA);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `fill` operation alpha value.\n    //  * @private\n    //  */\n    // public get fill() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.ca);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `blend mode`.\n    //  * @private\n    //  */\n    // public get mode() : PdfBlendMode {\n    //     let result : string = this.getName(this.dictionaryProperties.ca);\n    //     return PdfBlendMode.Normal;\n    // }\n    // Constructors\n    /**\n     * Initializes a new instance of the `Transparency` class.\n     * @private\n     */\n    function PdfTransparency(stroke, fill, mode) {\n        // Fields\n        /**\n         * Internal variable to store `dictionary`.\n         * @default new PdfDictionary()\n         * @private\n         */\n        this.dictionary = new PdfDictionary();\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new DictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.dictionary.items.setValue(this.dictionaryProperties.CA, new PdfNumber(stroke));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(fill));\n        this.dictionary.items.setValue(this.dictionaryProperties.BM, new PdfName(mode.toString()));\n    }\n    Object.defineProperty(PdfTransparency.prototype, \"element\", {\n        // // Implementation\n        // /**\n        //  * Gets the `number value`.\n        //  * @private\n        //  */\n        // private getNumber(keyName : string) : number {\n        //     let result : number = 0.0;\n        //     let numb : PdfNumber = this.dictionary.items.getValue(keyName) as PdfNumber;\n        //     result = numb.intValue;\n        //     return result;\n        // }\n        // /**\n        //  * Gets the `name value`.\n        //  * @private\n        //  */\n        // private getName(keyName : string) : string {\n        //     let result : string = null;\n        //     let name : PdfName = this.dictionary.items.getValue(keyName) as PdfName;\n        //     result = name.value;\n        //     return result;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTransparency;\n}());\nexport { PdfTransparency };\n","/**\n * Represent a `collection of automatic fields information`.\n * @private\n */\nvar PdfAutomaticFieldInfoCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the 'PdfPageNumberFieldInfoCollection' class.\n     * @private\n     */\n    function PdfAutomaticFieldInfoCollection() {\n        /**\n         * Internal variable to store instance of `pageNumberFields` class.\n         * @private\n         */\n        this.automaticFieldsInformation = [];\n        //\n    }\n    Object.defineProperty(PdfAutomaticFieldInfoCollection.prototype, \"automaticFields\", {\n        /**\n         * Gets the `page number fields collection`.\n         * @private\n         */\n        get: function () {\n            return this.automaticFieldsInformation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /// Adds the specified field info.\n    /**\n     * Add page number field into collection.\n     * @private\n     */\n    PdfAutomaticFieldInfoCollection.prototype.add = function (fieldInfo) {\n        return this.automaticFields.push(fieldInfo);\n    };\n    return PdfAutomaticFieldInfoCollection;\n}());\nexport { PdfAutomaticFieldInfoCollection };\n","/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfGraphicsElement = /** @class */ (function () {\n    // Constructors\n    function PdfGraphicsElement() {\n        //\n    }\n    /**\n     * `Draws` the page number field.\n     * @public\n     */\n    PdfGraphicsElement.prototype.drawHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0 || y !== 0);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    return PdfGraphicsElement;\n}());\nexport { PdfGraphicsElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfDocument } from './../pdf-document';\nimport { PdfGraphicsElement } from './../../graphics/figures/base/graphics-element';\nimport { PdfAutomaticFieldInfo } from './automatic-field-info';\n/**\n * Represents a fields which is calculated before the document saves.\n */\nvar PdfAutomaticField = /** @class */ (function (_super) {\n    __extends(PdfAutomaticField, _super);\n    // Constructors\n    function PdfAutomaticField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        _this.internalBounds = new RectangleF(0, 0, 0, 0);\n        _this.internalTemplateSize = new SizeF(0, 0);\n        return _this;\n    }\n    Object.defineProperty(PdfAutomaticField.prototype, \"bounds\", {\n        // Properties\n        get: function () {\n            return this.internalBounds;\n        },\n        set: function (value) {\n            this.internalBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"size\", {\n        get: function () {\n            return new SizeF(this.bounds.width, this.bounds.height);\n        },\n        set: function (value) {\n            this.bounds.width = value.width;\n            this.bounds.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"location\", {\n        get: function () {\n            return new PointF(this.bounds.x, this.bounds.y);\n        },\n        set: function (value) {\n            this.bounds.x = value.x;\n            this.bounds.y = value.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"font\", {\n        get: function () {\n            return this.internalFont;\n        },\n        set: function (value) {\n            this.internalFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"brush\", {\n        get: function () {\n            return this.internalBrush;\n        },\n        set: function (value) {\n            this.internalBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"pen\", {\n        get: function () {\n            return this.internalPen;\n        },\n        set: function (value) {\n            this.internalPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"stringFormat\", {\n        get: function () {\n            return this.internalStringFormat;\n        },\n        set: function (value) {\n            this.internalStringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAutomaticField.prototype.performDrawHelper = function (graphics, location, scalingX, scalingY) {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            var text = this.getValue(graphics);\n            this.internalTemplateSize = this.getFont().measureString(text, this.size, this.stringFormat);\n        }\n    };\n    PdfAutomaticField.prototype.draw = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            var location_1 = new PointF(0, 0);\n            this.draw(arg1, location_1);\n        }\n        else if (arg2 instanceof PointF) {\n            this.draw(arg1, arg2.x, arg2.y);\n        }\n        else {\n            this.drawHelper(arg1, arg2, arg3);\n            var info = new PdfAutomaticFieldInfo(this, new PointF(arg2, arg3));\n            arg1.automaticFields.add(info);\n        }\n    };\n    PdfAutomaticField.prototype.getSize = function () {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            return this.internalTemplateSize;\n        }\n        else {\n            return this.size;\n        }\n    };\n    PdfAutomaticField.prototype.drawInternal = function (graphics) {\n        //\n    };\n    /* tslint:disable */\n    PdfAutomaticField.prototype.getBrush = function () {\n        return (typeof this.internalBrush === 'undefined' || this.internalBrush == null) ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.internalBrush;\n    };\n    PdfAutomaticField.prototype.getFont = function () {\n        return (typeof this.internalFont === 'undefined' || this.internalFont == null) ? PdfDocument.defaultFont : this.internalFont;\n    };\n    /* tslint:enable */\n    PdfAutomaticField.prototype.getPageFromGraphics = function (graphics) {\n        if (typeof graphics.page !== 'undefined' && graphics.page !== null) {\n            var page = graphics.page;\n            return page;\n        }\n        else {\n            var page = graphics.currentPage;\n            return page;\n        }\n    };\n    return PdfAutomaticField;\n}(PdfGraphicsElement));\nexport { PdfAutomaticField };\n","/**\n * PdfAutomaticFieldInfo.ts class for EJ2-PDF\n * @private\n */\nimport { PointF } from './../../drawing/pdf-drawing';\nimport { PdfAutomaticField } from './automatic-field';\n/**\n * Represents information about the automatic field.\n * @private\n */\nvar PdfAutomaticFieldInfo = /** @class */ (function () {\n    function PdfAutomaticFieldInfo(field, location, scaleX, scaleY) {\n        // Fields\n        /**\n         * Internal variable to store location of the field.\n         * @private\n         */\n        this.pageNumberFieldLocation = new PointF();\n        /**\n         * Internal variable to store field.\n         * @private\n         */\n        this.pageNumberField = null;\n        /**\n         * Internal variable to store x scaling factor.\n         * @private\n         */\n        this.scaleX = 1;\n        /**\n         * Internal variable to store y scaling factor.\n         * @private\n         */\n        this.scaleY = 1;\n        if (typeof location === 'undefined' && field instanceof PdfAutomaticFieldInfo) {\n            this.pageNumberField = field.field;\n            this.pageNumberFieldLocation = field.location;\n            this.scaleX = field.scalingX;\n            this.scaleY = field.scalingY;\n        }\n        else if (typeof scaleX === 'undefined' && location instanceof PointF && field instanceof PdfAutomaticField) {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n        }\n        else {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n            this.scaleX = scaleX;\n            this.scaleY = scaleY;\n        }\n    }\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"location\", {\n        /* tslint:enable */\n        // Properties\n        /**\n         * Gets or sets the location.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberFieldLocation;\n        },\n        set: function (value) {\n            this.pageNumberFieldLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"field\", {\n        /**\n         * Gets or sets the field.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberField;\n        },\n        set: function (value) {\n            this.pageNumberField = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingX\", {\n        /**\n         * Gets or sets the scaling X factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleX;\n        },\n        set: function (value) {\n            this.scaleX = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingY\", {\n        /**\n         * Gets or sets the scaling Y factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleY;\n        },\n        set: function (value) {\n            this.scaleY = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAutomaticFieldInfo;\n}());\nexport { PdfAutomaticFieldInfo };\n","/**\n * ByteArray class\n * Used to keep information about image stream as byte array.\n * @private\n */\nvar ByteArray = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `byte-array` class\n     * @hidden\n     * @private\n     */\n    function ByteArray(length) {\n        /**\n         * Current stream `position`.\n         * @default 0\n         * @private\n         */\n        this.mPosition = 0;\n        this.buffer = new Uint8Array(length);\n        this.dataView = new DataView(this.buffer.buffer);\n    }\n    Object.defineProperty(ByteArray.prototype, \"position\", {\n        /**\n         * Gets and Sets a current `position` of byte array.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mPosition;\n        },\n        set: function (value) {\n            this.mPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Read` from current stream position.\n     * @default 0\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.read = function (buffer, offset, count) {\n        for (var index = offset; index < count; index++) {\n            var position = this.position;\n            buffer.buffer[index] = this.readByte(position);\n            this.position++;\n        }\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.getBuffer = function (index) {\n        return this.buffer[index];\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.writeFromBase64String = function (base64) {\n        var arr = this.encodedString(base64);\n        this.buffer = arr;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.encodedString = function (input) {\n        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1;\n        var chr2;\n        var chr3;\n        var enc1;\n        var enc2;\n        var enc3;\n        var enc4;\n        var i = 0;\n        var resultIndex = 0;\n        var dataUrlPrefix = 'data:';\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        var output = new Uint8Array(totalLength | 0);\n        while (i < input.length) {\n            enc1 = keyStr.indexOf(input.charAt(i++));\n            enc2 = keyStr.indexOf(input.charAt(i++));\n            enc3 = keyStr.indexOf(input.charAt(i++));\n            enc4 = keyStr.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            output[resultIndex++] = chr1;\n            output[resultIndex++] = chr2;\n            output[resultIndex++] = chr3;\n        }\n        return output;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.readByte = function (offset) {\n        return (this.buffer[offset]);\n    };\n    Object.defineProperty(ByteArray.prototype, \"internalBuffer\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ByteArray.prototype, \"count\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer.byteLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * 'readNextTwoBytes' stream\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.readNextTwoBytes = function (stream) {\n        var data = stream.readByte(this.position);\n        this.position++;\n        data <<= 8;\n        data |= stream.readByte(this.position);\n        this.position++;\n        return data;\n    };\n    return ByteArray;\n}());\nexport { ByteArray };\n","/**\n * ImageDecoder class\n */\nimport { ByteArray } from './byte-array';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\n/**\n * Specifies the image `format`.\n * @private\n */\nexport var ImageFormat;\n(function (ImageFormat) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `Bmp`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Bmp\"] = 1] = \"Bmp\";\n    /**\n     * Specifies the type of `Emf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Emf\"] = 2] = \"Emf\";\n    /**\n     * Specifies the type of `Gif`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Gif\"] = 3] = \"Gif\";\n    /**\n     * Specifies the type of `Jpeg`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Jpeg\"] = 4] = \"Jpeg\";\n    /**\n     * Specifies the type of `Png`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Png\"] = 5] = \"Png\";\n    /**\n     * Specifies the type of `Wmf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Wmf\"] = 6] = \"Wmf\";\n    /**\n     * Specifies the type of `Icon`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Icon\"] = 7] = \"Icon\";\n})(ImageFormat || (ImageFormat = {}));\n/**\n * `Decode the image stream`.\n * @private\n */\nvar ImageDecoder = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `image-decoder` class.\n     * @private\n     */\n    function ImageDecoder(stream) {\n        /**\n         * Start of file markers.\n         * @hidden\n         * @private\n         */\n        this.sof1Marker = 0x00C1;\n        this.sof2Marker = 0x00C2;\n        this.sof3Marker = 0x00C3;\n        this.sof5Marker = 0x00C5;\n        this.sof6Marker = 0x00C6;\n        this.sof7Marker = 0x00C7;\n        this.sof9Marker = 0x00C9;\n        this.sof10Marker = 0x00CA;\n        this.sof11Marker = 0x00CB;\n        this.sof13Marker = 0x00CD;\n        this.sof14Marker = 0x00CE;\n        this.sof15Marker = 0x00CF;\n        /**\n         * Specifies `format` of image.\n         * @hidden\n         * @private\n         */\n        this.mFormat = ImageFormat.Unknown;\n        /**\n         * `Bits per component`.\n         * @default 8\n         * @hidden\n         * @private\n         */\n        this.mbitsPerComponent = 8;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.mStream = stream;\n        this.initialize();\n    }\n    Object.defineProperty(ImageDecoder.prototype, \"height\", {\n        /**\n         * Gets the `height` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"width\", {\n        /**\n         * Gets the `width` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"bitsPerComponent\", {\n        /**\n         * Gets `bits per component`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mbitsPerComponent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"size\", {\n        /**\n         * Gets the `size` of an image data.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageData\", {\n        /**\n         * Gets the value of an `image data`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageDataAsNumberArray\", {\n        /**\n         * Gets the value of an `image data as number array`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.internalBuffer.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize` image data and image stream.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.initialize = function () {\n        if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {\n            this.mFormat = ImageFormat.Jpeg;\n            this.parseJpegImage();\n        }\n        else {\n            throw new TypeError('Only the JPEG format is supported');\n        }\n        this.reset();\n        this.mImageData = new ByteArray(this.mStream.count);\n        this.mStream.read(this.mImageData, 0, this.mImageData.count);\n    };\n    /**\n     * `Reset` stream position into 0.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.reset = function () {\n        this.mStream.position = 0;\n    };\n    /**\n     * `Parse` Jpeg image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.parseJpegImage = function () {\n        this.reset();\n        var imgData = new ByteArray(this.mStream.count);\n        this.mStream.read(imgData, 0, imgData.count);\n        var i = 4;\n        var isLengthExceed = false;\n        /* tslint:disable */\n        var length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n        while (i < imgData.count) {\n            i += length;\n            if (i < imgData.count) {\n                if (imgData.getBuffer(i + 1) === 192) {\n                    this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);\n                    this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);\n                    return;\n                }\n                else {\n                    i += 2;\n                    length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n                }\n            }\n            else {\n                isLengthExceed = true;\n                break;\n            }\n        }\n        if (isLengthExceed) {\n            this.mStream.position = 0;\n            this.skip(this.mStream, 2);\n            this.readExceededJPGImage(this.mStream);\n        }\n        /* tslint:enable */\n    };\n    Object.defineProperty(ImageDecoder.prototype, \"format\", {\n        /**\n         * Gets the image `format`.\n         * @private\n         * @hidden\n         */\n        get: function () {\n            return this.mFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Checks if JPG`.\n     * @private\n     * @hidden\n     */\n    ImageDecoder.prototype.checkIfJpeg = function () {\n        this.reset();\n        for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {\n            if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {\n                return false;\n            }\n            this.mStream.position++;\n        }\n        return true;\n    };\n    /**\n     * Return image `dictionary`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getImageDictionary = function () {\n        if (this.mFormat === ImageFormat.Jpeg) {\n            var tempArrayBuffer = this.imageData.internalBuffer.length;\n            this.imageStream = new PdfStream();\n            this.imageStream.isResource = true;\n            var tempString = '';\n            var decodedString = '';\n            for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {\n                tempString += String.fromCharCode(null, this.mStream.readByte(i));\n            }\n            for (var i = 0; i < tempString.length; i++) {\n                if (i % 2 !== 0) {\n                    decodedString += tempString[i];\n                }\n            }\n            this.imageStream.data = [decodedString];\n            this.imageStream.compress = false;\n            this.imageStream.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.xObject));\n            this.imageStream.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.image));\n            this.imageStream.items.setValue(this.dictionaryProperties.width, new PdfNumber(this.width));\n            this.imageStream.items.setValue(this.dictionaryProperties.height, new PdfNumber(this.height));\n            this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n            this.imageStream.items.setValue(this.dictionaryProperties.filter, new PdfName(this.dictionaryProperties.dctdecode));\n            this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(this.getColorSpace()));\n            this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());\n            return this.imageStream;\n        }\n        else {\n            return this.imageStream;\n        }\n    };\n    /**\n     * Return `colorSpace` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getColorSpace = function () {\n        return this.dictionaryProperties.deviceRgb;\n    };\n    /**\n     * Return `decode parameters` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getDecodeParams = function () {\n        var decodeParams = new PdfDictionary();\n        decodeParams.items.setValue(this.dictionaryProperties.columns, new PdfNumber(this.width));\n        decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new PdfBoolean(true));\n        decodeParams.items.setValue(this.dictionaryProperties.k, new PdfNumber(-1));\n        decodeParams.items.setValue(this.dictionaryProperties.predictor, new PdfNumber(15));\n        decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n        return decodeParams;\n    };\n    /**\n     * 'readExceededJPGImage' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.readExceededJPGImage = function (stream) {\n        this.mStream = stream;\n        var isContinueReading = true;\n        while (isContinueReading) {\n            var marker = this.getMarker(stream);\n            switch (marker) {\n                case this.sof1Marker:\n                case this.sof2Marker:\n                case this.sof3Marker:\n                case this.sof5Marker:\n                case this.sof6Marker:\n                case this.sof7Marker:\n                case this.sof9Marker:\n                case this.sof10Marker:\n                case this.sof11Marker:\n                case this.sof13Marker:\n                case this.sof14Marker:\n                case this.sof15Marker:\n                    stream.position += 3;\n                    this.mHeight = this.mStream.readNextTwoBytes(stream);\n                    this.mWidth = this.mStream.readNextTwoBytes(stream);\n                    isContinueReading = false;\n                    break;\n                default:\n                    this.skipStream(stream);\n                    break;\n            }\n        }\n    };\n    /**\n     * 'skip' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skip = function (stream, noOfBytes) {\n        this.mStream = stream;\n        var temp = new ByteArray(noOfBytes);\n        this.mStream.read(temp, 0, temp.count);\n    };\n    /**\n     * 'getMarker' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getMarker = function (stream) {\n        var skippedByte = 0;\n        var marker = 32;\n        marker = stream.readByte(this.mStream.position);\n        stream.position++;\n        while (marker !== 255) {\n            skippedByte++;\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        }\n        do {\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        } while (marker === 255);\n        return marker;\n    };\n    /**\n     * 'skipStream' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skipStream = function (stream) {\n        var markerLength = this.mStream.readNextTwoBytes(stream) - 2;\n        if (markerLength > 0) {\n            stream.position += markerLength;\n        }\n    };\n    /**\n     * Number array for `png header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];\n    /**\n     * Number Array for `jpeg header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mJpegHeader = [255, 216];\n    /**\n     * Number array for `gif header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.GIF_HEADER = 'G,I,F,8';\n    /**\n     * Number array for `bmp header.`\n     * @hidden\n     * @private\n     */\n    ImageDecoder.BMP_HEADER = 'B,M';\n    return ImageDecoder;\n}());\nexport { ImageDecoder };\n","/**\n * Used to perform `convertion between pixels and points`.\n * @private\n */\nvar PdfUnitConverter = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `UnitConvertor` class with DPI value.\n     * @private\n     */\n    function PdfUnitConverter(dpi) {\n        this.updateProportionsHelper(dpi);\n    }\n    /**\n     * `Converts` the value, from one graphics unit to another graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertUnits = function (value, from, to) {\n        return this.convertFromPixels(this.convertToPixels(value, from), to);\n    };\n    /**\n     * Converts the value `to pixel` from specified graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertToPixels = function (value, from) {\n        var index = from;\n        var result = (value * this.proportions[index]);\n        return result;\n    };\n    /**\n     * Converts value, to specified graphics unit `from Pixel`.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertFromPixels = function (value, to) {\n        var index = to;\n        var result = (value / this.proportions[index]);\n        return result;\n    };\n    /**\n     * `Update proportions` matrix according to Graphics settings.\n     * @private\n     */\n    PdfUnitConverter.prototype.updateProportionsHelper = function (pixelPerInch) {\n        this.proportions = [\n            pixelPerInch / 2.54,\n            pixelPerInch / 6.0,\n            1,\n            pixelPerInch / 72.0,\n            pixelPerInch,\n            pixelPerInch / 300.0,\n            pixelPerInch / 25.4 // Millimeter\n        ];\n    };\n    //Fields\n    /**\n     * Indicates default `horizontal resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.horizontalResolution = 96;\n    /**\n     * Indicates default `vertical resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.verticalResolution = 96;\n    return PdfUnitConverter;\n}());\nexport { PdfUnitConverter };\n","import { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfGraphicsUnit } from './../enum';\nimport { PdfUnitConverter } from './../unit-convertor';\n/**\n * `PdfImage` class represents the base class for images and provides functionality for the 'PdfBitmap' class.\n * @private\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets and Sets the `width` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageWidth;\n        },\n        set: function (value) {\n            this.imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets and Sets the `height` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageHeight;\n        },\n        set: function (value) {\n            this.imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"size\", {\n        /**\n         * Gets or sets the size of the image.\n         * @private\n         */\n        set: function (value) {\n            this.width = value.width;\n            this.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the `physical dimension` of an image.\n         * @private\n         */\n        get: function () {\n            this.imagePhysicalDimension = this.getPointSize(this.width, this.height, this.horizontalResolution, this.verticalResolution);\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"element\", {\n        // /**\n        //  * Gets the `image stream as string`.\n        //  * @private\n        //  */\n        // public static fromString(string : string) : PdfImage {\n        //     let image : PdfImage = new PdfBitmap(string);\n        //     return image;\n        // }\n        /**\n         * Gets the `element` image stream.\n         * @private\n         */\n        get: function () {\n            return this.imageStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.getPointSize = function (width, height, horizontalResolution, verticalResolution) {\n        if (typeof horizontalResolution === 'undefined') {\n            var dpiX = PdfUnitConverter.horizontalResolution;\n            var dpiY = PdfUnitConverter.verticalResolution;\n            var size = this.getPointSize(width, height, dpiX, dpiY);\n            return size;\n        }\n        else {\n            var ucX = new PdfUnitConverter(horizontalResolution);\n            var ucY = new PdfUnitConverter(verticalResolution);\n            var ptWidth = ucX.convertUnits(width, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var ptHeight = ucY.convertUnits(height, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var size = new SizeF(ptWidth, ptHeight);\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfBitmap.ts class for EJ2-PDF\n */\nimport { ImageDecoder } from './../../graphics/images/image-decoder';\nimport { ByteArray } from './../../graphics/images/byte-array';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfImage } from './pdf-image';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // base64 string of an image\n * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n * // load the image from the base64 string of original image.\n * let image : PdfBitmap = new PdfBitmap(imageString);\n * // draw the image\n * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    /**\n     * Create an instance for `PdfBitmap` class.\n     * @param encodedString Base64 string of an image.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * // base64 string of an image\n     * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n     * //\n     * // load the image from the base64 string of original image.\n     * let image : PdfBitmap = new PdfBitmap(imageString);\n     * //\n     * // draw the image\n     * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * Specifies the `status` of an image.\n         * @default true.\n         * @hidden\n         * @private\n         */\n        _this.imageStatus = true;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.loadImage(encodedString);\n        return _this;\n    }\n    /**\n     * `Load image`.\n     * @hidden\n     * @private\n     */\n    PdfBitmap.prototype.loadImage = function (encodedString) {\n        var task = this.initializeAsync(encodedString);\n    };\n    /**\n     * `Initialize` image parameters.\n     * @private\n     */\n    PdfBitmap.prototype.initializeAsync = function (encodedString) {\n        var byteArray = new ByteArray(encodedString.length);\n        byteArray.writeFromBase64String(encodedString);\n        this.decoder = new ImageDecoder(byteArray);\n        this.height = this.decoder.height;\n        this.width = this.decoder.width;\n        // FrameCount = BitmapImageDecoder.FrameCount;\n        this.bitsPerComponent = this.decoder.bitsPerComponent;\n    };\n    /**\n     * `Saves` the image into stream.\n     * @private\n     */\n    PdfBitmap.prototype.save = function () {\n        this.imageStatus = true;\n        this.imageStream = this.decoder.getImageDictionary();\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n","/**\n * TtfTableInfo.ts class for EJ2-PDF\n */\nvar TtfTableInfo = /** @class */ (function () {\n    function TtfTableInfo() {\n    }\n    Object.defineProperty(TtfTableInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this table is empty.\n         * @private\n         */\n        get: function () {\n            var empty = (this.offset === this.length && this.length === this.checksum && this.checksum === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfTableInfo;\n}());\nexport { TtfTableInfo };\n","var TtfNameTable = /** @class */ (function () {\n    function TtfNameTable() {\n    }\n    return TtfNameTable;\n}());\nexport { TtfNameTable };\n","/**\n * TtfNameRecord.ts class for EJ2-PDF\n */\nvar TtfNameRecord = /** @class */ (function () {\n    function TtfNameRecord() {\n    }\n    return TtfNameRecord;\n}());\nexport { TtfNameRecord };\n","/**\n * TtfHeadTable.ts class for EJ2-PDF\n */\nvar TtfHeadTable = /** @class */ (function () {\n    function TtfHeadTable() {\n    }\n    return TtfHeadTable;\n}());\nexport { TtfHeadTable };\n","var TtfMetrics = /** @class */ (function () {\n    function TtfMetrics() {\n    }\n    Object.defineProperty(TtfMetrics.prototype, \"isItalic\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this instance is italic.\n         */\n        get: function () {\n            return ((this.macStyle & 2) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfMetrics.prototype, \"isBold\", {\n        /**\n         * Gets a value indicating whether this instance is bold.\n         */\n        get: function () {\n            return ((this.macStyle & 1) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfMetrics;\n}());\nexport { TtfMetrics };\n","/**\n * TtfHorizontalHeaderTable.ts class for EJ2-PDF\n */\nvar TtfHorizontalHeaderTable = /** @class */ (function () {\n    function TtfHorizontalHeaderTable() {\n    }\n    return TtfHorizontalHeaderTable;\n}());\nexport { TtfHorizontalHeaderTable };\n","/**\n * TtfOS2Table.ts class for EJ2-PDF\n * The OS/2 table consists of a set of metrics that are required by Windows and OS/2.\n */\nvar TtfOS2Table = /** @class */ (function () {\n    function TtfOS2Table() {\n    }\n    return TtfOS2Table;\n}());\nexport { TtfOS2Table };\n","/**\n * TtfPostTable.ts class for EJ2-PDF\n */\nvar TtfPostTable = /** @class */ (function () {\n    function TtfPostTable() {\n    }\n    return TtfPostTable;\n}());\nexport { TtfPostTable };\n","/**\n * TtfLongHorMetric.ts class for EJ2-PDF\n */\nvar TtfLongHorMetric = /** @class */ (function () {\n    function TtfLongHorMetric() {\n    }\n    return TtfLongHorMetric;\n}());\nexport { TtfLongHorMetric };\n","/**\n * TtfCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfCmapSubTable = /** @class */ (function () {\n    function TtfCmapSubTable() {\n    }\n    return TtfCmapSubTable;\n}());\nexport { TtfCmapSubTable };\n","/**\n * TtfCmapTable.ts class for EJ2-PDF\n */\nvar TtfCmapTable = /** @class */ (function () {\n    function TtfCmapTable() {\n    }\n    return TtfCmapTable;\n}());\nexport { TtfCmapTable };\n","/**\n * TtfGlyphInfo.ts class for EJ2-PDF\n */\nvar TtfGlyphInfo = /** @class */ (function () {\n    function TtfGlyphInfo() {\n    }\n    Object.defineProperty(TtfGlyphInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this TtfGlyphInfo is empty.\n         */\n        get: function () {\n            var empty = (this.index === this.width && this.width === this.charCode && this.charCode === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IComparable implementation\n    /**\n     * Compares two WidthDescriptor objects.\n     */\n    TtfGlyphInfo.prototype.compareTo = function (obj) {\n        var glyph = obj;\n        return this.index - glyph.index;\n    };\n    return TtfGlyphInfo;\n}());\nexport { TtfGlyphInfo };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfLocaTable = /** @class */ (function () {\n    function TtfLocaTable() {\n    }\n    return TtfLocaTable;\n}());\nexport { TtfLocaTable };\n","/**\n * TtfAppleCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfAppleCmapSubTable = /** @class */ (function () {\n    function TtfAppleCmapSubTable() {\n    }\n    return TtfAppleCmapSubTable;\n}());\nexport { TtfAppleCmapSubTable };\n","/**\n * TtfMicrosoftCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfMicrosoftCmapSubTable = /** @class */ (function () {\n    function TtfMicrosoftCmapSubTable() {\n    }\n    return TtfMicrosoftCmapSubTable;\n}());\nexport { TtfMicrosoftCmapSubTable };\n","/**\n * TtfTrimmedCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfTrimmedCmapSubTable = /** @class */ (function () {\n    function TtfTrimmedCmapSubTable() {\n    }\n    return TtfTrimmedCmapSubTable;\n}());\nexport { TtfTrimmedCmapSubTable };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfGlyphHeader = /** @class */ (function () {\n    function TtfGlyphHeader() {\n    }\n    return TtfGlyphHeader;\n}());\nexport { TtfGlyphHeader };\n","/**\n * Writes data in BigEndian order.\n */\nvar BigEndianWriter = /** @class */ (function () {\n    //Constructors\n    /**\n     * Creates a new writer.\n     */\n    function BigEndianWriter(capacity) {\n        //Constants\n        /**\n         * Size of Int32 type.\n         */\n        this.int32Size = 4;\n        /**\n         * Size of Int16 type.\n         */\n        this.int16Size = 2;\n        /**\n         * Size of long type.\n         */\n        this.int64Size = 8;\n        this.bufferLength = capacity;\n        this.buffer = [];\n    }\n    Object.defineProperty(BigEndianWriter.prototype, \"data\", {\n        //Properties\n        /**\n         * Gets data written to the writer.\n         */\n        get: function () {\n            if (this.buffer.length < this.bufferLength) {\n                var length_1 = this.bufferLength - this.buffer.length;\n                for (var i = 0; i < length_1; i++) {\n                    this.buffer.push(0);\n                }\n            }\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BigEndianWriter.prototype, \"position\", {\n        /// <summary>\n        /// Gets position of the internal buffer.\n        /// </summary>\n        get: function () {\n            if (this.internalPosition === undefined || this.internalPosition === null) {\n                this.internalPosition = 0;\n            }\n            return this.internalPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes short value.\n     */\n    BigEndianWriter.prototype.writeShort = function (value) {\n        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes int value.\n     */\n    BigEndianWriter.prototype.writeInt = function (value) {\n        var i1 = (value & 0xff000000) >> 24;\n        i1 = i1 < 0 ? 256 + i1 : i1;\n        var i2 = (value & 0x00ff0000) >> 16;\n        i2 = i2 < 0 ? 256 + i2 : i2;\n        var i3 = (value & 0x0000ff00) >> 8;\n        i3 = i3 < 0 ? 256 + i3 : i3;\n        var i4 = value & 0x000000ff;\n        i4 = i4 < 0 ? 256 + i4 : i4;\n        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes u int value.\n     */\n    BigEndianWriter.prototype.writeUInt = function (value) {\n        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(buff);\n    };\n    /**\n     * Writes string value.\n     */\n    BigEndianWriter.prototype.writeString = function (value) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var bytes = [];\n        for (var i = 0; i < value.length; i++) {\n            bytes.push(value.charCodeAt(i));\n        }\n        this.flush(bytes);\n    };\n    /**\n     * Writes byte[] value.\n     */\n    BigEndianWriter.prototype.writeBytes = function (value) {\n        this.flush(value);\n    };\n    // //Implementation\n    BigEndianWriter.prototype.flush = function (buff) {\n        if (buff === null) {\n            throw new Error('Argument Null Exception : buff');\n        }\n        var position = this.position;\n        for (var i = 0; i < buff.length; i++) {\n            this.buffer[position] = buff[i];\n            position++;\n        }\n        this.internalPosition += buff.length;\n    };\n    return BigEndianWriter;\n}());\nexport { BigEndianWriter };\n","/**\n * TtfReader.ts class for EJ2-PDF\n */\nimport { TtfTableInfo } from './ttf-table-info';\nimport { Dictionary } from './../../collections/dictionary';\nimport { TtfNameTable } from './ttf-name-table';\nimport { TtfNameRecord } from './ttf-name-record';\nimport { TtfHeadTable } from './ttf-head-table';\nimport { TtfMetrics } from './ttf-metrics';\nimport { TtfHorizontalHeaderTable } from './ttf-horizontal-header-table';\nimport { TtfOS2Table } from './ttf-OS2-Table';\nimport { TtfPostTable } from './ttf-post-table';\nimport { TtfLongHorMetric } from './ttf-long-hor-metric';\nimport { TtfCmapSubTable } from './ttf-cmap-sub-table';\nimport { TtfCmapTable } from './ttf-cmap-table';\nimport { TtfGlyphInfo } from './ttf-glyph-info';\nimport { TtfLocaTable } from './ttf-loca-table';\nimport { TtfAppleCmapSubTable } from './ttf-apple-cmap-sub-table';\nimport { TtfMicrosoftCmapSubTable } from './ttf-microsoft-cmap-sub-table';\nimport { TtfTrimmedCmapSubTable } from './ttf-trimmed-cmap-sub-table';\nimport { TtfGlyphHeader } from './ttf-glyph-header';\nimport { Rectangle } from './../../drawing/pdf-drawing';\nimport { StringTokenizer } from './string-tokenizer';\nimport { TtfCmapFormat, TtfCmapEncoding, TtfPlatformID } from './enum';\nimport { TtfMicrosoftEncodingID, TtfMacintoshEncodingID, TtfCompositeGlyphFlags } from './enum';\nimport { BigEndianWriter } from './../../input-output/big-endian-writer';\nvar TtfReader = /** @class */ (function () {\n    //Constructors\n    function TtfReader(fontData) {\n        this.int32Size = 4;\n        this.isTtcFont = false;\n        this.isMacTtf = false;\n        this.metricsName = '';\n        this.isMacTTF = false;\n        this.missedGlyphs = 0;\n        this.tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n        this.entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n        this.fontData = fontData;\n        this.initialize();\n    }\n    Object.defineProperty(TtfReader.prototype, \"macintosh\", {\n        //Properties\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.macintoshDictionary === null || this.macintoshDictionary === undefined) {\n                this.macintoshDictionary = new Dictionary();\n            }\n            return this.macintoshDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoft\", {\n        /**\n         * Gets glyphs for Microsoft or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.microsoftDictionary === null || this.microsoftDictionary === undefined) {\n                this.microsoftDictionary = new Dictionary();\n            }\n            return this.microsoftDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"macintoshGlyphs\", {\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMacintoshGlyphs === null || this.internalMacintoshGlyphs === undefined) {\n                this.internalMacintoshGlyphs = new Dictionary();\n            }\n            return this.internalMacintoshGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoftGlyphs\", {\n        /**\n         * Gets glyphs for Microsoft Unicode fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMicrosoftGlyphs === null || this.internalMicrosoftGlyphs === undefined) {\n                this.internalMicrosoftGlyphs = new Dictionary();\n            }\n            return this.internalMicrosoftGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    TtfReader.prototype.initialize = function () {\n        if (this.metrics === undefined) {\n            this.metrics = new TtfMetrics();\n        }\n        this.readFontDictionary();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.initializeFontName(nameTable);\n        this.metrics.macStyle = headTable.macStyle;\n    };\n    TtfReader.prototype.readFontDictionary = function () {\n        this.offset = 0;\n        var version = this.checkPreambula();\n        //this.offset += 4;\n        var numTables = this.readInt16(this.offset);\n        var searchRange = this.readInt16(this.offset);\n        var entrySelector = this.readInt16(this.offset);\n        var rangeShift = this.readInt16(this.offset);\n        if (this.tableDirectory === undefined) {\n            this.tableDirectory = new Dictionary();\n        }\n        for (var i = 0; i < numTables; ++i) {\n            var table = new TtfTableInfo();\n            var tableKey = this.readString(this.int32Size);\n            table.checksum = this.readInt32(this.offset);\n            table.offset = this.readInt32(this.offset);\n            table.length = this.readInt32(this.offset);\n            this.tableDirectory.setValue(tableKey, table);\n        }\n        this.lowestPosition = this.offset;\n        if (!this.isTtcFont) {\n            this.fixOffsets();\n        }\n    };\n    TtfReader.prototype.fixOffsets = function () {\n        var minOffset = Number.MAX_VALUE;\n        // Search for a smallest offset and compare it with the lowest position found.\n        var tableKeys = this.tableDirectory.keys();\n        for (var i = 0; i < tableKeys.length; i++) {\n            var value = this.tableDirectory.getValue(tableKeys[i]);\n            var offset = value.offset;\n            if (minOffset > offset) {\n                minOffset = offset;\n                if (minOffset <= this.lowestPosition) {\n                    break;\n                }\n            }\n        }\n        var shift = minOffset - this.lowestPosition;\n        if (shift !== 0) {\n            var table = new Dictionary();\n            for (var i = 0; i < tableKeys.length; i++) {\n                var value = this.tableDirectory.getValue(tableKeys[i]);\n                value.offset -= shift;\n                table.setValue(tableKeys[i], value);\n            }\n            this.tableDirectory = table;\n        }\n    };\n    TtfReader.prototype.checkPreambula = function () {\n        var version = this.readInt32(this.offset);\n        this.isMacTtf = (version === 0x74727565) ? true : false;\n        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n            this.isTtcFont = true;\n            this.offset = 0;\n            var fontTag = this.readString(4);\n            if (fontTag !== 'ttcf') {\n                throw new Error('Can not read TTF font data');\n            }\n            //skip 4\n            this.offset += 4;\n            var ttcIdentificationNumber = this.readInt32(this.offset);\n            if (ttcIdentificationNumber < 0) {\n                throw new Error('Can not read TTF font data');\n            }\n            this.offset = this.readInt32(this.offset);\n            version = this.readInt32(this.offset);\n        }\n        return version;\n    };\n    TtfReader.prototype.readNameTable = function () {\n        var tableInfo = this.getTable('name');\n        this.offset = tableInfo.offset;\n        var table = new TtfNameTable();\n        table.formatSelector = this.readUInt16(this.offset);\n        table.recordsCount = this.readUInt16(this.offset);\n        table.offset = this.readUInt16(this.offset);\n        table.nameRecords = [];\n        var recordSize = 12;\n        var position = this.offset;\n        for (var i = 0; i < table.recordsCount; i++) {\n            this.offset = position;\n            var record = new TtfNameRecord();\n            record.platformID = this.readUInt16(this.offset);\n            record.encodingID = this.readUInt16(this.offset);\n            record.languageID = this.readUInt16(this.offset);\n            record.nameID = this.readUInt16(this.offset);\n            record.length = this.readUInt16(this.offset);\n            record.offset = this.readUInt16(this.offset);\n            this.offset = tableInfo.offset + table.offset + record.offset;\n            var unicode = (record.platformID === 0 || record.platformID === 3);\n            record.name = this.readString(record.length, unicode);\n            table.nameRecords[i] = record;\n            position += recordSize;\n        }\n        return table;\n    };\n    TtfReader.prototype.readHeadTable = function () {\n        var tableInfo = this.getTable('head');\n        this.offset = tableInfo.offset;\n        var table = new TtfHeadTable();\n        table.version = this.readFixed(this.offset);\n        table.fontRevision = this.readFixed(this.offset);\n        table.checkSumAdjustment = this.readUInt32(this.offset);\n        table.magicNumber = this.readUInt32(this.offset);\n        table.flags = this.readUInt16(this.offset);\n        table.unitsPerEm = this.readUInt16(this.offset);\n        table.created = this.readInt64(this.offset);\n        table.modified = this.readInt64(this.offset);\n        table.xMin = this.readInt16(this.offset);\n        table.yMin = this.readInt16(this.offset);\n        table.xMax = this.readInt16(this.offset);\n        table.yMax = this.readInt16(this.offset);\n        table.macStyle = this.readUInt16(this.offset);\n        table.lowestReadableSize = this.readUInt16(this.offset);\n        table.fontDirectionHint = this.readInt16(this.offset);\n        table.indexToLocalFormat = this.readInt16(this.offset);\n        table.glyphDataFormat = this.readInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readHorizontalHeaderTable = function () {\n        var tableInfo = this.getTable('hhea');\n        this.offset = tableInfo.offset;\n        var table = new TtfHorizontalHeaderTable();\n        table.version = this.readFixed(this.offset);\n        table.ascender = this.readInt16(this.offset);\n        table.descender = this.readInt16(this.offset);\n        table.lineGap = this.readInt16(this.offset);\n        table.advanceWidthMax = this.readUInt16(this.offset);\n        table.minLeftSideBearing = this.readInt16(this.offset);\n        table.minRightSideBearing = this.readInt16(this.offset);\n        table.xMaxExtent = this.readInt16(this.offset);\n        table.caretSlopeRise = this.readInt16(this.offset);\n        table.caretSlopeRun = this.readInt16(this.offset);\n        //skip 2 * 5\n        this.offset += 10;\n        table.metricDataFormat = this.readInt16(this.offset);\n        table.numberOfHMetrics = this.readUInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readOS2Table = function () {\n        var tableInfo = this.getTable('OS/2');\n        this.offset = tableInfo.offset;\n        var table = new TtfOS2Table();\n        table.version = this.readUInt16(this.offset);\n        table.xAvgCharWidth = this.readInt16(this.offset);\n        table.usWeightClass = this.readUInt16(this.offset);\n        table.usWidthClass = this.readUInt16(this.offset);\n        table.fsType = this.readInt16(this.offset);\n        table.ySubscriptXSize = this.readInt16(this.offset);\n        table.ySubscriptYSize = this.readInt16(this.offset);\n        table.ySubscriptXOffset = this.readInt16(this.offset);\n        table.ySubscriptYOffset = this.readInt16(this.offset);\n        table.ySuperscriptXSize = this.readInt16(this.offset);\n        table.ySuperscriptYSize = this.readInt16(this.offset);\n        table.ySuperscriptXOffset = this.readInt16(this.offset);\n        table.ySuperscriptYOffset = this.readInt16(this.offset);\n        table.yStrikeoutSize = this.readInt16(this.offset);\n        table.yStrikeoutPosition = this.readInt16(this.offset);\n        table.sFamilyClass = this.readInt16(this.offset);\n        table.panose = this.readBytes(10);\n        table.ulUnicodeRange1 = this.readUInt32(this.offset);\n        table.ulUnicodeRange2 = this.readUInt32(this.offset);\n        table.ulUnicodeRange3 = this.readUInt32(this.offset);\n        table.ulUnicodeRange4 = this.readUInt32(this.offset);\n        table.vendorIdentifier = this.readBytes(4);\n        table.fsSelection = this.readUInt16(this.offset);\n        table.usFirstCharIndex = this.readUInt16(this.offset);\n        table.usLastCharIndex = this.readUInt16(this.offset);\n        table.sTypoAscender = this.readInt16(this.offset);\n        table.sTypoDescender = this.readInt16(this.offset);\n        table.sTypoLineGap = this.readInt16(this.offset);\n        table.usWinAscent = this.readUInt16(this.offset);\n        table.usWinDescent = this.readUInt16(this.offset);\n        table.ulCodePageRange1 = this.readUInt32(this.offset);\n        table.ulCodePageRange2 = this.readUInt32(this.offset);\n        if (table.version > 1) {\n            table.sxHeight = this.readInt16(this.offset);\n            table.sCapHeight = this.readInt16(this.offset);\n            table.usDefaultChar = this.readUInt16(this.offset);\n            table.usBreakChar = this.readUInt16(this.offset);\n            table.usMaxContext = this.readUInt16(this.offset);\n        }\n        else {\n            table.sxHeight = 0;\n            table.sCapHeight = 0;\n            table.usDefaultChar = 0;\n            table.usBreakChar = 0;\n            table.usMaxContext = 0;\n        }\n        return table;\n    };\n    TtfReader.prototype.readPostTable = function () {\n        var tableInfo = this.getTable('post');\n        this.offset = tableInfo.offset;\n        var table = new TtfPostTable();\n        table.formatType = this.readFixed(this.offset);\n        table.italicAngle = this.readFixed(this.offset);\n        table.underlinePosition = this.readInt16(this.offset);\n        table.underlineThickness = this.readInt16(this.offset);\n        table.isFixedPitch = this.readUInt32(this.offset);\n        table.minType42 = this.readUInt32(this.offset);\n        table.maxType42 = this.readUInt32(this.offset);\n        table.minType1 = this.readUInt32(this.offset);\n        table.maxType1 = this.readUInt32(this.offset);\n        return table;\n    };\n    /**\n     * Reads Width of the glyphs.\n     */\n    TtfReader.prototype.readWidthTable = function (glyphCount, unitsPerEm) {\n        var tableInfo = this.getTable('hmtx');\n        this.offset = tableInfo.offset;\n        var width = [];\n        for (var i = 0; i < glyphCount; i++) {\n            var glyph = new TtfLongHorMetric();\n            glyph.advanceWidth = this.readUInt16(this.offset);\n            glyph.lsb = this.readInt16(this.offset);\n            var glyphWidth = glyph.advanceWidth * 1000 / unitsPerEm;\n            width.push(Math.floor(glyphWidth));\n        }\n        return width;\n    };\n    /**\n     * Reads the cmap table.\n     */\n    TtfReader.prototype.readCmapTable = function () {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset;\n        var table = new TtfCmapTable();\n        table.version = this.readUInt16(this.offset);\n        table.tablesCount = this.readUInt16(this.offset);\n        var position = this.offset;\n        var subTables = [];\n        for (var i = 0; i < table.tablesCount; i++) {\n            this.offset = position;\n            var subTable = new TtfCmapSubTable();\n            subTable.platformID = this.readUInt16(this.offset);\n            subTable.encodingID = this.readUInt16(this.offset);\n            subTable.offset = this.readUInt32(this.offset);\n            position = this.offset;\n            this.readCmapSubTable(subTable);\n            subTables[i] = subTable;\n        }\n        return subTables;\n    };\n    /**\n     * Reads the cmap sub table.\n     */\n    TtfReader.prototype.readCmapSubTable = function (subTable) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var format = this.readUInt16(this.offset);\n        var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n        var platform = (encoding === TtfCmapEncoding.Macintosh) ? TtfPlatformID.Macintosh : TtfPlatformID.Microsoft;\n        if (encoding !== TtfCmapEncoding.Unknown) {\n            switch (format) {\n                case TtfCmapFormat.Apple:\n                    this.readAppleCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Microsoft:\n                    this.readMicrosoftCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Trimmed:\n                    this.readTrimmedCmapTable(subTable, encoding);\n                    break;\n            }\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readAppleCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfAppleCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        if (this.maxMacIndex === null || this.maxMacIndex === undefined) {\n            this.maxMacIndex = 0;\n        }\n        for (var i = 0; i < 256; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readByte(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readMicrosoftCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var collection = (encoding === TtfCmapEncoding.Unicode) ? this.microsoft : this.macintosh;\n        var table = new TtfMicrosoftCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.segCountX2 = this.readUInt16(this.offset);\n        table.searchRange = this.readUInt16(this.offset);\n        table.entrySelector = this.readUInt16(this.offset);\n        table.rangeShift = this.readUInt16(this.offset);\n        var segCount = table.segCountX2 / 2;\n        table.endCount = this.readUshortArray(segCount);\n        table.reservedPad = this.readUInt16(this.offset);\n        table.startCount = this.readUshortArray(segCount);\n        table.idDelta = this.readUshortArray(segCount);\n        table.idRangeOffset = this.readUshortArray(segCount);\n        var length = (table.length / 2 - 8) - (segCount * 4);\n        table.glyphID = this.readUshortArray(length);\n        // Process glyphIdArray array.\n        var codeOffset = 0;\n        var index = 0;\n        for (var j = 0; j < segCount; j++) {\n            for (var k = table.startCount[j]; k <= table.endCount[j] && k !== 65535; k++) {\n                if (table.idRangeOffset[j] === 0) {\n                    codeOffset = (k + table.idDelta[j]) & 65535;\n                }\n                else {\n                    index = j + table.idRangeOffset[j] / 2 - segCount + k - table.startCount[j];\n                    if (index >= table.glyphID.length) {\n                        continue;\n                    }\n                    codeOffset = (table.glyphID[index] + table.idDelta[j]) & 65535;\n                }\n                var glyph = new TtfGlyphInfo();\n                glyph.index = codeOffset;\n                glyph.width = this.getWidth(glyph.index);\n                var id = (encoding === TtfCmapEncoding.Symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;\n                glyph.charCode = id;\n                collection.setValue(id, glyph);\n                this.addGlyph(glyph, encoding);\n            }\n        }\n    };\n    /**\n     * Reads Trimed cmap table.\n     */\n    TtfReader.prototype.readTrimmedCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfTrimmedCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.firstCode = this.readUInt16(this.offset);\n        table.entryCount = this.readUInt16(this.offset);\n        for (var i = 0; i < table.entryCount; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readUInt16(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i + table.firstCode;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    TtfReader.prototype.initializeFontName = function (nameTable) {\n        for (var i = 0; i < nameTable.recordsCount; i++) {\n            var record = nameTable.nameRecords[i];\n            if (record.nameID === 1) {\n                //font family\n                this.metrics.fontFamily = record.name;\n            }\n            else if (record.nameID === 6) {\n                //post script name\n                this.metrics.postScriptName = record.name;\n            }\n            /* tslint:disable */\n            if (this.metrics.fontFamily !== null && this.metrics.fontFamily !== undefined && this.metrics.postScriptName !== null && this.metrics.postScriptName !== undefined) {\n                break;\n            }\n            /* tslint:disable */\n        }\n    };\n    TtfReader.prototype.getTable = function (name) {\n        // if (name === null) {\n        //     throw new Error('Argument Null Exception : name');\n        // }\n        var table = new TtfTableInfo();\n        var obj;\n        if (this.tableDirectory.containsKey(name)) {\n            obj = this.tableDirectory.getValue(name);\n        }\n        if (obj !== null && obj !== undefined) {\n            table = obj;\n        }\n        return table;\n    };\n    /**\n     * Returns width of the glyph.\n     */\n    TtfReader.prototype.getWidth = function (glyphCode) {\n        glyphCode = (glyphCode < this.width.length) ? glyphCode : this.width.length - 1;\n        return this.width[glyphCode];\n    };\n    /**\n     * Gets CMAP encoding based on platform ID and encoding ID.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getCmapEncoding = function (platformID, encodingID) {\n        var format = TtfCmapEncoding.Unknown;\n        if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Undefined) {\n            // When building a symbol font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Symbol;\n        }\n        else if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Unicode) {\n            // When building a Unicode font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 1.\n            format = TtfCmapEncoding.Unicode;\n        }\n        else if (platformID == TtfPlatformID.Macintosh && encodingID == TtfMacintoshEncodingID.Roman) {\n            // When building a font that will be used on the Macintosh,\n            // the platform ID should be 1 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Macintosh;\n        }\n        return format;\n    };\n    /* tslint:enable */\n    /**\n     * Adds glyph to the collection.\n     */\n    TtfReader.prototype.addGlyph = function (glyph, encoding) {\n        var collection = null;\n        switch (encoding) {\n            case TtfCmapEncoding.Unicode:\n                collection = this.microsoftGlyphs;\n                break;\n            case TtfCmapEncoding.Macintosh:\n            case TtfCmapEncoding.Symbol:\n                collection = this.macintoshGlyphs;\n                break;\n        }\n        collection.setValue(glyph.index, glyph);\n    };\n    /**\n     * Initializes metrics.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n        /* tslint:enable */\n        // if (cmapTables === null) {\n        //     throw new Error('ArgumentNullException : cmapTables');\n        // }\n        this.initializeFontName(nameTable);\n        // Get font encoding.\n        var bSymbol = false;\n        for (var i = 0; i < cmapTables.length; i++) {\n            var subTable = cmapTables[i];\n            var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n            if (encoding === TtfCmapEncoding.Symbol) {\n                bSymbol = true;\n                break;\n            }\n        }\n        this.metrics.isSymbol = bSymbol;\n        this.metrics.macStyle = headTable.macStyle;\n        this.metrics.isFixedPitch = (postTable.isFixedPitch !== 0);\n        this.metrics.italicAngle = postTable.italicAngle;\n        var factor = 1000 / headTable.unitsPerEm;\n        this.metrics.winAscent = os2Table.sTypoAscender * factor;\n        this.metrics.macAscent = horizontalHeadTable.ascender * factor;\n        //m_metrics.MacAscent = os2Table.UsWinAscent * factor;\n        // NOTE: This is stange workaround. The value is good if os2Table.SCapHeight != 0, otherwise it should be properly computed.\n        this.metrics.capHeight = (os2Table.sCapHeight !== 0) ? os2Table.sCapHeight : 0.7 * headTable.unitsPerEm * factor;\n        this.metrics.winDescent = os2Table.sTypoDescender * factor;\n        this.metrics.macDescent = horizontalHeadTable.descender * factor;\n        //m_metrics.MacDescent = -os2Table.UsWinDescent * factor;\n        this.metrics.leading = (os2Table.sTypoAscender - os2Table.sTypoDescender + os2Table.sTypoLineGap) * factor;\n        this.metrics.lineGap = Math.ceil(horizontalHeadTable.lineGap * factor);\n        var left = headTable.xMin * factor;\n        var top = Math.ceil(this.metrics.macAscent + this.metrics.lineGap);\n        var right = headTable.xMax * factor;\n        var bottom = this.metrics.macDescent;\n        this.metrics.fontBox = new Rectangle(left, top, right, bottom);\n        // NOTE: Strange!\n        this.metrics.stemV = 80;\n        this.metrics.widthTable = this.updateWidth();\n        this.metrics.contains = this.tableDirectory.containsKey('CFF');\n        this.metrics.subScriptSizeFactor = headTable.unitsPerEm / os2Table.ySubscriptYSize;\n        this.metrics.superscriptSizeFactor = headTable.unitsPerEm / os2Table.ySuperscriptYSize;\n    };\n    /**\n     * Updates chars structure which is used in the case of ansi encoding (256 bytes).\n     */\n    TtfReader.prototype.updateWidth = function () {\n        var count = 256;\n        var bytes = [];\n        if (this.metrics.isSymbol) {\n            for (var i = 0; i < count; i++) {\n                var glyphInfo = this.getGlyph(String.fromCharCode(i));\n                bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n            }\n        }\n        else {\n            var byteToProcess = [];\n            var unknown = '?';\n            var space = String.fromCharCode(32);\n            for (var i = 0; i < count; i++) {\n                byteToProcess[0] = i;\n                var text = this.getString(byteToProcess, 0, byteToProcess.length);\n                var ch = (text.length > 0) ? text[0] : unknown;\n                var glyphInfo = this.getGlyph(ch);\n                if (!glyphInfo.empty) {\n                    bytes[i] = glyphInfo.width;\n                }\n                else {\n                    glyphInfo = this.getGlyph(space);\n                    bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n                }\n            }\n        }\n        return bytes;\n    };\n    /**\n     * Returns default glyph.\n     */\n    TtfReader.prototype.getDefaultGlyph = function () {\n        var glyph = this.getGlyph(StringTokenizer.whiteSpace);\n        return glyph;\n    };\n    /**\n     * Reads unicode string from byte array.\n     */\n    TtfReader.prototype.getString = function (byteToProcess, start, length) {\n        var result = '';\n        for (var index = 0; index < length; index++) {\n            result += String.fromCharCode(byteToProcess[index + start]);\n        }\n        return result;\n    };\n    /**\n     * Reads loca table.\n     */\n    TtfReader.prototype.readLocaTable = function (bShort) {\n        var tableInfo = this.getTable('loca');\n        this.offset = tableInfo.offset;\n        var table = new TtfLocaTable();\n        var buffer = null;\n        if (bShort) {\n            var len = tableInfo.length / 2;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt16(this.offset) * 2;\n            }\n        }\n        else {\n            var len = tableInfo.length / 4;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt32(this.offset);\n            }\n        }\n        table.offsets = buffer;\n        return table;\n    };\n    /**\n     * Updates hash table of used glyphs.\n     */\n    TtfReader.prototype.updateGlyphChars = function (glyphChars, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Add zero key.\n        if (!glyphChars.containsKey(0)) {\n            glyphChars.setValue(0, 0);\n        }\n        var clone = new Dictionary();\n        var glyphCharKeys = glyphChars.keys();\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            clone.setValue(glyphCharKeys[i], glyphChars.getValue(glyphCharKeys[i]));\n        }\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            var nextKey = glyphCharKeys[i];\n            this.processCompositeGlyph(glyphChars, nextKey, locaTable);\n        }\n    };\n    /**\n     * Checks if glyph is composite or not.\n     */\n    TtfReader.prototype.processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Is in range.\n        if (glyph < locaTable.offsets.length - 1) {\n            var glyphOffset = locaTable.offsets[glyph];\n            if (glyphOffset !== locaTable.offsets[glyph + 1]) {\n                var tableInfo = this.getTable('glyf');\n                this.offset = tableInfo.offset + glyphOffset;\n                var glyphHeader = new TtfGlyphHeader();\n                glyphHeader.numberOfContours = this.readInt16(this.offset);\n                glyphHeader.xMin = this.readInt16(this.offset);\n                glyphHeader.yMin = this.readInt16(this.offset);\n                glyphHeader.xMax = this.readInt16(this.offset);\n                glyphHeader.yMax = this.readInt16(this.offset);\n                // Glyph is composite.\n                if (glyphHeader.numberOfContours < 0) {\n                    var skipBytes = 0;\n                    var entry = true;\n                    while (entry) {\n                        var flags = this.readUInt16(this.offset);\n                        var glyphIndex = this.readUInt16(this.offset);\n                        if (!glyphChars.containsKey(glyphIndex)) {\n                            glyphChars.setValue(glyphIndex, 0);\n                        }\n                        if ((flags & TtfCompositeGlyphFlags.MoreComponents) === 0) {\n                            break;\n                        }\n                        skipBytes = ((flags & TtfCompositeGlyphFlags.Arg1And2AreWords) !== 0) ? 4 : 2;\n                        if ((flags & TtfCompositeGlyphFlags.WeHaveScale) !== 0) {\n                            skipBytes += 2;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveAnXyScale) !== 0) {\n                            skipBytes += 4;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveTwoByTwo) !== 0) {\n                            skipBytes += 2 * 4;\n                        }\n                        this.offset += skipBytes;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Creates new glyph tables based on chars that are used for output.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n        /* tslint:enable */\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        newLocaTable = [];\n        // Sorting used glyphs keys.\n        var activeGlyphs = glyphChars.keys();\n        activeGlyphs.sort(function (a, b) { return a - b; });\n        var glyphSize = 0;\n        for (var i = 0; i < activeGlyphs.length; i++) {\n            var glyphIndex = activeGlyphs[i];\n            if (locaTable.offsets.length > 0) {\n                glyphSize += locaTable.offsets[glyphIndex + 1] - locaTable.offsets[glyphIndex];\n            }\n        }\n        var glyphSizeAligned = this.align(glyphSize);\n        newGlyphTable = [];\n        for (var i = 0; i < glyphSizeAligned; i++) {\n            newGlyphTable.push(0);\n        }\n        var nextGlyphOffset = 0;\n        var nextGlyphIndex = 0;\n        var table = this.getTable('glyf');\n        // Creating NewLocaTable - that would hold offsets for filtered glyphs.\n        for (var i = 0; i < locaTable.offsets.length; i++) {\n            newLocaTable.push(nextGlyphOffset);\n            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[nextGlyphIndex] === i) {\n                ++nextGlyphIndex;\n                newLocaTable[i] = nextGlyphOffset;\n                var oldGlyphOffset = locaTable.offsets[i];\n                var oldNextGlyphOffset = locaTable.offsets[i + 1] - oldGlyphOffset;\n                if (oldNextGlyphOffset > 0) {\n                    this.offset = table.offset + oldGlyphOffset;\n                    var result = this.read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n                    newGlyphTable = result.buffer;\n                    nextGlyphOffset += oldNextGlyphOffset;\n                }\n            }\n        }\n        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };\n    };\n    /**\n     * Updates new Loca table.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.updateLocaTable = function (newLocaTable, bLocaIsShort, newLocaTableOut) {\n        /* tslint:enable */\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTable');\n        }\n        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;\n        var count = this.align(size);\n        //BigEndianWiter\n        var writer = new BigEndianWriter(count);\n        for (var i = 0; i < newLocaTable.length; i++) {\n            var value = newLocaTable[i];\n            if (bLocaIsShort) {\n                value /= 2;\n                writer.writeShort(value);\n            }\n            else {\n                writer.writeInt(value);\n            }\n        }\n        return { newLocaUpdated: writer.data, newLocaSize: size };\n    };\n    /**\n     * Aligns number to be divisible on 4.\n     */\n    TtfReader.prototype.align = function (value) {\n        return (value + 3) & (~3);\n    };\n    /**\n     * Returns font program data.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var result = this.getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n        var fontProgramLength = result.fontProgramLength;\n        var numTables = result.numTables;\n        var writer = new BigEndianWriter(fontProgramLength);\n        writer.writeInt(0x10000);\n        writer.writeShort(numTables);\n        var entrySelector = this.entrySelectors[numTables];\n        writer.writeShort((1 << (entrySelector & 31)) * 16);\n        writer.writeShort(entrySelector);\n        writer.writeShort((numTables - (1 << (entrySelector & 31))) * 16);\n        // Writing to destination buffer - checksums && sizes of used tables.\n        this.writeCheckSums(writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n        // // Writing to destination buffer - used glyphs.\n        this.writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n        return writer.data;\n    };\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgramLength = function (newLocaTableOut, newGlyphTable, numTables) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        // glyf and loca are used by default;\n        numTables = 2;\n        var tableNames = this.tableNames;\n        var fontProgramLength = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            if (tableName !== 'glyf' && tableName !== 'loca') {\n                var table = this.getTable(tableName);\n                if (!table.empty) {\n                    ++numTables;\n                    fontProgramLength += this.align(table.length);\n                }\n            }\n        }\n        fontProgramLength += newLocaTableOut.length;\n        fontProgramLength += newGlyphTable.length;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        fontProgramLength += usedTablesSize;\n        return { fontProgramLength: fontProgramLength, numTables: numTables };\n    };\n    /**\n     * Writing to destination buffer - checksums and sizes of used tables.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.writeCheckSums = function (writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        var nextTableSize = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            writer.writeString(tableName);\n            if (tableName === 'glyf') {\n                var checksum = this.calculateCheckSum(newGlyphTable);\n                writer.writeInt(checksum);\n                nextTableSize = glyphTableSize;\n            }\n            else if (tableName === 'loca') {\n                var checksum = this.calculateCheckSum(newLocaTableOut);\n                writer.writeInt(checksum);\n                nextTableSize = locaTableSize;\n            }\n            else {\n                writer.writeInt(tableInfo.checksum);\n                nextTableSize = tableInfo.length;\n            }\n            writer.writeUInt(usedTablesSize);\n            writer.writeUInt(nextTableSize);\n            usedTablesSize += this.align(nextTableSize);\n        }\n    };\n    /**\n     * Gets checksum from source buffer.\n     */\n    TtfReader.prototype.calculateCheckSum = function (bytes) {\n        if (bytes === null) {\n            throw new Error('Argument Null Exception : bytes');\n        }\n        var pos = 0;\n        var byte1 = 0;\n        var byte2 = 0;\n        var byte3 = 0;\n        var byte4 = 0;\n        for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n            byte4 += (bytes[pos++] & 255);\n            byte3 += (bytes[pos++] & 255);\n            byte2 += (bytes[pos++] & 255);\n            byte1 += (bytes[pos++] & 255);\n        }\n        var result = byte1;\n        result += (byte2 << 8);\n        result += (byte3 << 16);\n        result += (byte4 << 24);\n        return result;\n    };\n    /**\n     * Writing to destination buffer - used glyphs.\n     */\n    TtfReader.prototype.writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            if (tableName === 'glyf') {\n                writer.writeBytes(newGlyphTable);\n            }\n            else if (tableName === 'loca') {\n                writer.writeBytes(newLocaTable);\n            }\n            else {\n                var count = this.align(tableInfo.length);\n                var buff = [];\n                for (var i_1 = 0; i_1 < count; i_1++) {\n                    buff.push(0);\n                }\n                this.offset = tableInfo.offset;\n                var result = this.read(buff, 0, tableInfo.length);\n                writer.writeBytes(result.buffer);\n            }\n        }\n    };\n    //public methods\n    /**\n     * Sets position value of font data.\n     */\n    TtfReader.prototype.setOffset = function (offset) {\n        this.offset = offset;\n    };\n    /**\n     * Creates font Internals\n     * @private\n     */\n    TtfReader.prototype.createInternals = function () {\n        this.metrics = new TtfMetrics();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.bIsLocaShort = (headTable.indexToLocalFormat === 0);\n        var horizontalHeadTable = this.readHorizontalHeaderTable();\n        var os2Table = this.readOS2Table();\n        var postTable = this.readPostTable();\n        this.width = this.readWidthTable(horizontalHeadTable.numberOfHMetrics, headTable.unitsPerEm);\n        var subTables = this.readCmapTable();\n        this.initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n    };\n    TtfReader.prototype.getGlyph = function (charCode) {\n        if (typeof charCode === 'number') {\n            var obj1 = null;\n            if (!this.metrics.isSymbol && this.microsoftGlyphs != null) {\n                if (this.microsoftGlyphs.containsKey(charCode)) {\n                    obj1 = this.microsoftGlyphs.getValue(charCode);\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintoshGlyphs != null) {\n                if (this.macintoshGlyphs.containsKey(charCode)) {\n                    obj1 = this.macintoshGlyphs.getValue(charCode);\n                }\n            }\n            var glyph = (obj1 != null) ? obj1 : this.getDefaultGlyph();\n            return glyph;\n        }\n        else {\n            var obj = null;\n            var code = charCode.charCodeAt(0);\n            if (!this.metrics.isSymbol && this.microsoft !== null) {\n                if (this.microsoft.containsKey(code)) {\n                    obj = this.microsoft.getValue(code);\n                    if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                        this.isFontPresent = true;\n                    }\n                }\n                else if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                    this.isFontPresent = false;\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintosh !== null || this.isMacTTF) {\n                // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n                if (this.maxMacIndex !== 0) {\n                    code %= this.maxMacIndex + 1;\n                }\n                else {\n                    code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);\n                }\n                if (this.macintosh.containsKey(code)) {\n                    obj = this.macintosh.getValue(code);\n                    this.isFontPresent = true;\n                }\n            }\n            // Fix for StackOverFlow exception in XPS to PDF converter\n            if (charCode === StringTokenizer.whiteSpace && obj === null) {\n                obj = new TtfGlyphInfo();\n            }\n            var glyph = (obj !== null) ? obj : this.getDefaultGlyph();\n            return glyph;\n        }\n    };\n    /**\n     * Gets hash table with chars indexed by glyph index.\n     */\n    TtfReader.prototype.getGlyphChars = function (chars) {\n        if (chars === null || chars === undefined) {\n            throw new Error('Argument Null Exception : chars');\n        }\n        var dictionary = new Dictionary();\n        var charKeys = chars.keys();\n        for (var i = 0; i < charKeys.length; i++) {\n            var ch = charKeys[i];\n            var glyph = this.getGlyph(ch);\n            if (!glyph.empty) {\n                dictionary.setValue(glyph.index, ch.charCodeAt(0));\n            }\n        }\n        return dictionary;\n    };\n    /**\n     * Gets all glyphs.\n     */\n    TtfReader.prototype.getAllGlyphs = function () {\n        var allGlyphInfo = [];\n        var info = new TtfGlyphInfo();\n        var index = 0;\n        for (var i = 0; i < this.width.length; i++) {\n            var width = this.width[i];\n            info.index = index;\n            info.width = width;\n            allGlyphInfo.push(info);\n            index++;\n        }\n        return allGlyphInfo;\n    };\n    /**\n     * Reads a font's program.\n     * @private\n     */\n    TtfReader.prototype.readFontProgram = function (chars) {\n        var glyphChars = this.getGlyphChars(chars);\n        var locaTable = this.readLocaTable(this.bIsLocaShort);\n        if (glyphChars.size() < chars.size()) {\n            this.missedGlyphs = chars.size() - glyphChars.size();\n        }\n        this.updateGlyphChars(glyphChars, locaTable);\n        /* tslint:disable */\n        var result1 = this.generateGlyphTable(glyphChars, locaTable, null, null);\n        /* tslint:enable */\n        var glyphTableSize = result1.glyphTableSize;\n        var newLocaTable = result1.newLocaTable;\n        var newGlyphTable = result1.newGlyphTable;\n        var result2 = this.updateLocaTable(newLocaTable, this.bIsLocaShort, null);\n        var newLocaSize = result2.newLocaSize;\n        var newLocaUpdated = result2.newLocaUpdated;\n        var fontProgram = this.getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n        return fontProgram;\n    };\n    /**\n     * Reconverts string to be in proper format saved into PDF file.\n     */\n    TtfReader.prototype.convertString = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        var glyph = '';\n        var i = 0;\n        for (var k = 0; k < text.length; k++) {\n            var ch = text[k];\n            var glyphInfo = this.getGlyph(ch);\n            if (!glyphInfo.empty) {\n                glyph += String.fromCharCode(glyphInfo.index);\n                i++;\n            }\n        }\n        return glyph;\n    };\n    /**\n     * Gets char width.\n     */\n    TtfReader.prototype.getCharWidth = function (code) {\n        var glyphInfo = this.getGlyph(code);\n        glyphInfo = (!glyphInfo.empty) ? glyphInfo : this.getDefaultGlyph();\n        var codeWidth = (!glyphInfo.empty) ? glyphInfo.width : 0;\n        return codeWidth;\n    };\n    TtfReader.prototype.readString = function (length, isUnicode) {\n        if (isUnicode === undefined) {\n            return this.readString(length, false);\n        }\n        else {\n            //let buffer : number[] = this.readBytes(length);\n            var result = '';\n            if (isUnicode) {\n                for (var i = 0; i < length; i++) {\n                    if (i % 2 !== 0) {\n                        result += String.fromCharCode(this.fontData[this.offset]);\n                    }\n                    this.offset += 1;\n                }\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    result += String.fromCharCode(this.fontData[this.offset]);\n                    this.offset += 1;\n                }\n            }\n            return result;\n        }\n    };\n    TtfReader.prototype.readFixed = function (offset) {\n        var integer = this.readInt16(offset);\n        var sFraction = this.readInt16(offset + 2);\n        var fraction = sFraction / 16384;\n        return integer + fraction;\n    };\n    TtfReader.prototype.readInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n    };\n    TtfReader.prototype.readUInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);\n    };\n    // private readInt16(offset : number) : number {\n    //     let result : number = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n    //     this.offset += 2;\n    //     return result;\n    // }\n    TtfReader.prototype.readInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n        result = result & (1 << 15) ? result - 0x10000 : result;\n        this.offset += 2;\n        return result;\n    };\n    TtfReader.prototype.readInt64 = function (offset) {\n        var low = this.readInt32(offset + 4);\n        var n = this.readInt32(offset) * 4294967296.0 + low;\n        if (low < 0) {\n            n += 4294967296;\n        }\n        return n;\n    };\n    TtfReader.prototype.readUInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) | this.fontData[offset + 1];\n        this.offset += 2;\n        return result;\n    };\n    /**\n     * Reads ushort array.\n     */\n    TtfReader.prototype.readUshortArray = function (length) {\n        var buffer = [];\n        for (var i = 0; i < length; i++) {\n            buffer[i] = this.readUInt16(this.offset);\n        }\n        return buffer;\n    };\n    TtfReader.prototype.readBytes = function (length) {\n        var result = [];\n        for (var i = 0; i < length; i++) {\n            result.push(this.fontData[this.offset]);\n            this.offset += 1;\n        }\n        return result;\n    };\n    TtfReader.prototype.readByte = function (offset) {\n        var result = this.fontData[offset];\n        this.offset += 1;\n        return result;\n    };\n    /**\n     * Reads bytes to array in BigEndian order.\n     * @private\n     */\n    TtfReader.prototype.read = function (buffer, index, count) {\n        if (buffer === null) {\n            throw new Error('Argument Null Exception : buffer');\n        }\n        var written = 0;\n        var read = 0;\n        do {\n            for (var i = 0; (i < count - written) && (this.offset + i < this.fontData.length); i++) {\n                buffer[index + i] = this.fontData[this.offset + i];\n            }\n            read = count - written;\n            this.offset += read;\n            written += read;\n        } while (written < count);\n        return { buffer: buffer, written: written };\n    };\n    return TtfReader;\n}());\nexport { TtfReader };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFont } from './pdf-font';\nimport { PdfSubSuperScript } from './enum';\nimport { PdfArray } from './../../primitives/pdf-array';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar PdfFontMetrics = /** @class */ (function () {\n    function PdfFontMetrics() {\n        /**\n         * `Line gap`.\n         * @private\n         */\n        this.lineGap = 0;\n    }\n    //  Public methods\n    /**\n     * Returns `ascent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getAscent = function (format) {\n        var returnValue = this.ascent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `descent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getDescent = function (format) {\n        var returnValue = this.descent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `Line gap` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getLineGap = function (format) {\n        var returnValue = this.lineGap * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `height` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            var font = clearTypeFonts[index];\n            clearTypeFontCollection.push(font);\n        }\n        if (this.getDescent(format) < 0) {\n            // if ((clearTypeFontCollection.indexOf(this.name.toLowerCase()) !== -1) && !this.isUnicodeFont) {\n            //     height = (this.GetAscent(format) - this.GetDescent(format) - this.GetLineGap(format));\n            // } else {\n            height = (this.getAscent(format) - this.getDescent(format) + this.getLineGap(format));\n            // }\n        }\n        else {\n            height = (this.getAscent(format) + this.getDescent(format) + this.getLineGap(format));\n        }\n        return height;\n    };\n    /**\n     * Calculates `size` of the font depending on the subscript/superscript value.\n     * @private\n     */\n    PdfFontMetrics.prototype.getSize = function (format) {\n        var size = this.size;\n        if (format != null) {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.SubScript:\n                    size /= this.subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.SuperScript:\n                    size /= this.superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    /**\n     * `Clones` the metrics.\n     * @private\n     */\n    PdfFontMetrics.prototype.clone = function () {\n        var metrics = this;\n        metrics.widthTable = WidthTable.clone();\n        return metrics;\n    };\n    Object.defineProperty(PdfFontMetrics.prototype, \"widthTable\", {\n        //  Properies\n        /**\n         * Gets or sets the `width table`.\n         * @private\n         */\n        get: function () {\n            return this.internalWidthTable;\n        },\n        set: function (value) {\n            this.internalWidthTable = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFontMetrics;\n}());\nexport { PdfFontMetrics };\nvar WidthTable = /** @class */ (function () {\n    function WidthTable() {\n    }\n    /**\n     * Static `clones` this instance of the WidthTable class.\n     * @private\n     */\n    WidthTable.clone = function () {\n        return null;\n    };\n    return WidthTable;\n}());\nexport { WidthTable };\nvar StandardWidthTable = /** @class */ (function (_super) {\n    __extends(StandardWidthTable, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StandardWidthTable` class.\n     * @private\n     */\n    function StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        if (widths == null) {\n            throw new Error('ArgumentNullException:widths');\n        }\n        _this.widths = widths;\n        return _this;\n    }\n    //Properties\n    /**\n     * Gets the `32 bit number` at the specified index.\n     * @private\n     */\n    StandardWidthTable.prototype.items = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('ArgumentOutOfRangeException:index, The character is not supported by the font.');\n        }\n        var result = this.widths[index];\n        return result;\n    };\n    Object.defineProperty(StandardWidthTable.prototype, \"length\", {\n        /**\n         * Gets the `length` of the internal array.\n         * @private\n         */\n        get: function () {\n            return this.widths.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * `Clones` this instance of the WidthTable class.\n     * @private\n     */\n    StandardWidthTable.prototype.clone = function () {\n        var swt = this;\n        swt.widths = this.widths;\n        return swt;\n    };\n    /**\n     * Converts width table to a `PDF array`.\n     * @private\n     */\n    StandardWidthTable.prototype.toArray = function () {\n        var arr = new PdfArray(this.widths);\n        return arr;\n    };\n    return StandardWidthTable;\n}(WidthTable));\nexport { StandardWidthTable };\n","/**\n * TrueTypeFont.ts class for EJ2-PDF\n */\nimport { ByteArray } from './../../graphics/images/index';\nimport { TtfReader } from './ttf-reader';\nimport { PdfDictionary, SaveDescendantFontEventHandler, SaveFontDictionaryEventHandler } from './../../primitives/pdf-dictionary';\nimport { SaveFontProgramEventHandler, SaveCmapEventHandler } from './../../primitives/pdf-stream';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfString } from './../../primitives/pdf-string';\nimport { PdfReferenceHolder } from './../../primitives/pdf-reference';\nimport { PdfFontMetrics } from './pdf-font-metrics';\nimport { StandardWidthTable } from './pdf-font-metrics';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { Dictionary } from './../../collections/dictionary';\nimport { FontDescriptorFlags } from './enum';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { Operators } from './../../input-output/pdf-operators';\nvar UnicodeTrueTypeFont = /** @class */ (function () {\n    /* tslint:enable */\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    function UnicodeTrueTypeFont(base64String, size) {\n        // Fields\n        this.nameString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Indicates whether the font program is compressed or not.\n         * @private\n         */\n        this.isCompress = false;\n        /**\n         * Indicates whether the font is embedded or not.\n         */\n        this.isEmbedFont = false;\n        /**\n         * Cmap table's start prefix.\n         */\n        /* tslint:disable */\n        this.cmapPrefix = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap' + Operators.newLine + '/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def\\n/CMapName ' + '/Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange' + Operators.newLine;\n        /* tslint:enable */\n        /**\n         * Cmap table's start suffix.\n         */\n        this.cmapEndCodespaceRange = 'endcodespacerange' + Operators.newLine;\n        /**\n         * Cmap's begin range marker.\n         */\n        this.cmapBeginRange = 'beginbfrange' + Operators.newLine;\n        /**\n         * Cmap's end range marker.\n         */\n        this.cmapEndRange = 'endbfrange' + Operators.newLine;\n        /**\n         * Cmap table's end\n         */\n        /* tslint:disable */\n        this.cmapSuffix = 'endbfrange\\nendcmap\\nCMapName currentdict ' + '/CMap defineresource pop\\nend end' + Operators.newLine;\n        if (base64String === null || base64String === undefined) {\n            throw new Error('ArgumentNullException:base64String');\n        }\n        this.fontSize = size;\n        this.fontString = base64String;\n        this.Initialize();\n    }\n    //Implementation\n    /**\n     * Returns width of the char symbol.\n     */\n    UnicodeTrueTypeFont.prototype.getCharWidth = function (charCode) {\n        var codeWidth = this.ttfReader.getCharWidth(charCode);\n        return codeWidth;\n    };\n    /**\n     * Returns width of the text line.\n     */\n    UnicodeTrueTypeFont.prototype.getLineWidth = function (line) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        var width = 0;\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidth(ch);\n            width += charWidth;\n        }\n        return width;\n    };\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.Initialize = function () {\n        var byteArray = new ByteArray(this.fontString.length);\n        byteArray.writeFromBase64String(this.fontString);\n        this.fontData = byteArray.internalBuffer;\n        this.ttfReader = new TtfReader(this.fontData);\n        this.ttfMetrics = this.ttfReader.metrics;\n    };\n    UnicodeTrueTypeFont.prototype.createInternals = function () {\n        this.fontDictionary = new PdfDictionary();\n        this.fontProgram = new PdfStream();\n        this.cmap = new PdfStream();\n        this.descendantFont = new PdfDictionary();\n        this.metrics = new PdfFontMetrics();\n        this.ttfReader.createInternals();\n        this.ttfMetrics = this.ttfReader.metrics;\n        this.initializeMetrics();\n        // Create all the dictionaries of the font.\n        this.subsetName = this.getFontName();\n        this.createDescendantFont();\n        this.createCmap();\n        this.createFontDictionary();\n        this.createFontProgram();\n    };\n    UnicodeTrueTypeFont.prototype.getInternals = function () {\n        return this.fontDictionary;\n    };\n    /**\n     * Initializes metrics.\n     */\n    UnicodeTrueTypeFont.prototype.initializeMetrics = function () {\n        var ttfMetrics = this.ttfReader.metrics;\n        this.metrics.ascent = ttfMetrics.macAscent;\n        this.metrics.descent = ttfMetrics.macDescent;\n        this.metrics.height = ttfMetrics.macAscent - ttfMetrics.macDescent + ttfMetrics.lineGap;\n        this.metrics.name = ttfMetrics.fontFamily;\n        this.metrics.postScriptName = ttfMetrics.postScriptName;\n        this.metrics.size = this.fontSize;\n        this.metrics.widthTable = new StandardWidthTable(ttfMetrics.widthTable);\n        this.metrics.lineGap = ttfMetrics.lineGap;\n        this.metrics.subScriptSizeFactor = ttfMetrics.subScriptSizeFactor;\n        this.metrics.superscriptSizeFactor = ttfMetrics.superscriptSizeFactor;\n        this.metrics.isBold = ttfMetrics.isBold;\n    };\n    /**\n     * Gets random string.\n     */\n    UnicodeTrueTypeFont.prototype.getFontName = function () {\n        var builder = '';\n        var name;\n        // if (this.isEmbed === false) {\n        for (var i = 0; i < 6; i++) {\n            var index = Math.floor(Math.random() * (25 - 0 + 1)) + 0;\n            builder += this.nameString[index];\n        }\n        builder += '+';\n        // }\n        builder += this.ttfReader.metrics.postScriptName;\n        name = builder.toString();\n        // if (name === '') {\n        //     name = this.ttfReader.metrics.fontFamily;\n        // }\n        name = this.formatName(name);\n        return name;\n    };\n    /**\n     * Generates name of the font.\n     */\n    UnicodeTrueTypeFont.prototype.formatName = function (fontName) {\n        // if (fontName === null) {\n        //     throw new Error('ArgumentNullException : fontName');\n        // }\n        // if (fontName === '') {\n        //     throw new Error('ArgumentOutOfRangeException : fontName, Parameter can not be empty');\n        // }\n        var ret = fontName.replace('(', '#28');\n        ret = ret.replace(')', '#29');\n        ret = ret.replace('[', '#5B');\n        ret = ret.replace(']', '#5D');\n        ret = ret.replace('<', '#3C');\n        ret = ret.replace('>', '#3E');\n        ret = ret.replace('{', '#7B');\n        ret = ret.replace('}', '#7D');\n        ret = ret.replace('/', '#2F');\n        ret = ret.replace('%', '#25');\n        return ret.replace(' ', '#20');\n    };\n    /**\n     * Creates descendant font.\n     */\n    UnicodeTrueTypeFont.prototype.createDescendantFont = function () {\n        // Set property used to clone Font every time\n        this.descendantFont.isResource = true;\n        this.descendantFont.descendantFontBeginSave = new SaveDescendantFontEventHandler(this);\n        this.descendantFont.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.descendantFont.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.cIDFontType2));\n        this.descendantFont.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDToGIDMap, new PdfName(this.dictionaryProperties.identity));\n        this.descendantFont.items.setValue(this.dictionaryProperties.dw, new PdfNumber(1000));\n        this.fontDescriptor = this.createFontDescriptor();\n        this.descendantFont.items.setValue(this.dictionaryProperties.fontDescriptor, new PdfReferenceHolder(this.fontDescriptor));\n        var systemInfo = this.createSystemInfo();\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDSystemInfo, systemInfo);\n    };\n    /**\n     * Creates font descriptor.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDescriptor = function () {\n        var descriptor = new PdfDictionary();\n        var metrics = this.ttfReader.metrics;\n        // Set property used to clone Font every time\n        descriptor.isResource = true;\n        descriptor.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.fontDescriptor));\n        descriptor.items.setValue(this.dictionaryProperties.fontName, new PdfName(this.subsetName));\n        descriptor.items.setValue(this.dictionaryProperties.flags, new PdfNumber(this.getDescriptorFlags()));\n        descriptor.items.setValue(this.dictionaryProperties.fontBBox, PdfArray.fromRectangle(this.getBoundBox()));\n        descriptor.items.setValue(this.dictionaryProperties.missingWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.stemV, new PdfNumber(metrics.stemV));\n        descriptor.items.setValue(this.dictionaryProperties.italicAngle, new PdfNumber(metrics.italicAngle));\n        descriptor.items.setValue(this.dictionaryProperties.capHeight, new PdfNumber(metrics.capHeight));\n        descriptor.items.setValue(this.dictionaryProperties.ascent, new PdfNumber(metrics.winAscent));\n        descriptor.items.setValue(this.dictionaryProperties.descent, new PdfNumber(metrics.winDescent));\n        descriptor.items.setValue(this.dictionaryProperties.leading, new PdfNumber(metrics.leading));\n        descriptor.items.setValue(this.dictionaryProperties.avgWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.fontFile2, new PdfReferenceHolder(this.fontProgram));\n        descriptor.items.setValue(this.dictionaryProperties.maxWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.xHeight, new PdfNumber(0));\n        descriptor.items.setValue(this.dictionaryProperties.stemH, new PdfNumber(0));\n        return descriptor;\n    };\n    /**\n     * Generates cmap.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createCmap = function () {\n        this.cmap.cmapBeginSave = new SaveCmapEventHandler(this);\n    };\n    /**\n     * Generates font dictionary.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDictionary = function () {\n        // Set property used to clone Font every time\n        this.fontDictionary.isResource = true;\n        this.fontDictionary.fontDictionaryBeginSave = new SaveFontDictionaryEventHandler(this);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type0));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(this.dictionaryProperties.identityH));\n        var descFonts = new PdfArray();\n        var reference = new PdfReferenceHolder(this.descendantFont);\n        // Set property used to clone Font every time\n        descFonts.isFont = true;\n        descFonts.add(reference);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.descendantFonts, descFonts);\n    };\n    /**\n     * Creates font program.\n     */\n    UnicodeTrueTypeFont.prototype.createFontProgram = function () {\n        this.fontProgram.fontProgramBeginSave = new SaveFontProgramEventHandler(this);\n    };\n    /**\n     * Creates system info dictionary for CID font.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createSystemInfo = function () {\n        var systemInfo = new PdfDictionary();\n        systemInfo.items.setValue(this.dictionaryProperties.registry, new PdfString('Adobe'));\n        systemInfo.items.setValue(this.dictionaryProperties.ordering, new PdfString(this.dictionaryProperties.identity));\n        systemInfo.items.setValue(this.dictionaryProperties.supplement, new PdfNumber(0));\n        return systemInfo;\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.descendantFontBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var width = this.getDescendantWidth();\n            if (width !== null) {\n                this.descendantFont.items.setValue(this.dictionaryProperties.w, width);\n            }\n        }\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.cmapBeginSave = function () {\n        this.generateCmap();\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    /* tslint:disable */\n    UnicodeTrueTypeFont.prototype.fontDictionaryBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0 && !this.fontDictionary.containsKey(this.dictionaryProperties.toUnicode)) {\n            this.fontDictionary.items.setValue(this.dictionaryProperties.toUnicode, new PdfReferenceHolder(this.cmap));\n        }\n    };\n    /* tslint:enable */\n    /**\n     * Runs before font program stream save.\n     */\n    UnicodeTrueTypeFont.prototype.fontProgramBeginSave = function () {\n        this.isCompress = true;\n        this.generateFontProgram();\n    };\n    /**\n     * Gets width description pad array for c i d font.\n     */\n    UnicodeTrueTypeFont.prototype.getDescendantWidth = function () {\n        var array = new PdfArray();\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphInfo = [];\n            // if (!this.isEmbedFont) {\n            var keys = this.usedChars.keys();\n            for (var i = 0; i < keys.length; i++) {\n                var chLen = keys[i];\n                var glyph = this.ttfReader.getGlyph(chLen);\n                if (glyph.empty) {\n                    continue;\n                }\n                glyphInfo.push(glyph);\n            }\n            // } else {\n            //     glyphInfo = this.ttfReader.getAllGlyphs();\n            // }\n            glyphInfo.sort(function (a, b) { return a.index - b.index; });\n            var firstGlyphIndex = 0;\n            var lastGlyphIndex = 0;\n            var firstGlyphIndexWasSet = false;\n            var widthDetails = new PdfArray();\n            // if (!this.isEmbedFont) {\n            for (var i = 0; i < glyphInfo.length; i++) {\n                var glyph = glyphInfo[i];\n                if (!firstGlyphIndexWasSet) {\n                    firstGlyphIndexWasSet = true;\n                    firstGlyphIndex = glyph.index;\n                    lastGlyphIndex = glyph.index - 1;\n                }\n                if ((lastGlyphIndex + 1 !== glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n                    // Add glyph index / width.\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    if (i !== 0) {\n                        array.add(widthDetails);\n                    }\n                    firstGlyphIndex = glyph.index;\n                    widthDetails = new PdfArray();\n                }\n                widthDetails.add(new PdfNumber(glyph.width));\n                if (i + 1 === glyphInfo.length) {\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    array.add(widthDetails);\n                }\n                lastGlyphIndex = glyph.index;\n            }\n            // } else {\n            //     for (let i : number = 0; i < glyphInfo.length; i++) {\n            //         let glyph : TtfGlyphInfo = glyphInfo[i];\n            //         if (!firstGlyphIndexWasSet) {\n            //             firstGlyphIndexWasSet = true;\n            //             lastGlyphIndex = glyph.index - 1;\n            //         }\n            //         firstGlyphIndex = glyph.index;\n            //         if ((lastGlyphIndex + 1 === glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n            //             // Add glyph index / width.\n            //             widthDetails.add(new PdfNumber(glyph.width));\n            //             array.add(new PdfNumber(firstGlyphIndex));\n            //             array.add(widthDetails);\n            //             widthDetails = new PdfArray();\n            //         }\n            //         lastGlyphIndex = glyph.index;\n            //     }\n            // }\n        }\n        return array;\n    };\n    /**\n     * Creates cmap.\n     */\n    UnicodeTrueTypeFont.prototype.generateCmap = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphChars = this.ttfReader.getGlyphChars(this.usedChars);\n            if (glyphChars.size() > 0) {\n                var keys = glyphChars.keys().sort();\n                // add first and last glyph indexes\n                var first = keys[0];\n                var last = keys[keys.length - 1];\n                var middlePart = this.toHexString(first, false) + this.toHexString(last, false) + Operators.newLine;\n                var builder = '';\n                builder += this.cmapPrefix;\n                builder += middlePart;\n                builder += this.cmapEndCodespaceRange;\n                var nextRange = 0;\n                for (var i = 0; i < keys.length; i++) {\n                    if (nextRange === 0) {\n                        if (i !== 0) {\n                            builder += this.cmapEndRange;\n                        }\n                        nextRange = Math.min(100, keys.length - i);\n                        builder += nextRange;\n                        builder += Operators.whiteSpace;\n                        builder += this.cmapBeginRange;\n                    }\n                    nextRange -= 1;\n                    var key = keys[i];\n                    /* tslint:disable */\n                    builder += this.toHexString(key, true) + this.toHexString(key, true) + this.toHexString(glyphChars.getValue(key), true) + '\\n';\n                    /* tslint:enable */\n                }\n                builder += this.cmapSuffix;\n                this.cmap.clearStream();\n                this.cmap.isResource = true;\n                this.cmap.write(builder);\n            }\n        }\n    };\n    /**\n     * Generates font program.\n     */\n    UnicodeTrueTypeFont.prototype.generateFontProgram = function () {\n        var fontProgram = null;\n        this.usedChars = (this.usedChars === null || this.usedChars === undefined) ? new Dictionary() : this.usedChars;\n        this.ttfReader.setOffset(0);\n        fontProgram = this.ttfReader.readFontProgram(this.usedChars);\n        this.fontProgram.clearStream();\n        this.fontProgram.isResource = true;\n        this.fontProgram.writeBytes(fontProgram);\n    };\n    /**\n     * Calculates flags for the font descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getDescriptorFlags = function () {\n        var flags = 0;\n        var metrics = this.ttfReader.metrics;\n        if (metrics.isFixedPitch) {\n            flags |= FontDescriptorFlags.FixedPitch;\n        }\n        if (metrics.isSymbol) {\n            flags |= FontDescriptorFlags.Symbolic;\n        }\n        else {\n            flags |= FontDescriptorFlags.Nonsymbolic;\n        }\n        if (metrics.isItalic) {\n            flags |= FontDescriptorFlags.Italic;\n        }\n        if (metrics.isBold) {\n            flags |= FontDescriptorFlags.ForceBold;\n        }\n        return flags;\n    };\n    /**\n     * Calculates BoundBox of the descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getBoundBox = function () {\n        var rect = this.ttfReader.metrics.fontBox;\n        var width = Math.abs(rect.right - rect.left);\n        var height = Math.abs(rect.top - rect.bottom);\n        var rectangle = new RectangleF(rect.left, rect.bottom, width, height);\n        return rectangle;\n    };\n    /**\n     * Converts integer of decimal system to hex integer.\n     */\n    UnicodeTrueTypeFont.prototype.toHexString = function (n, isCaseChange) {\n        var s = n.toString(16);\n        if (isCaseChange) {\n            s = s.toUpperCase();\n        }\n        return '<0000'.substring(0, 5 - s.length) + s + '>';\n    };\n    /**\n     * Stores used symbols.\n     */\n    UnicodeTrueTypeFont.prototype.setSymbols = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (this.usedChars === null || this.usedChars === undefined) {\n            this.usedChars = new Dictionary();\n        }\n        for (var i = 0; i < text.length; i++) {\n            var ch = text[i];\n            this.usedChars.setValue(ch, String.fromCharCode(0));\n        }\n        // else {\n        //     if (text === null) {\n        //         throw new Error('Argument Null Exception : glyphs');\n        //     }\n        //     if (this.usedChars === null || this.usedChars === undefined) {\n        //             this.usedChars = new Dictionary<string, string>();\n        //     }\n        //     for (let i : number = 0; i < text.length; i++) {\n        //         let glyphIndex : number = text[i];\n        //         let glyph : TtfGlyphInfo =  this.ttfReader.getGlyph(glyphIndex);\n        //         if (!glyph == null) {\n        //             let c : string = glyph.charCode.toLocaleString();\n        //             this.usedChars.setValue(c, String.fromCharCode(0));\n        //         }\n        //     }\n        // }\n        if (this.isEmbedFont === false) {\n            this.getDescendantWidth();\n        }\n    };\n    return UnicodeTrueTypeFont;\n}());\nexport { UnicodeTrueTypeFont };\n","/**\n * ArabicShapeRenderer.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\nvar ArabicShapeRenderer = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function ArabicShapeRenderer() {\n        //#region Constants\n        this.arabicCharTable = [['\\u0621', '\\uFE80'], ['\\u0622', '\\uFE81', '\\uFE82'],\n            ['\\u0623', '\\uFE83', '\\uFE84'],\n            ['\\u0624', '\\uFE85', '\\uFE86'],\n            ['\\u0625', '\\uFE87', '\\uFE88'],\n            ['\\u0626', '\\uFE89', '\\uFE8A', '\\uFE8B', '\\uFE8C'],\n            ['\\u0627', '\\uFE8D', '\\uFE8E'],\n            ['\\u0628', '\\uFE8F', '\\uFE90', '\\uFE91', '\\uFE92'],\n            ['\\u0629', '\\uFE93', '\\uFE94'],\n            ['\\u062A', '\\uFE95', '\\uFE96', '\\uFE97', '\\uFE98'],\n            ['\\u062B', '\\uFE99', '\\uFE9A', '\\uFE9B', '\\uFE9C'],\n            ['\\u062C', '\\uFE9D', '\\uFE9E', '\\uFE9F', '\\uFEA0'],\n            ['\\u062D', '\\uFEA1', '\\uFEA2', '\\uFEA3', '\\uFEA4'],\n            ['\\u062E', '\\uFEA5', '\\uFEA6', '\\uFEA7', '\\uFEA8'],\n            ['\\u062F', '\\uFEA9', '\\uFEAA'],\n            ['\\u0630', '\\uFEAB', '\\uFEAC'],\n            ['\\u0631', '\\uFEAD', '\\uFEAE'],\n            ['\\u0632', '\\uFEAF', '\\uFEB0'],\n            ['\\u0633', '\\uFEB1', '\\uFEB2', '\\uFEB3', '\\uFEB4'],\n            ['\\u0634', '\\uFEB5', '\\uFEB6', '\\uFEB7', '\\uFEB8'],\n            ['\\u0635', '\\uFEB9', '\\uFEBA', '\\uFEBB', '\\uFEBC'],\n            ['\\u0636', '\\uFEBD', '\\uFEBE', '\\uFEBF', '\\uFEC0'],\n            ['\\u0637', '\\uFEC1', '\\uFEC2', '\\uFEC3', '\\uFEC4'],\n            ['\\u0638', '\\uFEC5', '\\uFEC6', '\\uFEC7', '\\uFEC8'],\n            ['\\u0639', '\\uFEC9', '\\uFECA', '\\uFECB', '\\uFECC'],\n            ['\\u063A', '\\uFECD', '\\uFECE', '\\uFECF', '\\uFED0'],\n            ['\\u0640', '\\u0640', '\\u0640', '\\u0640', '\\u0640'],\n            ['\\u0641', '\\uFED1', '\\uFED2', '\\uFED3', '\\uFED4'],\n            ['\\u0642', '\\uFED5', '\\uFED6', '\\uFED7', '\\uFED8'],\n            ['\\u0643', '\\uFED9', '\\uFEDA', '\\uFEDB', '\\uFEDC'],\n            ['\\u0644', '\\uFEDD', '\\uFEDE', '\\uFEDF', '\\uFEE0'],\n            ['\\u0645', '\\uFEE1', '\\uFEE2', '\\uFEE3', '\\uFEE4'],\n            ['\\u0646', '\\uFEE5', '\\uFEE6', '\\uFEE7', '\\uFEE8'],\n            ['\\u0647', '\\uFEE9', '\\uFEEA', '\\uFEEB', '\\uFEEC'],\n            ['\\u0648', '\\uFEED', '\\uFEEE'],\n            ['\\u0649', '\\uFEEF', '\\uFEF0', '\\uFBE8', '\\uFBE9'],\n            ['\\u064A', '\\uFEF1', '\\uFEF2', '\\uFEF3', '\\uFEF4'],\n            ['\\u0671', '\\uFB50', '\\uFB51'],\n            ['\\u0679', '\\uFB66', '\\uFB67', '\\uFB68', '\\uFB69'],\n            ['\\u067A', '\\uFB5E', '\\uFB5F', '\\uFB60', '\\uFB61'],\n            ['\\u067B', '\\uFB52', '\\uFB53', '\\uFB54', '\\uFB55'],\n            ['\\u067E', '\\uFB56', '\\uFB57', '\\uFB58', '\\uFB59'],\n            ['\\u067F', '\\uFB62', '\\uFB63', '\\uFB64', '\\uFB65'],\n            ['\\u0680', '\\uFB5A', '\\uFB5B', '\\uFB5C', '\\uFB5D'],\n            ['\\u0683', '\\uFB76', '\\uFB77', '\\uFB78', '\\uFB79'],\n            ['\\u0684', '\\uFB72', '\\uFB73', '\\uFB74', '\\uFB75'],\n            ['\\u0686', '\\uFB7A', '\\uFB7B', '\\uFB7C', '\\uFB7D'],\n            ['\\u0687', '\\uFB7E', '\\uFB7F', '\\uFB80', '\\uFB81'],\n            ['\\u0688', '\\uFB88', '\\uFB89'],\n            ['\\u068C', '\\uFB84', '\\uFB85'],\n            ['\\u068D', '\\uFB82', '\\uFB83'],\n            ['\\u068E', '\\uFB86', '\\uFB87'],\n            ['\\u0691', '\\uFB8C', '\\uFB8D'],\n            ['\\u0698', '\\uFB8A', '\\uFB8B'],\n            ['\\u06A4', '\\uFB6A', '\\uFB6B', '\\uFB6C', '\\uFB6D'],\n            ['\\u06A6', '\\uFB6E', '\\uFB6F', '\\uFB70', '\\uFB71'],\n            ['\\u06A9', '\\uFB8E', '\\uFB8F', '\\uFB90', '\\uFB91'],\n            ['\\u06AD', '\\uFBD3', '\\uFBD4', '\\uFBD5', '\\uFBD6'],\n            ['\\u06AF', '\\uFB92', '\\uFB93', '\\uFB94', '\\uFB95'],\n            ['\\u06B1', '\\uFB9A', '\\uFB9B', '\\uFB9C', '\\uFB9D'],\n            ['\\u06B3', '\\uFB96', '\\uFB97', '\\uFB98', '\\uFB99'],\n            ['\\u06BA', '\\uFB9E', '\\uFB9F'],\n            ['\\u06BB', '\\uFBA0', '\\uFBA1', '\\uFBA2', '\\uFBA3'],\n            ['\\u06BE', '\\uFBAA', '\\uFBAB', '\\uFBAC', '\\uFBAD'],\n            ['\\u06C0', '\\uFBA4', '\\uFBA5'],\n            ['\\u06C1', '\\uFBA6', '\\uFBA7', '\\uFBA8', '\\uFBA9'],\n            ['\\u06C5', '\\uFBE0', '\\uFBE1'],\n            ['\\u06C6', '\\uFBD9', '\\uFBDA'],\n            ['\\u06C7', '\\uFBD7', '\\uFBD8'],\n            ['\\u06C8', '\\uFBDB', '\\uFBDC'],\n            ['\\u06C9', '\\uFBE2', '\\uFBE3'],\n            ['\\u06CB', '\\uFBDE', '\\uFBDF'],\n            ['\\u06CC', '\\uFBFC', '\\uFBFD', '\\uFBFE', '\\uFBFF'],\n            ['\\u06D0', '\\uFBE4', '\\uFBE5', '\\uFBE6', '\\uFBE7'],\n            ['\\u06D2', '\\uFBAE', '\\uFBAF'],\n            ['\\u06D3', '\\uFBB0', '\\uFBB1']\n        ];\n        this.alef = '\\u0627';\n        this.alefHamza = '\\u0623';\n        this.alefHamzaBelow = '\\u0625';\n        this.alefMadda = '\\u0622';\n        this.lam = '\\u0644';\n        this.hamza = '\\u0621';\n        this.zeroWidthJoiner = '\\u200D';\n        this.hamzaAbove = '\\u0654';\n        this.hamzaBelow = '\\u0655';\n        this.wawHamza = '\\u0624';\n        this.yehHamza = '\\u0626';\n        this.waw = '\\u0648';\n        this.alefMaksura = '\\u0649';\n        this.yeh = '\\u064A';\n        this.farsiYeh = '\\u06CC';\n        this.shadda = '\\u0651';\n        this.madda = '\\u0653';\n        this.lwa = '\\uFEFB';\n        this.lwawh = '\\uFEF7';\n        this.lwawhb = '\\uFEF9';\n        this.lwawm = '\\uFEF5';\n        this.bwhb = '\\u06D3';\n        this.fathatan = '\\u064B';\n        this.superScriptalef = '\\u0670';\n        this.vowel = 0x1;\n        // #endregion\n        //#region Fields\n        this.arabicMapTable = new Dictionary();\n        for (var i = 0; i < this.arabicCharTable.length; i++) {\n            this.arabicMapTable.setValue(this.arabicCharTable[i][0], this.arabicCharTable[i]);\n        }\n    }\n    //#endregion\n    //#region implementation\n    ArabicShapeRenderer.prototype.getCharacterShape = function (input, index) {\n        if ((input >= this.hamza) && (input <= this.bwhb)) {\n            var value = [];\n            if (this.arabicMapTable.getValue(input)) {\n                value = this.arabicMapTable.getValue(input);\n                return value[index + 1];\n            }\n        }\n        else if (input >= this.lwawm && input <= this.lwa) {\n            return (input);\n        }\n        return input;\n    };\n    ArabicShapeRenderer.prototype.shape = function (text, level) {\n        var builder = '';\n        var str2 = '';\n        for (var i = 0; i < text.length; i++) {\n            var c = text[i];\n            if (c >= '؀' && c <= 'ۿ') {\n                //if(c>= 0x0600.toString() && c<= 0x06FF.toString()) {\n                str2 = str2 + c;\n            }\n            else {\n                if (str2.length > 0) {\n                    var st = this.doShape(str2.toString(), 0);\n                    builder = builder + st;\n                    str2 = '';\n                }\n                builder = builder + c;\n            }\n        }\n        if (str2.length > 0) {\n            var st = this.doShape(str2.toString(), 0);\n            builder = builder + st;\n        }\n        return builder.toString();\n    };\n    ArabicShapeRenderer.prototype.doShape = function (input, level) {\n        var str = '';\n        var ligature = 0;\n        var len = 0;\n        var i = 0;\n        var next = '';\n        var previous = new ArabicShape();\n        var present = new ArabicShape();\n        while (i < input.length) {\n            next = input[i++];\n            ligature = this.ligature(next, present);\n            if (ligature === 0) {\n                var shapeCount = this.getShapeCount(next);\n                len = (shapeCount === 1) ? 0 : 2;\n                if (previous.Shapes > 2) {\n                    len += 1;\n                }\n                len = len % (present.Shapes);\n                present.Value = this.getCharacterShape(present.Value, len);\n                str = this.append(str, previous, level);\n                previous = present;\n                present = new ArabicShape();\n                present.Value = next;\n                present.Shapes = shapeCount;\n                present.Ligature++;\n            }\n        }\n        len = (previous.Shapes > 2) ? 1 : 0;\n        len = len % (present.Shapes);\n        present.Value = this.getCharacterShape(present.Value, len);\n        str = this.append(str, previous, level);\n        str = this.append(str, present, level);\n        return str.toString();\n    };\n    ArabicShapeRenderer.prototype.append = function (builder, shape, level) {\n        if (shape.Value !== '') {\n            builder = builder + shape.Value;\n            shape.Ligature -= 1;\n            if (shape.Type !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.Type;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n            if (shape.vowel !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.vowel;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n        }\n        return builder;\n    };\n    ArabicShapeRenderer.prototype.ligature = function (value, shape) {\n        if (shape.Value !== '') {\n            var result = 0;\n            if ((value >= this.fathatan && value <= this.hamzaBelow) || value === this.superScriptalef) {\n                result = 1;\n                if ((shape.vowel !== '') && (value !== this.shadda)) {\n                    result = 2;\n                }\n                if (value === this.shadda) {\n                    if (shape.Type == null) {\n                        shape.Type = this.shadda;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n                else if (value === this.hamzaBelow) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamzaBelow;\n                        result = 2;\n                    }\n                    else if (value === this.lwa) {\n                        shape.Value = this.lwawhb;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaBelow;\n                    }\n                }\n                else if (value === this.hamzaAbove) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.lwa) {\n                        shape.Value = this.lwawh;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.waw) {\n                        shape.Value = this.wawHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.yeh || shape.Value === this.alefMaksura || shape.Value === this.farsiYeh) {\n                        shape.Value = this.yehHamza;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaAbove;\n                    }\n                }\n                else if (value === this.madda) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefMadda;\n                        result = 2;\n                    }\n                }\n                else {\n                    shape.vowel = value;\n                }\n                if (result === 1) {\n                    shape.Ligature++;\n                }\n                return result;\n            }\n            if (shape.vowel !== '') {\n                return 0;\n            }\n            if (shape.Value === this.lam) {\n                if (value === this.alef) {\n                    shape.Value = this.lwa;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamza) {\n                    shape.Value = this.lwawh;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamzaBelow) {\n                    shape.Value = this.lwawhb;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefMadda) {\n                    shape.Value = this.lwawm;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n            }\n            // else if (shape.Value === '') {\n            //     shape.Value = value;\n            //     shape.Shapes = this.getShapeCount(value);\n            //     result = 1;\n            // }\n            return result;\n        }\n        else {\n            return 0;\n        }\n    };\n    ArabicShapeRenderer.prototype.getShapeCount = function (shape) {\n        if ((shape >= this.hamza) && (shape <= this.bwhb) && !((shape >= this.fathatan && shape <= this.hamzaBelow)\n            || shape === this.superScriptalef)) {\n            var c = [];\n            if (this.arabicMapTable.getValue(shape)) {\n                c = this.arabicMapTable.getValue(shape);\n                return c.length - 1;\n            }\n        }\n        else if (shape === this.zeroWidthJoiner) {\n            return 4;\n        }\n        return 1;\n    };\n    return ArabicShapeRenderer;\n}());\nexport { ArabicShapeRenderer };\n//#endregion\n//#region Internals\nvar ArabicShape = /** @class */ (function () {\n    function ArabicShape() {\n        //#region Fields\n        this.shapeValue = '';\n        this.shapeType = '';\n        this.shapeVowel = '';\n        this.shapeLigature = 0;\n        this.shapeShapes = 1;\n        //#endregion\n    }\n    Object.defineProperty(ArabicShape.prototype, \"Value\", {\n        //#endregion\n        //#region Properties \n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeValue;\n        },\n        set: function (value) {\n            this.shapeValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Type\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeType;\n        },\n        set: function (value) {\n            this.shapeType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"vowel\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeVowel;\n        },\n        set: function (value) {\n            this.shapeVowel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Ligature\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeLigature;\n        },\n        set: function (value) {\n            this.shapeLigature = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Shapes\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeShapes;\n        },\n        set: function (value) {\n            this.shapeShapes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ArabicShape;\n}());\nexport { ArabicShape };\n//#endregion\n","/**\n * Bidi.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar Bidi = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function Bidi() {\n        //#region Fields\n        this.indexes = [];\n        this.indexLevels = [];\n        this.mirroringShapeCharacters = new Dictionary();\n        this.update();\n    }\n    //#endregion\n    //#region implementation\n    Bidi.prototype.doMirrorShaping = function (text) {\n        var result = [];\n        for (var i = 0; i < text.length; i++) {\n            if (((this.indexLevels[i] & 1) === 1) && this.mirroringShapeCharacters.containsKey(text[i].charCodeAt(0))) {\n                result[i] = String.fromCharCode(this.mirroringShapeCharacters.getValue(text[i].charCodeAt(0)));\n            }\n            else {\n                result[i] = text[i].toString();\n            }\n        }\n        var res = '';\n        for (var j = 0; j < result.length; j++) {\n            res = res + result[j];\n        }\n        return res;\n    };\n    Bidi.prototype.getLogicalToVisualString = function (inputText, isRtl) {\n        var rtlCharacters = new RtlCharacters();\n        this.indexLevels = rtlCharacters.getVisualOrder(inputText, isRtl);\n        this.setDefaultIndexLevel();\n        this.doOrder(0, this.indexLevels.length - 1);\n        var text = this.doMirrorShaping(inputText);\n        //let text : string = inputText;\n        var resultBuilder = '';\n        for (var i = 0; i < this.indexes.length; i++) {\n            var index = this.indexes[i];\n            resultBuilder += text[index];\n        }\n        return resultBuilder.toString();\n    };\n    Bidi.prototype.setDefaultIndexLevel = function () {\n        for (var i = 0; i < this.indexLevels.length; i++) {\n            this.indexes[i] = i;\n        }\n    };\n    Bidi.prototype.doOrder = function (sIndex, eIndex) {\n        var max = this.indexLevels[sIndex];\n        var min = max;\n        var odd = max;\n        var even = max;\n        for (var i = sIndex + 1; i <= eIndex; ++i) {\n            var data = this.indexLevels[i];\n            if (data > max) {\n                max = data;\n            }\n            else if (data < min) {\n                min = data;\n            }\n            odd &= data;\n            even |= data;\n        }\n        if ((even & 1) === 0) {\n            return;\n        }\n        if ((odd & 1) === 1) {\n            this.reArrange(sIndex, eIndex + 1);\n            return;\n        }\n        min |= 1;\n        while (max >= min) {\n            var pstart = sIndex;\n            /*tslint:disable:no-constant-condition */\n            while (true) {\n                while (pstart <= eIndex) {\n                    if (this.indexLevels[pstart] >= max) {\n                        break;\n                    }\n                    pstart += 1;\n                }\n                if (pstart > eIndex) {\n                    break;\n                }\n                var pend = pstart + 1;\n                while (pend <= eIndex) {\n                    if (this.indexLevels[pend] < max) {\n                        break;\n                    }\n                    pend += 1;\n                }\n                this.reArrange(pstart, pend);\n                pstart = pend + 1;\n            }\n            max -= 1;\n        }\n    };\n    Bidi.prototype.reArrange = function (i, j) {\n        var length = (i + j) / 2;\n        --j;\n        for (; i < length; ++i, --j) {\n            var temp = this.indexes[i];\n            this.indexes[i] = this.indexes[j];\n            this.indexes[j] = temp;\n        }\n    };\n    Bidi.prototype.update = function () {\n        this.mirroringShapeCharacters.setValue(40, 41);\n        this.mirroringShapeCharacters.setValue(41, 40);\n        this.mirroringShapeCharacters.setValue(60, 62);\n        this.mirroringShapeCharacters.setValue(62, 60);\n        this.mirroringShapeCharacters.setValue(91, 93);\n        this.mirroringShapeCharacters.setValue(93, 91);\n        this.mirroringShapeCharacters.setValue(123, 125);\n        this.mirroringShapeCharacters.setValue(125, 123);\n        this.mirroringShapeCharacters.setValue(171, 187);\n        this.mirroringShapeCharacters.setValue(187, 171);\n        this.mirroringShapeCharacters.setValue(8249, 8250);\n        this.mirroringShapeCharacters.setValue(8250, 8249);\n        this.mirroringShapeCharacters.setValue(8261, 8262);\n        this.mirroringShapeCharacters.setValue(8262, 8261);\n        this.mirroringShapeCharacters.setValue(8317, 8318);\n        this.mirroringShapeCharacters.setValue(8318, 8317);\n        this.mirroringShapeCharacters.setValue(8333, 8334);\n        this.mirroringShapeCharacters.setValue(8334, 8333);\n        this.mirroringShapeCharacters.setValue(8712, 8715);\n        this.mirroringShapeCharacters.setValue(8713, 8716);\n        this.mirroringShapeCharacters.setValue(8714, 8717);\n        this.mirroringShapeCharacters.setValue(8715, 8712);\n        this.mirroringShapeCharacters.setValue(8716, 8713);\n        this.mirroringShapeCharacters.setValue(8717, 8714);\n        this.mirroringShapeCharacters.setValue(8725, 10741);\n        this.mirroringShapeCharacters.setValue(8764, 8765);\n        this.mirroringShapeCharacters.setValue(8765, 8764);\n        this.mirroringShapeCharacters.setValue(8771, 8909);\n        this.mirroringShapeCharacters.setValue(8786, 8787);\n        this.mirroringShapeCharacters.setValue(8787, 8786);\n        this.mirroringShapeCharacters.setValue(8788, 8789);\n        this.mirroringShapeCharacters.setValue(8789, 8788);\n        this.mirroringShapeCharacters.setValue(8804, 8805);\n        this.mirroringShapeCharacters.setValue(8805, 8804);\n        this.mirroringShapeCharacters.setValue(8806, 8807);\n        this.mirroringShapeCharacters.setValue(8807, 8806);\n        this.mirroringShapeCharacters.setValue(8808, 8809);\n        this.mirroringShapeCharacters.setValue(8809, 8808);\n        this.mirroringShapeCharacters.setValue(8810, 8811);\n        this.mirroringShapeCharacters.setValue(8811, 8810);\n        this.mirroringShapeCharacters.setValue(8814, 8815);\n        this.mirroringShapeCharacters.setValue(8815, 8814);\n        this.mirroringShapeCharacters.setValue(8816, 8817);\n        this.mirroringShapeCharacters.setValue(8817, 8816);\n        this.mirroringShapeCharacters.setValue(8818, 8819);\n        this.mirroringShapeCharacters.setValue(8819, 8818);\n        this.mirroringShapeCharacters.setValue(8820, 8821);\n        this.mirroringShapeCharacters.setValue(8821, 8820);\n        this.mirroringShapeCharacters.setValue(8822, 8823);\n        this.mirroringShapeCharacters.setValue(8823, 8822);\n        this.mirroringShapeCharacters.setValue(8824, 8825);\n        this.mirroringShapeCharacters.setValue(8825, 8824);\n        this.mirroringShapeCharacters.setValue(8826, 8827);\n        this.mirroringShapeCharacters.setValue(8827, 8826);\n        this.mirroringShapeCharacters.setValue(8828, 8829);\n        this.mirroringShapeCharacters.setValue(8829, 8828);\n        this.mirroringShapeCharacters.setValue(8830, 8831);\n        this.mirroringShapeCharacters.setValue(8831, 8830);\n        this.mirroringShapeCharacters.setValue(8832, 8833);\n        this.mirroringShapeCharacters.setValue(8833, 8832);\n        this.mirroringShapeCharacters.setValue(8834, 8835);\n        this.mirroringShapeCharacters.setValue(8835, 8834);\n        this.mirroringShapeCharacters.setValue(8836, 8837);\n        this.mirroringShapeCharacters.setValue(8837, 8836);\n        this.mirroringShapeCharacters.setValue(8838, 8839);\n        this.mirroringShapeCharacters.setValue(8839, 8838);\n        this.mirroringShapeCharacters.setValue(8840, 8841);\n        this.mirroringShapeCharacters.setValue(8841, 8840);\n        this.mirroringShapeCharacters.setValue(8842, 8843);\n        this.mirroringShapeCharacters.setValue(8843, 8842);\n        this.mirroringShapeCharacters.setValue(8847, 8848);\n        this.mirroringShapeCharacters.setValue(8848, 8847);\n        this.mirroringShapeCharacters.setValue(8849, 8850);\n        this.mirroringShapeCharacters.setValue(8850, 8849);\n        this.mirroringShapeCharacters.setValue(8856, 10680);\n        this.mirroringShapeCharacters.setValue(8866, 8867);\n        this.mirroringShapeCharacters.setValue(8867, 8866);\n        this.mirroringShapeCharacters.setValue(8870, 10974);\n        this.mirroringShapeCharacters.setValue(8872, 10980);\n        this.mirroringShapeCharacters.setValue(8873, 10979);\n        this.mirroringShapeCharacters.setValue(8875, 10981);\n        this.mirroringShapeCharacters.setValue(8880, 8881);\n        this.mirroringShapeCharacters.setValue(8881, 8880);\n        this.mirroringShapeCharacters.setValue(8882, 8883);\n        this.mirroringShapeCharacters.setValue(8883, 8882);\n        this.mirroringShapeCharacters.setValue(8884, 8885);\n        this.mirroringShapeCharacters.setValue(8885, 8884);\n        /*tslint:disable:max-func-body-length */\n        this.mirroringShapeCharacters.setValue(8886, 8887);\n        this.mirroringShapeCharacters.setValue(8887, 8886);\n        this.mirroringShapeCharacters.setValue(8905, 8906);\n        this.mirroringShapeCharacters.setValue(8906, 8905);\n        this.mirroringShapeCharacters.setValue(8907, 8908);\n        this.mirroringShapeCharacters.setValue(8908, 8907);\n        this.mirroringShapeCharacters.setValue(8909, 8771);\n        this.mirroringShapeCharacters.setValue(8912, 8913);\n        this.mirroringShapeCharacters.setValue(8913, 8912);\n        this.mirroringShapeCharacters.setValue(8918, 8919);\n        this.mirroringShapeCharacters.setValue(8919, 8918);\n        this.mirroringShapeCharacters.setValue(8920, 8921);\n        this.mirroringShapeCharacters.setValue(8921, 8920);\n        this.mirroringShapeCharacters.setValue(8922, 8923);\n        this.mirroringShapeCharacters.setValue(8923, 8922);\n        this.mirroringShapeCharacters.setValue(8924, 8925);\n        this.mirroringShapeCharacters.setValue(8925, 8924);\n        this.mirroringShapeCharacters.setValue(8926, 8927);\n        this.mirroringShapeCharacters.setValue(8927, 8926);\n        this.mirroringShapeCharacters.setValue(8928, 8929);\n        this.mirroringShapeCharacters.setValue(8929, 8928);\n        this.mirroringShapeCharacters.setValue(8930, 8931);\n        this.mirroringShapeCharacters.setValue(8931, 8930);\n        this.mirroringShapeCharacters.setValue(8932, 8933);\n        this.mirroringShapeCharacters.setValue(8933, 8932);\n        this.mirroringShapeCharacters.setValue(8934, 8935);\n        this.mirroringShapeCharacters.setValue(8935, 8934);\n        this.mirroringShapeCharacters.setValue(8936, 8937);\n        this.mirroringShapeCharacters.setValue(8937, 8936);\n        this.mirroringShapeCharacters.setValue(8938, 8939);\n        this.mirroringShapeCharacters.setValue(8939, 8938);\n        this.mirroringShapeCharacters.setValue(8940, 8941);\n        this.mirroringShapeCharacters.setValue(8941, 8940);\n        this.mirroringShapeCharacters.setValue(8944, 8945);\n        this.mirroringShapeCharacters.setValue(8945, 8944);\n        this.mirroringShapeCharacters.setValue(8946, 8954);\n        this.mirroringShapeCharacters.setValue(8947, 8955);\n        this.mirroringShapeCharacters.setValue(8948, 8956);\n        this.mirroringShapeCharacters.setValue(8950, 8957);\n        this.mirroringShapeCharacters.setValue(8951, 8958);\n        this.mirroringShapeCharacters.setValue(8954, 8946);\n        this.mirroringShapeCharacters.setValue(8955, 8947);\n        this.mirroringShapeCharacters.setValue(8956, 8948);\n        this.mirroringShapeCharacters.setValue(8957, 8950);\n        this.mirroringShapeCharacters.setValue(8958, 8951);\n        this.mirroringShapeCharacters.setValue(8968, 8969);\n        this.mirroringShapeCharacters.setValue(8969, 8968);\n        this.mirroringShapeCharacters.setValue(8970, 8971);\n        this.mirroringShapeCharacters.setValue(8971, 8970);\n        this.mirroringShapeCharacters.setValue(9001, 9002);\n        this.mirroringShapeCharacters.setValue(9002, 9001);\n        this.mirroringShapeCharacters.setValue(10088, 10089);\n        this.mirroringShapeCharacters.setValue(10089, 10088);\n        this.mirroringShapeCharacters.setValue(10090, 10091);\n        this.mirroringShapeCharacters.setValue(10091, 10090);\n        this.mirroringShapeCharacters.setValue(10092, 10093);\n        this.mirroringShapeCharacters.setValue(10093, 10092);\n        this.mirroringShapeCharacters.setValue(10094, 10095);\n        this.mirroringShapeCharacters.setValue(10095, 10094);\n        this.mirroringShapeCharacters.setValue(10096, 10097);\n        this.mirroringShapeCharacters.setValue(10097, 10096);\n        this.mirroringShapeCharacters.setValue(10098, 10099);\n        this.mirroringShapeCharacters.setValue(10099, 10098);\n        this.mirroringShapeCharacters.setValue(10100, 10101);\n        this.mirroringShapeCharacters.setValue(10101, 10100);\n        this.mirroringShapeCharacters.setValue(10197, 10198);\n        this.mirroringShapeCharacters.setValue(10198, 10197);\n        this.mirroringShapeCharacters.setValue(10205, 10206);\n        this.mirroringShapeCharacters.setValue(10206, 10205);\n        this.mirroringShapeCharacters.setValue(10210, 10211);\n        this.mirroringShapeCharacters.setValue(10211, 10210);\n        this.mirroringShapeCharacters.setValue(10212, 10213);\n        this.mirroringShapeCharacters.setValue(10213, 10212);\n        this.mirroringShapeCharacters.setValue(10214, 10215);\n        this.mirroringShapeCharacters.setValue(10215, 10214);\n        this.mirroringShapeCharacters.setValue(10216, 10217);\n        this.mirroringShapeCharacters.setValue(10217, 10216);\n        this.mirroringShapeCharacters.setValue(10218, 10219);\n        this.mirroringShapeCharacters.setValue(10219, 10218);\n        this.mirroringShapeCharacters.setValue(10627, 10628);\n        this.mirroringShapeCharacters.setValue(10628, 10627);\n        this.mirroringShapeCharacters.setValue(10629, 10630);\n        this.mirroringShapeCharacters.setValue(10630, 10629);\n        this.mirroringShapeCharacters.setValue(10631, 10632);\n        this.mirroringShapeCharacters.setValue(10632, 10631);\n        this.mirroringShapeCharacters.setValue(10633, 10634);\n        this.mirroringShapeCharacters.setValue(10634, 10633);\n        this.mirroringShapeCharacters.setValue(10635, 10636);\n        this.mirroringShapeCharacters.setValue(10636, 10635);\n        this.mirroringShapeCharacters.setValue(10637, 10640);\n        this.mirroringShapeCharacters.setValue(10638, 10639);\n        this.mirroringShapeCharacters.setValue(10639, 10638);\n        this.mirroringShapeCharacters.setValue(10640, 10637);\n        this.mirroringShapeCharacters.setValue(10641, 10642);\n        this.mirroringShapeCharacters.setValue(10642, 10641);\n        this.mirroringShapeCharacters.setValue(10643, 10644);\n        this.mirroringShapeCharacters.setValue(10644, 10643);\n        this.mirroringShapeCharacters.setValue(10645, 10646);\n        this.mirroringShapeCharacters.setValue(10646, 10645);\n        this.mirroringShapeCharacters.setValue(10647, 10648);\n        this.mirroringShapeCharacters.setValue(10648, 10647);\n        this.mirroringShapeCharacters.setValue(10680, 8856);\n        this.mirroringShapeCharacters.setValue(10688, 10689);\n        this.mirroringShapeCharacters.setValue(10689, 10688);\n        this.mirroringShapeCharacters.setValue(10692, 10693);\n        this.mirroringShapeCharacters.setValue(10693, 10692);\n        this.mirroringShapeCharacters.setValue(10703, 10704);\n        this.mirroringShapeCharacters.setValue(10704, 10703);\n        this.mirroringShapeCharacters.setValue(10705, 10706);\n        this.mirroringShapeCharacters.setValue(10706, 10705);\n        this.mirroringShapeCharacters.setValue(10708, 10709);\n        this.mirroringShapeCharacters.setValue(10709, 10708);\n        this.mirroringShapeCharacters.setValue(10712, 10713);\n        this.mirroringShapeCharacters.setValue(10713, 10712);\n        this.mirroringShapeCharacters.setValue(10714, 10715);\n        this.mirroringShapeCharacters.setValue(10715, 10714);\n        this.mirroringShapeCharacters.setValue(10741, 8725);\n        this.mirroringShapeCharacters.setValue(10744, 10745);\n        this.mirroringShapeCharacters.setValue(10745, 10744);\n        this.mirroringShapeCharacters.setValue(10748, 10749);\n        this.mirroringShapeCharacters.setValue(10749, 10748);\n        this.mirroringShapeCharacters.setValue(10795, 10796);\n        this.mirroringShapeCharacters.setValue(10796, 10795);\n        this.mirroringShapeCharacters.setValue(10797, 10796);\n        this.mirroringShapeCharacters.setValue(10798, 10797);\n        this.mirroringShapeCharacters.setValue(10804, 10805);\n        this.mirroringShapeCharacters.setValue(10805, 10804);\n        this.mirroringShapeCharacters.setValue(10812, 10813);\n        this.mirroringShapeCharacters.setValue(10813, 10812);\n        this.mirroringShapeCharacters.setValue(10852, 10853);\n        this.mirroringShapeCharacters.setValue(10853, 10852);\n        this.mirroringShapeCharacters.setValue(10873, 10874);\n        this.mirroringShapeCharacters.setValue(10874, 10873);\n        this.mirroringShapeCharacters.setValue(10877, 10878);\n        this.mirroringShapeCharacters.setValue(10878, 10877);\n        this.mirroringShapeCharacters.setValue(10879, 10880);\n        this.mirroringShapeCharacters.setValue(10880, 10879);\n        this.mirroringShapeCharacters.setValue(10881, 10882);\n        this.mirroringShapeCharacters.setValue(10882, 10881);\n        this.mirroringShapeCharacters.setValue(10883, 10884);\n        this.mirroringShapeCharacters.setValue(10884, 10883);\n        this.mirroringShapeCharacters.setValue(10891, 10892);\n        this.mirroringShapeCharacters.setValue(10892, 10891);\n        this.mirroringShapeCharacters.setValue(10897, 10898);\n        this.mirroringShapeCharacters.setValue(10898, 10897);\n        this.mirroringShapeCharacters.setValue(10899, 10900);\n        this.mirroringShapeCharacters.setValue(10900, 10899);\n        this.mirroringShapeCharacters.setValue(10901, 10902);\n        this.mirroringShapeCharacters.setValue(10902, 10901);\n        this.mirroringShapeCharacters.setValue(10903, 10904);\n        this.mirroringShapeCharacters.setValue(10904, 10903);\n        this.mirroringShapeCharacters.setValue(10905, 10906);\n        this.mirroringShapeCharacters.setValue(10906, 10905);\n        this.mirroringShapeCharacters.setValue(10907, 10908);\n        this.mirroringShapeCharacters.setValue(10908, 10907);\n        this.mirroringShapeCharacters.setValue(10913, 10914);\n        this.mirroringShapeCharacters.setValue(10914, 10913);\n        this.mirroringShapeCharacters.setValue(10918, 10919);\n        this.mirroringShapeCharacters.setValue(10919, 10918);\n        this.mirroringShapeCharacters.setValue(10920, 10921);\n        this.mirroringShapeCharacters.setValue(10921, 10920);\n        this.mirroringShapeCharacters.setValue(10922, 10923);\n        this.mirroringShapeCharacters.setValue(10923, 10922);\n        this.mirroringShapeCharacters.setValue(10924, 10925);\n        this.mirroringShapeCharacters.setValue(10925, 10924);\n        this.mirroringShapeCharacters.setValue(10927, 10928);\n        this.mirroringShapeCharacters.setValue(10928, 10927);\n        this.mirroringShapeCharacters.setValue(10931, 10932);\n        this.mirroringShapeCharacters.setValue(10932, 10931);\n        this.mirroringShapeCharacters.setValue(10939, 10940);\n        this.mirroringShapeCharacters.setValue(10940, 10939);\n        this.mirroringShapeCharacters.setValue(10941, 10942);\n        this.mirroringShapeCharacters.setValue(10942, 10941);\n        this.mirroringShapeCharacters.setValue(10943, 10944);\n        this.mirroringShapeCharacters.setValue(10944, 10943);\n        this.mirroringShapeCharacters.setValue(10945, 10946);\n        this.mirroringShapeCharacters.setValue(10946, 10945);\n        this.mirroringShapeCharacters.setValue(10947, 10948);\n        this.mirroringShapeCharacters.setValue(10948, 10947);\n        this.mirroringShapeCharacters.setValue(10949, 10950);\n        this.mirroringShapeCharacters.setValue(10950, 10949);\n        this.mirroringShapeCharacters.setValue(10957, 10958);\n        this.mirroringShapeCharacters.setValue(10958, 10957);\n        this.mirroringShapeCharacters.setValue(10959, 10960);\n        this.mirroringShapeCharacters.setValue(10960, 10959);\n        this.mirroringShapeCharacters.setValue(10961, 10962);\n        this.mirroringShapeCharacters.setValue(10962, 10961);\n        this.mirroringShapeCharacters.setValue(10963, 10964);\n        this.mirroringShapeCharacters.setValue(10964, 10963);\n        this.mirroringShapeCharacters.setValue(10965, 10966);\n        this.mirroringShapeCharacters.setValue(10966, 10965);\n        this.mirroringShapeCharacters.setValue(10974, 8870);\n        this.mirroringShapeCharacters.setValue(10979, 8873);\n        this.mirroringShapeCharacters.setValue(10980, 8872);\n        this.mirroringShapeCharacters.setValue(10981, 8875);\n        this.mirroringShapeCharacters.setValue(10988, 10989);\n        this.mirroringShapeCharacters.setValue(10989, 10988);\n        this.mirroringShapeCharacters.setValue(10999, 11000);\n        this.mirroringShapeCharacters.setValue(11000, 10999);\n        this.mirroringShapeCharacters.setValue(11001, 11002);\n        this.mirroringShapeCharacters.setValue(11002, 11001);\n        this.mirroringShapeCharacters.setValue(12296, 12297);\n        this.mirroringShapeCharacters.setValue(12297, 12296);\n        this.mirroringShapeCharacters.setValue(12298, 12299);\n        this.mirroringShapeCharacters.setValue(12299, 12298);\n        this.mirroringShapeCharacters.setValue(12300, 12301);\n        this.mirroringShapeCharacters.setValue(12301, 12300);\n        this.mirroringShapeCharacters.setValue(12302, 12303);\n        this.mirroringShapeCharacters.setValue(12303, 12302);\n        this.mirroringShapeCharacters.setValue(12304, 12305);\n        this.mirroringShapeCharacters.setValue(12305, 12304);\n        this.mirroringShapeCharacters.setValue(12308, 12309);\n        this.mirroringShapeCharacters.setValue(12309, 12308);\n        this.mirroringShapeCharacters.setValue(12310, 12311);\n        this.mirroringShapeCharacters.setValue(12311, 12310);\n        this.mirroringShapeCharacters.setValue(12312, 12313);\n        this.mirroringShapeCharacters.setValue(12313, 12312);\n        this.mirroringShapeCharacters.setValue(12314, 12315);\n        this.mirroringShapeCharacters.setValue(12315, 12314);\n        this.mirroringShapeCharacters.setValue(65288, 65289);\n        this.mirroringShapeCharacters.setValue(65289, 65288);\n        this.mirroringShapeCharacters.setValue(65308, 65310);\n        this.mirroringShapeCharacters.setValue(65310, 65308);\n        this.mirroringShapeCharacters.setValue(65339, 65341);\n        this.mirroringShapeCharacters.setValue(65341, 65339);\n        this.mirroringShapeCharacters.setValue(65371, 65373);\n        this.mirroringShapeCharacters.setValue(65373, 65371);\n        this.mirroringShapeCharacters.setValue(65375, 65376);\n        this.mirroringShapeCharacters.setValue(65376, 65375);\n        this.mirroringShapeCharacters.setValue(65378, 65379);\n        this.mirroringShapeCharacters.setValue(65379, 65378);\n    };\n    return Bidi;\n}());\nexport { Bidi };\nvar RtlCharacters = /** @class */ (function () {\n    //#endregion\n    //#region constructors\n    function RtlCharacters() {\n        //#region fields\n        /// <summary>\n        /// Specifies the character types.\n        /// </summary>\n        this.types = [];\n        /// <summary>\n        /// Specifies the text order (RTL or LTR).\n        /// </summary>\n        this.textOrder = -1;\n        /// <summary>\n        /// Specifies the RTL character types.\n        /// </summary>\n        /* tslint:disable-next-line:prefer-array-literal */\n        this.rtlCharacterTypes = new Array(65536);\n        //#endregion\n        //#region constants\n        /// <summary>\n        /// Left-to-Right (Non-European or non-Arabic digits).\n        /// </summary>\n        this.L = 0;\n        /// <summary>\n        /// Left-to-Right Embedding\n        /// </summary>\n        this.LRE = 1;\n        /// <summary>\n        /// Left-to-Right Override\n        /// </summary>\n        this.LRO = 2;\n        /// <summary>\n        /// Right-to-Left (Hebrew alphabet, and related punctuation).\n        /// </summary>\n        this.R = 3;\n        /// <summary>\n        /// Right-to-Left Arabic \n        /// </summary>\n        this.AL = 4;\n        /// <summary>\n        /// Right-to-Left Embedding.\n        /// </summary>\n        this.RLE = 5;\n        /// <summary>\n        /// Right-to-Left Override\n        /// </summary>\n        this.RLO = 6;\n        /// <summary>\n        /// Pop Directional Format\n        /// </summary>\n        this.PDF = 7;\n        /// <summary>\n        /// European Number (European digits, Eastern Arabic-Indic digits).\n        /// </summary>\n        this.EN = 8;\n        /// <summary>\n        /// European Number Separator (Plus sign, Minus sign).\n        /// </summary>\n        this.ES = 9;\n        /// <summary>\n        /// European Number Terminator (Degree sign, currency symbols).\n        /// </summary>\n        this.ET = 10;\n        /// <summary>\n        /// Arabic Number (Arabic-Indic digits, Arabic decimal and thousands separators).\n        /// </summary>\n        this.AN = 11;\n        /// <summary>\n        /// Common Number Separator (Colon, Comma, Full Stop, No-Break Space.\n        /// </summary>\n        this.CS = 12;\n        /// <summary>\n        /// Nonspacing Mark (Characters with the General_Category values).\n        /// </summary>\n        this.NSM = 13;\n        /// <summary>\n        /// Boundary Neutral (Default ignorables, non-characters, and control characters, other than those explicitly given other types.)\n        /// </summary>\n        this.BN = 14;\n        /// <summary>\n        /// Paragraph Separator (Paragraph separator, appropriate Newline Functions, higher-level protocol paragraph determination).\n        /// </summary>\n        this.B = 15;\n        /// <summary>\n        /// \tSegment Separator (tab).\n        /// </summary>\n        this.S = 16;\n        /// <summary>\n        /// Whitespace (Space, Figure space, Line separator, Form feed, General Punctuation spaces).\n        /// </summary>\n        this.WS = 17;\n        /// <summary>\n        /// Other Neutrals (All other characters, including object replacement character).\n        /// </summary>\n        this.ON = 18;\n        /// <summary>\n        /// RTL character types.\n        /// </summary>\n        this.charTypes = [\n            this.L, this.EN, this.BN, this.ES, this.ES, this.S, this.ET, this.ET, this.B, this.AN, this.AN, this.S, this.CS, this.CS,\n            this.WS, this.NSM, this.NSM, this.B, this.BN, 27, this.BN, 28, 30, this.B, 31, 31, this.S, 32, 32, this.WS, 33, 34,\n            this.ON, 35, 37, this.ET, 38, 42, this.ON, 43, 43, this.ET, 44, 44, this.CS, 45, 45, this.ET, 46, 46, this.CS,\n            47, 47, this.CS, 48, 57, this.EN, 58, 58, this.CS, 59, 64, this.ON, 65, 90, this.L, 91, 96, this.ON, 97, 122, this.L,\n            123, 126, this.ON, 127, 132, this.BN, 133, 133, this.B, 134, 159, this.BN, 160, 160, this.CS,\n            161, 161, this.ON, 162, 165, this.ET, 166, 169, this.ON, 170, 170, this.L, 171, 175, this.ON,\n            176, 177, this.ET, 178, 179, this.EN, 180, 180, this.ON, 181, 181, this.L, 182, 184, this.ON,\n            185, 185, this.EN, 186, 186, this.L, 187, 191, this.ON, 192, 214, this.L, 215, 215, this.ON,\n            216, 246, this.L, 247, 247, this.ON, 248, 696, this.L, 697, 698, this.ON, 699, 705, this.L,\n            706, 719, this.ON, 720, 721, this.L, 722, 735, this.ON, 736, 740, this.L, 741, 749, this.ON,\n            750, 750, this.L, 751, 767, this.ON, 768, 855, this.NSM, 856, 860, this.L, 861, 879, this.NSM,\n            880, 883, this.L, 884, 885, this.ON, 886, 893, this.L, 894, 894, this.ON, 895, 899, this.L,\n            900, 901, this.ON, 902, 902, this.L, 903, 903, this.ON, 904, 1013, this.L, 1014, 1014, this.ON,\n            1015, 1154, this.L, 1155, 1158, this.NSM, 1159, 1159, this.L, 1160, 1161, this.NSM,\n            1162, 1417, this.L, 1418, 1418, this.ON, 1419, 1424, this.L, 1425, 1441, this.NSM,\n            1442, 1442, this.L, 1443, 1465, this.NSM, 1466, 1466, this.L, 1467, 1469, this.NSM,\n            1470, 1470, this.R, 1471, 1471, this.NSM, 1472, 1472, this.R, 1473, 1474, this.NSM,\n            1475, 1475, this.R, 1476, 1476, this.NSM, 1477, 1487, this.L, 1488, 1514, this.R,\n            1515, 1519, this.L, 1520, 1524, this.R, 1525, 1535, this.L, 1536, 1539, this.AL,\n            1540, 1547, this.L, 1548, 1548, this.CS, 1549, 1549, this.AL, 1550, 1551, this.ON,\n            1552, 1557, this.NSM, 1558, 1562, this.L, 1563, 1563, this.AL, 1564, 1566, this.L,\n            1567, 1567, this.AL, 1568, 1568, this.L, 1569, 1594, this.AL, 1595, 1599, this.L,\n            1600, 1610, this.AL, 1611, 1624, this.NSM, 1625, 1631, this.L, 1632, 1641, this.AN,\n            1642, 1642, this.ET, 1643, 1644, this.AN, 1645, 1647, this.AL, 1648, 1648, this.NSM,\n            1649, 1749, this.AL, 1750, 1756, this.NSM, 1757, 1757, this.AL, 1758, 1764, this.NSM,\n            1765, 1766, this.AL, 1767, 1768, this.NSM, 1769, 1769, this.ON, 1770, 1773, this.NSM,\n            1774, 1775, this.AL, 1776, 1785, this.EN, 1786, 1805, this.AL, 1806, 1806, this.L,\n            1807, 1807, this.BN, 1808, 1808, this.AL, 1809, 1809, this.NSM, 1810, 1839, this.AL,\n            1840, 1866, this.NSM, 1867, 1868, this.L, 1869, 1871, this.AL, 1872, 1919, this.L,\n            1920, 1957, this.AL, 1958, 1968, this.NSM, 1969, 1969, this.AL, 1970, 2304, this.L,\n            2305, 2306, this.NSM, 2307, 2363, this.L, 2364, 2364, this.NSM, 2365, 2368, this.L,\n            2369, 2376, this.NSM, 2377, 2380, this.L, 2381, 2381, this.NSM, 2382, 2384, this.L,\n            2385, 2388, this.NSM, 2389, 2401, this.L, 2402, 2403, this.NSM, 2404, 2432, this.L,\n            2433, 2433, this.NSM, 2434, 2491, this.L, 2492, 2492, this.NSM, 2493, 2496, this.L,\n            2497, 2500, this.NSM, 2501, 2508, this.L, 2509, 2509, this.NSM, 2510, 2529, this.L,\n            2530, 2531, this.NSM, 2532, 2545, this.L, 2546, 2547, this.ET, 2548, 2560, this.L,\n            2561, 2562, this.NSM, 2563, 2619, this.L, 2620, 2620, this.NSM, 2621, 2624, this.L,\n            2625, 2626, this.NSM, 2627, 2630, this.L, 2631, 2632, this.NSM, 2633, 2634, this.L,\n            2635, 2637, this.NSM, 2638, 2671, this.L, 2672, 2673, this.NSM, 2674, 2688, this.L,\n            2689, 2690, this.NSM, 2691, 2747, this.L, 2748, 2748, this.NSM, 2749, 2752, this.L,\n            2753, 2757, this.NSM, 2758, 2758, this.L, 2759, 2760, this.NSM, 2761, 2764, this.L,\n            2765, 2765, this.NSM, 2766, 2785, this.L, 2786, 2787, this.NSM, 2788, 2800, this.L,\n            2801, 2801, this.ET, 2802, 2816, this.L, 2817, 2817, this.NSM, 2818, 2875, this.L,\n            2876, 2876, this.NSM, 2877, 2878, this.L, 2879, 2879, this.NSM, 2880, 2880, this.L,\n            2881, 2883, this.NSM, 2884, 2892, this.L, 2893, 2893, this.NSM, 2894, 2901, this.L,\n            2902, 2902, this.NSM, 2903, 2945, this.L, 2946, 2946, this.NSM, 2947, 3007, this.L,\n            3008, 3008, this.NSM, 3009, 3020, this.L, 3021, 3021, this.NSM, 3022, 3058, this.L,\n            3059, 3064, this.ON, 3065, 3065, this.ET, 3066, 3066, this.ON, 3067, 3133, this.L,\n            3134, 3136, this.NSM, 3137, 3141, this.L, 3142, 3144, this.NSM, 3145, 3145, this.L,\n            3146, 3149, this.NSM, 3150, 3156, this.L, 3157, 3158, this.NSM, 3159, 3259, this.L,\n            3260, 3260, this.NSM, 3261, 3275, this.L, 3276, 3277, this.NSM, 3278, 3392, this.L,\n            3393, 3395, this.NSM, 3396, 3404, this.L, 3405, 3405, this.NSM, 3406, 3529, this.L,\n            3530, 3530, this.NSM, 3531, 3537, this.L, 3538, 3540, this.NSM, 3541, 3541, this.L,\n            3542, 3542, this.NSM, 3543, 3632, this.L, 3633, 3633, this.NSM, 3634, 3635, this.L,\n            3636, 3642, this.NSM, 3643, 3646, this.L, 3647, 3647, this.ET, 3648, 3654, this.L,\n            3655, 3662, this.NSM, 3663, 3760, this.L, 3761, 3761, this.NSM, 3762, 3763, this.L,\n            3764, 3769, this.NSM, 3770, 3770, this.L, 3771, 3772, this.NSM, 3773, 3783, this.L,\n            3784, 3789, this.NSM, 3790, 3863, this.L, 3864, 3865, this.NSM, 3866, 3892, this.L,\n            3893, 3893, this.NSM, 3894, 3894, this.L, 3895, 3895, this.NSM, 3896, 3896, this.L,\n            3897, 3897, this.NSM, 3898, 3901, this.ON, 3902, 3952, this.L, 3953, 3966, this.NSM,\n            3967, 3967, this.L, 3968, 3972, this.NSM, 3973, 3973, this.L, 3974, 3975, this.NSM,\n            3976, 3983, this.L, 3984, 3991, this.NSM, 3992, 3992, this.L, 3993, 4028, this.NSM,\n            4029, 4037, this.L, 4038, 4038, this.NSM, 4039, 4140, this.L, 4141, 4144, this.NSM,\n            4145, 4145, this.L, 4146, 4146, this.NSM, 4147, 4149, this.L, 4150, 4151, this.NSM,\n            4152, 4152, this.L, 4153, 4153, this.NSM, 4154, 4183, this.L, 4184, 4185, this.NSM,\n            4186, 5759, this.L, 5760, 5760, this.WS, 5761, 5786, this.L, 5787, 5788, this.ON,\n            5789, 5905, this.L, 5906, 5908, this.NSM, 5909, 5937, this.L, 5938, 5940, this.NSM,\n            5941, 5969, this.L, 5970, 5971, this.NSM, 5972, 6001, this.L, 6002, 6003, this.NSM,\n            6004, 6070, this.L, 6071, 6077, this.NSM, 6078, 6085, this.L, 6086, 6086, this.NSM,\n            6087, 6088, this.L, 6089, 6099, this.NSM, 6100, 6106, this.L, 6107, 6107, this.ET,\n            6108, 6108, this.L, 6109, 6109, this.NSM, 6110, 6127, this.L, 6128, 6137, this.ON,\n            6138, 6143, this.L, 6144, 6154, this.ON, 6155, 6157, this.NSM, 6158, 6158, this.WS,\n            6159, 6312, this.L, 6313, 6313, this.NSM, 6314, 6431, this.L, 6432, 6434, this.NSM,\n            6435, 6438, this.L, 6439, 6443, this.NSM, 6444, 6449, this.L, 6450, 6450, this.NSM,\n            6451, 6456, this.L, 6457, 6459, this.NSM, 6460, 6463, this.L, 6464, 6464, this.ON,\n            6465, 6467, this.L, 6468, 6469, this.ON, 6470, 6623, this.L, 6624, 6655, this.ON,\n            6656, 8124, this.L, 8125, 8125, this.ON, 8126, 8126, this.L, 8127, 8129, this.ON,\n            8130, 8140, this.L, 8141, 8143, this.ON, 8144, 8156, this.L, 8157, 8159, this.ON,\n            8160, 8172, this.L, 8173, 8175, this.ON, 8176, 8188, this.L, 8189, 8190, this.ON,\n            8191, 8191, this.L, 8192, 8202, this.WS, 8203, 8205, this.BN, 8206, 8206, this.L,\n            8207, 8207, this.R, 8208, 8231, this.ON, 8232, 8232, this.WS, 8233, 8233, this.B,\n            8234, 8234, this.LRE, 8235, 8235, this.RLE, 8236, 8236, this.PDF, 8237, 8237, this.LRO,\n            8238, 8238, this.RLO, 8239, 8239, this.WS, 8240, 8244, this.ET, 8245, 8276, this.ON,\n            8277, 8278, this.L, 8279, 8279, this.ON, 8280, 8286, this.L, 8287, 8287, this.WS,\n            8288, 8291, this.BN, 8292, 8297, this.L, 8298, 8303, this.BN, 8304, 8304, this.EN,\n            8305, 8307, this.L, 8308, 8313, this.EN, 8314, 8315, this.ET, 8316, 8318, this.ON,\n            8319, 8319, this.L, 8320, 8329, this.EN, 8330, 8331, this.ET, 8332, 8334, this.ON,\n            8335, 8351, this.L, 8352, 8369, this.ET, 8370, 8399, this.L, 8400, 8426, this.NSM,\n            8427, 8447, this.L, 8448, 8449, this.ON, 8450, 8450, this.L, 8451, 8454, this.ON,\n            8455, 8455, this.L, 8456, 8457, this.ON, 8458, 8467, this.L, 8468, 8468, this.ON,\n            8469, 8469, this.L, 8470, 8472, this.ON, 8473, 8477, this.L, 8478, 8483, this.ON,\n            8484, 8484, this.L, 8485, 8485, this.ON, 8486, 8486, this.L, 8487, 8487, this.ON,\n            8488, 8488, this.L, 8489, 8489, this.ON, 8490, 8493, this.L, 8494, 8494, this.ET,\n            8495, 8497, this.L, 8498, 8498, this.ON, 8499, 8505, this.L, 8506, 8507, this.ON,\n            8508, 8511, this.L, 8512, 8516, this.ON, 8517, 8521, this.L, 8522, 8523, this.ON,\n            8524, 8530, this.L, 8531, 8543, this.ON, 8544, 8591, this.L, 8592, 8721, this.ON,\n            8722, 8723, this.ET, 8724, 9013, this.ON, 9014, 9082, this.L, 9083, 9108, this.ON,\n            9109, 9109, this.L, 9110, 9168, this.ON, 9169, 9215, this.L, 9216, 9254, this.ON,\n            9255, 9279, this.L, 9280, 9290, this.ON, 9291, 9311, this.L, 9312, 9371, this.EN,\n            9372, 9449, this.L, 9450, 9450, this.EN, 9451, 9751, this.ON, 9752, 9752, this.L,\n            9753, 9853, this.ON, 9854, 9855, this.L, 9856, 9873, this.ON, 9874, 9887, this.L,\n            9888, 9889, this.ON, 9890, 9984, this.L, 9985, 9988, this.ON, 9989, 9989, this.L,\n            9990, 9993, this.ON, 9994, 9995, this.L, 9996, 10023, this.ON, 10024, 10024, this.L,\n            10025, 10059, this.ON, 10060, 10060, this.L, 10061, 10061, this.ON, 10062, 10062, this.L,\n            10063, 10066, this.ON, 10067, 10069, this.L, 10070, 10070, this.ON, 10071, 10071, this.L,\n            10072, 10078, this.ON, 10079, 10080, this.L, 10081, 10132, this.ON, 10133, 10135, this.L,\n            10136, 10159, this.ON, 10160, 10160, this.L, 10161, 10174, this.ON, 10175, 10191, this.L,\n            10192, 10219, this.ON, 10220, 10223, this.L, 10224, 11021, this.ON, 11022, 11903, this.L,\n            11904, 11929, this.ON, 11930, 11930, this.L, 11931, 12019, this.ON, 12020, 12031, this.L,\n            12032, 12245, this.ON, 12246, 12271, this.L, 12272, 12283, this.ON, 12284, 12287, this.L,\n            12288, 12288, this.WS, 12289, 12292, this.ON, 12293, 12295, this.L, 12296, 12320, this.ON,\n            12321, 12329, this.L, 12330, 12335, this.NSM, 12336, 12336, this.ON, 12337, 12341, this.L,\n            12342, 12343, this.ON, 12344, 12348, this.L, 12349, 12351, this.ON, 12352, 12440, this.L,\n            12441, 12442, this.NSM, 12443, 12444, this.ON, 12445, 12447, this.L, 12448, 12448, this.ON,\n            12449, 12538, this.L, 12539, 12539, this.ON, 12540, 12828, this.L, 12829, 12830, this.ON,\n            12831, 12879, this.L, 12880, 12895, this.ON, 12896, 12923, this.L, 12924, 12925, this.ON,\n            12926, 12976, this.L, 12977, 12991, this.ON, 12992, 13003, this.L, 13004, 13007, this.ON,\n            13008, 13174, this.L, 13175, 13178, this.ON, 13179, 13277, this.L, 13278, 13279, this.ON,\n            13280, 13310, this.L, 13311, 13311, this.ON, 13312, 19903, this.L, 19904, 19967, this.ON,\n            19968, 42127, this.L, 42128, 42182, this.ON, 42183, 64284, this.L, 64285, 64285, this.R,\n            64286, 64286, this.NSM, 64287, 64296, this.R, 64297, 64297, this.ET, 64298, 64310, this.R,\n            64311, 64311, this.L, 64312, 64316, this.R, 64317, 64317, this.L, 64318, 64318, this.R,\n            64319, 64319, this.L, 64320, 64321, this.R, 64322, 64322, this.L, 64323, 64324, this.R,\n            64325, 64325, this.L, 64326, 64335, this.R, 64336, 64433, this.AL, 64434, 64466, this.L,\n            64467, 64829, this.AL, 64830, 64831, this.ON, 64832, 64847, this.L, 64848, 64911, this.AL,\n            64912, 64913, this.L, 64914, 64967, this.AL, 64968, 65007, this.L, 65008, 65020, this.AL,\n            65021, 65021, this.ON, 65022, 65023, this.L, 65024, 65039, this.NSM, 65040, 65055, this.L,\n            65056, 65059, this.NSM, 65060, 65071, this.L, 65072, 65103, this.ON, 65104, 65104, this.CS,\n            65105, 65105, this.ON, 65106, 65106, this.CS, 65107, 65107, this.L, 65108, 65108, this.ON,\n            65109, 65109, this.CS, 65110, 65118, this.ON, 65119, 65119, this.ET, 65120, 65121, this.ON,\n            65122, 65123, this.ET, 65124, 65126, this.ON, 65127, 65127, this.L, 65128, 65128, this.ON,\n            65129, 65130, this.ET, 65131, 65131, this.ON, 65132, 65135, this.L, 65136, 65140, this.AL,\n            65141, 65141, this.L, 65142, 65276, this.AL, 65277, 65278, this.L, 65279, 65279, this.BN,\n            65280, 65280, this.L, 65281, 65282, this.ON, 65283, 65285, this.ET, 65286, 65290, this.ON,\n            65291, 65291, this.ET, 65292, 65292, this.CS, 65293, 65293, this.ET, 65294, 65294, this.CS,\n            65295, 65295, this.ES, 65296, 65305, this.EN, 65306, 65306, this.CS, 65307, 65312, this.ON,\n            65313, 65338, this.L, 65339, 65344, this.ON, 65345, 65370, this.L, 65371, 65381, this.ON,\n            65382, 65503, this.L, 65504, 65505, this.ET, 65506, 65508, this.ON, 65509, 65510, this.ET,\n            65511, 65511, this.L, 65512, 65518, this.ON, 65519, 65528, this.L, 65529, 65531, this.BN,\n            65532, 65533, this.ON, 65534, 65535, this.L\n        ];\n        for (var i = 0; i < this.charTypes.length; ++i) {\n            var start = this.charTypes[i];\n            var end = this.charTypes[++i];\n            var b = this.charTypes[++i];\n            while (start <= end) {\n                this.rtlCharacterTypes[start++] = b;\n            }\n        }\n    }\n    //#endregion\n    //#region implementation\n    RtlCharacters.prototype.getVisualOrder = function (inputText, isRtl) {\n        this.types = this.getCharacterCode(inputText);\n        this.textOrder = isRtl ? this.LRE : this.L;\n        this.doVisualOrder();\n        var result = [];\n        for (var i = 0; i < this.levels.length; i++) {\n            result[i] = this.levels[i];\n        }\n        return result;\n    };\n    RtlCharacters.prototype.getCharacterCode = function (text) {\n        var characterCodes = [];\n        for (var i = 0; i < text.length; i++) {\n            characterCodes[i] = this.rtlCharacterTypes[text[i].charCodeAt(0)];\n        }\n        return characterCodes;\n    };\n    RtlCharacters.prototype.setDefaultLevels = function () {\n        for (var i = 0; i < this.length; i++) {\n            this.levels[i] = this.textOrder;\n        }\n    };\n    RtlCharacters.prototype.setLevels = function () {\n        this.setDefaultLevels();\n        for (var n = 0; n < this.length; ++n) {\n            var level = this.levels[n];\n            if ((level & 0x80) !== 0) {\n                level &= 0x7f;\n                this.result[n] = ((level & 0x1) === 0) ? this.L : this.R;\n            }\n            this.levels[n] = level;\n        }\n    };\n    RtlCharacters.prototype.updateLevels = function (index, level, length) {\n        if ((level & 1) === 0) {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] === this.R) {\n                    this.levels[i] += 1;\n                }\n                else if (this.result[i] !== this.L) {\n                    this.levels[i] += 2;\n                }\n            }\n        }\n        else {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] !== this.R) {\n                    this.levels[i] += 1;\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.doVisualOrder = function () {\n        this.length = this.types.length;\n        this.result = this.types;\n        this.levels = [];\n        this.setLevels();\n        this.length = this.getEmbeddedCharactersLength();\n        var preview = this.textOrder;\n        var i = 0;\n        while (i < this.length) {\n            var level = this.levels[i];\n            var preType = ((Math.max(preview, level) & 0x1) === 0) ? this.L : this.R;\n            var length_1 = i + 1;\n            while (length_1 < this.length && this.levels[length_1] === level) {\n                ++length_1;\n            }\n            var success = length_1 < this.length ? this.levels[length_1] : this.textOrder;\n            var type = ((Math.max(success, level) & 0x1) === 0) ? this.L : this.R;\n            this.checkNSM(i, length_1, level, preType, type);\n            this.updateLevels(i, level, length_1);\n            preview = level;\n            i = length_1;\n        }\n        this.checkEmbeddedCharacters(this.length);\n    };\n    RtlCharacters.prototype.getEmbeddedCharactersLength = function () {\n        var index = 0;\n        for (var i = 0; i < this.length; ++i) {\n            if (!(this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN)) {\n                this.result[index] = this.result[i];\n                this.levels[index] = this.levels[i];\n                index++;\n            }\n        }\n        return index;\n    };\n    RtlCharacters.prototype.checkEmbeddedCharacters = function (length) {\n        for (var i = this.types.length - 1; i >= 0; --i) {\n            if (this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN) {\n                this.result[i] = this.types[i];\n                this.levels[i] = -1;\n            }\n            else {\n                length -= 1;\n                this.result[i] = this.result[length];\n                this.levels[i] = this.levels[length];\n            }\n        }\n        for (var i = 0; i < this.types.length; i++) {\n            if (this.levels[i] === -1) {\n                if (i === 0) {\n                    this.levels[i] = this.textOrder;\n                }\n                else {\n                    this.levels[i] = this.levels[i - 1];\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.checkNSM = function (index, length, level, startType, endType) {\n        var charType = startType;\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.NSM) {\n                this.result[i] = charType;\n            }\n            else {\n                charType = this.result[i];\n            }\n        }\n        this.checkEuropeanDigits(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanDigits = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R || this.result[j] === this.AL) {\n                        if (this.result[j] === this.AL) {\n                            this.result[i] = this.AN;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        this.checkArabicCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkArabicCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.AL) {\n                this.result[i] = this.R;\n            }\n        }\n        this.checkEuropeanNumberSeparator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberSeparator = function (index, length, level, startType, endType) {\n        for (var i = index + 1; i < length - 1; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.CS) {\n                var preview = this.result[i - 1];\n                var success = this.result[i + 1];\n                if (preview === this.EN && success === this.EN) {\n                    this.result[i] = this.EN;\n                }\n                else if (this.result[i] === this.CS && preview === this.AN && success === this.AN) {\n                    this.result[i] = this.AN;\n                }\n            }\n        }\n        this.checkEuropeanNumberTerminator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberTerminator = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ET) {\n                var s = i;\n                var b = [];\n                b.push(this.ET);\n                var l = this.getLength(s, length, b);\n                var data = s === index ? startType : this.result[s - 1];\n                if (data !== this.EN) {\n                    data = (l === length) ? endType : this.result[l];\n                }\n                if (data === this.EN) {\n                    for (var j = s; j < l; ++j) {\n                        this.result[j] = this.EN;\n                    }\n                }\n                i = l;\n            }\n        }\n        this.checkOtherNeutrals(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherNeutrals = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.ET || this.result[i] === this.CS) {\n                this.result[i] = this.ON;\n            }\n        }\n        this.checkOtherCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                var pst = startType;\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R) {\n                        pst = this.result[j];\n                        break;\n                    }\n                }\n                if (pst === this.L) {\n                    this.result[i] = this.L;\n                }\n            }\n        }\n        this.checkCommanCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.getLength = function (index, length, validSet) {\n        --index;\n        while (++index < length) {\n            var t = this.result[index];\n            for (var i = 0; i < validSet.length; ++i) {\n                if (t === validSet[i]) {\n                    index = this.getLength(++index, length, validSet);\n                }\n            }\n            return index;\n        }\n        return length;\n    };\n    RtlCharacters.prototype.checkCommanCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.WS || this.result[i] === this.ON || this.result[i] === this.B ||\n                this.result[i] === this.S) {\n                var s = i;\n                var byte = [this.B, this.S, this.WS, this.ON];\n                var l = this.getLength(s, length, byte);\n                var lt = 0;\n                var tt = 0;\n                var rt = 0;\n                if (s === index) {\n                    lt = startType;\n                }\n                else {\n                    lt = this.result[s - 1];\n                    if (lt === this.AN) {\n                        lt = this.R;\n                    }\n                    else if (lt === this.EN) {\n                        lt = this.R;\n                    }\n                }\n                if (l === length) {\n                    tt = endType;\n                }\n                else {\n                    tt = this.result[l];\n                    if (tt === this.AN) {\n                        tt = this.R;\n                    }\n                    else if (tt === this.EN) {\n                        tt = this.R;\n                    }\n                }\n                if (lt === tt) {\n                    rt = lt;\n                }\n                else {\n                    rt = ((level & 0x1) === 0) ? this.L : this.R;\n                }\n                for (var j = s; j < l; ++j) {\n                    this.result[j] = rt;\n                }\n                i = l;\n            }\n        }\n    };\n    return RtlCharacters;\n}());\nexport { RtlCharacters };\n","import { PdfString } from './../../primitives/pdf-string';\nimport { ArabicShapeRenderer } from './rtl/rtl-text-shape';\nimport { PdfTextDirection } from './../enum';\nimport { Bidi } from './rtl/rtl-bidirectional';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar RtlRenderer = /** @class */ (function () {\n    function RtlRenderer() {\n        //region Constants\n        /// Open bracket symbol.\n        /// </summary>\n        this.openBracket = '(';\n        /// <summary>\n        /// Close bracket symbol.\n        /// </summary>\n        this.closeBracket = ')';\n        //#endregion\n    }\n    //#region Constructors\n    /// <summary>\n    /// Initializes a new instance of the <see cref=\"RtlRenderer\"/> class.\n    /// </summary>\n    // public constructor() {\n    // }\n    //#region Public Methods\n    /// <summary>\n    /// Layouts text. Changes blocks position in the RTL text.\n    /// Ligates the text if needed.\n    /// </summary>\n    /// <param name=\"line\">Line of the text.</param>\n    /// <param name=\"font\">Font to be used for string printing.</param>\n    /// <param name=\"rtl\">Font alignment.</param>\n    /// <param name=\"wordSpace\">Indicates whether Word Spacing used or not.</param>\n    /// <returns>Layout string.</returns>\n    RtlRenderer.prototype.layout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var result = [];\n        if (font.Unicode) {\n            result = this.customLayout(line, rtl, format, font, wordSpace);\n        }\n        else {\n            result = [];\n            result[0] = line;\n        }\n        return result;\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words and using correct lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    RtlRenderer.prototype.splitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var words = [];\n        var system = false;\n        if (!system || words == null) {\n            words = this.customSplitLayout(line, font, rtl, wordSpace, format);\n        }\n        return words;\n    };\n    //#endregion\n    //#region Implementation\n    // private isEnglish( word : string) : boolean\n    // {\n    //     let c : string = (word.length > 0) ? word[0] : '';\n    //     return (c >= '0' && c < 'ÿ');\n    // }\n    // private keepOrder( words : string, startIndex : number, count: number, result : string[], resultIndex : number) : void\n    // {\n    //     for (let i : number = 0, ri = resultIndex - count + 1; i < count; ++i, ++ri) {\n    //         result[ri] = words[i + startIndex];\n    //     }\n    // }\n    /// <summary>\n    /// Uses system API to layout the text.\n    /// </summary>\n    /// <param name=\"line\">Line of the text to be layouted.</param>\n    /// <param name=\"font\">Font which is used for text printing.</param>\n    /// <param name=\"rtl\">Indicates whether we use RTL or RTL lay outing of the text container.</param>\n    /// <returns>Layout string.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.getGlyphIndex = function (line, font, rtl, /*out*/ glyphs, custom) {\n        var success = true;\n        var fail = false;\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        glyphs = null;\n        if (line.length === 0) {\n            return { success: fail, glyphs: glyphs };\n        }\n        var renderer = new ArabicShapeRenderer();\n        var text = renderer.shape(line, 0);\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        glyphs = new Uint16Array(text.length);\n        var i = 0;\n        for (var k = 0, len = text.length; k < len; k++) {\n            var ch = text[k];\n            var glyphInfo = ttfReader.getGlyph(ch);\n            if (glyphInfo !== null && typeof glyphInfo !== 'undefined') {\n                glyphs[i++] = (glyphInfo).index;\n            }\n        }\n        return { success: success, glyphs: glyphs };\n    };\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customLayout = function (line, rtl, format, font, wordSpace) {\n        if (wordSpace === null || typeof wordSpace === 'undefined') {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            var result = null;\n            //bidirectional order.\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                var bidi = new Bidi();\n                result = bidi.getLogicalToVisualString(line, rtl);\n            }\n            return result;\n        }\n        else {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException : font');\n            }\n            var layouted = null;\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                var renderer = new ArabicShapeRenderer();\n                var txt = renderer.shape(line, 0);\n                layouted = this.customLayout(txt, rtl, format);\n            }\n            // else {\n            //     layouted = this.customLayout(line, rtl, format);\n            // }\n            // We have unicode font, but from the file.        \n            var result = [];\n            // Split the text by words if word spacing is not default.\n            if (wordSpace) {\n                var words = layouted.split('');\n                var count = words.length;\n                for (var i = 0; i < count; i++) {\n                    words[i] = this.addChars(font, words[i]);\n                }\n                result = words;\n            }\n            else {\n                result = [];\n                result[0] = this.addChars(font, layouted);\n            }\n            return result;\n        }\n    };\n    /// <summary>\n    /// Add information about used glyphs to the font.\n    /// </summary>\n    /// <param name=\"font\">Font used for text rendering.</param>\n    /// <param name=\"glyphs\">Array of used glyphs.</param>\n    /// <returns>String in the form to be written to the file.</returns>\n    RtlRenderer.prototype.addChars = function (font, glyphs) {\n        var line = glyphs;\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        var text = line;\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        font.setSymbols(text);\n        // Reconvert string according to unicode standard.\n        text = ttfReader.convertString(text);\n        var bytes = PdfString.toUnicodeArray(text, false);\n        text = PdfString.byteToString(bytes);\n        return text;\n        // else {\n        //     if (font == null) {\n        //         throw new Error('ArgumentNullException : font');\n        //     }\n        //     if (glyphs == null) {\n        //         throw new Error('ArgumentNullException : glyphs');\n        //     }\n        //     // Mark the chars as used.\n        //     let text : string = '';\n        //     font.setSymbols(glyphs);\n        //     // Create string from the glyphs.\n        //     \n        //     let chars : string[] = [];\n        //     for (let i : number = 0; i < glyphs.length; i++) {\n        //         chars[i] = glyphs[i].toString();\n        //     }\n        //     for (let j : number = 0 ; j < chars.length; j++) {\n        //         text = text + chars[j];\n        //     }\n        //     let bytes : number[] = PdfString.toUnicodeArray(text, false);\n        //     text = PdfString.byteToString(bytes);\n        //     return text;\n        // }\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words by using custom lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customSplitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var reversedLine = this.customLayout(line, rtl, format);\n        var words = reversedLine.split('');\n        return words;\n    };\n    return RtlRenderer;\n}());\nexport { RtlRenderer };\n","/**\n * public Enum for `PdfLayoutType`.\n * @private\n */\nexport var PdfLayoutType;\n(function (PdfLayoutType) {\n    /**\n     * Specifies the type of `Paginate`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"Paginate\"] = 0] = \"Paginate\";\n    /**\n     * Specifies the type of `OnePage`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"OnePage\"] = 1] = \"OnePage\";\n})(PdfLayoutType || (PdfLayoutType = {}));\n/**\n * public Enum for `PdfLayoutBreakType`.\n * @private\n */\nexport var PdfLayoutBreakType;\n(function (PdfLayoutBreakType) {\n    /**\n     * Specifies the type of `FitPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitPage\"] = 0] = \"FitPage\";\n    /**\n     * Specifies the type of `FitElement`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitElement\"] = 1] = \"FitElement\";\n    /**\n     * Specifies the type of `FitColumnsToPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitColumnsToPage\"] = 2] = \"FitColumnsToPage\";\n})(PdfLayoutBreakType || (PdfLayoutBreakType = {}));\nexport var PathPointType;\n(function (PathPointType) {\n    /**\n     * Specifies the path point type of `Start`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Start\"] = 0] = \"Start\";\n    /**\n     * Specifies the path point type of `Line`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Line\"] = 1] = \"Line\";\n    /**\n     * Specifies the path point type of `Bezier3`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Bezier3\"] = 3] = \"Bezier3\";\n    /**\n     * Specifies the path point type of `Bezier`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Bezier\"] = 3] = \"Bezier\";\n    /**\n     * Specifies the path point type of `PathTypeMask`.\n     * @private\n     */\n    PathPointType[PathPointType[\"PathTypeMask\"] = 7] = \"PathTypeMask\";\n    /**\n     * Specifies the path point type of `DashMode`.\n     * @private\n     */\n    PathPointType[PathPointType[\"DashMode\"] = 16] = \"DashMode\";\n    /**\n     * Specifies the path point type of `PathMarker`.\n     * @private\n     */\n    PathPointType[PathPointType[\"PathMarker\"] = 32] = \"PathMarker\";\n    /**\n     * Specifies the path point type of `CloseSubpath`.\n     * @private\n     */\n    PathPointType[PathPointType[\"CloseSubpath\"] = 128] = \"CloseSubpath\";\n})(PathPointType || (PathPointType = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PdfBrush } from './pdf-brush';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from '../../primitives/pdf-name';\nimport { PdfNumber } from '../../primitives/pdf-number';\nimport { PdfReferenceHolder } from '../../primitives/pdf-reference';\n/**\n * `PdfGradientBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfGradientBrush, _super);\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfGradientBrush(shading) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Local variable to store the background color.\n         * @private\n         */\n        _this.mbackground = new PdfColor(255, 255, 255);\n        /**\n         * Local variable to store the stroking color.\n         * @private\n         */\n        _this.mbStroking = false;\n        /**\n         * Local variable to store the function.\n         * @private\n         */\n        _this.mfunction = null;\n        /**\n         * Local variable to store the DictionaryProperties.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.mpatternDictionary = new PdfDictionary();\n        _this.mpatternDictionary.items.setValue(_this.dictionaryProperties.type, new PdfName(_this.dictionaryProperties.pattern));\n        _this.mpatternDictionary.items.setValue(_this.dictionaryProperties.patternType, new PdfNumber(2));\n        _this.shading = shading;\n        _this.colorSpace = PdfColorSpace.Rgb;\n        return _this;\n    }\n    Object.defineProperty(PdfGradientBrush.prototype, \"background\", {\n        //Properties\n        /**\n         * Gets or sets the background color of the brush.\n         * @public\n         */\n        get: function () {\n            return this.mbackground;\n        },\n        set: function (value) {\n            this.mbackground = value;\n            var sh = this.shading;\n            if (value.isEmpty) {\n                sh.remove(this.dictionaryProperties.background);\n            }\n            else {\n                sh.items.setValue(this.dictionaryProperties.background, value.toArray(this.colorSpace));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"antiAlias\", {\n        /**\n         * Gets or sets a value indicating whether use anti aliasing algorithm.\n         * @public\n         */\n        get: function () {\n            var sh = this.shading;\n            var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n            return aa.value;\n        },\n        set: function (value) {\n            var sh = this.shading;\n            var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n            if ((aa == null && typeof aa === 'undefined')) {\n                aa = new PdfBoolean(value);\n                sh.items.setValue(this.dictionaryProperties.antiAlias, aa);\n            }\n            else {\n                aa.value = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"function\", {\n        /**\n         * Gets or sets the function of the brush.\n         * @protected\n         */\n        get: function () {\n            return this.mfunction;\n        },\n        set: function (value) {\n            this.mfunction = value;\n            if (value != null && typeof value !== 'undefined') {\n                this.shading.items.setValue(this.dictionaryProperties.function, new PdfReferenceHolder(this.mfunction));\n            }\n            else {\n                this.shading.remove(this.dictionaryProperties.function);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"bBox\", {\n        /**\n         * Gets or sets the boundary box of the brush.\n         * @protected\n         */\n        get: function () {\n            var sh = this.shading;\n            var box = (sh.items.getValue(this.dictionaryProperties.bBox));\n            return box;\n        },\n        set: function (value) {\n            var sh = this.shading;\n            if (value == null && typeof value === 'undefined') {\n                sh.remove(this.dictionaryProperties.bBox);\n            }\n            else {\n                sh.items.setValue(this.dictionaryProperties.bBox, value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the color space of the brush.\n         * @public\n         */\n        get: function () {\n            return this.mcolorSpace;\n        },\n        set: function (value) {\n            var colorSpace = this.shading.items.getValue(this.dictionaryProperties.colorSpace);\n            if ((value !== this.mcolorSpace) || (colorSpace == null)) {\n                this.mcolorSpace = value;\n                var csValue = this.colorSpaceToDeviceName(value);\n                this.shading.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(csValue));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"stroking\", {\n        /**\n         * Gets or sets a value indicating whether this PdfGradientBrush is stroking.\n         * @public\n         */\n        get: function () {\n            return this.mbStroking;\n        },\n        set: function (value) {\n            this.mbStroking = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"patternDictionary\", {\n        /**\n         * Gets the pattern dictionary.\n         * @protected\n         */\n        get: function () {\n            if (this.mpatternDictionary == null) {\n                this.mpatternDictionary = new PdfDictionary();\n            }\n            return this.mpatternDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"shading\", {\n        /**\n         * Gets or sets the shading dictionary.\n         * @protected\n         */\n        get: function () {\n            return this.mshading;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : Shading');\n            }\n            if (value !== this.mshading) {\n                this.mshading = value;\n                this.patternDictionary.items.setValue(this.dictionaryProperties.shading, new PdfReferenceHolder(this.mshading));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"matrix\", {\n        /**\n         * Gets or sets the transformation matrix.\n         * @public\n         */\n        get: function () {\n            return this.mmatrix;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : Matrix');\n            }\n            if (value !== this.mmatrix) {\n                this.mmatrix = value.clone();\n                var m = new PdfArray(this.mmatrix.matrix.elements);\n                this.mpatternDictionary.items.setValue(this.dictionaryProperties.matrix, m);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * Monitors the changes of the brush and modify PDF state respectfully.\n     * @param brush The brush.\n     * @param streamWriter The stream writer.\n     * @param getResources The get resources delegate.\n     * @param saveChanges if set to true the changes should be saved anyway.\n     * @param currentColorSpace The current color space.\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfGradientBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        var diff = false;\n        if (brush instanceof PdfGradientBrush) {\n            if ((this.colorSpace !== currentColorSpace)) {\n                this.colorSpace = currentColorSpace;\n                this.resetFunction();\n            }\n            //  Set the /Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mbStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources = getResources.getResources();\n            var name_1 = resources.getName(this);\n            streamWriter.setColourWithPattern(null, name_1, this.mbStroking);\n            diff = true;\n        }\n        return diff;\n    };\n    /**\n     * Resets the changes, which were made by the brush.\n     * In other words resets the state to the initial one.\n     * @param streamWriter The stream writer.\n     */\n    PdfGradientBrush.prototype.resetChanges = function (streamWriter) {\n        //  Unable reset.\n    };\n    //Implementation\n    /**\n     * Converts colorspace enum to a PDF name.\n     * @param colorSpace The color space enum value.\n     */\n    PdfGradientBrush.prototype.colorSpaceToDeviceName = function (colorSpace) {\n        var result;\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                result = 'DeviceRGB';\n                break;\n        }\n        return result;\n    };\n    /**\n     * Resets the pattern dictionary.\n     * @param dictionary A new pattern dictionary.\n     */\n    PdfGradientBrush.prototype.resetPatternDictionary = function (dictionary) {\n        this.mpatternDictionary = dictionary;\n    };\n    /**\n     * Clones the anti aliasing value.\n     * @param brush The brush.\n     */\n    PdfGradientBrush.prototype.cloneAntiAliasingValue = function (brush) {\n        if ((brush == null)) {\n            throw new Error('ArgumentNullException : brush');\n        }\n        var sh = this.shading;\n        var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n        if ((aa != null)) {\n            brush.shading.items.setValue(this.dictionaryProperties.antiAlias, new PdfBoolean(aa.value));\n        }\n    };\n    /**\n     * Clones the background value.\n     * @param brush The brush.\n     */\n    PdfGradientBrush.prototype.cloneBackgroundValue = function (brush) {\n        var background = this.background;\n        if (!background.isEmpty) {\n            brush.background = background;\n        }\n    };\n    Object.defineProperty(PdfGradientBrush.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.patternDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGradientBrush;\n}(PdfBrush));\nexport { PdfGradientBrush };\n","/**\n * PdfTemplate.ts class for EJ2-PDF\n */\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PointF, SizeF, RectangleF } from './../../drawing/pdf-drawing';\nimport { GetResourceEventHandler } from './../pdf-graphics';\n/**\n * Represents `Pdf Template` object.\n * @private\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(arg1, arg2) {\n        /**\n         * Initialize an instance for `DictionaryProperties` class.\n         * @private\n         * @hidden\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the transformation 'is performed'.\n         * @default true\n         * @private\n         */\n        this.writeTransformation = true;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.content = new PdfStream();\n            var tempSize = new SizeF(arg1.width, arg1.height);\n            this.setSize(tempSize);\n            this.initialize();\n        }\n        else {\n            this.content = new PdfStream();\n            this.setSize(new SizeF(arg1, arg2));\n            this.initialize();\n        }\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets the size of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.templateSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"width\", {\n        /**\n         * Gets the width of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"height\", {\n        /**\n         * Gets the height of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Gets the `graphics` of the 'PdfTemplate'.\n         */\n        get: function () {\n            if (this.pdfGraphics == null || typeof this.pdfGraphics === 'undefined') {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.content);\n                this.pdfGraphics = g;\n                // if(this.writeTransformation) {\n                // Transform co-ordinates to Top/Left.\n                this.pdfGraphics.initializeCoordinates();\n                // }\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @private\n     */\n    PdfTemplate.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.content.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    // Public methods\n    /**\n     * `Initialize` the type and subtype of the template.\n     * @private\n     */\n    PdfTemplate.prototype.initialize = function () {\n        this.addType();\n        this.addSubType();\n    };\n    /**\n     * `Adds type key`.\n     * @private\n     */\n    PdfTemplate.prototype.addType = function () {\n        var value = new PdfName(this.dictionaryProperties.xObject);\n        this.content.items.setValue(this.dictionaryProperties.type, value);\n    };\n    /**\n     * `Adds SubType key`.\n     * @private\n     */\n    PdfTemplate.prototype.addSubType = function () {\n        var value = new PdfName(this.dictionaryProperties.form);\n        this.content.items.setValue(this.dictionaryProperties.subtype, value);\n    };\n    PdfTemplate.prototype.reset = function (size) {\n        if (typeof size === 'undefined') {\n            if (this.resources != null) {\n                this.resources = null;\n                this.content.remove(this.dictionaryProperties.resources);\n            }\n            if (this.graphics != null) {\n                this.graphics.reset(this.size);\n            }\n        }\n        else {\n            this.setSize(size);\n            this.reset();\n        }\n    };\n    /**\n     * `Set the size` of the 'PdfTemplate'.\n     * @private\n     */\n    PdfTemplate.prototype.setSize = function (size) {\n        var rect = new RectangleF(new PointF(0, 0), size);\n        var val = PdfArray.fromRectangle(rect);\n        this.content.items.setValue(this.dictionaryProperties.bBox, val);\n        this.templateSize = size;\n    };\n    Object.defineProperty(PdfTemplate.prototype, \"element\", {\n        // /**\n        //  * Returns the value of current graphics.\n        //  * @private\n        //  */\n        // public GetGraphics(g : PdfGraphics) : PdfGraphics {\n        //     if (this.graphics == null || typeof this.graphics === 'undefined') {\n        //         this.graphics = g;\n        //         this.graphics.Size = this.Size;\n        //         this.graphics.StreamWriter = new PdfStreamWriter(this.content)\n        //         this.graphics.Initialize();\n        //         if(this.writeTransformation) {\n        //             this.graphics.InitializeCoordinates();\n        //         }\n        //     }\n        //     return this.graphics;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `content stream` of 'PdfTemplate' class.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfResources.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTemplate } from './figures/pdf-template';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfBitmap } from './../graphics/images/pdf-bitmap';\nimport { PdfImage } from './../graphics/images/pdf-image';\nimport { PdfGradientBrush } from './brushes/pdf-gradient-brush';\nimport { PdfTilingBrush } from './brushes/pdf-tiling-brush';\n/**\n * `PdfResources` class used to set resource contents like font, image.\n * @private\n */\nvar PdfResources = /** @class */ (function (_super) {\n    __extends(PdfResources, _super);\n    function PdfResources(baseDictionary) {\n        var _this = _super.call(this, baseDictionary) || this;\n        /**\n         * Dictionary for the `properties names`.\n         * @private\n         */\n        _this.properties = new PdfDictionary();\n        return _this;\n    }\n    Object.defineProperty(PdfResources.prototype, \"names\", {\n        //Properties\n        /**\n         * Gets the `font names`.\n         * @private\n         */\n        get: function () {\n            return this.getNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfResources.prototype, \"document\", {\n        /**\n         * Get or set the `page document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public Methods\n    /**\n     * `Generates name` for the object and adds to the resource if the object is new.\n     * @private\n     */\n    PdfResources.prototype.getName = function (obj) {\n        var primitive = obj.element;\n        var name = null;\n        if (this.names.containsKey(primitive)) {\n            name = this.names.getValue(primitive);\n        }\n        // Object is new.\n        if (name == null) {\n            var sName = this.generateName();\n            name = new PdfName(sName);\n            this.names.setValue(primitive, name);\n            if (obj instanceof PdfFont) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTemplate) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfGradientBrush || obj instanceof PdfTilingBrush) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTransparency) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfImage || obj instanceof PdfBitmap) {\n                this.add(obj, name);\n            }\n        }\n        return name;\n    };\n    /**\n     * Gets `resource names` to font dictionaries.\n     * @private\n     */\n    PdfResources.prototype.getNames = function () {\n        if (this.pdfNames == null) {\n            this.pdfNames = new TemporaryDictionary();\n        }\n        var fonts = this.items.getValue(this.dictionaryProperties.font);\n        if (fonts != null) {\n            var reference = fonts;\n            var dictionary = fonts;\n            dictionary = PdfCrossTable.dereference(fonts);\n        }\n        return this.pdfNames;\n    };\n    /**\n     * Add `RequireProcedureSet` into procset array.\n     * @private\n     */\n    PdfResources.prototype.requireProcedureSet = function (procedureSetName) {\n        if (procedureSetName == null) {\n            throw new Error('ArgumentNullException:procedureSetName');\n        }\n        var procSets = this.items.getValue(this.dictionaryProperties.procset);\n        if (procSets == null) {\n            procSets = new PdfArray();\n            this.items.setValue(this.dictionaryProperties.procset, procSets);\n        }\n        var name = new PdfName(procedureSetName);\n        if (!procSets.contains(name)) {\n            procSets.add(name);\n        }\n    };\n    //Helper Methods\n    /**\n     * `Remove font` from array.\n     * @private\n     */\n    PdfResources.prototype.removeFont = function (name) {\n        var key = null;\n        var keys = this.pdfNames.keys();\n        for (var index = 0; index < this.pdfNames.size(); index++) {\n            if (this.pdfNames.getValue(keys[index]) === new PdfName(name)) {\n                key = keys[index];\n                break;\n            }\n        }\n        if (key != null) {\n            this.pdfNames.remove(key);\n        }\n    };\n    /**\n     * Generates `Unique string name`.\n     * @private\n     */\n    PdfResources.prototype.generateName = function () {\n        var name = Guid.getNewGuidString();\n        return name;\n    };\n    PdfResources.prototype.add = function (arg1, arg2) {\n        if (arg1 instanceof PdfFont) {\n            var dictionary = null;\n            var fonts = this.items.getValue(this.dictionaryProperties.font);\n            if (fonts != null) {\n                var reference = fonts;\n                dictionary = fonts;\n                dictionary = fonts;\n            }\n            else {\n                dictionary = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.font, dictionary);\n            }\n            dictionary.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfTemplate) {\n            var xobjects = void 0;\n            xobjects = this.items.getValue(this.dictionaryProperties.xObject);\n            // Create fonts dictionary.\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            xobjects.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfBrush) {\n            if (arg1 instanceof PdfGradientBrush || arg1 instanceof PdfTilingBrush) {\n                var savable = arg1.element;\n                if (savable != null) {\n                    var pattern = this.items.getValue(this.dictionaryProperties.pattern);\n                    // Create a new pattern dictionary.\n                    if (pattern == null) {\n                        pattern = new PdfDictionary();\n                        this.items.setValue(this.dictionaryProperties.pattern, pattern);\n                    }\n                    pattern.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n                }\n            }\n        }\n        else if (arg1 instanceof PdfTransparency) {\n            var savable = arg1.element;\n            var transDic = null;\n            transDic = this.items.getValue(this.dictionaryProperties.extGState);\n            // Create a new pattern dictionary.\n            if (transDic == null) {\n                transDic = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.extGState, transDic);\n            }\n            transDic.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n        }\n        else {\n            /* tslint:disable */\n            var xobjects = this.Dictionary.items.getValue(this.dictionaryProperties.xObject);\n            var parentXObjects = void 0;\n            if (typeof this.pdfDocument !== 'undefined') {\n                parentXObjects = this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.getValue(this.dictionaryProperties.xObject);\n            }\n            var values = this.Dictionary.items.values();\n            var hasSameImageStream = false;\n            var oldReference = void 0;\n            if (typeof this.pdfDocument !== 'undefined' && (typeof parentXObjects === undefined || parentXObjects == null)) {\n                parentXObjects = new PdfDictionary();\n                this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.setValue(this.dictionaryProperties.xObject, parentXObjects);\n            }\n            else if (typeof this.pdfDocument !== 'undefined') {\n                var values_1 = parentXObjects.items.values();\n                for (var i = 0; i < values_1.length; i++) {\n                    if (typeof values_1[i] !== 'undefined' && typeof values_1[i].element !== 'undefined') {\n                        if (values_1[i].element.data[0] === arg1.element.data[0]) {\n                            oldReference = values_1[i];\n                            hasSameImageStream = true;\n                        }\n                    }\n                }\n            }\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.Dictionary.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            if (hasSameImageStream && typeof oldReference !== 'undefined') {\n                xobjects.items.setValue(arg2.value, oldReference);\n            }\n            else {\n                var reference = new PdfReferenceHolder(arg1.element);\n                xobjects.items.setValue(arg2.value, reference);\n                if (typeof this.pdfDocument !== 'undefined') {\n                    parentXObjects.items.setValue(arg2.value, reference);\n                }\n            }\n            /* tslint:enable */\n        }\n    };\n    return PdfResources;\n}(PdfDictionary));\nexport { PdfResources };\n/* tslint:disable */\n/**\n * Used to create new guid for resources.\n * @private\n */\nvar Guid = /** @class */ (function () {\n    function Guid() {\n    }\n    /**\n     * Generate `new GUID`.\n     * @private\n     */\n    Guid.getNewGuidString = function () {\n        return 'aaaaaaaa-aaaa-4aaa-baaa-aaaaaaaaaaaa'.replace(/[ab]/g, function (c) {\n            var random = Math.random() * 16 | 0;\n            var result = c === 'a' ? random : (random & 0x3 | 0x8);\n            return result.toString(16);\n        });\n    };\n    return Guid;\n}());\nexport { Guid };\n/* tslint:enable */ \n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { GetResourceEventHandler } from './../pdf-graphics';\nimport { PdfBrush } from './pdf-brush';\nimport { PointF, SizeF, RectangleF, Rectangle } from './../../drawing/pdf-drawing';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfPage } from './../../pages/pdf-page';\n/**\n * `PdfTilingBrush` Implements a colored tiling brush.\n */\nvar PdfTilingBrush = /** @class */ (function (_super) {\n    __extends(PdfTilingBrush, _super);\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @public\n     */\n    function PdfTilingBrush(arg1, arg2) {\n        var _this = _super.call(this) || this;\n        /**\n         * Local variable to store Stroking.\n         * @private\n         */\n        _this.mStroking = false;\n        /**\n         * Local variable to store the tile start location.\n         * @private\n         */\n        _this.mLocation = new PointF(0, 0);\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        var rect = null;\n        if (arg1 instanceof Rectangle) {\n            rect = arg1;\n        }\n        else if (arg1 instanceof SizeF) {\n            rect = new Rectangle(0, 0, arg1.width, arg1.height);\n        }\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n        }\n        _this.brushStream = new PdfStream();\n        _this.mResources = new PdfResources();\n        _this.brushStream.items.setValue(_this.mDictionaryProperties.resources, _this.mResources);\n        _this.setBox(rect);\n        _this.setObligatoryFields();\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n            _this.graphics.colorSpace = arg2.document.colorSpace;\n        }\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @private\n     * @param rectangle The size of the smallest brush cell.\n     * @param page The Current Page Object.\n     * @param location The Tile start location.\n     * @param matrix The matrix.\n     */\n    PdfTilingBrush.prototype.initialize = function (rectangle, page, location, matrix) {\n        this.mPage = page;\n        this.mLocation = location;\n        this.mTransformationMatrix = matrix;\n        this.tempBrushStream = this.brushStream;\n        this.brushStream = new PdfStream();\n        var tempResource = new PdfResources();\n        this.brushStream.items.setValue(this.mDictionaryProperties.resources, tempResource);\n        this.setBox(rectangle);\n        this.setObligatoryFields();\n        return this;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"location\", {\n        //Properties\n        /**\n         * Location representing the start position of the tiles.\n         * @public\n         */\n        get: function () {\n            return this.mLocation;\n        },\n        set: function (value) {\n            this.mLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the obligatory fields.\n     * @private\n     */\n    PdfTilingBrush.prototype.setObligatoryFields = function () {\n        this.brushStream.items.setValue(this.mDictionaryProperties.patternType, new PdfNumber(1));\n        //  Tiling brush.\n        this.brushStream.items.setValue(this.mDictionaryProperties.paintType, new PdfNumber(1));\n        //  Coloured.\n        this.brushStream.items.setValue(this.mDictionaryProperties.tilingType, new PdfNumber(1));\n        //  Constant spacing.\n        this.brushStream.items.setValue(this.mDictionaryProperties.xStep, new PdfNumber((this.mBox.right - this.mBox.left)));\n        this.brushStream.items.setValue(this.mDictionaryProperties.yStep, new PdfNumber((this.mBox.bottom - this.mBox.top)));\n        if ((this.mPage != null) && (this.mLocation != null)) {\n            if ((this.mTransformationMatrix == null && typeof this.mTransformationMatrix === 'undefined')) {\n                // Transform the tile origin to fit the location\n                var tileTransform = (this.mPage.size.height % this.rectangle.size.height) - (this.mLocation.y);\n                /* tslint:disable-next-line:max-line-length */\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([1, 0, 0, 1, this.mLocation.x, tileTransform]));\n            }\n            else {\n                var tileTransform = 0;\n                // Transform the tile origin to fit the location\n                var elements = this.mTransformationMatrix.matrix.elements;\n                if ((this.mPage.size.height > this.rectangle.size.height)) {\n                    tileTransform = (this.mTransformationMatrix.matrix.offsetY\n                        - (this.mPage.size.height % this.rectangle.size.height));\n                }\n                else {\n                    tileTransform = ((this.mPage.size.height % this.rectangle.size.height) + this.mTransformationMatrix.matrix.offsetY);\n                }\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([\n                    elements[0], elements[1], elements[2], elements[3], elements[4], tileTransform\n                ]));\n            }\n        }\n    };\n    /**\n     * Sets the BBox coordinates.\n     * @private\n     */\n    PdfTilingBrush.prototype.setBox = function (box) {\n        this.mBox = box;\n        var rect = new RectangleF(this.mBox.left, this.mBox.top, this.mBox.right, this.mBox.bottom);\n        this.brushStream.items.setValue(this.mDictionaryProperties.bBox, PdfArray.fromRectangle(rect));\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"rectangle\", {\n        //Properties\n        /**\n         * Gets the boundary box of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"size\", {\n        /**\n         * Gets the size of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"graphics\", {\n        /**\n         * Gets Graphics context of the brush.\n         */\n        get: function () {\n            if ((this.mGraphics == null && typeof this.mGraphics === 'undefined')) {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.brushStream);\n                this.mGraphics = g;\n                this.mResources = this.getResources();\n                this.mGraphics.initializeCoordinates();\n            }\n            return this.mGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @public\n     */\n    PdfTilingBrush.prototype.getResources = function () {\n        return this.mResources;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"stroking\", {\n        /**\n         * Gets or sets a value indicating whether this PdfTilingBrush\n         * is used for stroking operations.\n         */\n        get: function () {\n            return this.mStroking;\n        },\n        set: function (value) {\n            this.mStroking = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //PdfBrush methods\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfTilingBrush.prototype.clone = function () {\n        var brush = this.initialize(this.rectangle, this.mPage, this.location, this.mTransformationMatrix);\n        if ((this.mTransformationMatrix != null) && (this.mTransformationMatrix.matrix != null)) {\n            /* tslint:disable-next-line:max-line-length */\n            brush.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray(this.mTransformationMatrix.matrix.elements));\n        }\n        brush.brushStream.data = this.tempBrushStream.data;\n        brush.mResources = new PdfResources(this.mResources);\n        brush.brushStream.items.setValue(this.mDictionaryProperties.resources, brush.mResources);\n        return brush;\n    };\n    /**\n     * Monitors the changes of the brush and modify PDF state respectfully.\n     * @param brush The brush\n     * @param streamWriter The stream writer\n     * @param getResources The get resources delegate.\n     * @param saveChanges if set to true the changes should be saved anyway.\n     * @param currentColorSpace The current color space.\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfTilingBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        var diff = false;\n        if (brush !== this) {\n            //  Set the Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources1 = getResources.getResources();\n            var name1 = resources1.getName(this);\n            streamWriter.setColourWithPattern(null, name1, this.mStroking);\n            diff = true;\n        }\n        else if (brush instanceof PdfTilingBrush) {\n            //  Set the /Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources = getResources.getResources();\n            var name_1 = resources.getName(this);\n            streamWriter.setColourWithPattern(null, name_1, this.mStroking);\n            diff = true;\n        }\n        return diff;\n    };\n    /**\n     * Resets the changes, which were made by the brush.\n     * In other words resets the state to the initial one.\n     * @param streamWriter The stream writer.\n     */\n    PdfTilingBrush.prototype.resetChanges = function (streamWriter) {\n        //  We shouldn't do anything to reset changes.\n        //  All changes will be reset automatically by setting a new colour space.\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @public\n         */\n        get: function () {\n            return this.brushStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTilingBrush;\n}(PdfBrush));\nexport { PdfTilingBrush };\n","/**\n * PdfGraphics.ts class for EJ2-PDF\n */\nimport { PdfColorSpace, TextRenderingMode, PdfFillMode, PdfTextAlignment } from './enum';\nimport { PdfVerticalAlignment, PdfBlendMode } from './enum';\nimport { PdfSubSuperScript } from './fonts/enum';\nimport { PdfStreamWriter } from './../input-output/pdf-stream-writer';\nimport { PdfPen } from './pdf-pen';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTransformationMatrix, Matrix } from './pdf-transformation-matrix';\nimport { PointF, SizeF, RectangleF } from './../drawing/pdf-drawing';\nimport { ProcedureSets } from './constants';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfStringFormat } from './fonts/pdf-string-format';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfStringLayouter, LineType } from './fonts/string-layouter';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { StringTokenizer } from './fonts/string-tokenizer';\nimport { PdfAutomaticFieldInfoCollection } from './../document/automatic-fields/automatic-field-info-collection';\nimport { PdfAutomaticFieldInfo } from './../document/automatic-fields/automatic-field-info';\nimport { Operators } from './../input-output/pdf-operators';\nimport { UnicodeTrueTypeFont } from './fonts/unicode-true-type-font';\nimport { InternalEnum } from './../primitives/pdf-string';\nimport { RtlRenderer } from './fonts/rtl-renderer';\nimport { PdfTextDirection } from './enum';\nimport { PathPointType } from './figures/enum';\nimport { PdfGradientBrush } from './../../implementation/graphics/brushes/pdf-gradient-brush';\nimport { PdfTilingBrush } from './brushes/pdf-tiling-brush';\n/**\n * `PdfGraphics` class represents a graphics context of the objects.\n * It's used for performing all the graphics operations.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * //graphics of the page\n * let page1Graphics : PdfGraphics = page1.graphics;\n * // draw the text on the page1 graphics\n * page1Graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * //\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    function PdfGraphics(arg1, arg2, arg3) {\n        /**\n         * Represents the `Current color space`.\n         * @private\n         */\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Stores `previous rendering mode`.\n         * @private\n         */\n        this.previousTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * Previous `character spacing` value or 0.\n         * @private\n         */\n        this.previousCharacterSpacing = 0.0;\n        /**\n         * Previous `word spacing` value or 0.\n         * @private\n         */\n        this.previousWordSpacing = 0.0;\n        /**\n         * The `previously used text scaling` value.\n         * @private\n         */\n        this.previousTextScaling = 100.0;\n        /**\n         * Instance of `ProcedureSets` class.\n         * @private\n         */\n        this.procedureSets = new ProcedureSets();\n        /**\n         * To check wihether it is a `direct text rendering`.\n         * @default true\n         * @private\n         */\n        this.isNormalRender = true;\n        /**\n         * check whether to `use font size` to calculate the shift.\n         * @default false\n         * @private\n         */\n        this.isUseFontSize = false;\n        /**\n         * check whether the font is in `italic type`.\n         * @default false\n         * @private\n         */\n        this.isItalic = false;\n        /**\n         * Check whether it is an `emf Text Matrix`.\n         * @default false\n         * @private\n         */\n        this.isEmfTextScaled = false;\n        /**\n         * Check whether it is an `emf` call.\n         * @default false\n         * @private\n         */\n        this.isEmf = false;\n        /**\n         * Check whether it is an `emf plus` call.\n         * @default false\n         * @private\n         */\n        this.isEmfPlus = false;\n        /**\n         * Check whether it is in `base line format`.\n         * @default true\n         * @private\n         */\n        this.isBaselineFormat = true;\n        /**\n         * Emf Text `Scaling Factor`.\n         * @private\n         */\n        this.emfScalingFactor = new SizeF(0, 0);\n        /**\n         * To check whether the `last color space` of document and garphics is saved.\n         * @private\n         */\n        this.colorSpaceChanged = false;\n        /**\n         * Stores an instance of `DictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isPointOverload = false;\n        /**\n         * Current colorspaces.\n         * @hidden\n         * @private\n         */\n        this.currentColorSpaces = ['RGB', 'CMYK', 'GrayScale', 'Indexed'];\n        /**\n         * Checks the current image `is optimized` or not.\n         * @default false.\n         * @private\n         */\n        this.isImageOptimized = false;\n        /**\n         * Stores the `graphics states`.\n         * @private\n         */\n        this.graphicsState = [];\n        /**\n         * Indicates whether the object `had trasparency`.\n         * @default false\n         * @private\n         */\n        this.istransparencySet = false;\n        /**\n         * Stores the instance of `PdfAutomaticFieldInfoCollection` class .\n         * @default null\n         * @private\n         */\n        this.internalAutomaticFields = null;\n        /**\n         * Stores the index of the start line that should draw with in the next page.\n         * @private\n         */\n        this.startCutIndex = -1;\n        this.getResources = arg2;\n        this.canvasSize = arg1;\n        if (arg3 instanceof PdfStreamWriter) {\n            this.pdfStreamWriter = arg3;\n        }\n        else {\n            this.pdfStreamWriter = new PdfStreamWriter(arg3);\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"stringLayoutResult\", {\n        //  Properties\n        /**\n         * Returns the `result` after drawing string.\n         * @private\n         */\n        get: function () {\n            return this.pdfStringLayoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"size\", {\n        /**\n         * Gets the `size` of the canvas.\n         * @private\n         */\n        get: function () {\n            return this.canvasSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"mediaBoxUpperRightBound\", {\n        /**\n         * Gets and Sets the value of `MediaBox upper right bound`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalMediaBoxUpperRightBound === 'undefined') {\n                this.internalMediaBoxUpperRightBound = 0;\n            }\n            return this.internalMediaBoxUpperRightBound;\n        },\n        set: function (value) {\n            this.internalMediaBoxUpperRightBound = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"clientSize\", {\n        /**\n         * Gets the `size` of the canvas reduced by margins and page templates.\n         * @private\n         */\n        get: function () {\n            return new SizeF(this.clipBounds.width, this.clipBounds.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the current `color space` of the document\n         * @private\n         */\n        get: function () {\n            return this.currentColorSpace;\n        },\n        set: function (value) {\n            this.currentColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"streamWriter\", {\n        /**\n         * Gets the `stream writer`.\n         * @private\n         */\n        get: function () {\n            return this.pdfStreamWriter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"matrix\", {\n        /**\n         * Gets the `transformation matrix` reflecting current transformation.\n         * @private\n         */\n        get: function () {\n            if (this.transformationMatrix == null) {\n                this.transformationMatrix = new PdfTransformationMatrix();\n            }\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"layer\", {\n        /**\n         * Gets the `layer` for the graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"page\", {\n        /**\n         * Gets the `page` for this graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer.page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"automaticFields\", {\n        get: function () {\n            if (this.internalAutomaticFields == null || typeof this.internalAutomaticFields === 'undefined') {\n                this.internalAutomaticFields = new PdfAutomaticFieldInfoCollection();\n            }\n            return this.internalAutomaticFields;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` this instance.\n     * @private\n     */\n    PdfGraphics.prototype.initialize = function () {\n        this.bStateSaved = false;\n        this.currentPen = null;\n        this.currentBrush = null;\n        this.currentFont = null;\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        this.bCSInitialized = false;\n        this.transformationMatrix = null;\n        this.previousTextRenderingMode = (-1); //.Fill;\n        this.previousCharacterSpacing = -1.0;\n        this.previousWordSpacing = -1.0;\n        this.previousTextScaling = -100.0;\n        // this.m_trasparencies = null;\n        this.currentStringFormat = null;\n        this.clipBounds = new RectangleF(new PointF(0, 0), this.size);\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n    };\n    PdfGraphics.prototype.drawPdfTemplate = function (template, location, size) {\n        if (typeof size === 'undefined') {\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            this.drawPdfTemplate(template, location, template.size);\n        }\n        else {\n            // let crossTable : PdfCrossTable = null;\n            // if (this.pageLayer != null) {\n            //     crossTable = (this.page as PdfPage).section.parentDocument.crossTable;\n            // }\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            var scaleX = (template.width > 0) ? size.width / template.width : 1;\n            var scaleY = (template.height > 0) ? size.height / template.height : 1;\n            var bNeedScale = !(scaleX === 1 && scaleY === 1);\n            // Save state.\n            var state = this.save();\n            // Take into consideration that rect location is bottom/left.\n            var matrix = new PdfTransformationMatrix();\n            if (this.pageLayer != null) {\n                this.getTranslateTransform(location.x, location.y + size.height, matrix);\n            }\n            if (bNeedScale) {\n                this.getScaleTransform(scaleX, scaleY, matrix);\n            }\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            var name_1 = resources.getName(template);\n            this.pdfStreamWriter.executeObject(name_1);\n            // Restore state.\n            this.restore(state);\n            //Transfer automatic fields from template.\n            var g = template.graphics;\n            if (g != null) {\n                for (var index = 0; index < g.automaticFields.automaticFields.length; index++) {\n                    var fieldInfo = g.automaticFields.automaticFields[index];\n                    var newLocation = new PointF(fieldInfo.location.x + location.x, fieldInfo.location.y + location.y);\n                    var scalingX = template.size.width == 0 ? 0 : size.width / template.size.width;\n                    var scalingY = template.size.height == 0 ? 0 : size.height / template.size.height;\n                    this.automaticFields.add(new PdfAutomaticFieldInfo(fieldInfo.field, newLocation, scalingX, scalingY));\n                    this.page.dictionary.modify();\n                }\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageB);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageC);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageI);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    /* tslint:disable */\n    /**\n     * @public\n     */\n    PdfGraphics.prototype.drawString = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n        if (typeof arg1 === 'string' && arg2 instanceof PdfFont && (arg3 instanceof PdfPen || arg3 === null) && (arg4 instanceof PdfBrush || arg4 === null) && typeof arg5 === 'number' && typeof arg6 === 'number' && (arg7 instanceof PdfStringFormat || arg7 === null) && typeof arg8 === 'undefined') {\n            this.isOverloadWithPosition = true;\n            this.drawString(arg1, arg2, arg3, arg4, arg5, arg6, (this.clientSize.width - arg5), 0, arg7);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            var temparg7 = arg7;\n            var temparg8 = arg8;\n            var temparg9 = arg9;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(arg1, arg2, temparg9, new SizeF(temparg7, temparg8), this.isOverloadWithPosition, this.clientSize);\n            if (!result.empty) {\n                var rect = this.checkCorrectLayoutRectangle(result.actualSize, temparg5, temparg6, temparg9);\n                if (temparg7 <= 0) {\n                    temparg5 = rect.x;\n                    temparg7 = rect.width;\n                }\n                if (temparg8 <= 0) {\n                    temparg6 = rect.y;\n                    temparg8 = rect.height;\n                }\n                this.drawStringLayoutResult(result, arg2, temparg3, temparg4, new RectangleF(temparg5, temparg6, temparg7, temparg8), temparg9);\n                this.isEmfTextScaled = false;\n                this.emfScalingFactor = new SizeF(0, 0);\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n            this.isNormalRender = true;\n            this.pdfStringLayoutResult = result;\n            this.isUseFontSize = false;\n        }\n    }; /* tslint:enable */\n    PdfGraphics.prototype.drawLine = function (arg1, arg2, arg3, arg4, arg5) {\n        if (arg2 instanceof PointF) {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            this.drawLine(arg1, temparg2.x, temparg2.y, temparg3.x, temparg3.y);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            this.stateControl(arg1, null, null);\n            var sw = this.streamWriter;\n            sw.beginPath(temparg2, temparg3);\n            sw.appendLineSegment(temparg4, temparg5);\n            sw.strokePath();\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n        }\n    };\n    /* tslint:disable */\n    PdfGraphics.prototype.drawRectangle = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PdfPen && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(arg1, null, arg2, temparg3, arg4, arg5);\n        }\n        else if (arg1 instanceof PdfBrush && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(null, arg1, arg2, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            if ((arg2 instanceof PdfTilingBrush)) {\n                this.bCSInitialized = false;\n                var xOffset = (this.matrix.matrix.offsetX + temparg3);\n                var yOffset = void 0;\n                if (((this.layer != null) && (this.layer.page != null))) {\n                    yOffset = ((this.layer.page.size.height - this.matrix.matrix.offsetY) + temparg4);\n                }\n                else {\n                    yOffset = ((this.clientSize.height - this.matrix.matrix.offsetY) + temparg4);\n                }\n                (arg2).location = new PointF(xOffset, yOffset);\n                (arg2).graphics.colorSpace = this.colorSpace;\n            }\n            else if ((arg2 instanceof PdfGradientBrush)) {\n                arg2.colorSpace = this.colorSpace;\n            }\n            if (arg2 instanceof PdfSolidBrush && arg2.color.isEmpty) {\n                arg2 = null;\n            }\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.stateControl(temparg1, temparg2, null);\n            this.streamWriter.appendRectangle(temparg3, temparg4, temparg5, temparg6);\n            this.drawPathHelper(temparg1, temparg2, false);\n        }\n    };\n    PdfGraphics.prototype.drawPathHelper = function (arg1, arg2, arg3, arg4) {\n        if (typeof arg3 === 'boolean') {\n            var temparg3 = arg3;\n            this.drawPathHelper(arg1, arg2, PdfFillMode.Winding, temparg3);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var isPen = arg1 != null;\n            var isBrush = arg2 != null;\n            var isEvenOdd = (temparg3 === PdfFillMode.Alternate);\n            if (isPen && isBrush) {\n                this.streamWriter.fillStrokePath(isEvenOdd);\n            }\n            else if (!isPen && !isBrush) {\n                this.streamWriter.endPath();\n            }\n            else if (isPen) {\n                this.streamWriter.strokePath();\n            }\n            else {\n                this.streamWriter.fillPath(isEvenOdd);\n            }\n        }\n    };\n    /* tslint:disable */\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size.width, size.height);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            arg1.save();\n            var matrix = new PdfTransformationMatrix();\n            this.getTranslateTransform(temparg2, (temparg3 + temparg5), matrix);\n            this.getScaleTransform(arg4, arg5, matrix);\n            this.pdfStreamWriter.write('q');\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            if (typeof this.pageLayer !== 'undefined' && this.page != null) {\n                resources.document = this.page.document;\n            }\n            var name_2 = resources.getName(arg1);\n            if (typeof this.pageLayer !== 'undefined') {\n                this.page.setResources(resources);\n            }\n            this.pdfStreamWriter.executeObject(name_2);\n            this.pdfStreamWriter.write(Operators.restoreState);\n            this.pdfStreamWriter.write(Operators.newLine);\n            var resource = this.getResources.getResources();\n            resource.requireProcedureSet(this.procedureSets.imageB);\n            resource.requireProcedureSet(this.procedureSets.imageC);\n            resource.requireProcedureSet(this.procedureSets.imageI);\n            resource.requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    //Implementation\n    /* tslint:disable */\n    /**\n     * Returns `bounds` of the line info.\n     * @private\n     */\n    PdfGraphics.prototype.getLineBounds = function (lineIndex, result, font, layoutRectangle, format) {\n        var bounds;\n        if (!result.empty && lineIndex < result.lineCount && lineIndex >= 0) {\n            var line = result.lines[lineIndex];\n            var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n            var y = vShift + layoutRectangle.y + (result.lineHeight * lineIndex);\n            var lineWidth = line.width;\n            var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(line, format, layoutRectangle, (lineIndex === 0));\n            hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            var x = layoutRectangle.x + hShift;\n            /* tslint:disable */\n            var width = (!this.shouldJustify(line, layoutRectangle.width, format)) ? lineWidth - lineIndent : layoutRectangle.width - lineIndent; /* tslint:enable */\n            var height = result.lineHeight;\n            bounds = new RectangleF(x, y, width, height);\n        }\n        else {\n            bounds = new RectangleF(0, 0, 0, 0);\n        }\n        return bounds;\n    };\n    /**\n     * Creates `lay outed rectangle` depending on the text settings.\n     * @private\n     */\n    PdfGraphics.prototype.checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = new RectangleF(x, y, textSize.width, textSize.width);\n        if (format != null) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    layoutedRectangle.x -= layoutedRectangle.width / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    layoutedRectangle.x -= layoutedRectangle.width;\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    layoutedRectangle.y -= layoutedRectangle.height / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    layoutedRectangle.y -= layoutedRectangle.height;\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    /**\n     * Sets the `layer` for the graphics.\n     * @private\n     */\n    PdfGraphics.prototype.setLayer = function (layer) {\n        this.pageLayer = layer;\n        var page = layer.page;\n        if (page != null && typeof page !== 'undefined') {\n            page.beginSave = this.pageSave;\n        }\n    };\n    /**\n     * Adding page number field before page saving.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGraphics.prototype.pageSave = function (page) {\n        if (page.graphics.automaticFields != null) {\n            for (var i = 0; i < page.graphics.automaticFields.automaticFields.length; i++) {\n                var fieldInfo = page.graphics.automaticFields.automaticFields[i];\n                fieldInfo.field.performDraw(page.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n            }\n        }\n    };\n    /**\n     * `Draws a layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result.empty) {\n            this.applyStringSettings(font, pen, brush, format, layoutRectangle);\n            // Set text scaling\n            var textScaling = (format != null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this.previousTextScaling && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.setTextScaling(textScaling);\n                this.previousTextScaling = textScaling;\n            }\n            var height = (format == null || format.lineSpacing === 0) ? font.height : format.lineSpacing + font.height;\n            var subScript = (format != null && format.subSuperScript === PdfSubSuperScript.SubScript);\n            var shift = 0;\n            shift = (subScript) ? height - (font.height + font.metrics.getDescent(format)) : (height - font.metrics.getAscent(format));\n            this.shift = shift;\n            this.pdfStreamWriter.startNextLine(layoutRectangle.x, layoutRectangle.y - shift);\n            this.pdfStreamWriter.setLeading(+height);\n            var resultHeight = 0;\n            var remainingString = '';\n            for (var i = 0; i < result.lines.length; i++) {\n                resultHeight += result.lineHeight;\n                if ((layoutRectangle.y + resultHeight) > this.clientSize.height) {\n                    this.startCutIndex = i;\n                    break;\n                }\n            }\n            for (var j = this.startCutIndex; (j < result.lines.length && j >= 0); j++) {\n                remainingString += result.lines[j].text;\n            }\n            var bounds = new RectangleF(layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height);\n            this.drawLayoutResult(result, font, format, layoutRectangle);\n            this.underlineStrikeoutText(pen, brush, result, font, bounds, format);\n            this.isEmfPlus = false;\n            this.isUseFontSize = false;\n            if (this.startCutIndex !== -1) {\n                var page = this.getNextPage();\n                page.graphics.drawString(remainingString, font, pen, brush, layoutRectangle.x, 0, layoutRectangle.width, 0, format);\n            }\n        }\n        else {\n            throw new Error('ArgumentNullException:result');\n        }\n    };\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGraphics.prototype.getNextPage = function () {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        return nextPage;\n    };\n    PdfGraphics.prototype.setClip = function (rectangle, mode) {\n        if (typeof mode === 'undefined') {\n            this.setClip(rectangle, PdfFillMode.Winding);\n        }\n        else {\n            this.pdfStreamWriter.appendRectangle(rectangle);\n            this.pdfStreamWriter.clipPath((mode === PdfFillMode.Alternate));\n        }\n    };\n    /**\n     * Applies all the `text settings`.\n     * @private\n     */\n    PdfGraphics.prototype.applyStringSettings = function (font, pen, brush, format, bounds) {\n        if (brush instanceof PdfTilingBrush) {\n            this.bCSInitialized = false;\n            brush.graphics.colorSpace = this.colorSpace;\n        }\n        else if ((brush instanceof PdfGradientBrush)) {\n            this.bCSInitialized = false;\n            brush.colorSpace = this.colorSpace;\n        }\n        var setLineWidth = false;\n        var tm = this.getTextRenderingMode(pen, brush, format);\n        this.stateControl(pen, brush, font, format);\n        this.pdfStreamWriter.beginText();\n        if ((tm) !== this.previousTextRenderingMode) {\n            this.pdfStreamWriter.setTextRenderingMode(tm);\n            this.previousTextRenderingMode = tm;\n        }\n        // Set character spacing.\n        var cs = (format != null) ? format.characterSpacing : 0;\n        if (cs !== this.previousCharacterSpacing && !this.isEmfTextScaled) {\n            this.pdfStreamWriter.setCharacterSpacing(cs);\n            this.previousCharacterSpacing = cs;\n        }\n        // Set word spacing.\n        // NOTE: it works only if the space code is equal to 32 (0x20).\n        var ws = (format != null) ? format.wordSpacing : 0;\n        if (ws !== this.previousWordSpacing) {\n            this.pdfStreamWriter.setWordSpacing(ws);\n            this.previousWordSpacing = ws;\n        }\n    };\n    /**\n     * Calculates `shift value` if the text is vertically aligned.\n     * @private\n     */\n    PdfGraphics.prototype.getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && format != null && format.lineAlignment !== PdfVerticalAlignment.Top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /* tslint:disable */\n    /**\n     * `Draws layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var vAlignShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, vAlignShift);\n        }\n        var ttfFont = font;\n        var unicode = (ttfFont != null && ttfFont.isUnicode);\n        var embed = (ttfFont != null && ttfFont.isEmbedFont);\n        var lines = result.lines;\n        for (var i = 0, len = lines.length; (i < len && i !== this.startCutIndex); i++) {\n            var lineInfo = lines[i];\n            var line = lineInfo.text;\n            var lineWidth = lineInfo.width;\n            var hAlignShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n            hAlignShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(hAlignShift, 0);\n            }\n            if (unicode) {\n                this.drawUnicodeLine(lineInfo, layoutRectangle, font, format);\n            }\n            else {\n                this.drawAsciiLine(lineInfo, layoutRectangle, font, format);\n            }\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(-hAlignShift, 0);\n            }\n            if (this.isOverloadWithPosition && lines.length > 1) {\n                this.pdfStreamWriter.startNextLine(-(layoutRectangle.x), 0);\n                layoutRectangle.x = 0;\n                layoutRectangle.width = this.clientSize.width;\n                this.isOverloadWithPosition = false;\n                this.isPointOverload = true;\n            }\n        }\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, -(vAlignShift - result.lineHeight));\n        }\n        this.pdfStreamWriter.endText();\n    };\n    /**\n     * `Draws Ascii line`.\n     * @private\n     */\n    PdfGraphics.prototype.drawAsciiLine = function (lineInfo, layoutRectangle, font, format) {\n        this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var value = '';\n        if (lineInfo.text.indexOf('(') !== -1 || lineInfo.text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo.text.length; i++) {\n                if (lineInfo.text[i] === '(') {\n                    value += '\\\\\\(';\n                }\n                else if (lineInfo.text[i] === ')') {\n                    value += '\\\\\\)';\n                }\n                else {\n                    value += lineInfo.text[i];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo.text;\n        }\n        var line = '(' + value + ')';\n        this.pdfStreamWriter.showNextLineText(new PdfString(line));\n    };\n    /**\n     * Draws unicode line.\n     * @private\n     */\n    PdfGraphics.prototype.drawUnicodeLine = function (lineInfo, layoutRectangle, font, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        var useWordSpace = (format !== null && typeof format !== 'undefined' && (format.wordSpacing !== 0 || format.alignment === PdfTextAlignment.Justify));\n        var ttfFont = font;\n        var wordSpacing = this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var rtlRender = new RtlRenderer();\n        if (rtl || (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None)) {\n            var blocks = null;\n            var rightAlign = (format !== null && typeof format !== 'undefined' && format.alignment === PdfTextAlignment.Right);\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                /* tslint:disable-next-line:max-line-length */\n                blocks = rtlRender.layout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n            }\n            else {\n                blocks = rtlRender.layout(line, ttfFont, rightAlign, useWordSpace, format);\n            }\n            var words = null;\n            if (blocks.length > 1) {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                    /* tslint:disable-next-line:max-line-length */\n                    words = rtlRender.splitLayout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n                }\n                else {\n                    words = rtlRender.splitLayout(line, ttfFont, rightAlign, useWordSpace, format);\n                }\n            }\n            else {\n                words = [line];\n            }\n            this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n        }\n        else {\n            if (useWordSpace) {\n                var result = this.breakUnicodeLine(line, ttfFont, null);\n                var blocks = result.tokens;\n                var words = result.words;\n                this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n            }\n            else {\n                var token = this.convertToUnicode(line, ttfFont);\n                var value = this.getUnicodeString(token);\n                this.streamWriter.showNextLineText(value);\n            }\n        }\n    };\n    /**\n     * Draws array of unicode tokens.\n     */\n    /* tslint:disable */\n    PdfGraphics.prototype.drawUnicodeBlocks = function (blocks, words, font, format, wordSpacing) {\n        /* tslint:enable */\n        if (blocks == null) {\n            throw new Error('Argument Null Exception : blocks');\n        }\n        if (words == null) {\n            throw new Error('Argument Null Exception : words');\n        }\n        if (font == null) {\n            throw new Error('Argument Null Exception : font');\n        }\n        this.streamWriter.startNextLine();\n        var x = 0;\n        var xShift = 0;\n        var firstLineIndent = 0;\n        var paragraphIndent = 0;\n        try {\n            if (format !== null && typeof format !== 'undefined') {\n                firstLineIndent = format.firstLineIndent;\n                paragraphIndent = format.paragraphIndent;\n                format.firstLineIndent = 0;\n                format.paragraphIndent = 0;\n            }\n            var spaceWidth = font.getCharWidth(StringTokenizer.whiteSpace, format) + wordSpacing;\n            var characterSpacing = (format != null) ? format.characterSpacing : 0;\n            var wordSpace = (format !== null && typeof format !== 'undefined' && wordSpacing === 0) ? format.wordSpacing : 0;\n            spaceWidth += characterSpacing + wordSpace;\n            for (var i = 0; i < blocks.length; i++) {\n                var token = blocks[i];\n                var word = words[i];\n                var tokenWidth = 0;\n                if (x !== 0) {\n                    this.streamWriter.startNextLine(x, 0);\n                }\n                if (word.length > 0) {\n                    tokenWidth += /*Utils.Round(*/ font.measureString(word, format).width /*)*/;\n                    tokenWidth += characterSpacing;\n                    var val = this.getUnicodeString(token);\n                    this.streamWriter.showText(val);\n                }\n                if (i !== blocks.length - 1) {\n                    x = tokenWidth + spaceWidth;\n                    xShift += x;\n                }\n            }\n            // Rolback current line position.\n            if (xShift > 0) {\n                this.streamWriter.startNextLine(-xShift, 0);\n            }\n        }\n        finally {\n            if (format !== null && typeof format !== 'undefined') {\n                format.firstLineIndent = firstLineIndent;\n                format.paragraphIndent = paragraphIndent;\n            }\n        }\n    };\n    /**\n     * Breakes the unicode line to the words and converts symbols to glyphs.\n     */\n    PdfGraphics.prototype.breakUnicodeLine = function (line, ttfFont, words) {\n        if (line === null) {\n            throw new Error('Argument Null Exception : line');\n        }\n        words = line.split(null);\n        var tokens = [];\n        for (var i = 0; i < words.length; i++) {\n            // Reconvert string according to unicode standard.\n            var word = words[i];\n            var token = this.convertToUnicode(word, ttfFont);\n            tokens[i] = token;\n        }\n        return { tokens: tokens, words: words };\n    };\n    /**\n     * Creates PdfString from the unicode text.\n     */\n    PdfGraphics.prototype.getUnicodeString = function (token) {\n        if (token === null) {\n            throw new Error('Argument Null Exception : token');\n        }\n        var val = new PdfString(token);\n        val.converted = true;\n        val.encode = InternalEnum.ForceEncoding.Ascii;\n        return val;\n    };\n    /**\n     * Converts to unicode format.\n     */\n    PdfGraphics.prototype.convertToUnicode = function (text, ttfFont) {\n        var token = null;\n        if (text == null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (ttfFont == null) {\n            throw new Error('Argument Null Exception : ttfFont');\n        }\n        if (ttfFont.fontInternal instanceof UnicodeTrueTypeFont) {\n            var ttfReader = ttfFont.fontInternal.ttfReader;\n            ttfFont.setSymbols(text);\n            token = ttfReader.convertString(text);\n            var bytes = PdfString.toUnicodeArray(token, false);\n            token = PdfString.byteToString(bytes);\n        }\n        return token;\n    };\n    /**\n     * `Justifies` the line if needed.\n     * @private\n     */\n    PdfGraphics.prototype.justifyLine = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var shouldJustify = this.shouldJustify(lineInfo, boundsWidth, format);\n        var hasWordSpacing = (format != null && format.wordSpacing !== 0);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            // Correct line width.\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            var difference = boundsWidth - lineWidth;\n            wordSpace = difference / whitespacesCount;\n            this.pdfStreamWriter.setWordSpacing(wordSpace);\n        }\n        else {\n            // If there is justifying, but the line shouldn't be justified, restore default word spacing.\n            if (hasWordSpacing) {\n                this.pdfStreamWriter.setWordSpacing(format.wordSpacing);\n            }\n            else {\n                this.pdfStreamWriter.setWordSpacing(0);\n            }\n        }\n        return wordSpace;\n    };\n    /**\n     * `Reset` or reinitialize the current graphic value.\n     * @private\n     */\n    PdfGraphics.prototype.reset = function (size) {\n        this.canvasSize = size;\n        this.streamWriter.clear();\n        this.initialize();\n        this.initializeCoordinates();\n    };\n    /**\n     * Checks whether the line should be `justified`.\n     * @private\n     */\n    PdfGraphics.prototype.shouldJustify = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var justifyStyle = (format != null && format.alignment === PdfTextAlignment.Justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== StringTokenizer.whiteSpace);\n        var goodLineBreakStyle = ((lineInfo.lineType & LineType.LayoutBreak) > 0);\n        /* tslint:disable */\n        var shouldJustify = (justifyStyle && goodWidth && hasSpaces && (goodLineBreakStyle || format.alignment === PdfTextAlignment.Justify)); /* tslint:enable */\n        return shouldJustify;\n    };\n    /* tslint:disable */\n    /**\n     * Emulates `Underline, Strikeout` of the text if needed.\n     * @private\n     */\n    PdfGraphics.prototype.underlineStrikeoutText = function (pen, brush, result, font, layoutRectangle, format) {\n        if (font.underline || font.strikeout) {\n            // Calculate line width.\n            var linePen = this.createUnderlineStikeoutPen(pen, brush, font, format);\n            if (linePen != null) {\n                // Approximate line positions.\n                var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n                var underlineYOffset = 0;\n                underlineYOffset = layoutRectangle.y + vShift + font.metrics.getAscent(format) + 1.5 * linePen.width;\n                var strikeoutYOffset = layoutRectangle.y + vShift + font.metrics.getHeight(format) / 2 + 1.5 * linePen.width;\n                var lines = result.lines;\n                // Run through the text and draw lines.\n                for (var i = 0, len = result.lineCount; i < len; i++) {\n                    var lineInfo = lines[i];\n                    var line = lineInfo.text;\n                    var lineWidth = lineInfo.width;\n                    var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n                    var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n                    hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n                    var x1 = layoutRectangle.x + hShift;\n                    /* tslint:disable */\n                    var x2 = (!this.shouldJustify(lineInfo, layoutRectangle.width, format)) ? x1 + lineWidth - lineIndent : x1 + layoutRectangle.width - lineIndent;\n                    /* tslint:enable */\n                    if (font.underline) {\n                        var y = underlineYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        underlineYOffset += result.lineHeight;\n                    }\n                    if (font.strikeout) {\n                        var y = strikeoutYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        strikeoutYOffset += result.lineHeight;\n                    }\n                    if (this.isPointOverload && lines.length > 1) {\n                        layoutRectangle.x = 0;\n                        layoutRectangle.width = this.clientSize.width;\n                    }\n                }\n                this.isPointOverload = false;\n            }\n        }\n    };\n    /**\n     * `Creates a pen` for drawing lines in the text.\n     * @private\n     */\n    PdfGraphics.prototype.createUnderlineStikeoutPen = function (pen, brush, font, format) {\n        // Calculate line width.\n        var lineWidth = font.metrics.getSize(format) / 20;\n        var linePen = null;\n        // Create a pen fo the lines.\n        if (pen != null) {\n            linePen = new PdfPen(pen.color, lineWidth);\n        }\n        else if (brush != null) {\n            linePen = new PdfPen(brush, lineWidth);\n        }\n        return linePen;\n    };\n    /**\n     * Return `text rendering mode`.\n     * @private\n     */\n    PdfGraphics.prototype.getTextRenderingMode = function (pen, brush, format) {\n        var tm = TextRenderingMode.None;\n        if (pen != null && brush != null) {\n            tm = TextRenderingMode.FillStroke;\n        }\n        else if (pen != null) {\n            tm = TextRenderingMode.Stroke;\n        }\n        else {\n            tm = TextRenderingMode.Fill;\n        }\n        if (format != null && format.clipPath) {\n            tm |= TextRenderingMode.ClipFlag;\n        }\n        return tm;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfGraphics.prototype.getLineIndent = function (lineInfo, format, layoutBounds, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo.lineType & LineType.FirstParagraphLine) > 0);\n        if (format != null && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (layoutBounds.width > 0) ? Math.min(layoutBounds.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates shift value if the line is `horizontaly aligned`.\n     * @private\n     */\n    PdfGraphics.prototype.getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && format != null && format.alignment !== PdfTextAlignment.Left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /**\n     * Gets or sets the value that indicates `text direction` mode.\n     * @private\n     */\n    PdfGraphics.prototype.rightToLeft = function (format) {\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        if (format !== null && typeof format !== 'undefined') {\n            if (format.textDirection !== PdfTextDirection.None && typeof format.textDirection !== 'undefined') {\n                rtl = true;\n            }\n        }\n        return rtl;\n    };\n    PdfGraphics.prototype.stateControl = function (pen, brush, font, format) {\n        if (typeof format === 'undefined') {\n            this.stateControl(pen, brush, font, null);\n        }\n        else {\n            if (brush instanceof PdfGradientBrush) {\n                this.bCSInitialized = false;\n                brush.colorSpace = this.colorSpace;\n            }\n            if (brush instanceof PdfTilingBrush) {\n                this.bCSInitialized = false;\n                brush.graphics.colorSpace = this.colorSpace;\n            }\n            var saveState = false;\n            if (brush !== null) {\n                var solidBrush = brush;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    if (this.colorSpaceChanged === false) {\n                        this.lastDocumentCS = this.pageLayer.page.document.colorSpace;\n                        this.lastGraphicsCS = this.pageLayer.page.graphics.colorSpace;\n                        this.colorSpace = this.pageLayer.page.document.colorSpace;\n                        this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                        this.colorSpaceChanged = true;\n                    }\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            else if (pen != null) {\n                var pdfPen = pen;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    /* tslint:disable */\n                    this.colorSpace = this.pageLayer.page.document.colorSpace;\n                    this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            this.penControl(pen, saveState);\n            this.brushControl(brush, saveState);\n            this.fontControl(font, format, saveState);\n        }\n    };\n    /**\n     * Initializes the `current color space`.\n     * @private\n     */\n    PdfGraphics.prototype.initCurrentColorSpace = function (colorspace) {\n        var re = this.getResources.getResources();\n        if (!this.bCSInitialized) {\n            if (this.currentColorSpace != PdfColorSpace.GrayScale) {\n                this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], true);\n                this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], false);\n                this.bCSInitialized = true;\n            }\n            else {\n                this.pdfStreamWriter.setColorSpace('DeviceGray', true);\n                this.pdfStreamWriter.setColorSpace('DeviceGray', false);\n                this.bCSInitialized = true;\n            }\n        }\n    };\n    /**\n     * Controls the `pen state`.\n     * @private\n     */\n    PdfGraphics.prototype.penControl = function (pen, saveState) {\n        if (pen != null) {\n            this.currentPen = pen;\n            /* tslint:disable */\n            pen.monitorChanges(this.currentPen, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace, this.matrix.clone());\n            /* tslint:enable */\n            this.currentPen = pen.clone();\n        }\n    };\n    /**\n     * Controls the `brush state`.\n     * @private\n     */\n    PdfGraphics.prototype.brushControl = function (brush, saveState) {\n        if (brush != null && typeof brush !== 'undefined') {\n            var b = brush.clone();\n            var lgb = b;\n            if (lgb !== null && typeof lgb !== 'undefined' && !(brush instanceof PdfSolidBrush) && !(brush instanceof PdfTilingBrush)) {\n                var m = lgb.matrix;\n                var matrix = this.matrix.clone();\n                if ((m != null)) {\n                    m.multiply(matrix);\n                    matrix = m;\n                }\n                lgb.matrix = matrix;\n            }\n            this.currentBrush = lgb;\n            var br = (brush);\n            /* tslint:disable */\n            b.monitorChanges(this.currentBrush, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace);\n            /* tslint:enable */\n            this.currentBrush = brush;\n            brush = null;\n        }\n    };\n    /**\n     * Saves the font and other `font settings`.\n     * @private\n     */\n    PdfGraphics.prototype.fontControl = function (font, format, saveState) {\n        if (font != null) {\n            var curSubSuper = (format != null) ? format.subSuperScript : PdfSubSuperScript.None;\n            /* tslint:disable */\n            var prevSubSuper = (this.currentStringFormat != null) ? this.currentStringFormat.subSuperScript : PdfSubSuperScript.None; /* tslint:enable */\n            if (saveState || font !== this.currentFont || curSubSuper !== prevSubSuper) {\n                var resources = this.getResources.getResources();\n                this.currentFont = font;\n                this.currentStringFormat = format;\n                var size = font.metrics.getSize(format);\n                /* tslint:disable */\n                this.isEmfTextScaled = false;\n                var fontName = resources.getName(font);\n                this.pdfStreamWriter.setFont(font, fontName, size);\n            }\n        }\n    };\n    PdfGraphics.prototype.setTransparency = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            this.istransparencySet = true;\n            this.setTransparency(arg1, arg1, PdfBlendMode.Normal);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.setTransparency(arg1, arg2, PdfBlendMode.Normal);\n        }\n        else {\n            if (this.trasparencies == null) {\n                this.trasparencies = new TemporaryDictionary();\n            }\n            var transp = null;\n            var td = new TransparencyData(arg1, arg2, arg3);\n            if (this.trasparencies.containsKey(td)) {\n                transp = this.trasparencies.getValue(td);\n            }\n            if (transp == null) {\n                transp = new PdfTransparency(arg1, arg2, arg3);\n                this.trasparencies.setValue(td, transp);\n            }\n            var resources = this.getResources.getResources();\n            var name_3 = resources.getName(transp);\n            var sw = this.streamWriter;\n            sw.setGraphicsState(name_3);\n        }\n    };\n    PdfGraphics.prototype.clipTranslateMargins = function (x, y, left, top, right, bottom) {\n        if (x instanceof RectangleF && typeof y === 'undefined') {\n            this.clipBounds = x;\n            this.pdfStreamWriter.writeComment('Clip margins.');\n            this.pdfStreamWriter.appendRectangle(x);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment('Translate co-ordinate system.');\n            this.translateTransform(x.x, x.y);\n        }\n        else if (typeof x === 'number') {\n            var clipArea = new RectangleF(left, top, this.size.width - left - right, this.size.height - top - bottom);\n            this.clipBounds = clipArea;\n            this.pdfStreamWriter.writeComment(\"Clip margins.\");\n            this.pdfStreamWriter.appendRectangle(clipArea);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment(\"Translate co-ordinate system.\");\n            this.translateTransform(x, y);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfGraphics.prototype.updateY = function (y) {\n        return -y;\n    };\n    /**\n     * Used to `translate the transformation`.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set translate transform\n     * page1.graphics.translateTransform(100, 100);\n     * //\n     * // draw the rectangle after applying translate transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param offsetX The x-coordinate of the translation.\n     * @param offsetY The y-coordinate of the translation.\n     */\n    PdfGraphics.prototype.translateTransform = function (offsetX, offsetY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getTranslateTransform(offsetX, offsetY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Translates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getTranslateTransform = function (x, y, input) {\n        input.translate(x, this.updateY(y));\n        return input;\n    };\n    /* tslint:disable */\n    /**\n     * Applies the specified `scaling operation` to the transformation matrix of this Graphics by prepending it to the object's transformation matrix.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // apply scaling trasformation\n     * page1.graphics.scaleTransform(1.5, 2);\n     * //\n     * // draw the rectangle after applying scaling transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param scaleX Scale factor in the x direction.\n     * @param scaleY Scale factor in the y direction.\n     */\n    /* tslint:enable */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getScaleTransform(scaleX, scaleY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Scales` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getScaleTransform = function (x, y, input) {\n        if (input == null) {\n            input = new PdfTransformationMatrix();\n        }\n        input.scale(x, y);\n        return input;\n    };\n    /**\n     * Applies the specified `rotation` to the transformation matrix of this Graphics.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set RotateTransform with 25 degree of angle\n     * page1.graphics.rotateTransform(25);\n     * //\n     * // draw the rectangle after RotateTransformation\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param angle Angle of rotation in degrees.\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new PdfTransformationMatrix();\n        this.getRotateTransform(angle, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Initializes coordinate system`.\n     * @private\n     */\n    PdfGraphics.prototype.initializeCoordinates = function () {\n        // Matrix equation: TM(T-1)=M', where T=[1 0 0 -1 0 h]\n        this.pdfStreamWriter.writeComment('Change co-ordinate system to left/top.');\n        // Translate co-ordinates only, don't flip.\n        if (this.mediaBoxUpperRightBound !== -(this.size.height)) {\n            if (this.cropBox == null) {\n                if (this.mediaBoxUpperRightBound === this.size.height || this.mediaBoxUpperRightBound === 0) {\n                    this.translateTransform(0, this.updateY(this.size.height));\n                }\n                else {\n                    this.translateTransform(0, this.updateY(this.mediaBoxUpperRightBound));\n                }\n            }\n        }\n    };\n    /**\n     * `Rotates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getRotateTransform = function (angle, input) {\n        if (input == null || typeof input === 'undefined') {\n            input = new PdfTransformationMatrix();\n        }\n        input.rotate(this.updateY(angle));\n        return input;\n    };\n    /**\n     * `Saves` the current state of this Graphics and identifies the saved state with a GraphicsState.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // save the graphics state\n     * let state1 : PdfGraphicsState = page1.graphics.save();\n     * //\n     * page1.graphics.scaleTransform(1.5, 2);\n     * // draw the rectangle\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // restore the graphics state\n     * page1.graphics.restore(state1);\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this.matrix.clone());\n        state.brush = this.currentBrush;\n        state.pen = this.currentPen;\n        state.font = this.currentFont;\n        state.colorSpace = this.currentColorSpace;\n        state.characterSpacing = this.previousCharacterSpacing;\n        state.wordSpacing = this.previousWordSpacing;\n        state.textScaling = this.previousTextScaling;\n        state.textRenderingMode = this.previousTextRenderingMode;\n        this.graphicsState.push(state);\n        this.pdfStreamWriter.saveGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.restore = function (state) {\n        if (typeof state === 'undefined') {\n            if (this.graphicsState.length > 0) {\n                this.doRestoreState();\n            }\n        }\n        else {\n            if (this.graphicsState.indexOf(state) !== -1) {\n                for (;;) {\n                    if (this.graphicsState.length === 0) {\n                        break;\n                    }\n                    var popState = this.doRestoreState();\n                    if (popState === state) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * `Restores graphics state`.\n     * @private\n     */\n    PdfGraphics.prototype.doRestoreState = function () {\n        var state = this.graphicsState.pop();\n        this.transformationMatrix = state.matrix;\n        this.currentBrush = state.brush;\n        this.currentPen = state.pen;\n        this.currentFont = state.font;\n        this.currentColorSpace = state.colorSpace;\n        this.previousCharacterSpacing = state.characterSpacing;\n        this.previousWordSpacing = state.wordSpacing;\n        this.previousTextScaling = state.textScaling;\n        this.previousTextRenderingMode = state.textRenderingMode;\n        this.pdfStreamWriter.restoreGraphicsState();\n        return state;\n    };\n    /* tslint:enable */\n    /**\n     * `Draws the specified path`, using its original physical size, at the location specified by a coordinate pair.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * //Create new PDF path.\n     * let path : PdfPath = new PdfPath();\n     * //Add line path points.\n     * path.addLine(new PointF(10, 100), new PointF(10, 200));\n     * path.addLine(new PointF(100, 100), new PointF(100, 200));\n     * path.addLine(new PointF(100, 200), new PointF(55, 150));\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(255, 0, 0));\n     * // set brush\n     * let brush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the path\n     * page1.graphics.drawPath(pen, brush, path);\n     * //\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param pen Color of the text.\n     * @param brush Color of the text.\n     * @param path Draw path.\n     */\n    PdfGraphics.prototype.drawPath = function (pen, brush, path) {\n        if (brush instanceof PdfTilingBrush) {\n            this.bCSInitialized = false;\n            brush.graphics.colorSpace = this.colorSpace;\n        }\n        else if (brush instanceof PdfGradientBrush) {\n            this.bCSInitialized = false;\n            brush.colorSpace = this.colorSpace;\n        }\n        this.stateControl(pen, brush, null);\n        this.buildUpPath(path.pathPoints, path.pathTypes);\n        this.drawPathHelper(pen, brush, path.fillMode, false);\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PdfGraphics.prototype.drawArc = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg2 instanceof RectangleF) {\n            this.drawArc(arg1, arg2.x, arg2.y, arg2.width, arg2.height, arg3, arg4);\n        }\n        else {\n            if ((arg7 !== 0)) {\n                this.stateControl(arg1, null, null);\n                this.constructArcPath(arg2, arg3, (arg2 + arg4), (arg3 + arg5), arg6, arg7);\n                this.drawPathHelper(arg1, null, false);\n            }\n        }\n    };\n    /**\n     * Builds up the path.\n     * @private\n     */\n    PdfGraphics.prototype.buildUpPath = function (arg1, arg2) {\n        var cnt = arg1.length;\n        for (var i = 0; i < cnt; ++i) {\n            var typeValue = 0;\n            var point = arg1[i];\n            switch (((arg2[i] & (PdfGraphics.pathTypesValuesMask)))) {\n                case PathPointType.Start:\n                    this.pdfStreamWriter.beginPath(point.x, point.y);\n                    break;\n                case PathPointType.Bezier3:\n                    var p2 = new PointF(0, 0);\n                    var p3 = new PointF(0, 0);\n                    var result1 = this.getBezierPoints(arg1, arg2, i, p2, p3);\n                    this.pdfStreamWriter.appendBezierSegment(point, result1.p2, result1.p3);\n                    i = result1.i;\n                    break;\n                case PathPointType.Line:\n                    this.pdfStreamWriter.appendLineSegment(point);\n                    break;\n                default:\n                    throw new Error('ArithmeticException - Incorrect path formation.');\n            }\n            typeValue = arg2[i];\n            this.checkFlags(typeValue);\n        }\n    };\n    /**\n     * Gets the bezier points from respective arrays.\n     * @private\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfGraphics.prototype.getBezierPoints = function (points, types, i, p2, p3) {\n        var errorMsg = 'Malforming path.';\n        ++i;\n        if ((((types[i] & PdfGraphics.pathTypesValuesMask)) === PathPointType.Bezier3)) {\n            p2 = points[i];\n            ++i;\n            if ((((types[i] & PdfGraphics.pathTypesValuesMask)) === PathPointType.Bezier3)) {\n                p3 = points[i];\n            }\n            else {\n                throw new Error('ArgumentException : errorMsg');\n            }\n        }\n        else {\n            throw new Error('ArgumentException : errorMsg');\n        }\n        return { i: i, p2: p2, p3: p3 };\n    };\n    /**\n     * Checks path point type flags.\n     * @private\n     */\n    PdfGraphics.prototype.checkFlags = function (type) {\n        if ((((type & (PathPointType.CloseSubpath))) === PathPointType.CloseSubpath)) {\n            this.pdfStreamWriter.closePath();\n        }\n    };\n    /**\n     * Constructs the arc path using Bezier curves.\n     * @private\n     */\n    PdfGraphics.prototype.constructArcPath = function (x1, y1, x2, y2, startAng, sweepAngle) {\n        var points = this.getBezierArc(x1, y1, x2, y2, startAng, sweepAngle);\n        if ((points.length === 0)) {\n            return;\n        }\n        var pt = [points[0], points[1], points[2], points[3], points[4], points[5], points[6], points[7]];\n        this.pdfStreamWriter.beginPath(pt[0], pt[1]);\n        var i = 0;\n        for (i = 0; i < points.length; i = i + 8) {\n            pt = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n            this.pdfStreamWriter.appendBezierSegment(pt[2], pt[3], pt[4], pt[5], pt[6], pt[7]);\n        }\n    };\n    /**\n     * Gets the bezier points for arc constructing.\n     * @private\n     */\n    PdfGraphics.prototype.getBezierArc = function (numX1, numY1, numX2, numY2, s1, e1) {\n        if ((numX1 > numX2)) {\n            var tmp = void 0;\n            tmp = numX1;\n            numX1 = numX2;\n            numX2 = tmp;\n        }\n        if ((numY2 > numY1)) {\n            var tmp = void 0;\n            tmp = numY1;\n            numY1 = numY2;\n            numY2 = tmp;\n        }\n        var fragAngle1;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle1 = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle1 = (e1 / numFragments);\n        }\n        var xcen = ((numX1 + numX2) / 2);\n        var ycen = ((numY1 + numY2) / 2);\n        var rx = ((numX2 - numX1) / 2);\n        var ry = ((numY2 - numY1) / 2);\n        var halfAng = ((fragAngle1 * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointsList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var thetaValue0 = (((s1 + (i * fragAngle1)) * (Math.PI / 180)));\n            var thetaValue1 = (((s1 + ((i + 1) * fragAngle1)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(thetaValue0));\n            var cos1 = (Math.cos(thetaValue1));\n            var sin0 = (Math.sin(thetaValue0));\n            var sin1 = (Math.sin(thetaValue1));\n            if ((fragAngle1 > 0)) {\n                /* tslint:disable-next-line:max-line-length */\n                pointsList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                /* tslint:disable-next-line:max-line-length */\n                pointsList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointsList;\n    };\n    // Constants\n    /**\n     * Specifies the mask of `path type values`.\n     * @private\n     */\n    PdfGraphics.pathTypesValuesMask = 0xf;\n    /**\n     * Checks whether the object is `transparencyObject`.\n     * @hidden\n     * @private\n     */\n    PdfGraphics.transparencyObject = false;\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\n/**\n * `GetResourceEventHandler` class is alternate for event handlers and delegates.\n * @private\n * @hidden\n */\nvar GetResourceEventHandler = /** @class */ (function () {\n    /**\n     * Initialize instance of `GetResourceEventHandler` class.\n     * Alternate for event handlers and delegates.\n     * @private\n     */\n    function GetResourceEventHandler(sender) {\n        this.sender = sender;\n    }\n    /**\n     * Return the instance of `PdfResources` class.\n     * @private\n     */\n    GetResourceEventHandler.prototype.getResources = function () {\n        return this.sender.getResources();\n    };\n    return GetResourceEventHandler;\n}());\nexport { GetResourceEventHandler };\nvar PdfGraphicsState = /** @class */ (function () {\n    function PdfGraphicsState(graphics, matrix) {\n        /**\n         * Stores `previous rendering mode`.\n         * @default TextRenderingMode.Fill\n         * @private\n         */\n        this.internalTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * `Previous character spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalCharacterSpacing = 0.0;\n        /**\n         * `Previous word spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalWordSpacing = 0.0;\n        /**\n         * The previously used `text scaling value`.\n         * @default 100.0\n         * @private\n         */\n        this.internalTextScaling = 100.0;\n        /**\n         * `Current color space`.\n         * @default PdfColorSpace.Rgb\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        if (typeof graphics !== 'undefined') {\n            this.pdfGraphics = graphics;\n            var elements_1 = [];\n            graphics.matrix.matrix.elements.forEach(function (element) {\n                elements_1.push(element);\n            });\n            this.transformationMatrix = new PdfTransformationMatrix();\n            this.transformationMatrix.matrix = new Matrix(elements_1);\n        }\n    }\n    Object.defineProperty(PdfGraphicsState.prototype, \"graphics\", {\n        // Properties\n        /**\n         * Gets the parent `graphics object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"matrix\", {\n        /**\n         * Gets the `current matrix`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets the `current character spacing`.\n         * @private\n         */\n        get: function () {\n            return this.internalCharacterSpacing;\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets the `word spacing` value.\n         * @private\n         */\n        get: function () {\n            return this.internalWordSpacing;\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textScaling\", {\n        /**\n         * Gets or sets the `text scaling` value.\n         * @private\n         */\n        get: function () {\n            return this.internalTextScaling;\n        },\n        set: function (value) {\n            this.internalTextScaling = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"pen\", {\n        /**\n         * Gets or sets the `current pen` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"brush\", {\n        /**\n         * Gets or sets the `brush`.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"font\", {\n        /**\n         * Gets or sets the `current font` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the `current color space` value.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textRenderingMode\", {\n        /**\n         * Gets or sets the `text rendering mode`.\n         * @private\n         */\n        get: function () {\n            return this.internalTextRenderingMode;\n        },\n        set: function (value) {\n            this.internalTextRenderingMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar TransparencyData = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `TransparencyData` class.\n     * @private\n     */\n    function TransparencyData(alphaPen, alphaBrush, blendMode) {\n        this.alphaPen = alphaPen;\n        this.alphaBrush = alphaBrush;\n        this.blendMode = blendMode;\n    }\n    return TransparencyData;\n}());\n","import { PdfStream } from './../primitives/pdf-stream';\nimport { PdfGraphics, GetResourceEventHandler } from './../graphics/pdf-graphics';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * The `PdfPageLayer` used to create layers in PDF document.\n * @private\n */\nvar PdfPageLayer = /** @class */ (function () {\n    function PdfPageLayer(page, streamClipPageTemplates) {\n        // private bSaved : boolean;\n        /**\n         * Local Variable to store the `color space` of the document.\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Local Variable to set `visibility`.\n         * @default true\n         * @private\n         */\n        this.isVisible = true;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        this.sublayer = false;\n        /**\n         * Local variable to store `length` of the graphics.\n         * @default 0\n         * @private\n         */\n        this.contentLength = 0;\n        /**\n         * Instance for `PdfDictionaryProperties` Class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        if (page === null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        this.pdfPage = page;\n        this.clipPageTemplates = true;\n        if (typeof streamClipPageTemplates === 'undefined') {\n            this.content = new PdfStream();\n        }\n        else if (streamClipPageTemplates instanceof PdfStream || streamClipPageTemplates === null) {\n            if (streamClipPageTemplates === null) {\n                throw new Error('ArgumentNullException:stream');\n            }\n            this.content = streamClipPageTemplates;\n        }\n        else {\n            this.content = new PdfStream();\n            this.clipPageTemplates = streamClipPageTemplates;\n        }\n    }\n    Object.defineProperty(PdfPageLayer.prototype, \"colorSpace\", {\n        // Properties\n        /**\n         * Get or set the `color space`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"page\", {\n        /**\n         * Gets parent `page` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layerId\", {\n        /**\n         * Gets and Sets the `id of the layer`.\n         * @private\n         */\n        get: function () {\n            return this.layerid;\n        },\n        set: function (value) {\n            this.layerid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"name\", {\n        /**\n         * Gets or sets the `name` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.layerName;\n        },\n        set: function (value) {\n            this.layerName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"visible\", {\n        /**\n         * Gets or sets the `visibility` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.isVisible;\n        },\n        set: function (value) {\n            this.isVisible = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"graphics\", {\n        /**\n         * Gets `Graphics` context of the layer, used to draw various graphical content on layer.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfGraphics == null)) {\n                this.initializeGraphics(this.page);\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layers\", {\n        /**\n         * Gets the collection of `PdfPageLayer`, this collection handle by the class 'PdfPageLayerCollection'.\n         * @private\n         */\n        get: function () {\n            if (this.layer == null) {\n                this.layer = new PdfPageLayerCollection(this.page);\n                this.layer.sublayer = true;\n                return this.layer;\n            }\n            else {\n                return this.layer;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Adds` a new PDF Page layer.\n     * @private\n     */\n    PdfPageLayer.prototype.add = function () {\n        var layer = new PdfPageLayer(this.pdfPage);\n        layer.name = '';\n        return layer;\n    };\n    /**\n     * Returns a value indicating the `sign` of a single-precision floating-point number.\n     * @private\n     */\n    PdfPageLayer.prototype.sign = function (number) {\n        if (number === 0) {\n            return 0;\n        }\n        else if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    /**\n     * `Initializes Graphics context` of the layer.\n     * @private\n     */\n    PdfPageLayer.prototype.initializeGraphics = function (page) {\n        var oPage = page;\n        var gr = new GetResourceEventHandler(this.page);\n        var cropBox = null;\n        this.pdfGraphics = new PdfGraphics(page.size, gr, this.content);\n        this.pdfGraphics.mediaBoxUpperRightBound = 0;\n        if (oPage != null) {\n            var sc = oPage.section.parent;\n            if (sc != null) {\n                this.pdfGraphics.colorSpace = sc.document.colorSpace;\n                this.colorSpace = sc.document.colorSpace;\n            }\n        }\n        // Transform coordinates to the left/top and activate margins.\n        var isSame = (this.sign(page.origin.y) === this.sign(page.origin.x));\n        // if (page != null) {\n        if (page.origin.x >= 0 && page.origin.y >= 0 || !(isSame)) {\n            this.pdfGraphics.initializeCoordinates();\n        }\n        else {\n            // this.m_graphics.InitializeCoordinates(page);\n        }\n        var clipRect = oPage.section.getActualBounds(oPage, true);\n        var margins = oPage.section.pageSettings.margins;\n        if (this.clipPageTemplates) {\n            if (page.origin.x >= 0 && page.origin.y >= 0) {\n                this.pdfGraphics.clipTranslateMargins(clipRect);\n            }\n        }\n        else {\n            this.graphics.clipTranslateMargins(clipRect.x, clipRect.y, margins.left, margins.top, margins.right, margins.bottom);\n        }\n        this.pdfGraphics.setLayer(this);\n        // this.bSaved = false;\n    };\n    Object.defineProperty(PdfPageLayer.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPageLayer;\n}());\nexport { PdfPageLayer };\n","/**\n * PdfCollection.ts class for EJ2-PDF\n * The class used to handle the collection of PdF objects.\n */\nvar PdfCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `Collection` class.\n     * @private\n     */\n    function PdfCollection() {\n        //\n    }\n    Object.defineProperty(PdfCollection.prototype, \"count\", {\n        // Properties\n        /**\n         * Gets the `Count` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCollection.prototype, \"list\", {\n        /**\n         * Gets the `list` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCollection;\n}());\nexport { PdfCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageLayerCollection.ts class for EJ2-PDF\n */\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfPageLayer } from './pdf-page-layer';\nimport { PdfCollection } from './../general/pdf-collection';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfStream } from './../primitives/pdf-stream';\n/**\n * The class provides methods and properties to handle the collections of `PdfPageLayer`.\n */\nvar PdfPageLayerCollection = /** @class */ (function (_super) {\n    __extends(PdfPageLayerCollection, _super);\n    function PdfPageLayerCollection(page) {\n        var _this = _super.call(this) || this;\n        /**\n         * Stores the `number of first level layers` in the document.\n         * @default 0\n         * @private\n         */\n        _this.parentLayerCount = 0;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        _this.sublayer = false;\n        /**\n         * Stores the `optional content dictionary`.\n         * @private\n         */\n        _this.optionalContent = new PdfDictionary();\n        if (page instanceof PdfPageBase) {\n            // if (page == null) {\n            //     throw new Error('ArgumentNullException:page');\n            // }\n            _this.page = page;\n            var lPage = page;\n            // if (lPage != null) {\n            _this.parseLayers(lPage);\n            // }\n        }\n        return _this;\n    }\n    PdfPageLayerCollection.prototype.items = function (index, value) {\n        if (typeof index === 'number' && typeof value === 'undefined') {\n            var obj = this.list[index];\n            return obj;\n        }\n        else {\n            if (value == null) {\n                throw new Error('ArgumentNullException: layer');\n            }\n            if (value.page !== this.page) {\n                throw new Error('ArgumentException: The layer belongs to another page');\n            }\n            // // Add/remove the layer.\n            // let layer : PdfPageLayer = this.items(index);\n            // if (layer != null) {\n            //     this.RemoveLayer(layer);\n            // }\n            // this.List[index] = value;\n            // this.InsertLayer(index, value);\n        }\n    };\n    PdfPageLayerCollection.prototype.add = function (firstArgument, secondArgument) {\n        if (typeof firstArgument === 'undefined') {\n            var layer = new PdfPageLayer(this.page);\n            layer.name = '';\n            this.add(layer);\n            return layer;\n        }\n        else if (firstArgument instanceof PdfPageLayer) {\n            // if (layer == null)\n            //     throw new ArgumentNullException(\"layer\");\n            // if (layer.Page != m_page)\n            //     throw new ArgumentException(\"The layer belongs to another page\");\n            var index = this.list.push(firstArgument);\n            // Register layer.\n            this.addLayer(index, firstArgument);\n            return index;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * Registers `layer` at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.addLayer = function (index, layer) {\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.add(reference);\n    };\n    // private RemoveLayer(layer : PdfPageLayer) : void {\n    //     if (layer == null) {\n    //         throw new Error('ArgumentNullException:layer');\n    //     }\n    //     let reference : PdfReferenceHolder = new PdfReferenceHolder(layer);\n    //     if (this.page != null) {\n    //         this.page.Contents.Remove(reference);\n    //     }\n    // }\n    /**\n     * Inserts `PdfPageLayer` into the collection at specified index.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insert = function (index, layer) {\n        // if (index < 0)\n        //     throw new ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\");\n        // if (layer == null)\n        //     throw new ArgumentNullException(\"layer\");\n        // if (layer.Page != m_page)\n        //     throw new ArgumentException(\"The layer belongs to another page\");\n        var list = [];\n        var length = this.list.length;\n        for (var i = index; i < length; i++) {\n            list.push(this.list.pop());\n        }\n        this.list.push(layer);\n        for (var i = 0; i < list.length; i++) {\n            this.list.push(list[i]);\n        }\n        // Register layer.\n        this.insertLayer(index, layer);\n    };\n    /**\n     * Registers layer at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insertLayer = function (index, layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException:layer');\n        }\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.insert(index, reference);\n    };\n    // tslint:disable\n    /**\n     * `Parses the layers`.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.parseLayers = function (loadedPage) {\n        // if (loadedPage == null) {\n        //     throw new Error('ArgumentNullException:loadedPage');\n        // }\n        var contents = this.page.contents;\n        var resource = this.page.getResources();\n        var crossTable = null;\n        var ocproperties = null;\n        var propertie = null;\n        var isLayerAdded = false;\n        // if (loadedPage instanceof PdfPage) {\n        crossTable = loadedPage.crossTable;\n        // } else {\n        //     crossTable = (loadedPage as PdfLoadedPage).CrossTable;\n        //     Propertie = PdfCrossTable.Dereference(Resource[DictionaryProperties.Properties]) as PdfDictionary;\n        //     ocproperties = PdfCrossTable.Dereference((loadedPage as PdfLoadedPage).\n        //     Document.Catalog[DictionaryProperties.OCProperties]) as PdfDictionary;\n        // }\n        var saveStream = new PdfStream();\n        var restoreStream = new PdfStream();\n        var saveState = 'q';\n        var newLine = '\\n';\n        var restoreState = 'Q';\n        // for (let index : number = 0; index < contents.Items.length; index++) {\n        //     let obj : IPdfPrimitive = contents[index];\n        //     let stream : PdfStream = crossTable.GetObject(obj) as PdfStream;\n        //     if (stream == null)\n        //         throw new PdfDocumentException(\"Invalid contents array.\");\n        //     // if (stream.Compress)\n        //     {\n        //         if (!loadedPage.Imported)\n        //             stream.Decompress();\n        //     }\n        //     byte[] contentId = stream.Data;\n        //     string str = PdfString.ByteToString(contentId);\n        //     if (!loadedPage.Imported && (contents.Count == 1) && ((stream.Data[stream.Data.Length - 2] ==\n        //     RestoreState) || (stream.Data[stream.Data.Length - 1] == RestoreState)))\n        //     {\n        //         byte[] content = stream.Data;\n        //         byte[] data = new byte[content.Length + 4];\n        //         data[0] = SaveState;\n        //         data[1] = NewLine;\n        //         content.CopyTo(data, 2);\n        //         data[data.Length - 2] = NewLine;\n        //         data[data.Length - 1] = RestoreState;\n        //         stream.Data = data;\n        //     }\n        //     if (ocproperties != null)\n        //     {\n        //         if (Propertie != null)\n        //         {\n        //             foreach (KeyValuePair<PdfName, IPdfPrimitive> prop in Propertie.Items)\n        //             {\n        //                 String Key = prop.Key.ToString();\n        //                 PdfReferenceHolder refh = prop.Value as PdfReferenceHolder;\n        //                 PdfDictionary Dict = null;\n        //                 if (refh != null)\n        //                 {\n        //                     Dict = refh.Object as PdfDictionary;\n        //                 }\n        //                 else\n        //                 {\n        //                     Dict = prop.Value as PdfDictionary;\n        //                 }\n        //                 PdfDictionary m_usage = PdfCrossTable.Dereference(Dict[DictionaryProperties.Usage]) as PdfDictionary;\n        //                 if (m_usage != null)\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         PdfDictionary printoption = PdfCrossTable.Dereference(m_usage[DictionaryProperties.Print])\n        //                         as PdfDictionary;\n        //                         if (printoption != null)\n        //                         {\n        //                             layer.m_printOption = printoption;\n        //                             foreach (KeyValuePair<PdfName, IPdfPrimitive> value in printoption.Items)\n        //                             {\n        //                                 if (value.Key.Value.Equals(DictionaryProperties.PrintState))\n        //                                 {\n        //                                     string printState = (value.Value as PdfName).Value;\n        //                                     if (printState.Equals(DictionaryProperties.OCGON))\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.AlwaysPrint;\n        //                                         break;\n        //                                     }\n        //                                     else\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.NeverPrint;\n        //                                         break;\n        //                                     }\n        //                                 }\n        //                             }\n        //                         }\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         List.add(layer);\n        //                         isLayerAdded = true;\n        //                         if(!str.Contains(\"EMC\"))\n        //                         break;\n        //                     }\n        //                 }\n        //                 else\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         List.add(layer);\n        //                         if(Dict.ContainsKey(DictionaryProperties.Name))\n        //                         {\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         }\n        //                         isLayerAdded = true;\n        //                         break;\n        //                     }\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     if (!isLayerAdded)\n        //     {\n        //         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //         List.add(layer);\n        //     }\n        //     else\n        //         isLayerAdded = false;\n        // }\n        var saveData = [];\n        saveData.push(saveState);\n        saveStream.data = saveData;\n        contents.insert(0, new PdfReferenceHolder(saveStream));\n        saveData = [];\n        saveData.push(restoreState);\n        restoreStream.data = saveData;\n        contents.insert(contents.count, new PdfReferenceHolder(restoreStream));\n    };\n    /**\n     * Returns `index of` the `PdfPageLayer` in the collection if exists, -1 otherwise.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.indexOf = function (layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException: layer');\n        }\n        var index = this.list.indexOf(layer);\n        return index;\n    };\n    return PdfPageLayerCollection;\n}(PdfCollection));\nexport { PdfPageLayerCollection };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfResources } from './../graphics/pdf-resources';\n/**\n * The abstract base class for all pages,\n * `PdfPageBase` class provides methods and properties to create PDF pages and its elements.\n * @private\n */\nvar PdfPageBase = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `PdfPageBase` class.\n     * @private\n     */\n    function PdfPageBase(dictionary) {\n        /**\n         * `Index` of the default layer.\n         * @default -1.\n         * @private\n         */\n        this.defLayerIndex = -1;\n        /**\n         * Local variable to store if page `updated`.\n         * @default false.\n         * @private\n         */\n        this.modified = false;\n        /**\n         * Instance of `DictionaryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pageDictionary = dictionary;\n    }\n    Object.defineProperty(PdfPageBase.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `section` of a page.\n         * @private\n         */\n        get: function () {\n            // if (this.pdfSection === null) {\n            //     throw new Error('PdfException : Page must be added to some section before using.');\n            // }\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"dictionary\", {\n        /**\n         * Gets the page `dictionary`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayer\", {\n        /**\n         * Gets the `default layer` of the page (Read only).\n         * @private\n         */\n        get: function () {\n            var layer = this.layers;\n            var index = this.defaultLayerIndex;\n            var returnlayer = layer.items(index);\n            return returnlayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayerIndex\", {\n        /**\n         * Gets or sets `index of the default layer`.\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection.count === 0 || this.defLayerIndex === -1) {\n                var layer = this.layerCollection.add();\n                this.defLayerIndex = this.layerCollection.indexOf(layer);\n            }\n            return this.defLayerIndex;\n        },\n        /**\n         * Gets or sets` index of the default layer`.\n         * @private\n         */\n        set: function (value) {\n            if (value < 0 || value > this.layers.count - 1) {\n                throw new Error('ArgumentOutOfRangeException : value, Index can not be less 0 and greater Layers.Count - 1');\n            }\n            else {\n                this.defLayerIndex = value;\n                this.modified = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"layers\", {\n        /**\n         * Gets the collection of the page's `layers` (Read only).\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection == null || typeof this.layerCollection === 'undefined') {\n                this.layerCollection = new PdfPageLayerCollection(this);\n            }\n            return this.layerCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return an instance of `PdfResources` class.\n     * @private\n     */\n    PdfPageBase.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    Object.defineProperty(PdfPageBase.prototype, \"contents\", {\n        /**\n         * Gets `array of page's content`.\n         * @private\n         */\n        get: function () {\n            var obj = this.pageDictionary.items.getValue(this.dictionaryProperties.contents);\n            var contents = obj;\n            var rh = obj;\n            if (contents == null) {\n                contents = new PdfArray();\n                this.pageDictionary.items.setValue(this.dictionaryProperties.contents, contents);\n            }\n            return contents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `resources`.\n     * @private\n     */\n    PdfPageBase.prototype.setResources = function (res) {\n        this.resources = res;\n        this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        this.modified = true;\n    };\n    return PdfPageBase;\n}());\nexport { PdfPageBase };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { SizeF, RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * `PdfAnnotationCollection` class represents the collection of 'PdfAnnotation' objects.\n * @private\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    function PdfAnnotationCollection(page) {\n        // Constants\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.alreadyExistsAnnotationError = 'This annotatation had been already added to page';\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.missingAnnotationException = 'Annotation is not contained in collection.';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Array of the `annotations`.\n         * @private\n         */\n        this.internalAnnotations = new PdfArray();\n        /**\n         * privte `list` for the annotations.\n         * @private\n         */\n        this.lists = [];\n        if (typeof page !== 'undefined') {\n            this.page = page;\n        }\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"annotations\", {\n        /**\n         * Gets the `PdfAnnotation` object at the specified index. Read-Only.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        set: function (value) {\n            this.internalAnnotations = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Adds` a new annotation to the collection.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        // this.SetPrint(annotation);\n        this.doAdd(annotation);\n    };\n    /**\n     * `Adds` a Annotation to collection.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotationCollection.prototype.doAdd = function (annotation) {\n        if (typeof annotation.destination !== 'undefined') {\n            var layout = new PdfStringLayouter();\n            var layoutResult = layout.layout(annotation.text, annotation.font, annotation.stringFormat, new SizeF((annotation.bounds.width), 0), false, new SizeF(0, 0));\n            var lastPosition = annotation.bounds.y;\n            if (layoutResult.lines.length === 1) {\n                var size = annotation.font.measureString(layoutResult.lines[0].text);\n                annotation.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                annotation.text = layoutResult.lines[0].text;\n                //Draw Annotation Text.\n                this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, annotation.bounds.y, annotation.bounds.width, annotation.bounds.height, null);\n                //Add annotation to dictionary.\n                annotation.setPage(this.page);\n                this.setColor(annotation);\n                this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                this.lists.push(annotation);\n            }\n            else {\n                for (var i = 0; i < layoutResult.lines.length; i++) {\n                    var size = annotation.font.measureString(layoutResult.lines[i].text);\n                    if (i === 0) {\n                        annotation.bounds = new RectangleF(annotation.bounds.x, lastPosition, size.width, size.height);\n                        annotation.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, lastPosition, size.width, size.height, null);\n                        //Add annotation to dictionary.\n                        annotation.setPage(this.page);\n                        this.setColor(annotation);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                        this.lists.push(annotation);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annotation.bounds.height;\n                    }\n                    else {\n                        var annot = annotation.clone();\n                        annot.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                        annot.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annot.text, annot.font, null, annot.brush, annot.bounds.x, annot.bounds.y, annot.bounds.width, annot.bounds.height, null);\n                        //Add annotation to dictionary.\n                        annot.setPage(this.page);\n                        this.setColor(annot);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annot));\n                        this.lists.push(annot);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annot.bounds.height;\n                    }\n                }\n            }\n        }\n        else {\n            annotation.setPage(this.page);\n            this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n            return this.lists.push(annotation);\n        }\n    };\n    /* tslint:enable */\n    /**\n     * `Set a color of an annotation`.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.setColor = function (annotation) {\n        var cs = PdfColorSpace.Rgb;\n        var colours = annotation.color.toArray(cs);\n        annotation.dictionary.items.setValue(this.dictionaryProperties.c, colours);\n    };\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` representing this object.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary, SaveTemplateEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { SizeF } from './../drawing/pdf-drawing';\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\nimport { PdfPageLayer } from './pdf-page-layer';\n/**\n * Provides methods and properties to create pages and its elements.\n * `PdfPage` class inherited from the `PdfPageBase` class.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * //\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function (_super) {\n    __extends(PdfPage, _super);\n    //constructors\n    /**\n     * Initialize the new instance for `PdfPage` class.\n     * @private\n     */\n    function PdfPage() {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Stores the instance of `PdfAnnotationCollection` class.\n         * @hidden\n         * @default null\n         * @private\n         */\n        _this.annotationCollection = null;\n        /**\n         * Stores the instance of `PageBeginSave` event for Page Number Field.\n         * @default null\n         * @private\n         */\n        _this.beginSave = null;\n        _this.initialize();\n        return _this;\n    }\n    Object.defineProperty(PdfPage.prototype, \"document\", {\n        //Properties\n        /**\n         * Gets current `document`.\n         * @private\n         */\n        get: function () {\n            if (this.section !== null && this.section.parent !== null) {\n                return this.section.parent.document;\n            }\n            else {\n                return null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Get the current `graphics`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a new page to the document\n         * let page1 : PdfPage = document.pages.add();\n         * //\n         * // get graphics\n         * let graphics : PdfGraphics = page1.graphics;\n         * //\n         * // set the font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // create black brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // draw the text\n         * graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var result = this.defaultLayer.graphics;\n            result.currentPage = this;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross table`.\n         * @private\n         */\n        get: function () {\n            if (this.section === null) {\n                throw new Error('PdfDocumentException : Page is not created');\n            }\n            return this.section.parent === null ? this.section.parentDocument.crossTable : this.section.parent.document.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF page- Read only.\n         * @public\n         */\n        get: function () {\n            return this.section.pageSettings.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"origin\", {\n        /**\n         * Gets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.section.pageSettings.origin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets a collection of the `annotations` of the page- Read only.\n         * @private\n         */\n        get: function () {\n            if (this.annotationCollection == null) {\n                this.annotationCollection = new PdfAnnotationCollection(this);\n                // if (!this.Dictionary.ContainsKey(this.dictionaryProperties.annots)) {\n                this.dictionary.items.setValue(this.dictionaryProperties.annots, this.annotationCollection.element);\n                // }\n                this.annotationCollection.annotations = this.dictionary.items.getValue(this.dictionaryProperties.annots);\n            }\n            return this.annotationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` a page.\n     * @private\n     */\n    PdfPage.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName('Page'));\n        this.dictionary.pageBeginDrawTemplate = new SaveTemplateEventHandler(this);\n    };\n    /**\n     * Sets parent `section` to the page.\n     * @private\n     */\n    PdfPage.prototype.setSection = function (section) {\n        this.section = section;\n        this.dictionary.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(section));\n    };\n    /**\n     * `Resets the progress`.\n     * @private\n     */\n    PdfPage.prototype.resetProgress = function () {\n        this.isProgressOn = false;\n    };\n    /**\n     * Get the page size reduced by page margins and page template dimensions.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // create new standard font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * //\n     * // set the specified point using `getClientSize` method\n     * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, point);\n     * //\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPage.prototype.getClientSize = function () {\n        var returnValue = this.section.getActualBounds(this, true);\n        return new SizeF(returnValue.width, returnValue.height);\n    };\n    /**\n     * Helper method to retrive the instance of `PageBeginSave` event for header and footer elements.\n     * @private\n     */\n    PdfPage.prototype.pageBeginSave = function () {\n        var doc = this.document;\n        if (typeof doc !== undefined && doc != null) {\n            this.drawPageTemplates(doc);\n        }\n        if (this.beginSave != null && typeof this.beginSave !== 'undefined') {\n            this.beginSave(this);\n        }\n    };\n    /**\n     * Helper method to draw template elements.\n     * @private\n     */\n    PdfPage.prototype.drawPageTemplates = function (document) {\n        // Draw Background templates.\n        var hasBackTemplates = this.section.containsTemplates(document, this, false);\n        if (hasBackTemplates) {\n            var backLayer = new PdfPageLayer(this, false);\n            this.layers.insert(0, backLayer);\n            this.section.drawTemplates(this, backLayer, document, false);\n            if (backLayer.graphics !== null && typeof backLayer.graphics !== 'undefined') {\n                for (var i = 0; i < backLayer.graphics.automaticFields.automaticFields.length; i++) {\n                    var fieldInfo = backLayer.graphics.automaticFields.automaticFields[i];\n                    fieldInfo.field.performDraw(backLayer.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n                }\n            }\n        }\n        // Draw Foreground templates.\n        var hasFrontTemplates = this.section.containsTemplates(document, this, true);\n        if (hasFrontTemplates) {\n            var frontLayer = new PdfPageLayer(this, false);\n            this.layers.add(frontLayer);\n            this.section.drawTemplates(this, frontLayer, document, true);\n        }\n    };\n    return PdfPage;\n}(PdfPageBase));\nexport { PdfPage };\n","/**\n * Provides data for `PageAddedEventHandler` event.\n * This event raises when adding the new PDF page to the PDF document.\n */\nvar PageAddedEventArgs = /** @class */ (function () {\n    function PageAddedEventArgs(page) {\n        if (typeof page !== 'undefined') {\n            this.pdfPage = page;\n        }\n        else {\n            this.pdfPage = null;\n        }\n    }\n    Object.defineProperty(PageAddedEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `newly added page`.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageAddedEventArgs;\n}());\nexport { PageAddedEventArgs };\n","/**\n * Represents the `collection of pages in a section`.\n * @private\n */\nvar PdfSectionPageCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfSectionPageCollection` class.\n     * @private\n     */\n    function PdfSectionPageCollection(section) {\n        //  Fields\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfSection = null;\n        if (section == null) {\n            throw Error('ArgumentNullException(\"section\")');\n        }\n        this.section = section;\n    }\n    Object.defineProperty(PdfSectionPageCollection.prototype, \"section\", {\n        // Properties\n        /**\n         * Gets the `PdfPage` at the specified index.\n         * @private\n         */\n        get: function () {\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public Methods\n    /**\n     * `Determines` whether the specified page is within the collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.contains = function (page) {\n        return this.section.contains(page);\n    };\n    /**\n     * `Removes` the specified page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.remove = function (page) {\n        this.section.remove(page);\n    };\n    /**\n     * `Adds` a new page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.add = function () {\n        return this.section.add();\n    };\n    return PdfSectionPageCollection;\n}());\nexport { PdfSectionPageCollection };\n","import { TemplateType } from './../pages/enum';\n// import { PdfStampCollection } from `./../Pages/PdfStampCollection`;\n/**\n * `PdfDocumentTemplate` class encapsulates a page template for all the pages in the document.\n * @private\n */\nvar PdfDocumentTemplate = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfDocumentTemplate` class.\n     * @public\n     */\n    function PdfDocumentTemplate() {\n        //\n    }\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"left\", {\n        // private m_stamps : PdfStampCollection;\n        // Properties\n        /**\n         * `Left` page template object.\n         * @public\n         */\n        get: function () {\n            return this.leftTemplate;\n        },\n        set: function (value) {\n            this.leftTemplate = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"top\", {\n        /**\n         * `Top` page template object.\n         * @public\n         */\n        get: function () {\n            return this.topTemplate;\n        },\n        set: function (value) {\n            this.topTemplate = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"right\", {\n        /**\n         * `Right` page template object.\n         * @public\n         */\n        get: function () {\n            return this.rightTemplate;\n        },\n        set: function (value) {\n            this.rightTemplate = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"bottom\", {\n        /**\n         * `Bottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.bottomTemplate;\n        },\n        set: function (value) {\n            this.bottomTemplate = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenLeft\", {\n        /**\n         * `EvenLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenLeft;\n        },\n        set: function (value) {\n            this.evenLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenTop\", {\n        /**\n         * `EvenTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenTop;\n        },\n        set: function (value) {\n            this.evenTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenRight\", {\n        /**\n         * `EvenRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenRight;\n        },\n        set: function (value) {\n            this.evenRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenBottom\", {\n        /**\n         * `EvenBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenBottom;\n        },\n        set: function (value) {\n            this.evenBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddLeft\", {\n        /**\n         * `OddLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddLeft;\n        },\n        set: function (value) {\n            this.oddLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddTop\", {\n        /**\n         * `OddTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddTop;\n        },\n        set: function (value) {\n            this.oddTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddRight\", {\n        /**\n         * `OddRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddRight;\n        },\n        set: function (value) {\n            this.oddRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddBottom\", {\n        /**\n         * `OddBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddBottom;\n        },\n        set: function (value) {\n            this.oddBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Returns `left` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getLeft = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenLeft != null) ? this.EvenLeft : this.left;\n        }\n        else {\n            template = (this.OddLeft != null) ? this.OddLeft : this.left;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `top` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getTop = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenTop != null) ? this.EvenTop : this.top;\n        }\n        else {\n            template = (this.OddTop != null) ? this.OddTop : this.top;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `right` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getRight = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenRight != null) ? this.EvenRight : this.right;\n        }\n        else {\n            template = (this.OddRight != null) ? this.OddRight : this.right;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `bottom` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getBottom = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenBottom != null) ? this.EvenBottom : this.bottom;\n        }\n        else {\n            template = (this.OddBottom != null) ? this.OddBottom : this.bottom;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Checks whether the page `is even`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.isEven = function (page) {\n        var pages = page.section.document.pages;\n        var index = 0;\n        if (pages.pageCollectionIndex.containsKey(page)) {\n            index = pages.pageCollectionIndex.getValue(page) + 1;\n        }\n        else {\n            index = pages.indexOf(page) + 1;\n        }\n        var even = ((index % 2) === 0);\n        return even;\n    };\n    /**\n     * Checks a `template element`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.checkElement = function (templateElement, type) {\n        if (templateElement != null) {\n            if ((typeof templateElement.type !== 'undefined') && (templateElement.type !== TemplateType.None)) {\n                throw new Error('NotSupportedException:Can not reassign the template element. Please, create new one.');\n            }\n            templateElement.type = type;\n        }\n        return templateElement;\n    };\n    return PdfDocumentTemplate;\n}());\nexport { PdfDocumentTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSectionTemplate.ts class for EJ2-PDF\n */\nimport { PdfDocumentTemplate } from './../document/pdf-document-template';\n/**\n * Represents a `page template` for all the pages in the section.\n */\nvar PdfSectionTemplate = /** @class */ (function (_super) {\n    __extends(PdfSectionTemplate, _super);\n    // Constructors\n    /**\n     * `Creates a new object`.\n     * @private\n     */\n    function PdfSectionTemplate() {\n        var _this = _super.call(this) || this;\n        _this.leftValue = _this.topValue = _this.rightValue = _this.bottomValue = _this.stampValue = true;\n        return _this;\n    }\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentLeftTemplate\", {\n        // Properties\n        /**\n         * Gets or sets value indicating whether parent `Left page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.leftValue;\n        },\n        set: function (value) {\n            this.leftValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentTopTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Top page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.topValue;\n        },\n        set: function (value) {\n            this.topValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentRightTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Right page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.rightValue;\n        },\n        set: function (value) {\n            this.rightValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentBottomTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Bottom page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.bottomValue;\n        },\n        set: function (value) {\n            this.bottomValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentStamps\", {\n        /**\n         * Gets or sets value indicating whether the `stamp value` is true or not.\n         * @private\n         */\n        get: function () {\n            return this.stampValue;\n        },\n        set: function (value) {\n            this.stampValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfSectionTemplate;\n}(PdfDocumentTemplate));\nexport { PdfSectionTemplate };\n","import { PdfPage } from './pdf-page';\nimport { PageAddedEventArgs } from './page-added-event-arguments';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { SaveSectionEventHandler } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfSectionCollection } from './pdf-section-collection';\nimport { PdfSectionPageCollection } from './pdf-section-page-collection';\nimport { RectangleF } from './../drawing/pdf-drawing';\nimport { PdfSectionTemplate } from './pdf-section-templates';\n/**\n * Represents a `section` entity. A section it's a set of the pages with similar page settings.\n */\nvar PdfSection = /** @class */ (function () {\n    function PdfSection(document, pageSettings) {\n        //Fields\n        //public PageAdded() : PageAddedEventArgs.PageAddedEventHandler = new PageAddedEventArgs.PageAddedEventHandler(Object,args)\n        /**\n         * @hidden\n         * @private\n         */\n        this.pageAdded = new PageAddedEventArgs();\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfPages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pdfDocument = document;\n        if (typeof pageSettings === 'undefined') {\n            this.settings = document.pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        else {\n            this.settings = pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfSection.prototype, \"parent\", {\n        //Property\n        /**\n         * Gets or sets the `parent`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        set: function (value) {\n            this.sectionCollection = value;\n            this.section.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"parentDocument\", {\n        /**\n         * Gets the `parent document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pageSettings\", {\n        /**\n         * Gets or sets the `page settings` of the section.\n         * @private\n         */\n        get: function () {\n            return this.settings;\n        },\n        set: function (value) {\n            if (value != null) {\n                this.settings = value;\n            }\n            else {\n                throw Error('Value can not be null.');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.section;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"count\", {\n        /**\n         * Gets the `count` of the pages in the section.\n         * @private\n         */\n        get: function () {\n            return this.pagesReferences.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"template\", {\n        /**\n         * Gets or sets a `template` for the pages in the section.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfSectionTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"document\", {\n        /**\n         * Gets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection.document;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pages\", {\n        /**\n         * Gets the collection of `pages` in a section (Read only)\n         * @private\n         */\n        get: function () {\n            if (this.pagesCollection == null || typeof this.pagesCollection === 'undefined') {\n                this.pagesCollection = new PdfSectionPageCollection(this);\n            }\n            return this.pagesCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * `Return the page collection` of current section.\n     * @private\n     */\n    PdfSection.prototype.getPages = function () {\n        return this.pdfPages;\n    };\n    /**\n     * `Translates` point into native coordinates of the page.\n     * @private\n     */\n    PdfSection.prototype.pointToNativePdf = function (page, point) {\n        var bounds = this.getActualBounds(page, true);\n        point.x += bounds.x;\n        point.y = this.pageSettings.height - (point.y);\n        return point;\n    };\n    /**\n     * Sets the page setting of the current section.\n     * @public\n     * @param settings Instance of `PdfPageSettings`\n     */\n    PdfSection.prototype.setPageSettings = function (settings) {\n        this.settings = settings;\n        this.state.orientation = settings.orientation;\n        this.state.rotate = settings.rotate;\n        this.state.size = settings.size;\n        this.state.origin = settings.origin;\n    };\n    /**\n     * `Initializes` the object.\n     * @private\n     */\n    PdfSection.prototype.initialize = function () {\n        this.pagesReferences = new PdfArray();\n        this.section = new PdfDictionary();\n        this.state = new PageSettingsState(this.pdfDocument);\n        this.section.sectionBeginSave = new SaveSectionEventHandler(this, this.state);\n        this.pageCount = new PdfNumber(0);\n        this.section.items.setValue(this.dictionaryProperties.count, this.pageCount);\n        this.section.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.pages));\n        this.section.items.setValue(this.dictionaryProperties.kids, this.pagesReferences);\n    };\n    /**\n     * Checks whether any template should be printed on this layer.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param foreground Layer z-order.\n     * @returns True - if some content should be printed on the layer, False otherwise.\n     */\n    PdfSection.prototype.containsTemplates = function (document, page, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionTemplates = this.getSectionTemplates(page, foreground);\n        return (documentHeaders.length > 0 || sectionTemplates.length > 0);\n    };\n    /**\n     * Returns array of the document templates.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param headers If true - return headers/footers, if false - return simple templates.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the document templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getDocumentTemplates = function (document, page, foreground) {\n        var templates = [];\n        if (this.template.applyDocumentTopTemplate && document.template.getTop(page) != null) {\n            if ((!(document.template.getTop(page).foreground || foreground)) || (document.template.getTop(page).foreground && foreground)) {\n                templates.push(document.template.getTop(page));\n            }\n        }\n        if (this.template.applyDocumentBottomTemplate && document.template.getBottom(page) != null) {\n            if ((!(document.template.getBottom(page).foreground || foreground)) || (document.template.getBottom(page).foreground && foreground)) {\n                templates.push(document.template.getBottom(page));\n            }\n        }\n        if (this.template.applyDocumentLeftTemplate && document.template.getLeft(page) != null) {\n            if ((!(document.template.getLeft(page).foreground || foreground)) || (document.template.getLeft(page).foreground && foreground)) {\n                templates.push(document.template.getLeft(page));\n            }\n        }\n        if (this.template.applyDocumentRightTemplate && document.template.getRight(page) != null) {\n            if ((!(document.template.getRight(page).foreground || foreground)) || (document.template.getRight(page).foreground && foreground)) {\n                templates.push(document.template.getRight(page));\n            }\n        }\n        return templates;\n    };\n    /**\n     * Returns array of the section templates.\n     * @private\n     * @param page The parent page.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the section templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getSectionTemplates = function (page, foreground) {\n        var templates = [];\n        if (this.template.getTop(page) != null) {\n            var pageTemplate = this.template.getTop(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getBottom(page) != null) {\n            var pageTemplate = this.template.getBottom(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getLeft(page) != null) {\n            var pageTemplate = this.template.getLeft(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getRight(page) != null) {\n            var pageTemplate = this.template.getRight(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        return templates;\n    };\n    /* tslint:enable */\n    /**\n     * `Adds` the specified page.\n     * @private\n     */\n    PdfSection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var r = this.checkPresence(page);\n            this.pdfPages.push(page);\n            this.pagesReferences.add(r);\n            page.setSection(this);\n            page.resetProgress();\n            this.pageAddedMethod(page);\n        }\n    };\n    /**\n     * `Checks the presence`.\n     * @private\n     */\n    PdfSection.prototype.checkPresence = function (page) {\n        var rh = new PdfReferenceHolder(page);\n        var contains = false;\n        var sc = this.parent;\n        for (var index = 0; index < sc.section.length; index++) {\n            var section = sc.section[index];\n            contains = contains || section.contains(page);\n        }\n        return rh;\n    };\n    /**\n     * `Determines` whether the page in within the section.\n     * @private\n     */\n    PdfSection.prototype.contains = function (page) {\n        var index = this.indexOf(page);\n        return (0 <= index);\n    };\n    /**\n     * Get the `index of` the page.\n     * @private\n     */\n    PdfSection.prototype.indexOf = function (page) {\n        for (var index = 0; index < this.pdfPages.length; index++) {\n            if (this.pdfPages[index] === page) {\n                return this.pdfPages.indexOf(page);\n            }\n        }\n        var r = new PdfReferenceHolder(page);\n        return this.pagesReferences.indexOf(r);\n    };\n    /**\n     * Call two event's methods.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.pageAddedMethod = function (page) {\n        //Create event's arguments\n        var args = new PageAddedEventArgs(page);\n        this.onPageAdded(args);\n        var parent = this.parent;\n        parent.document.pages.onPageAdded(args);\n        this.pageCount.intValue = this.count;\n    };\n    /**\n     * Called when the page has been added.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.onPageAdded = function (args) {\n        //\n    };\n    PdfSection.prototype.getActualBounds = function (arg1, arg2, arg3) {\n        if (arg1 instanceof PdfPage && typeof arg2 === 'boolean') {\n            var result = void 0;\n            var document_1 = this.parent.document;\n            result = this.getActualBounds(document_1, arg1, arg2);\n            return result;\n        }\n        else {\n            arg1 = arg1;\n            arg2 = arg2;\n            arg3 = arg3;\n            var bounds = new RectangleF(0, 0, 0, 0);\n            bounds.height = (arg3) ? this.pageSettings.size.height : this.pageSettings.getActualSize().height;\n            bounds.width = (arg3) ? this.pageSettings.size.width : this.pageSettings.getActualSize().width;\n            var left = this.getLeftIndentWidth(arg1, arg2, arg3);\n            var top_1 = this.getTopIndentHeight(arg1, arg2, arg3);\n            var right = this.getRightIndentWidth(arg1, arg2, arg3);\n            var bottom = this.getBottomIndentHeight(arg1, arg2, arg3);\n            bounds.x += left;\n            bounds.y += top_1;\n            bounds.width -= (left + right);\n            bounds.height -= (top_1 + bottom);\n            return bounds;\n        }\n    };\n    /**\n     * Calculates width of the `left indent`.\n     * @private\n     */\n    PdfSection.prototype.getLeftIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.left : 0;\n        var templateWidth = (this.template.getLeft(page) != null) ? this.template.getLeft(page).width : 0;\n        var docTemplateWidth = (document.template.getLeft(page) != null) ? document.template.getLeft(page).width : 0;\n        value += (this.template.applyDocumentLeftTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the top indent.\n     * @private\n     */\n    PdfSection.prototype.getTopIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.top : 0;\n        var templateHeight = (this.template.getTop(page) != null) ? this.template.getTop(page).height : 0;\n        var docTemplateHeight = (document.template.getTop(page) != null) ? document.template.getTop(page).height : 0;\n        value += (this.template.applyDocumentTopTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * Calculates `width` of the right indent.\n     * @private\n     */\n    PdfSection.prototype.getRightIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.right : 0;\n        var templateWidth = (this.template.getRight(page) != null) ? this.template.getRight(page).width : 0;\n        var docTemplateWidth = (document.template.getRight(page) != null) ? document.template.getRight(page).width : 0;\n        value += (this.template.applyDocumentRightTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the bottom indent.\n     * @private\n     */\n    PdfSection.prototype.getBottomIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.bottom : 0;\n        var templateHeight = (this.template.getBottom(page) != null) ? this.template.getBottom(page).height : 0;\n        var docTemplateHeight = (document.template.getBottom(page) != null) ? document.template.getBottom(page).height : 0;\n        value += (this.template.applyDocumentBottomTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * `Removes` the page from the section.\n     * @private\n     */\n    PdfSection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var index = this.pdfPages.indexOf(page);\n        this.pagesReferences.removeAt(index);\n        var temproaryPages = [];\n        for (var j = 0; j < index; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        for (var j = index + 1; j < this.pdfPages.length; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        this.pdfPages = temproaryPages;\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSection.prototype.applyPageSettings = function (container, parentSettings, state) {\n        var bounds = new RectangleF(state.origin, state.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n        var rotate = 0;\n        rotate = PdfSectionCollection.rotateFactor * state.rotate;\n        var angle = new PdfNumber(rotate);\n        container.items.setValue(this.dictionaryProperties.rotate, angle);\n    };\n    /**\n     * Catches the Save event of the dictionary.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.beginSave = function (state, writer) {\n        var doc = writer.document;\n        this.applyPageSettings(this.section, doc.pageSettings, state);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplates = function (page, layer, document, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionHeaders = this.getSectionTemplates(page, foreground);\n        this.drawTemplatesHelper(layer, document, documentHeaders);\n        this.drawTemplatesHelper(layer, document, sectionHeaders);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplatesHelper = function (layer, document, templates) {\n        if (templates != null && templates.length > 0) {\n            var len = templates.length;\n            for (var i = 0; i < len; i++) {\n                var template = templates[i];\n                template.draw(layer, document);\n            }\n        }\n    };\n    return PdfSection;\n}());\nexport { PdfSection };\nvar PageSettingsState = /** @class */ (function () {\n    //Public Constructor\n    /**\n     * New instance to store the `PageSettings`.\n     * @private\n     */\n    function PageSettingsState(document) {\n        this.pageOrientation = document.pageSettings.orientation;\n        this.pageRotate = document.pageSettings.rotate;\n        this.pageSize = document.pageSettings.size;\n        this.pageOrigin = document.pageSettings.origin;\n    }\n    Object.defineProperty(PageSettingsState.prototype, \"orientation\", {\n        //public Properties\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (value) {\n            this.pageOrientation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"rotate\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageRotate;\n        },\n        set: function (value) {\n            this.pageRotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"size\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.pageSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"origin\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageSettingsState;\n}());\nexport { PageSettingsState };\n","import { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfDictionary, SaveSectionCollectionEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfSection } from './pdf-section';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents the `collection of the sections`.\n * @private\n */\nvar PdfSectionCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    function PdfSectionCollection(document) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.sections = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (document === null) {\n        //     throw new Error('ArgumentNullException : document');\n        // }\n        this.pdfDocument = document.clone();\n        this.initialize();\n    }\n    Object.defineProperty(PdfSectionCollection.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `Section` collection.\n         */\n        get: function () {\n            return this.sections;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"document\", {\n        /**\n         * Gets a parent `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of sections` in a document.\n         * @private\n         */\n        get: function () {\n            return this.sections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Initializes the object`.\n     * @private\n     */\n    PdfSectionCollection.prototype.initialize = function () {\n        this.sectionCount = new PdfNumber(0);\n        this.sectionCollection = new PdfArray();\n        this.pages = new PdfDictionary();\n        this.pages.beginSave = new SaveSectionCollectionEventHandler(this);\n        this.pages.items.setValue(this.dictionaryProperties.type, new PdfName('Pages'));\n        this.pages.items.setValue(this.dictionaryProperties.kids, this.sectionCollection);\n        this.pages.items.setValue(this.dictionaryProperties.count, this.sectionCount);\n        this.pages.items.setValue(this.dictionaryProperties.resources, new PdfDictionary());\n        this.setPageSettings(this.pages, this.pdfDocument.pageSettings);\n    };\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    PdfSectionCollection.prototype.pdfSectionCollection = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException()');\n        }\n        return this.sections[index];\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSectionCollection.prototype.setPageSettings = function (container, pageSettings) {\n        // if (container === null) {\n        //     throw new Error('ArgumentNullException : container');\n        // }\n        // if (pageSettings === null) {\n        //     throw new Error('ArgumentNullException : pageSettings');\n        // }\n        var bounds = new RectangleF(new PointF(), pageSettings.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n    };\n    /**\n     * `Adds` the specified section.\n     * @private\n     */\n    PdfSectionCollection.prototype.add = function (section) {\n        if (typeof section === 'undefined') {\n            var section_1 = new PdfSection(this.pdfDocument);\n            this.add(section_1);\n            return section_1;\n        }\n        else {\n            // if (section === null) {\n            //     throw new Error('ArgumentNullException : section');\n            // }\n            var r = this.checkSection(section);\n            this.sections.push(section);\n            section.parent = this;\n            this.sectionCollection.add(r);\n            return this.sections.indexOf(section);\n        }\n    };\n    /**\n     * `Checks` if the section is within the collection.\n     * @private\n     */\n    PdfSectionCollection.prototype.checkSection = function (section) {\n        var r = new PdfReferenceHolder(section);\n        var contains = this.sectionCollection.contains(r);\n        // if (contains) {\n        //     throw new Error('ArgumentException : The object can not be added twice to the collection,section');\n        // }\n        return r;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @private\n     */\n    PdfSectionCollection.prototype.countPages = function () {\n        var count = 0;\n        this.sections.forEach(function (n) { return (count += n.count); });\n        return count;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @hidden\n     * @private\n     */\n    PdfSectionCollection.prototype.beginSave = function () {\n        this.sectionCount.intValue = this.countPages();\n    };\n    //Fields\n    /**\n     * Rotate factor for page `rotation`.\n     * @default 90\n     * @private\n     */\n    PdfSectionCollection.rotateFactor = 90;\n    return PdfSectionCollection;\n}());\nexport { PdfSectionCollection };\n","import { PdfPage } from './pdf-page';\nimport { Dictionary } from './../collections/dictionary';\n/**\n * Represents a virtual collection of all the pages in the document.\n * @private\n */\nvar PdfDocumentPageCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfPageCollection` class.\n     * @private\n     */\n    function PdfDocumentPageCollection(document) {\n        /**\n         * It holds the page collection with the `index`.\n         * @private\n         */\n        this.pdfPageCollectionIndex = new Dictionary();\n        this.document = document;\n    }\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"count\", {\n        //Property\n        /**\n         * Gets the total `number of the pages`.\n         * @private\n         */\n        get: function () {\n            return this.countPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"pageCollectionIndex\", {\n        /**\n         * Gets a `page index` from the document.\n         * @private\n         */\n        get: function () {\n            return this.pdfPageCollectionIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentPageCollection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var section = this.getLastSection();\n            section.add(page);\n        }\n    };\n    /**\n     * Returns `last section` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getLastSection = function () {\n        var sc = this.document.sections;\n        if (sc.section.length === 0) {\n            sc.add();\n        }\n        var section = sc.section[sc.section.length - 1];\n        return section;\n    };\n    /**\n     * Called when `new page has been added`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.onPageAdded = function (args) {\n        // if (PageAdded !== null)\n        // {\n        //     PageAdded(this, args);\n        // }\n    };\n    /**\n     * Gets the `total number of pages`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.countPages = function () {\n        var sc = this.document.sections;\n        var count = 0;\n        for (var index = 0; index < sc.section.length; index++) {\n            count += sc.section[index].count;\n        }\n        return count;\n    };\n    /**\n     * Gets the `page object` from page index.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPageByIndex = function (index) {\n        return this.getPage(index);\n    };\n    /**\n     * Gets a page by its `index` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPage = function (index) {\n        if ((index < 0) || (index >= this.count)) {\n            throw Error('ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\")');\n        }\n        var page = null;\n        var sectionStartIndex = 0;\n        var sectionCount = 0;\n        var pageIndex = 0;\n        var length = this.document.sections.count;\n        for (var i = 0; i < length; i++) {\n            var section = this.document.sections.section[i];\n            sectionCount = section.count;\n            pageIndex = index - sectionStartIndex;\n            // We found a section containing the page.\n            if ((index >= sectionStartIndex && pageIndex < sectionCount)) {\n                page = section.getPages()[pageIndex];\n                break;\n            }\n            sectionStartIndex += sectionCount;\n        }\n        return page;\n    };\n    /**\n     * Gets the `index of` the page in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.indexOf = function (page) {\n        var index = -1;\n        if (page == null) {\n            throw new Error('ArgumentNullException: page');\n        }\n        else {\n            var numPages = 0;\n            for (var i = 0, len = this.document.sections.count; i < len; i++) {\n                var section = this.document.sections.pdfSectionCollection(i);\n                index = section.indexOf(page);\n                if (index >= 0) {\n                    index += numPages;\n                    break;\n                }\n                else {\n                    index = -1;\n                }\n                numPages += section.count;\n            }\n        }\n        return index;\n    };\n    /**\n     * `Removes` the specified page.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var section = null;\n        var len;\n        for (var i = 0, len_1 = this.document.sections.count; i < len_1; i++) {\n            section = this.document.sections.pdfSectionCollection(i);\n            if (section.pages.contains(page)) {\n                section.pages.remove(page);\n                break;\n            }\n        }\n        return section;\n    };\n    return PdfDocumentPageCollection;\n}());\nexport { PdfDocumentPageCollection };\n","/**\n * PdfCacheCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\n/**\n * `Collection of the cached objects`.\n * @private\n */\nvar PdfCacheCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfCacheCollection` class.\n     * @private\n     */\n    function PdfCacheCollection() {\n        this.referenceObjects = [];\n        this.pdfFontCollection = new Dictionary();\n    }\n    // Public methods\n    /**\n     * `Searches` for the similar cached object. If is not found - adds the object to the cache.\n     * @private\n     */\n    PdfCacheCollection.prototype.search = function (obj) {\n        var result = null;\n        var group = this.getGroup(obj);\n        if (group == null) {\n            group = this.createNewGroup();\n        }\n        else if (group.length > 0) {\n            result = group[0];\n        }\n        group.push(obj);\n        return result;\n    };\n    // Implementation\n    /**\n     * `Creates` a new group.\n     * @private\n     */\n    PdfCacheCollection.prototype.createNewGroup = function () {\n        var group = [];\n        this.referenceObjects.push(group);\n        return group;\n    };\n    /**\n     * `Find and Return` a group.\n     * @private\n     */\n    PdfCacheCollection.prototype.getGroup = function (result) {\n        var group = null;\n        if (result !== null) {\n            var len = this.referenceObjects.length;\n            for (var i = 0; i < len; i++) {\n                if (this.referenceObjects.length > 0) {\n                    var tGroup = this.referenceObjects[i];\n                    if (tGroup.length > 0) {\n                        var representative = tGroup[0];\n                        if (result.equalsTo(representative)) {\n                            group = tGroup;\n                            break;\n                        }\n                    }\n                    else {\n                        this.removeGroup(tGroup);\n                    }\n                }\n                len = this.referenceObjects.length;\n            }\n        }\n        return group;\n    };\n    /**\n     * Remove a group from the storage.\n     */\n    PdfCacheCollection.prototype.removeGroup = function (group) {\n        if (group !== null) {\n            var index = this.referenceObjects.indexOf(group);\n            this.referenceObjects.slice(index, index + 1);\n        }\n    };\n    PdfCacheCollection.prototype.destroy = function () {\n        this.pdfFontCollection = undefined;\n        this.referenceObjects = undefined;\n    };\n    return PdfCacheCollection;\n}());\nexport { PdfCacheCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfWriter } from './../input-output/pdf-writer';\nimport { PdfMainObjectCollection } from './../input-output/pdf-main-object-collection';\nimport { PdfDocumentBase } from './pdf-document-base';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfCatalog } from './pdf-catalog';\nimport { PdfPageSettings } from './../pages/pdf-page-settings';\nimport { PdfSectionCollection } from './../pages/pdf-section-collection';\nimport { PdfDocumentPageCollection } from './../pages/pdf-document-page-collection';\nimport { PdfCacheCollection } from './../general/pdf-cache-collection';\nimport { PdfColorSpace } from './../graphics/enum';\nimport { PdfDocumentTemplate } from './pdf-document-template';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\n/**\n * Represents a PDF document and can be used to create a new PDF document from the scratch.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function (_super) {\n    __extends(PdfDocument, _super);\n    function PdfDocument(isMerging) {\n        var _this = _super.call(this) || this;\n        /**\n         * Default `margin` value.\n         * @default 40.0\n         * @private\n         */\n        _this.defaultMargin = 40.0;\n        /**\n         * Internal variable to store instance of `StreamWriter` classes..\n         * @default null\n         * @private\n         */\n        _this.streamWriter = null;\n        _this.document = _this;\n        var isMerge = false;\n        if (typeof isMerging === 'undefined') {\n            PdfDocument.cacheCollection = new PdfCacheCollection();\n            isMerge = false;\n        }\n        else {\n            isMerge = isMerging;\n        }\n        var objects = new PdfMainObjectCollection();\n        _this.setMainObjectCollection(objects);\n        var crossTable = new PdfCrossTable();\n        crossTable.isMerging = isMerge;\n        crossTable.document = _this;\n        _this.setCrossTable(crossTable);\n        var catalog = new PdfCatalog();\n        _this.setCatalog(catalog);\n        objects.add(catalog);\n        catalog.position = -1;\n        _this.sectionCollection = new PdfSectionCollection(_this);\n        _this.documentPageCollection = new PdfDocumentPageCollection(_this);\n        catalog.pages = _this.sectionCollection;\n        return _this;\n    }\n    Object.defineProperty(PdfDocument, \"defaultFont\", {\n        //Properties\n        /**\n         * Gets the `default font`. It is used for complex objects when font is not explicitly defined.\n         * @private\n         */\n        get: function () {\n            if (this.defaultStandardFont == null) {\n                this.defaultStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 8);\n            }\n            return this.defaultStandardFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"sections\", {\n        /**\n         * Gets the collection of the `sections` in the document.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageSettings\", {\n        /**\n         * Gets the document's page setting.\n         * @public\n         */\n        get: function () {\n            if (this.settings == null) {\n                this.settings = new PdfPageSettings(this.defaultMargin);\n            }\n            return this.settings;\n        },\n        /**\n         * Sets the document's page setting.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         *\n         * // sets the right margin of the page\n         * document.pageSettings.margins.right = 0;\n         * // set the page size.\n         * document.pageSettings.size = new SizeF(500, 500);\n         * // change the page orientation to landscape\n         * document.pageSettings.orientation = PdfPageOrientation.Landscape;\n         * // apply 90 degree rotation on the page\n         * document.pageSettings.rotate = PdfPageRotateAngle.RotateAngle90;\n         *\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set the specified Point\n         * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, point);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this.settings = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pages\", {\n        /**\n         * Represents the collection of pages in the PDF document.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * //\n         * // get the collection of pages in the document\n         * let pageCollection : PdfDocumentPageCollection  = document.pages;\n         * //\n         * // add pages\n         * let page1 : PdfPage = pageCollection.add();\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.documentPageCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"cache\", {\n        /**\n         * Gets collection of the `cached objects`.\n         * @private\n         */\n        get: function () {\n            if (typeof PdfDocument.cacheCollection === 'undefined' || PdfDocument.cacheCollection == null) {\n                return new PdfCacheCollection();\n            }\n            return PdfDocument.cacheCollection;\n        },\n        /**\n         * Sets collection of the `cached objects`.\n         * @private\n         */\n        set: function (value) {\n            this.cacheCollection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"enableCache\", {\n        /**\n         * Gets the value of enable cache.\n         * @private\n         */\n        get: function () {\n            return this.isCacheEnabled;\n        },\n        /**\n         * Sets thie value of enable cache.\n         * @private\n         */\n        set: function (value) {\n            this.isCacheEnabled = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"colorSpace\", {\n        /* tslint:disable */\n        /**\n         * Gets or sets the `color space` of the document. This property can be used to create PDF document in RGB, Gray scale or CMYK color spaces.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfColorSpace === PdfColorSpace.Rgb) || ((this.pdfColorSpace === PdfColorSpace.Cmyk)\n                || (this.pdfColorSpace === PdfColorSpace.GrayScale))) {\n                return this.pdfColorSpace;\n            }\n            else {\n                return PdfColorSpace.Rgb;\n            }\n        },\n        set: function (value) {\n            if ((value === PdfColorSpace.Rgb) || ((value === PdfColorSpace.Cmyk) ||\n                (value === PdfColorSpace.GrayScale))) {\n                this.pdfColorSpace = value;\n            }\n            else {\n                this.pdfColorSpace = PdfColorSpace.Rgb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"template\", {\n        /* tslint:enable */\n        /**\n         * Gets or sets a `template` to all pages in the document.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfDocumentTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype.docSave = function (stream, arg2, arg3) {\n        this.checkPagesPresence();\n        if (stream === null) {\n            throw new Error('ArgumentNullException : stream');\n        }\n        this.streamWriter = stream;\n        var writer = new PdfWriter(stream);\n        writer.document = this;\n        if (typeof arg2 === 'boolean' && typeof arg3 === 'undefined') {\n            return this.crossTable.save(writer);\n        }\n        else {\n            this.crossTable.save(writer, arg2);\n        }\n    };\n    /**\n     * Checks the pages `presence`.\n     * @private\n     */\n    PdfDocument.prototype.checkPagesPresence = function () {\n        if (this.pages.count === 0) {\n            this.pages.add();\n        }\n    };\n    /**\n     * disposes the current instance of `PdfDocument` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a new page to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set the font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // create black brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        this.catalog = undefined;\n        this.colorSpace = undefined;\n        this.currentSavingObj = undefined;\n        this.documentPageCollection = undefined;\n        this.isStreamCopied = undefined;\n        this.pageSettings = undefined;\n        this.pageTemplate = undefined;\n        this.pdfColorSpace = undefined;\n        this.sectionCollection = undefined;\n        PdfDocument.cache.destroy();\n        this.crossTable.pdfObjects.destroy();\n        PdfDocument.cache = undefined;\n        this.streamWriter.destroy();\n    };\n    /**\n     * `Font` used in complex objects to draw strings and text when it is not defined explicitly.\n     * @default null\n     * @private\n     */\n    PdfDocument.defaultStandardFont = null;\n    /**\n     * Indicates whether enable cache or not\n     * @default true\n     * @private\n     */\n    PdfDocument.isCacheEnabled = true;\n    return PdfDocument;\n}(PdfDocumentBase));\nexport { PdfDocument };\n","/**\n * PdfStandardFontMetricsFactory.ts class for EJ2-PDF\n */\nimport { PdfFontStyle, PdfFontFamily } from './enum';\nimport { PdfFontMetrics, StandardWidthTable } from './pdf-font-metrics';\n/**\n * @private\n * `Factory of the standard fonts metrics`.\n */\nvar PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function PdfStandardFontMetricsFactory() {\n    }\n    /**\n     * Returns `metrics` of the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.Helvetica:\n                metrics = this.getHelveticaMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Courier:\n                metrics = this.getCourierMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.TimesRoman:\n                metrics = this.getTimesMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Symbol:\n                metrics = this.getSymbolMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.ZapfDingbats:\n                metrics = this.getZapfDingbatsMetrics(fontFamily, fontStyle, size);\n                break;\n            default:\n                metrics = this.getHelveticaMetrics(PdfFontFamily.Helvetica, fontStyle, size);\n                break;\n        }\n        metrics.name = fontFamily.toString();\n        metrics.subScriptSizeFactor = this.subSuperScriptFactor;\n        metrics.superscriptSizeFactor = this.subSuperScriptFactor;\n        return metrics;\n    };\n    // Implementation\n    /**\n     * Creates `Helvetica font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getHelveticaMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaBoldItalicAscent;\n            metrics.descent = this.helveticaBoldItalicDescent;\n            metrics.postScriptName = this.helveticaBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.helveticaBoldAscent;\n            metrics.descent = this.helveticaBoldDescent;\n            metrics.postScriptName = this.helveticaBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaItalicAscent;\n            metrics.descent = this.helveticaItalicDescent;\n            metrics.postScriptName = this.helveticaItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.helveticaAscent;\n            metrics.descent = this.helveticaDescent;\n            metrics.postScriptName = this.helveticaName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Courier font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getCourierMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierBoldItalicAscent;\n            metrics.descent = this.courierBoldItalicDescent;\n            metrics.postScriptName = this.courierBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.courierBoldAscent;\n            metrics.descent = this.courierBoldDescent;\n            metrics.postScriptName = this.courierBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierItalicAscent;\n            metrics.descent = this.courierItalicDescent;\n            metrics.postScriptName = this.courierItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.courierAscent;\n            metrics.descent = this.courierDescent;\n            metrics.postScriptName = this.courierName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Times font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getTimesMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesBoldItalicAscent;\n            metrics.descent = this.timesBoldItalicDescent;\n            metrics.postScriptName = this.timesBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldItalicWidths);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.timesBoldAscent;\n            metrics.descent = this.timesBoldDescent;\n            metrics.postScriptName = this.timesBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesItalicAscent;\n            metrics.descent = this.timesItalicDescent;\n            metrics.postScriptName = this.timesItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanItalicWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.timesAscent;\n            metrics.descent = this.timesDescent;\n            metrics.postScriptName = this.timesName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Symbol font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getSymbolMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.symbolAscent;\n        metrics.descent = this.symbolDescent;\n        metrics.postScriptName = this.symbolName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.symbolWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * Creates `ZapfDingbats font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getZapfDingbatsMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.zapfDingbatsAscent;\n        metrics.descent = this.zapfDingbatsDescent;\n        metrics.postScriptName = this.zapfDingbatsName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.zapfDingbatsWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * `Multiplier` os subscript superscript.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.subSuperScriptFactor = 1.52;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaName = 'Helvetica';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldName = 'Helvetica-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicName = 'Helvetica-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierName = 'Courier';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldName = 'Courier-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicName = 'Courier-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicName = 'Courier-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesAscent = 898;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesName = 'Times-Roman';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldAscent = 935;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldName = 'Times-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicAscent = 883;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicDescent = -217;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicName = 'Times-Italic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicAscent = 921;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicName = 'Times-BoldItalic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolAscent = 1010;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolDescent = -293;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolName = 'Symbol';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsAscent = 820;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsDescent = -143;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsName = 'ZapfDingbats';\n    /**\n     * `Arial` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Arial bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    /**\n     * `Fixed` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    /**\n     * `Times` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    /**\n     * `Times bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Times italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    /**\n     * `Times bold italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    /**\n     * `Symbol` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    /**\n     * `Zip dingbats` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return PdfStandardFontMetricsFactory;\n}());\nexport { PdfStandardFontMetricsFactory };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFontFamily, PdfFontStyle, FontEncoding } from './enum';\nimport { PdfFont } from './pdf-font';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStandardFontMetricsFactory } from './pdf-standard-font-metrics-factory';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\n/**\n * Represents one of the 14 standard fonts.\n * It's used to create a standard PDF font to draw the text in to the PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamilyPrototype, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? ((fontFamilyPrototype instanceof PdfStandardFont) ? fontFamilyPrototype.style : PdfFontStyle.Regular) : style) || this;\n        /**\n         * Gets `ascent` of the font.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Gets `encodings` for internal class use.\n         * @hidden\n         * @private\n         */\n        _this.encodings = ['Unknown', 'StandardEncoding', 'MacRomanEncoding', 'MacExpertEncoding',\n            'WinAnsiEncoding', 'PDFDocEncoding', 'IdentityH'];\n        if (typeof fontFamilyPrototype === 'undefined') {\n            _this.pdfFontFamily = PdfFontFamily.Helvetica;\n        }\n        else if ((fontFamilyPrototype instanceof PdfStandardFont)) {\n            _this.pdfFontFamily = fontFamilyPrototype.fontFamily;\n        }\n        else {\n            _this.pdfFontFamily = fontFamilyPrototype;\n        }\n        _this.checkStyle();\n        _this.initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        /* tslint:enable */\n        //Properties\n        /**\n         * Gets the `FontFamily`.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * Checks font `style` of the font.\n     * @private\n     */\n    PdfStandardFont.prototype.checkStyle = function () {\n        if (this.fontFamily === PdfFontFamily.Symbol || this.fontFamily === PdfFontFamily.ZapfDingbats) {\n            var style = this.style;\n            style &= ~(PdfFontStyle.Bold | PdfFontStyle.Italic);\n            this.setStyle(style);\n        }\n    };\n    /**\n     * Returns `width` of the line.\n     * @public\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException:line');\n        }\n        var width = 0;\n        var name = this.name;\n        line = PdfStandardFont.convert(line);\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidthInternal(ch, format);\n            width += charWidth;\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Checks whether fonts are `equals`.\n     * @private\n     */\n    PdfStandardFont.prototype.equalsToFont = function (font) {\n        var equal = false;\n        var stFont = font;\n        if (stFont != null) {\n            var fontFamilyEqual = (this.fontFamily === stFont.fontFamily);\n            var lineReducer = (~(PdfFontStyle.Underline | PdfFontStyle.Strikeout));\n            var styleEqual = (this.style & lineReducer) === (stFont.style & lineReducer);\n            equal = (fontFamilyEqual && styleEqual);\n        }\n        return equal;\n    };\n    /**\n     * `Initializes` font internals..\n     * @private\n     */\n    PdfStandardFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        // if (PdfDocument.EnableCache) {\n        equalFont = PdfDocument.cache.search(this);\n        // }\n        var internals = null;\n        // if (equalFont == null) {\n        // Create font metrics.\n        var metrics = PdfStandardFontMetricsFactory.getMetrics(this.pdfFontFamily, this.style, this.size);\n        this.metrics = metrics;\n        internals = this.createInternals();\n        this.setInternals(internals);\n    };\n    /**\n     * `Creates` font`s dictionary.\n     * @private\n     */\n    PdfStandardFont.prototype.createInternals = function () {\n        var dictionary = new PdfDictionary();\n        dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type1));\n        dictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.metrics.postScriptName));\n        if (this.fontFamily !== PdfFontFamily.Symbol && this.fontFamily !== PdfFontFamily.ZapfDingbats) {\n            var encoding = this.encodings[FontEncoding.WinAnsiEncoding];\n            dictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(encoding));\n        }\n        return dictionary;\n    };\n    /**\n     * Returns `width` of the char. This methods doesn`t takes into consideration font`s size.\n     * @private\n     */\n    PdfStandardFont.prototype.getCharWidthInternal = function (charCode, format) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this.name === '0' || this.name === '1' || this.name === '2' ||\n            this.name === '3' || this.name === '4') {\n            code = code - PdfStandardFont.charOffset;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var metrics = this.metrics;\n        var widthTable = metrics.widthTable;\n        width = widthTable.items(code);\n        return width;\n    };\n    /**\n     * `Converts` the specified text.\n     * @private\n     */\n    PdfStandardFont.convert = function (text) {\n        return text;\n    };\n    //Constants\n    /**\n     * First character `position`.\n     * @private\n     */\n    PdfStandardFont.charOffset = 32;\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n","import { PdfColor } from './../graphics/pdf-color';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfDictionary, SaveAnnotationEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfString } from './../primitives/pdf-string';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfSolidBrush } from './../graphics/brushes/pdf-solid-brush';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStringFormat } from './../graphics/fonts/pdf-string-format';\nimport { PdfTextAlignment } from './../graphics/enum';\n/**\n * `PdfAnnotation` class represents the base class for annotation objects.\n * @private\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation(arg1) {\n        // Fields\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        this.pdfColor = new PdfColor(255, 255, 255);\n        /**\n         * `Bounds` of the annotation.\n         * @private\n         */\n        this.rectangle = new RectangleF(0, 0, 0, 0);\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        this.pdfPage = null;\n        /**\n         * `Brush of the text` of the annotation.\n         * @default new PdfSolidBrush(new PdfColor(0, 0, 0))\n         * @private\n         */\n        this.textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        /**\n         * `Font of the text` of the annotation.\n         * @default new PdfStandardFont(PdfFontFamily.TimesRoman, 10)\n         * @private\n         */\n        this.textFont = new PdfStandardFont(PdfFontFamily.TimesRoman, 10);\n        /**\n         * `StringFormat of the text` of the annotation.\n         * @default new PdfStringFormat(PdfTextAlignment.Left)\n         * @private\n         */\n        this.format = new PdfStringFormat(PdfTextAlignment.Left);\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        this.content = '';\n        /**\n         * Internal variable to store `dictionary`.\n         * @private\n         */\n        this.pdfDictionary = new PdfDictionary();\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        this.internalColor = new PdfColor();\n        /**\n         * `opacity or darkness` of the annotation.\n         * @private\n         * @default 1.0\n         */\n        this.darkness = 1.0;\n        if (typeof arg1 === 'undefined') {\n            this.initialize();\n        }\n        else {\n            this.initialize();\n            this.bounds = arg1;\n        }\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        // Properties\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        get: function () {\n            return this.internalColor;\n        },\n        set: function (value) {\n            this.internalColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * `bounds` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.rectangle;\n        },\n        set: function (value) {\n            this.rectangle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"page\", {\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"font\", {\n        /**\n         * To specifying the `Font of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textFont;\n        },\n        set: function (value) {\n            this.textFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"stringFormat\", {\n        /**\n         * To specifying the `StringFormat of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"brush\", {\n        /**\n         * To specifying the `Brush of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textBrush;\n        },\n        set: function (value) {\n            this.textBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.contents, new PdfString(this.content));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"dictionary\", {\n        /**\n         * Internal variable to store `dictionary`.\n         * @hidden\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        set: function (value) {\n            this.pdfDictionary = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the annotation event handler and specifies the type of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.initialize = function () {\n        this.pdfDictionary.annotationBeginSave = new SaveAnnotationEventHandler(this);\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.annot));\n    };\n    /**\n     * Sets related `page` of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.setPage = function (page) {\n        this.pdfPage = page;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new PdfReferenceHolder(this.pdfPage));\n    };\n    /**\n     * Handles the `BeginSave` event of the Dictionary.\n     * @private\n     */\n    PdfAnnotation.prototype.beginSave = function () {\n        this.save();\n    };\n    /**\n     * `Saves` an annotation.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotation.prototype.save = function () {\n        var nativeRectangle = new RectangleF(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n        var section = this.pdfPage.section;\n        var initialHeight = nativeRectangle.height;\n        var tempLoacation = section.pointToNativePdf(this.page, new PointF(nativeRectangle.x, nativeRectangle.y));\n        nativeRectangle.x = tempLoacation.x;\n        nativeRectangle.width = tempLoacation.x + nativeRectangle.width;\n        nativeRectangle.y = (tempLoacation.y - this.page.document.pageSettings.margins.top);\n        nativeRectangle.height = nativeRectangle.y - initialHeight;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, PdfArray.fromRectangle(nativeRectangle));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(this.darkness));\n    };\n    Object.defineProperty(PdfAnnotation.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAnnotation } from './annotation';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfLinkAnnotation` class represents the ink annotation class.\n * @private\n */\nvar PdfLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLinkAnnotation, _super);\n    function PdfLinkAnnotation(rectangle) {\n        return _super.call(this, rectangle) || this;\n    }\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfLinkAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n    };\n    return PdfLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * Represents base class for `link annotations` with associated action.\n * @private\n */\nvar PdfActionLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfActionLinkAnnotation, _super);\n    // Constructors\n    /**\n     * Specifies the constructor for `ActionLinkAnnotation`.\n     * @private\n     */\n    function PdfActionLinkAnnotation(rectangle) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * Internal variable to store annotation's `action`.\n         * @default null\n         * @private\n         */\n        _this.pdfAction = null;\n        return _this;\n    }\n    //Public method\n    /**\n     * get and set the `action`.\n     * @hidden\n     */\n    PdfActionLinkAnnotation.prototype.getSetAction = function (value) {\n        if (typeof value === 'undefined') {\n            return this.pdfAction;\n        }\n        else {\n            this.pdfAction = value;\n        }\n    };\n    return PdfActionLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfActionLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * `PdfDocumentLinkAnnotation` class represents an annotation object with holds link on another location within a document.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create new pages\n * let page1 : PdfPage = document.pages.add();\n * let page2 : PdfPage = document.pages.add();\n * // create a new rectangle\n * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n * //\n * // create a new document link annotation\n * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n * // set the annotation text\n * documentLinkAnnotation.text = 'Document link annotation';\n * // set the destination\n * documentLinkAnnotation.destination = new PdfDestination(page2);\n * // set the documentlink annotation location\n * documentLinkAnnotation.destination.location = new PointF(10, 0);\n * // add this annotation to a new page\n * page1.annotations.add(documentLinkAnnotation);\n * //\n * // save the document to disk\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(rectangle, destination) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * `Destination` of the annotation.\n         * @default null\n         * @private\n         */\n        _this.pdfDestination = null;\n        if (typeof destination !== 'undefined') {\n            _this.destination = destination;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        // Properties\n        /**\n         * Gets or sets the `destination` of the annotation.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create new pages\n         * let page1 : PdfPage = document.pages.add();\n         * let page2 : PdfPage = document.pages.add();\n         * // create a new rectangle\n         * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n         * //\n         * // create a new document link annotation\n         * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n         * // set the annotation text\n         * documentLinkAnnotation.text = 'Document link annotation';\n         * // set the destination\n         * documentLinkAnnotation.destination = new PdfDestination(page2);\n         * // set the documentlink annotation location\n         * documentLinkAnnotation.destination.location = new PointF(10, 0);\n         * // add this annotation to a new page\n         * page1.annotations.add(documentLinkAnnotation);\n         * //\n         * // save the document to disk\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         * @default null\n         */\n        get: function () {\n            return this.pdfDestination;\n        },\n        set: function (value) {\n            // if (this.pdfDestination !== value) {\n            this.pdfDestination = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Saves` annotation object.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.save = function () {\n        _super.prototype.save.call(this);\n        if (this.pdfDestination != null) {\n            this.dictionary.items.setValue(this.dictionaryProperties.dest, this.pdfDestination.element);\n        }\n    };\n    /**\n     * `Clone` the document link annotation.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.clone = function () {\n        var annot = new PdfDocumentLinkAnnotation(this.bounds, this.destination);\n        annot.color = this.color;\n        annot.brush = this.brush;\n        annot.destination = this.destination;\n        annot.font = this.font;\n        return annot;\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfDocumentLinkAnnotation };\n","/**\n * ElementLayouter.ts class for EJ2-PDF\n */\nimport { RectangleF } from './../../../drawing/pdf-drawing';\n/**\n * Base class for `elements lay outing`.\n * @private\n */\nvar ElementLayouter = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `ElementLayouter` class.\n     * @private\n     */\n    function ElementLayouter(element) {\n        this.layoutElement = element;\n    }\n    Object.defineProperty(ElementLayouter.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.layoutElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `element`.\n     * @private\n     */\n    ElementLayouter.prototype.getElement = function () {\n        return this.layoutElement;\n    };\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    ElementLayouter.prototype.layout = function (param) {\n        return this.layoutInternal(param);\n    };\n    ElementLayouter.prototype.Layouter = function (param) {\n        return this.layoutInternal(param);\n    };\n    /**\n     * Returns the `next page`.\n     * @private\n     */\n    ElementLayouter.prototype.getNextPage = function (currentPage) {\n        var section = currentPage.section;\n        var nextPage = section.add();\n        return nextPage;\n    };\n    ElementLayouter.prototype.getPaginateBounds = function (param) {\n        if ((param == null)) {\n            throw new Error('ArgumentNullException : param');\n        }\n        var result = param.format.usePaginateBounds ? param.format.paginateBounds\n            : new RectangleF(param.bounds.x, 0, param.bounds.width, param.bounds.height);\n        return result;\n    };\n    return ElementLayouter;\n}());\nexport { ElementLayouter };\nvar PdfLayoutFormat = /** @class */ (function () {\n    function PdfLayoutFormat(baseFormat) {\n        if (typeof baseFormat === 'undefined') {\n            //\n        }\n        else {\n            this.break = baseFormat.break;\n            this.layout = baseFormat.layout;\n            this.paginateBounds = baseFormat.paginateBounds;\n            this.boundsSet = baseFormat.usePaginateBounds;\n        }\n    }\n    Object.defineProperty(PdfLayoutFormat.prototype, \"layout\", {\n        // Properties\n        /**\n         * Gets or sets `layout` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.layoutType === 'undefined' || this.layoutType == null) {\n            //      this.layoutType = PdfLayoutType.Paginate;\n            // }\n            return this.layoutType;\n        },\n        set: function (value) {\n            this.layoutType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"break\", {\n        /**\n         * Gets or sets `break` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.breakType === 'undefined' || this.boundsSet == null) {\n            //      this.breakType = PdfLayoutBreakType.FitPage;\n            // }\n            return this.breakType;\n        },\n        set: function (value) {\n            this.breakType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"paginateBounds\", {\n        /**\n         * Gets or sets the `bounds` on the next page.\n         * @private\n         */\n        get: function () {\n            if (typeof this.layoutPaginateBounds === 'undefined' && this.layoutPaginateBounds == null) {\n                this.layoutPaginateBounds = new RectangleF(0, 0, 0, 0);\n            }\n            return this.layoutPaginateBounds;\n        },\n        set: function (value) {\n            this.layoutPaginateBounds = value;\n            this.boundsSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"usePaginateBounds\", {\n        /**\n         * Gets a value indicating whether [`use paginate bounds`].\n         * @private\n         */\n        get: function () {\n            // if (typeof this.boundsSet === 'undefined' || this.boundsSet == null) {\n            //      this.boundsSet = false;\n            // }\n            return this.boundsSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutFormat;\n}());\nexport { PdfLayoutFormat };\nvar PdfLayoutParams = /** @class */ (function () {\n    function PdfLayoutParams() {\n    }\n    Object.defineProperty(PdfLayoutParams.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets or sets the layout `page` for the element.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"bounds\", {\n        /**\n         * Gets or sets layout `bounds` for the element.\n         * @private\n         */\n        get: function () {\n            return new RectangleF(this.layoutBounds.x, this.layoutBounds.y, this.layoutBounds.width, this.layoutBounds.height);\n        },\n        set: function (value) {\n            this.layoutBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"format\", {\n        /**\n         * Gets or sets `layout settings` for the element.\n         * @private\n         */\n        get: function () {\n            return this.layoutFormat;\n        },\n        set: function (value) {\n            this.layoutFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutParams;\n}());\nexport { PdfLayoutParams };\nvar PdfLayoutResult = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfLayoutResult` class.\n     * @private\n     */\n    function PdfLayoutResult(page, bounds) {\n        this.pdfPage = page;\n        this.layoutBounds = bounds;\n    }\n    Object.defineProperty(PdfLayoutResult.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets the last `page` where the element was drawn.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of the element on the last page where it was drawn.\n         * @private\n         */\n        get: function () {\n            return this.layoutBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutResult;\n}());\nexport { PdfLayoutResult };\n","/**\n * PdfBorders.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../../../graphics/pdf-pen';\nimport { PdfDashStyle } from './../../../graphics/enum';\nimport { PdfColor } from './../../../graphics/pdf-color';\n/**\n * `PdfBorders` class used represents the cell border of the PDF grid.\n */\nvar PdfBorders = /** @class */ (function () {\n    // Constructor\n    /**\n     * Create a new instance for `PdfBorders` class.\n     * @private\n     */\n    function PdfBorders() {\n        var defaultBorderPenLeft = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenLeft.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenRight = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenRight.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenTop = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenTop.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenBottom = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenBottom.dashStyle = PdfDashStyle.Solid;\n        this.leftPen = defaultBorderPenLeft;\n        this.rightPen = defaultBorderPenRight;\n        this.topPen = defaultBorderPenTop;\n        this.bottomPen = defaultBorderPenBottom;\n    }\n    Object.defineProperty(PdfBorders.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `Left`.\n         * @private\n         */\n        get: function () {\n            return this.leftPen;\n        },\n        set: function (value) {\n            this.leftPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"right\", {\n        /**\n         * Gets or sets the `Right`.\n         * @private\n         */\n        get: function () {\n            return this.rightPen;\n        },\n        set: function (value) {\n            this.rightPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"top\", {\n        /**\n         * Gets or sets the `Top`.\n         * @private\n         */\n        get: function () {\n            return this.topPen;\n        },\n        set: function (value) {\n            this.topPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `Bottom`.\n         * @private\n         */\n        get: function () {\n            return this.bottomPen;\n        },\n        set: function (value) {\n            this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"all\", {\n        /**\n         * sets the `All`.\n         * @private\n         */\n        set: function (value) {\n            this.leftPen = this.rightPen = this.topPen = this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"isAll\", {\n        /**\n         * Gets a value indicating whether this instance `is all`.\n         * @private\n         */\n        get: function () {\n            return ((this.leftPen === this.rightPen) && (this.leftPen === this.topPen) && (this.leftPen === this.bottomPen));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders, \"default\", {\n        /**\n         * Gets the `default`.\n         * @private\n         */\n        get: function () {\n            return new PdfBorders();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfBorders;\n}());\nexport { PdfBorders };\nvar PdfPaddings = /** @class */ (function () {\n    function PdfPaddings(left, right, top, bottom) {\n        /**\n         * The 'left' border padding set.\n         * @private\n         */\n        this.hasLeftPad = false;\n        /**\n         * The 'right' border padding set.\n         * @private\n         */\n        this.hasRightPad = false;\n        /**\n         * The 'top' border padding set.\n         * @private\n         */\n        this.hasTopPad = false;\n        /**\n         * The 'bottom' border padding set.\n         * @private\n         */\n        this.hasBottomPad = false;\n        if (typeof left === 'undefined') {\n            //5.76 and 0 are taken from ms-word default table margins.\n            this.leftPad = this.rightPad = 5.76;\n            //0.5 is set for top and bottom by default.\n            this.bottomPad = this.topPad = 0.5;\n        }\n        else {\n            this.leftPad = left;\n            this.rightPad = right;\n            this.topPad = top;\n            this.bottomPad = bottom;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        }\n    }\n    Object.defineProperty(PdfPaddings.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `left` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.leftPad;\n        },\n        set: function (value) {\n            this.leftPad = value;\n            this.hasLeftPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"right\", {\n        /**\n         * Gets or sets the `right` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.rightPad;\n        },\n        set: function (value) {\n            this.rightPad = value;\n            this.hasRightPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"top\", {\n        /**\n         * Gets or sets the `top` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.topPad;\n        },\n        set: function (value) {\n            this.topPad = value;\n            this.hasTopPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.bottomPad;\n        },\n        set: function (value) {\n            this.bottomPad = value;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"all\", {\n        /**\n         * Sets value to all sides `left,right,top and bottom`.s\n         * @private\n         */\n        set: function (value) {\n            this.leftPad = this.rightPad = this.topPad = this.bottomPad = value;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPaddings;\n}());\nexport { PdfPaddings };\n","import { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutParams, PdfLayoutFormat } from './base/element-layouter';\nimport { PdfBorders } from './../../structured-elements/grid/styles/pdf-borders';\n/**\n * `PdfLayoutElement` class represents the base class for all elements that can be layout on the pages.\n * @private\n */\nvar PdfLayoutElement = /** @class */ (function () {\n    function PdfLayoutElement() {\n    }\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseBeginPageLayout\", {\n        // Property\n        /**\n         * Gets a value indicating whether the `start page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseEndPageLayout\", {\n        /**\n         * Gets a value indicating whether the `ending page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Event Handlers\n    PdfLayoutElement.prototype.onBeginPageLayout = function (args) {\n        if (this.beginPageLayout) {\n            this.beginPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.onEndPageLayout = function (args) {\n        if (this.endPageLayout) {\n            this.endPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.drawHelper = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            return this.drawHelper(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawHelper(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            this.bEmbedFonts = arg4;\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else {\n            var param = new PdfLayoutParams();\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            param.page = arg2;\n            param.bounds = temparg3;\n            if (param != null) {\n                var x = param.bounds.x;\n                var y = param.bounds.y;\n                if (param.bounds.x === 0) {\n                    x = PdfBorders.default.right.width / 2;\n                }\n                if (param.bounds.y === 0) {\n                    y = PdfBorders.default.top.width / 2;\n                }\n                var newBound = new RectangleF(x, y, param.bounds.width, param.bounds.height);\n                param.bounds = newBound;\n            }\n            param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n            var result = this.layout(param);\n            return result;\n        }\n    };\n    return PdfLayoutElement;\n}());\nexport { PdfLayoutElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * TextLayouter.ts class for EJ2-PDF\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, SizeF } from './../../../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../../fonts/string-layouter';\nimport { PdfLayoutBreakType } from './../../figures/enum';\nimport { PdfColor } from './../../pdf-color';\nimport { PdfTextWebLink } from './../../../annotations/pdf-text-web-link';\n/**\n * Class that `layouts the text`.\n * @private\n */\nvar TextLayouter = /** @class */ (function (_super) {\n    __extends(TextLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `TextLayouter` class.\n     * @private\n     */\n    function TextLayouter(element) {\n        return _super.call(this, element) || this;\n    }\n    Object.defineProperty(TextLayouter.prototype, \"element\", {\n        /**\n         * Gets the layout `element`.\n         * @private\n         */\n        get: function () {\n            return _super.prototype.getElement.call(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    TextLayouter.prototype.layoutInternal = function (param) {\n        /* tslint:disable */\n        this.format = (this.element.stringFormat !== null && typeof this.element.stringFormat !== 'undefined') ? this.element.stringFormat : null;\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var text = this.element.value;\n        var result = null;\n        var pageResult = new TextPageLayoutResult();\n        pageResult.page = currentPage;\n        pageResult.remainder = text;\n        for (;;) {\n            pageResult = this.layoutOnPage(text, currentPage, currentBounds, param);\n            result = this.getLayoutResult(pageResult);\n            break;\n        }\n        /* tslint:enable */\n        return result;\n    };\n    /**\n     * Raises `PageLayout` event if needed.\n     * @private\n     */\n    TextLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfTextLayoutResult(pageResult.page, pageResult.bounds, pageResult.remainder, pageResult.lastLineBounds);\n        return result;\n    };\n    /* tslint:disable */\n    /**\n     * `Layouts` the text on the page.\n     * @private\n     */\n    TextLayouter.prototype.layoutOnPage = function (text, currentPage, currentBounds, param) {\n        var result = new TextPageLayoutResult();\n        result.remainder = text;\n        result.page = currentPage;\n        currentBounds = this.checkCorrectBounds(currentPage, currentBounds);\n        var layouter = new PdfStringLayouter();\n        var stringResult = layouter.layout(text, this.element.font, this.format, currentBounds, currentPage.getClientSize().height, false, new SizeF(0, 0));\n        var textFinished = (stringResult.remainder == null);\n        var doesntFit = (param.format.break === PdfLayoutBreakType.FitElement);\n        var canDraw = !(doesntFit || stringResult.empty);\n        // Draw the text.\n        var graphics = currentPage.graphics;\n        var brush = this.element.getBrush();\n        if (this.element instanceof PdfTextWebLink) {\n            brush.color = new PdfColor(0, 0, 255);\n        }\n        graphics.drawStringLayoutResult(stringResult, this.element.font, this.element.pen, brush, currentBounds, this.format);\n        var lineInfo = stringResult.lines[stringResult.lineCount - 1];\n        result.lastLineBounds = graphics.getLineBounds(stringResult.lineCount - 1, stringResult, this.element.font, currentBounds, this.format);\n        result.bounds = this.getTextPageBounds(currentPage, currentBounds, stringResult);\n        result.remainder = stringResult.remainder;\n        result.end = (textFinished);\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * `Corrects current bounds` on the page.\n     * @private\n     */\n    TextLayouter.prototype.checkCorrectBounds = function (currentPage, currentBounds) {\n        var pageSize = currentPage.graphics.clientSize;\n        currentBounds.height = (currentBounds.height > 0) ? currentBounds.height : pageSize.height - currentBounds.y;\n        return currentBounds;\n    };\n    /**\n     * Returns a `rectangle` where the text was printed on the page.\n     * @private\n     */\n    /* tslint:disable */\n    TextLayouter.prototype.getTextPageBounds = function (currentPage, currentBounds, stringResult) {\n        var textSize = stringResult.actualSize;\n        var x = currentBounds.x;\n        var y = currentBounds.y;\n        var width = (currentBounds.width > 0) ? currentBounds.width : textSize.width;\n        var height = textSize.height;\n        var shiftedRect = currentPage.graphics.checkCorrectLayoutRectangle(textSize, currentBounds.x, currentBounds.y, this.format);\n        // if (currentBounds.width <= 0) {\n        x = shiftedRect.x;\n        // }\n        var verticalShift = currentPage.graphics.getTextVerticalAlignShift(textSize.height, currentBounds.height, this.format);\n        y += verticalShift;\n        var bounds = new RectangleF(x, y, width, height);\n        return bounds;\n    };\n    return TextLayouter;\n}(ElementLayouter));\nexport { TextLayouter };\nvar TextPageLayoutResult = /** @class */ (function () {\n    function TextPageLayoutResult() {\n    }\n    return TextPageLayoutResult;\n}());\nexport { TextPageLayoutResult };\nvar PdfTextLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfTextLayoutResult, _super);\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfTextLayoutResult` class.\n     * @private\n     */\n    function PdfTextLayoutResult(page, bounds, remainder, lastLineBounds) {\n        var _this = _super.call(this, page, bounds) || this;\n        _this.remainderText = remainder;\n        _this.lastLineTextBounds = lastLineBounds;\n        return _this;\n    }\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets a value that contains the `text` that was not printed.\n         * @private\n         */\n        get: function () {\n            return this.remainderText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"lastLineBounds\", {\n        /**\n         * Gets a value that indicates the `bounds` of the last line that was printed on the page.\n         * @private\n         */\n        get: function () {\n            return this.lastLineTextBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTextLayoutResult;\n}(PdfLayoutResult));\nexport { PdfTextLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTextElement.ts class for EJ2-PDF\n */\nimport { PdfLayoutElement } from './../figures/layout-element';\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfFont } from './../fonts/pdf-font';\nimport { PdfStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutParams } from './../figures/base/element-layouter';\nimport { TextLayouter } from './base/text-layouter';\nimport { PdfSolidBrush } from './../brushes/pdf-solid-brush';\nimport { PdfColor } from './../pdf-color';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutFormat } from './base/element-layouter';\nimport { PdfStringLayouter } from './../fonts/string-layouter';\nimport { PdfTextAlignment } from './../enum';\n/**\n * `PdfTextElement` class represents the text area with the ability to span several pages\n * and inherited from the 'PdfLayoutElement' class.\n * @private\n */\nvar PdfTextElement = /** @class */ (function (_super) {\n    __extends(PdfTextElement, _super);\n    function PdfTextElement(arg1, arg2, arg3, arg4, arg5) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * `Text` data.\n         * @private\n         */\n        _this.content = '';\n        /**\n         * `Value` of text data.\n         * @private\n         */\n        _this.elementValue = '';\n        /**\n         * indicate whether the drawText with PointF overload is called or not.\n         * @default false\n         * @private\n         */\n        _this.hasPointOverload = false;\n        /**\n         * indicate whether the PdfGridCell value is `PdfTextElement`\n         * @default false\n         * @private\n         */\n        _this.isPdfTextElement = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (typeof arg1 === 'string' && typeof arg2 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && typeof arg3 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfPen && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfBrush && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfBrush = arg3;\n        }\n        else {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n            _this.pdfBrush = arg4;\n            _this.format = arg5;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextElement.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating the `text` that should be printed.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.elementValue = value;\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"value\", {\n        //get value\n        /**\n         * Gets or sets a `value` indicating the text that should be printed.\n         * @private\n         */\n        get: function () {\n            return this.elementValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"pen\", {\n        //get pen\n        /**\n         * Gets or sets a `PdfPen` that determines the color, width, and style of the text\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        //Set pen value\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"brush\", {\n        //get brush\n        /**\n         * Gets or sets the `PdfBrush` that will be used to draw the text with color and texture.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        //Set brush value\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"font\", {\n        //get font\n        /**\n         * Gets or sets a `PdfFont` that defines the text format.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * //\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n            if (this.pdfFont instanceof PdfStandardFont && this.content != null) {\n                this.elementValue = PdfStandardFont.convert(this.content);\n            }\n            else {\n                this.elementValue = this.content;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `PdfStringFormat` that will be used to set the string format\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets a `brush` for drawing.\n     * @private\n     */\n    PdfTextElement.prototype.getBrush = function () {\n        return (this.pdfBrush == null || typeof this.pdfBrush === 'undefined') ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.pdfBrush;\n    };\n    // /**\n    //  * `Draws` an element on the Graphics.\n    //  * @private\n    //  */\n    // public drawInternal(graphics : PdfGraphics) : void {\n    //     graphics.drawString(this.elementValue, this.pdfFont, this.pdfPen, this.getBrush(), 0, 0, this.stringFormat);\n    // }\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfTextElement.prototype.layout = function (param) {\n        var layouter = new TextLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    PdfTextElement.prototype.drawText = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            this.hasPointOverload = true;\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawText(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else {\n            var layout = new PdfStringLayouter();\n            if (this.hasPointOverload) {\n                var stringLayoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg2.graphics.clientSize.width - arg3.x), 0), true, arg2.graphics.clientSize);\n                var layoutResult = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                var previousPage = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (stringLayoutResult.lines.length > 1) {\n                    this.text = stringLayoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        layoutResult = this.layout(param);\n                        var bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, arg2.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < stringLayoutResult.lines.length; i++) {\n                            param.page = layoutResult.page;\n                            param.bounds = new RectangleF(new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n                            this.text = stringLayoutResult.layoutLines[i].text;\n                            if (bounds.y + stringLayoutResult.lineHeight > layoutResult.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (layoutResult.page.graphics.clientSize.height - layoutResult.bounds.height)) {\n                                    bounds = new RectangleF(0, layoutResult.bounds.height, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(0, 0, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            layoutResult = this.layout(param);\n                            if (i !== (stringLayoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                layoutResult = this.calculateResultBounds(layoutResult, lineWidth, layoutResult.page.graphics.clientSize.width, 0);\n                            }\n                        }\n                    }\n                    return layoutResult;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        layoutResult = this.layout(param);\n                        layoutResult = this.calculateResultBounds(layoutResult, lineSize.width, layoutResult.page.graphics.clientSize.width, 0);\n                    }\n                    return layoutResult;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg3.width, 0), false, arg2.graphics.clientSize);\n                var result = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (layoutResult.lines.length > 1) {\n                    this.text = layoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        result = this.layout(param);\n                        var bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < layoutResult.lines.length; i++) {\n                            param.page = result.page;\n                            param.bounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n                            this.text = layoutResult.layoutLines[i].text;\n                            if (bounds.y + layoutResult.lineHeight > result.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (result.page.graphics.clientSize.height - result.bounds.height)) {\n                                    bounds = new RectangleF(temparg3.x, layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(temparg3.x, 0, temparg3.width, layoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            result = this.layout(param);\n                            if (i !== (layoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                result = this.calculateResultBounds(result, lineWidth, temparg3.width, temparg3.x);\n                            }\n                        }\n                    }\n                    return result;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        result = this.layout(param);\n                        result = this.calculateResultBounds(result, lineSize.width, temparg3.width, temparg3.x);\n                    }\n                    return result;\n                }\n            }\n        }\n    };\n    PdfTextElement.prototype.calculateResultBounds = function (result, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth);\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            result.bounds.x = startPosition;\n            result.bounds.width = maximumWidth;\n        }\n        else {\n            result.bounds.width = startPosition;\n            result.bounds.width = lineWidth;\n        }\n        return result;\n    };\n    return PdfTextElement;\n}(PdfLayoutElement));\nexport { PdfTextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfActionLinkAnnotation } from './action-link-annotation';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfUriAction } from './../actions/uri-action';\n/**\n * `PdfUriAnnotation` class represents the Uri annotation.\n * @private\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(rectangle, uri) {\n        var _this = _super.call(this, rectangle) || this;\n        if (typeof uri !== 'undefined') {\n            _this.uri = uri;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uriAction\", {\n        /**\n         * Get `action` of the annotation.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfUriAction === 'undefined') {\n                this.pdfUriAction = new PdfUriAction();\n            }\n            return this.pdfUriAction;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri` address.\n         * @private\n         */\n        get: function () {\n            return this.uriAction.uri;\n        },\n        set: function (value) {\n            if (this.uriAction.uri !== value) {\n                this.uriAction.uri = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"action\", {\n        /**\n         * Gets or sets the `action`.\n         * @private\n         */\n        get: function () {\n            return this.getSetAction();\n        },\n        set: function (value) {\n            this.getSetAction(value);\n            this.uriAction.next = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfUriAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n        var tempPrimitive = this.uriAction.element;\n        this.dictionary.items.setValue(this.dictionaryProperties.a, this.uriAction.element);\n    };\n    return PdfUriAnnotation;\n}(PdfActionLinkAnnotation));\nexport { PdfUriAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPage } from './../pages/pdf-page';\nimport { PointF, RectangleF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTextElement } from './../graphics/figures/text-element';\nimport { PdfUriAnnotation } from './uri-annotation';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfFontStyle } from './../graphics/fonts/enum';\nimport { PdfTextAlignment } from './../graphics/enum';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * `PdfTextWebLink` class represents the class for text web link annotation.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // create the font\n * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n * //\n * // create the Text Web Link\n * let textLink : PdfTextWebLink = new PdfTextWebLink();\n * // set the hyperlink\n * textLink.url = 'http://www.google.com';\n * // set the link text\n * textLink.text = 'Google';\n * // set the font\n * textLink.font = font;\n * // draw the hyperlink in PDF page\n * textLink.draw(page1, new PointF(10, 40));\n * //\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLink = /** @class */ (function (_super) {\n    __extends(PdfTextWebLink, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfTextWebLink` class.\n     * @private\n     */\n    function PdfTextWebLink() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store `Url`.\n         * @default ''\n         * @private\n         */\n        _this.uniformResourceLocator = '';\n        /**\n         * Internal variable to store `Uri Annotation` object.\n         * @default null\n         * @private\n         */\n        _this.uriAnnotation = null;\n        /**\n         * Checks whether the drawTextWebLink method with `PointF` overload is called or not.\n         * If it set as true, then the start position of each lines excluding firest line is changed as (0, Y).\n         * @private\n         * @hidden\n         */\n        _this.recalculateBounds = false;\n        _this.defaultBorder = new PdfArray();\n        for (var i = 0; i < 3; i++) {\n            _this.defaultBorder.add(new PdfNumber(0));\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLink.prototype, \"url\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri address`.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * //\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.uniformResourceLocator;\n        },\n        set: function (value) {\n            if (value.length === 0) {\n                throw new Error('ArgumentException : Url - string can not be empty');\n            }\n            this.uniformResourceLocator = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLink.prototype.draw = function (arg1, arg2) {\n        if (arg1 instanceof PdfPage) {\n            var layout = new PdfStringLayouter();\n            var previousFontStyle = this.font.style;\n            if (arg2 instanceof PointF) {\n                this.recalculateBounds = true;\n                this.font.style = PdfFontStyle.Underline;\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg1.graphics.clientSize.width - arg2.x), 0), true, arg1.graphics.clientSize);\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(arg2, textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg1.graphics.clientSize.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var result = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n                else {\n                    var result = this.drawMultipleLineWithPoint(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg2.width, 0), false, new SizeF(0, 0));\n                this.font.style = PdfFontStyle.Underline;\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(new PointF(arg2.x, arg2.y), textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg2.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var returnValue = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n                else {\n                    var returnValue = this.drawMultipleLineWithBounds(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n            }\n        }\n        else {\n            var page = new PdfPage();\n            page = arg1.page;\n            return this.draw(page, arg2);\n        }\n    };\n    /* tslint:enable */\n    //Private methods\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified location.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithPoint = function (result, page, location) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var bounds = new RectangleF(location, size);\n            if (i !== 0) {\n                bounds.x = 0;\n            }\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(0, 0, page.graphics.clientSize.width, size.height);\n                    location.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            bounds = this.calculateBounds(bounds, size.width, page.graphics.clientSize.width, bounds.x);\n            this.uriAnnotation = new PdfUriAnnotation(bounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            if (i !== 0) {\n                layoutResult = this.drawText(page, new PointF(0, bounds.y));\n            }\n            else {\n                layoutResult = this.drawText(page, bounds.x, bounds.y);\n            }\n            location.y += size.height;\n        }\n        return layoutResult;\n    };\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified bounds.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithBounds = function (result, page, bounds) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var internalBounds = new RectangleF(new PointF(bounds.x, bounds.y), size);\n            internalBounds = this.calculateBounds(internalBounds, size.width, bounds.width, bounds.x);\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(bounds.x, 0, bounds.width, size.height);\n                    internalBounds.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            this.uriAnnotation = new PdfUriAnnotation(internalBounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            layoutResult = this.drawText(page, bounds);\n            bounds.y += size.height;\n        }\n        return layoutResult;\n    };\n    /* tslint:disable */\n    PdfTextWebLink.prototype.calculateBounds = function (currentBounds, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth);\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            currentBounds.x = startPosition;\n            currentBounds.width = maximumWidth;\n        }\n        else {\n            currentBounds.width = startPosition;\n            currentBounds.width = lineWidth;\n        }\n        return currentBounds;\n    };\n    return PdfTextWebLink;\n}(PdfTextElement));\nexport { PdfTextWebLink };\n","/**\n * PdfNumbersConvertor.ts class for EJ2-PDF\n * @private\n */\nimport { PdfNumberStyle } from './../../pages/enum';\n/**\n * `PdfNumbersConvertor` for convert page number into numbers, roman letters, etc.,\n * @private\n */\nvar PdfNumbersConvertor = /** @class */ (function () {\n    function PdfNumbersConvertor() {\n    }\n    // Static methods\n    /**\n     * Convert string value from page number with correct format.\n     * @private\n     */\n    PdfNumbersConvertor.convert = function (intArabic, numberStyle) {\n        var result = '';\n        switch (numberStyle) {\n            case PdfNumberStyle.None:\n                result = '';\n                break;\n            case PdfNumberStyle.Numeric:\n                result = intArabic.toString();\n                break;\n            case PdfNumberStyle.LowerLatin:\n                result = this.arabicToLetter(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.LowerRoman:\n                result = this.arabicToRoman(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.UpperLatin:\n                result = this.arabicToLetter(intArabic);\n                break;\n            case PdfNumberStyle.UpperRoman:\n                result = this.arabicToRoman(intArabic);\n                break;\n        }\n        return result;\n    };\n    /**\n     * Converts `arabic to roman` letters.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToRoman = function (intArabic) {\n        var retval = '';\n        var retvalM = this.generateNumber(intArabic, 1000, 'M');\n        retval += retvalM.returnValue;\n        intArabic = retvalM.intArabic;\n        var retvalCM = this.generateNumber(intArabic, 900, 'CM');\n        retval += retvalCM.returnValue;\n        intArabic = retvalCM.intArabic;\n        var retvalD = this.generateNumber(intArabic, 500, 'D');\n        retval += retvalD.returnValue;\n        intArabic = retvalD.intArabic;\n        var retvalCD = this.generateNumber(intArabic, 400, 'CD');\n        retval += retvalCD.returnValue;\n        intArabic = retvalCD.intArabic;\n        var retvalC = this.generateNumber(intArabic, 100, 'C');\n        retval += retvalC.returnValue;\n        intArabic = retvalC.intArabic;\n        var retvalXC = this.generateNumber(intArabic, 90, 'XC');\n        retval += retvalXC.returnValue;\n        intArabic = retvalXC.intArabic;\n        var retvalL = this.generateNumber(intArabic, 50, 'L');\n        retval += retvalL.returnValue;\n        intArabic = retvalL.intArabic;\n        var retvalXL = this.generateNumber(intArabic, 40, 'XL');\n        retval += retvalXL.returnValue;\n        intArabic = retvalXL.intArabic;\n        var retvalX = this.generateNumber(intArabic, 10, 'X');\n        retval += retvalX.returnValue;\n        intArabic = retvalX.intArabic;\n        var retvalIX = this.generateNumber(intArabic, 9, 'IX');\n        retval += retvalIX.returnValue;\n        intArabic = retvalIX.intArabic;\n        var retvalV = this.generateNumber(intArabic, 5, 'V');\n        retval += retvalV.returnValue;\n        intArabic = retvalV.intArabic;\n        var retvalIV = this.generateNumber(intArabic, 4, 'IV');\n        retval += retvalIV.returnValue;\n        intArabic = retvalIV.intArabic;\n        var retvalI = this.generateNumber(intArabic, 1, 'I');\n        retval += retvalI.returnValue;\n        intArabic = retvalI.intArabic;\n        return retval.toString();\n    };\n    /**\n     * Converts `arabic to normal letters`.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToLetter = function (arabic) {\n        var stack = this.convertToLetter(arabic);\n        var result = '';\n        while (stack.length > 0) {\n            var num = stack.pop();\n            result = this.appendChar(result, num);\n        }\n        return result.toString();\n    };\n    /**\n     * Generate a string value of an input number.\n     * @private\n     */\n    PdfNumbersConvertor.generateNumber = function (value, magnitude, letter) {\n        var numberstring = '';\n        while (value >= magnitude) {\n            value -= magnitude;\n            numberstring += letter;\n        }\n        return { returnValue: numberstring.toString(), intArabic: value };\n    };\n    /**\n     * Convert a input number into letters.\n     * @private\n     */\n    PdfNumbersConvertor.convertToLetter = function (arabic) {\n        if (arabic <= 0) {\n            throw Error('ArgumentOutOfRangeException-arabic, Value can not be less 0');\n        }\n        var stack = [];\n        while (arabic > this.letterLimit) {\n            var remainder = arabic % this.letterLimit;\n            if (remainder === 0.0) {\n                arabic = arabic / this.letterLimit - 1;\n                remainder = this.letterLimit;\n            }\n            else {\n                arabic /= this.letterLimit;\n            }\n            stack.push(remainder);\n        }\n        stack.push(arabic);\n        return stack;\n    };\n    /**\n     * Convert number to actual string value.\n     * @private\n     */\n    PdfNumbersConvertor.appendChar = function (builder, value) {\n        var letter = String.fromCharCode(PdfNumbersConvertor.acsiiStartIndex + value);\n        builder += letter;\n        return builder;\n    };\n    // Fields\n    /**\n     * numbers of letters in english [readonly].\n     * @default = 26.0\n     * @private\n     */\n    PdfNumbersConvertor.letterLimit = 26.0;\n    /**\n     * Resturns `acsii start index` value.\n     * @default 64\n     * @private\n     */\n    PdfNumbersConvertor.acsiiStartIndex = (65 - 1);\n    return PdfNumbersConvertor;\n}());\nexport { PdfNumbersConvertor };\n","/**\n * Represent class to store information about `template and value pairs`.\n * @private\n */\nvar PdfTemplateValuePair = /** @class */ (function () {\n    function PdfTemplateValuePair(template, value) {\n        // Fields\n        /**\n         * Internal variable to store template.\n         * @default null\n         * @private\n         */\n        this.pdfTemplate = null;\n        /**\n         * Intenal variable to store value.\n         * @private\n         */\n        this.content = '';\n        if (typeof template === 'undefined') {\n            //\n        }\n        else {\n            this.template = template;\n            this.value = value;\n        }\n    }\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"template\", {\n        // Properties\n        /**\n         * Gets or sets the template.\n         * @private\n         */\n        get: function () {\n            return this.pdfTemplate;\n        },\n        set: function (value) {\n            this.pdfTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"value\", {\n        /**\n         * Gets or sets the value.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplateValuePair;\n}());\nexport { PdfTemplateValuePair };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value within the `PdfGraphics`.\n */\nvar PdfMultipleValueField = /** @class */ (function (_super) {\n    __extends(PdfMultipleValueField, _super);\n    function PdfMultipleValueField() {\n        var _this = _super.call(this) || this;\n        //  Fields\n        /**\n         * Stores the instance of dictionary values of `graphics and template value pair`.\n         * @private\n         */\n        _this.list = new TemporaryDictionary();\n        return _this;\n    }\n    // Implementation\n    /* tslint:disable */\n    PdfMultipleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var value = this.getValue(graphics);\n        var template = new PdfTemplate(this.getSize());\n        this.list.setValue(graphics, new PdfTemplateValuePair(template, value));\n        var g = template.graphics;\n        var size = this.getSize();\n        template.graphics.drawString(value, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n        var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n        graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n    };\n    return PdfMultipleValueField;\n}(PdfAutomaticField));\nexport { PdfMultipleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents PDF document `page number field`.\n * @public\n */\nvar PdfPageNumberField = /** @class */ (function (_super) {\n    __extends(PdfPageNumberField, _super);\n    function PdfPageNumberField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the page number field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageNumberField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the page number field.\n         * @private\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return the `string` value of page number field.\n     * @public\n     */\n    PdfPageNumberField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        result = this.internalGetValue(page);\n        return result;\n    };\n    /**\n     * Internal method to `get actual value of page number`.\n     * @private\n     */\n    PdfPageNumberField.prototype.internalGetValue = function (page) {\n        var document = page.document;\n        var pageIndex = document.pages.indexOf(page) + 1;\n        return PdfNumbersConvertor.convert(pageIndex, this.numberStyle);\n    };\n    return PdfPageNumberField;\n}(PdfMultipleValueField));\nexport { PdfPageNumberField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCompositeField.ts class for EJ2-PDF\n */\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents class which can concatenate multiple automatic fields into single string.\n */\nvar PdfCompositeField = /** @class */ (function (_super) {\n    __extends(PdfCompositeField, _super);\n    // Constructor\n    /**\n     * Initialize a new instance of `PdfCompositeField` class.\n     * @param font Font of the field.\n     * @param brush Color of the field.\n     * @param text Content of the field.\n     * @param list List of the automatic fields in specific order based on the text content.\n     */\n    function PdfCompositeField(font, brush, text) {\n        var list = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            list[_i - 3] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the array of automatic fields.\n         * @private\n         */\n        _this.internalAutomaticFields = null;\n        /**\n         * Stores the text value of the field.\n         * @private\n         */\n        _this.internalText = '';\n        _this.font = font;\n        _this.brush = brush;\n        _this.text = text;\n        _this.automaticFields = list;\n        return _this;\n    }\n    Object.defineProperty(PdfCompositeField.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets and sets the content of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalText;\n        },\n        set: function (value) {\n            this.internalText = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCompositeField.prototype, \"automaticFields\", {\n        /**\n         * Gets and sets the list of the field to drawn.\n         * @public\n         */\n        get: function () {\n            return this.internalAutomaticFields;\n        },\n        set: function (value) {\n            this.internalAutomaticFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value generated from the list of automatic fields.\n     * @public\n     */\n    PdfCompositeField.prototype.getValue = function (graphics) {\n        var values = [];\n        var text = this.text.toString();\n        if (typeof this.automaticFields !== 'undefined' && this.automaticFields != null && this.automaticFields.length > 0) {\n            for (var i = 0; i < this.automaticFields.length; i++) {\n                var automaticField = this.automaticFields[i];\n                text = text.replace('{' + i + '}', automaticField.getValue(graphics));\n            }\n        }\n        return text;\n    };\n    return PdfCompositeField;\n}(PdfMultipleValueField));\nexport { PdfCompositeField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSingleValueField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value in the whole document.\n */\nvar PdfSingleValueField = /** @class */ (function (_super) {\n    __extends(PdfSingleValueField, _super);\n    // Constructors\n    function PdfSingleValueField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /* tslint:disable */\n        _this.list = new TemporaryDictionary();\n        /* tslint:enable */\n        _this.painterGraphics = [];\n        return _this;\n    }\n    PdfSingleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.document;\n        var textValue = this.getValue(graphics);\n        /* tslint:disable */\n        if (this.list.containsKey(document)) {\n            var pair = this.list.getValue(document);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(pair.template, drawLocation, new SizeF(pair.template.width * scalingX, pair.template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        else {\n            var size = this.getSize();\n            var template = new PdfTemplate(size);\n            this.list.setValue(document, new PdfTemplateValuePair(template, textValue));\n            template.graphics.drawString(textValue, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        /* tslint:enable */\n    };\n    return PdfSingleValueField;\n}(PdfAutomaticField));\nexport { PdfSingleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageCountField.ts class for EJ2-PDF\n */\nimport { PdfSingleValueField } from './single-value-field';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\n/**\n * Represents total PDF document page count automatic field.\n */\nvar PdfPageCountField = /** @class */ (function (_super) {\n    __extends(PdfPageCountField, _super);\n    function PdfPageCountField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageCountField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value of the content to drawn.\n     * @public\n     */\n    PdfPageCountField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.section.parent.document;\n        var count = document.pages.count;\n        result = PdfNumbersConvertor.convert(count, this.numberStyle);\n        return result;\n    };\n    return PdfPageCountField;\n}(PdfSingleValueField));\nexport { PdfPageCountField };\n","/**\n * public Enum for `PdfDestinationMode`.\n * @private\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the type of `Location`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"Location\"] = 0] = \"Location\";\n    /**\n     * Specifies the type of `FitToPage`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitToPage\"] = 1] = \"FitToPage\";\n    /**\n     * Specifies the type of `FitR`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitR\"] = 2] = \"FitR\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n","import { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageRotateAngle } from './../pages/enum';\nimport { PdfDestinationMode } from './../general/enum';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDestination` class represents an anchor in the document\n * where bookmarks or annotations can direct when clicked.\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(arg1, arg2) {\n        // Fields\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Type of the `destination`.\n         * @private\n         */\n        this.destinationMode = PdfDestinationMode.Location;\n        /**\n         * `Zoom` factor.\n         * @private\n         * @default 0\n         */\n        this.zoomFactor = 0;\n        /**\n         * `Location` of the destination.\n         * @default new PointF() with 0 ,0 as co-ordinates\n         * @private\n         */\n        this.destinationLocation = new PointF(0, 0);\n        /**\n         * `Bounds` of the destination as RectangleF.\n         * @default RectangleF.Empty\n         * @private\n         */\n        this.bounds = new RectangleF();\n        /**\n         * Pdf primitive representing `this` object.\n         * @private\n         */\n        this.array = new PdfArray();\n        var angle = PdfPageRotateAngle.RotateAngle0;\n        this.destinationLocation = new PointF(0, this.destinationLocation.y);\n        this.pdfPage = arg1;\n        if (arg2 instanceof PointF) {\n            this.destinationLocation = arg2;\n        }\n        else {\n            this.bounds = arg2;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        // Properties\n        /**\n         * Gets and Sets the `zoom` factor.\n         * @private\n         */\n        get: function () {\n            return this.zoomFactor;\n        },\n        set: function (value) {\n            this.zoomFactor = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets and Sets the `page` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets and Sets the destination `mode`.\n         * @private\n         */\n        get: function () {\n            return this.destinationMode;\n        },\n        set: function (value) {\n            this.destinationMode = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets and Sets the `location`.\n         * @private\n         */\n        get: function () {\n            return this.destinationLocation;\n        },\n        set: function (value) {\n            this.destinationLocation = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Translates` co-ordinates to PDF co-ordinate system (lower/left).\n     * @private\n     */\n    PdfDestination.prototype.pointToNativePdf = function (page, point) {\n        var section = page.section;\n        return section.pointToNativePdf(page, point);\n    };\n    /**\n     * `In fills` array by correct values.\n     * @private\n     */\n    PdfDestination.prototype.initializePrimitive = function () {\n        this.array.clear();\n        this.array.add(new PdfReferenceHolder(this.pdfPage));\n        switch (this.destinationMode) {\n            case PdfDestinationMode.Location:\n                var simplePage = this.pdfPage;\n                var point = new PointF();\n                point = this.pointToNativePdf(simplePage, this.destinationLocation);\n                this.array.add(new PdfName(this.dictionaryProperties.xyz));\n                this.array.add(new PdfNumber(point.x));\n                this.array.add(new PdfNumber(point.y));\n                this.array.add(new PdfNumber(this.zoomFactor));\n                break;\n            case PdfDestinationMode.FitToPage:\n                this.array.add(new PdfName(this.dictionaryProperties.fit));\n                break;\n        }\n    };\n    Object.defineProperty(PdfDestination.prototype, \"element\", {\n        /**\n         * Gets the `element` representing this object.\n         * @private\n         */\n        get: function () {\n            this.initializePrimitive();\n            return this.array;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDestination;\n}());\nexport { PdfDestination };\n","/**\n * Specifies the constant values specifying whether to extend the shading\n * beyond the starting and ending points of the axis.\n */\nexport var PdfExtend;\n(function (PdfExtend) {\n    /**\n     * Do not extend any point.\n     */\n    PdfExtend[PdfExtend[\"None\"] = 0] = \"None\";\n    /**\n     * Extend start point.\n     */\n    PdfExtend[PdfExtend[\"Start\"] = 1] = \"Start\";\n    /**\n     * Extend end point.\n     */\n    PdfExtend[PdfExtend[\"End\"] = 2] = \"End\";\n    /**\n     * Extend both start and end points.\n     */\n    PdfExtend[PdfExtend[\"Both\"] = 3] = \"Both\";\n})(PdfExtend || (PdfExtend = {}));\n/**\n * Specifies the gradient direction of the linear gradient brush.\n */\nexport var PdfLinearGradientMode;\n(function (PdfLinearGradientMode) {\n    /**\n     * Specifies a gradient from upper right to lower left.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"BackwardDiagonal\"] = 0] = \"BackwardDiagonal\";\n    /**\n     * Specifies a gradient from upper left to lower right.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"ForwardDiagonal\"] = 1] = \"ForwardDiagonal\";\n    /**\n     * Specifies a gradient from left to right.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"Horizontal\"] = 2] = \"Horizontal\";\n    /**\n     * Specifies a gradient from top to bottom.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"Vertical\"] = 3] = \"Vertical\";\n})(PdfLinearGradientMode || (PdfLinearGradientMode = {}));\n/**\n * Shading type constants.\n */\nexport var ShadingType;\n(function (ShadingType) {\n    /**\n     * Function-based shading.\n     */\n    ShadingType[ShadingType[\"Function\"] = 1] = \"Function\";\n    /**\n     * Axial shading.\n     */\n    ShadingType[ShadingType[\"Axial\"] = 2] = \"Axial\";\n    /**\n     * Radial shading.\n     */\n    ShadingType[ShadingType[\"Radial\"] = 3] = \"Radial\";\n})(ShadingType || (ShadingType = {}));\nexport var KnownColor;\n(function (KnownColor) {\n    KnownColor[KnownColor[\"ActiveBorder\"] = 1] = \"ActiveBorder\";\n    KnownColor[KnownColor[\"ActiveCaption\"] = 2] = \"ActiveCaption\";\n    KnownColor[KnownColor[\"ActiveCaptionText\"] = 3] = \"ActiveCaptionText\";\n    KnownColor[KnownColor[\"AppWorkspace\"] = 4] = \"AppWorkspace\";\n    KnownColor[KnownColor[\"Control\"] = 5] = \"Control\";\n    KnownColor[KnownColor[\"ControlDark\"] = 6] = \"ControlDark\";\n    KnownColor[KnownColor[\"ControlDarkDark\"] = 7] = \"ControlDarkDark\";\n    KnownColor[KnownColor[\"ControlLight\"] = 8] = \"ControlLight\";\n    KnownColor[KnownColor[\"ControlLightLight\"] = 9] = \"ControlLightLight\";\n    KnownColor[KnownColor[\"ControlText\"] = 10] = \"ControlText\";\n    KnownColor[KnownColor[\"Desktop\"] = 11] = \"Desktop\";\n    KnownColor[KnownColor[\"GrayText\"] = 12] = \"GrayText\";\n    KnownColor[KnownColor[\"Highlight\"] = 13] = \"Highlight\";\n    KnownColor[KnownColor[\"HighlightText\"] = 14] = \"HighlightText\";\n    KnownColor[KnownColor[\"HotTrack\"] = 15] = \"HotTrack\";\n    KnownColor[KnownColor[\"InactiveBorder\"] = 16] = \"InactiveBorder\";\n    KnownColor[KnownColor[\"InactiveCaption\"] = 17] = \"InactiveCaption\";\n    KnownColor[KnownColor[\"InactiveCaptionText\"] = 18] = \"InactiveCaptionText\";\n    KnownColor[KnownColor[\"Info\"] = 19] = \"Info\";\n    KnownColor[KnownColor[\"InfoText\"] = 20] = \"InfoText\";\n    KnownColor[KnownColor[\"Menu\"] = 21] = \"Menu\";\n    KnownColor[KnownColor[\"MenuText\"] = 22] = \"MenuText\";\n    KnownColor[KnownColor[\"ScrollBar\"] = 23] = \"ScrollBar\";\n    KnownColor[KnownColor[\"Window\"] = 24] = \"Window\";\n    KnownColor[KnownColor[\"WindowFrame\"] = 25] = \"WindowFrame\";\n    KnownColor[KnownColor[\"WindowText\"] = 26] = \"WindowText\";\n    KnownColor[KnownColor[\"Transparent\"] = 27] = \"Transparent\";\n    KnownColor[KnownColor[\"AliceBlue\"] = 28] = \"AliceBlue\";\n    KnownColor[KnownColor[\"AntiqueWhite\"] = 29] = \"AntiqueWhite\";\n    KnownColor[KnownColor[\"Aqua\"] = 30] = \"Aqua\";\n    KnownColor[KnownColor[\"Aquamarine\"] = 31] = \"Aquamarine\";\n    KnownColor[KnownColor[\"Azure\"] = 32] = \"Azure\";\n    KnownColor[KnownColor[\"Beige\"] = 33] = \"Beige\";\n    KnownColor[KnownColor[\"Bisque\"] = 34] = \"Bisque\";\n    KnownColor[KnownColor[\"Black\"] = 35] = \"Black\";\n    KnownColor[KnownColor[\"BlanchedAlmond\"] = 36] = \"BlanchedAlmond\";\n    KnownColor[KnownColor[\"Blue\"] = 37] = \"Blue\";\n    KnownColor[KnownColor[\"BlueViolet\"] = 38] = \"BlueViolet\";\n    KnownColor[KnownColor[\"Brown\"] = 39] = \"Brown\";\n    KnownColor[KnownColor[\"BurlyWood\"] = 40] = \"BurlyWood\";\n    KnownColor[KnownColor[\"CadetBlue\"] = 41] = \"CadetBlue\";\n    KnownColor[KnownColor[\"Chartreuse\"] = 42] = \"Chartreuse\";\n    KnownColor[KnownColor[\"Chocolate\"] = 43] = \"Chocolate\";\n    KnownColor[KnownColor[\"Coral\"] = 44] = \"Coral\";\n    KnownColor[KnownColor[\"CornflowerBlue\"] = 45] = \"CornflowerBlue\";\n    KnownColor[KnownColor[\"Cornsilk\"] = 46] = \"Cornsilk\";\n    KnownColor[KnownColor[\"Crimson\"] = 47] = \"Crimson\";\n    KnownColor[KnownColor[\"Cyan\"] = 48] = \"Cyan\";\n    KnownColor[KnownColor[\"DarkBlue\"] = 49] = \"DarkBlue\";\n    KnownColor[KnownColor[\"DarkCyan\"] = 50] = \"DarkCyan\";\n    KnownColor[KnownColor[\"DarkGoldenrod\"] = 51] = \"DarkGoldenrod\";\n    KnownColor[KnownColor[\"DarkGray\"] = 52] = \"DarkGray\";\n    KnownColor[KnownColor[\"DarkGreen\"] = 53] = \"DarkGreen\";\n    KnownColor[KnownColor[\"DarkKhaki\"] = 54] = \"DarkKhaki\";\n    KnownColor[KnownColor[\"DarkMagenta\"] = 55] = \"DarkMagenta\";\n    KnownColor[KnownColor[\"DarkOliveGreen\"] = 56] = \"DarkOliveGreen\";\n    KnownColor[KnownColor[\"DarkOrange\"] = 57] = \"DarkOrange\";\n    KnownColor[KnownColor[\"DarkOrchid\"] = 58] = \"DarkOrchid\";\n    KnownColor[KnownColor[\"DarkRed\"] = 59] = \"DarkRed\";\n    KnownColor[KnownColor[\"DarkSalmon\"] = 60] = \"DarkSalmon\";\n    KnownColor[KnownColor[\"DarkSeaGreen\"] = 61] = \"DarkSeaGreen\";\n    KnownColor[KnownColor[\"DarkSlateBlue\"] = 62] = \"DarkSlateBlue\";\n    KnownColor[KnownColor[\"DarkSlateGray\"] = 63] = \"DarkSlateGray\";\n    KnownColor[KnownColor[\"DarkTurquoise\"] = 64] = \"DarkTurquoise\";\n    KnownColor[KnownColor[\"DarkViolet\"] = 65] = \"DarkViolet\";\n    KnownColor[KnownColor[\"DeepPink\"] = 66] = \"DeepPink\";\n    KnownColor[KnownColor[\"DeepSkyBlue\"] = 67] = \"DeepSkyBlue\";\n    KnownColor[KnownColor[\"DimGray\"] = 68] = \"DimGray\";\n    KnownColor[KnownColor[\"DodgerBlue\"] = 69] = \"DodgerBlue\";\n    KnownColor[KnownColor[\"Firebrick\"] = 70] = \"Firebrick\";\n    KnownColor[KnownColor[\"FloralWhite\"] = 71] = \"FloralWhite\";\n    KnownColor[KnownColor[\"ForestGreen\"] = 72] = \"ForestGreen\";\n    KnownColor[KnownColor[\"Fuchsia\"] = 73] = \"Fuchsia\";\n    KnownColor[KnownColor[\"Gainsboro\"] = 74] = \"Gainsboro\";\n    KnownColor[KnownColor[\"GhostWhite\"] = 75] = \"GhostWhite\";\n    KnownColor[KnownColor[\"Gold\"] = 76] = \"Gold\";\n    KnownColor[KnownColor[\"Goldenrod\"] = 77] = \"Goldenrod\";\n    KnownColor[KnownColor[\"Gray\"] = 78] = \"Gray\";\n    KnownColor[KnownColor[\"Green\"] = 79] = \"Green\";\n    KnownColor[KnownColor[\"GreenYellow\"] = 80] = \"GreenYellow\";\n    KnownColor[KnownColor[\"Honeydew\"] = 81] = \"Honeydew\";\n    KnownColor[KnownColor[\"HotPink\"] = 82] = \"HotPink\";\n    KnownColor[KnownColor[\"IndianRed\"] = 83] = \"IndianRed\";\n    KnownColor[KnownColor[\"Indigo\"] = 84] = \"Indigo\";\n    KnownColor[KnownColor[\"Ivory\"] = 85] = \"Ivory\";\n    KnownColor[KnownColor[\"Khaki\"] = 86] = \"Khaki\";\n    KnownColor[KnownColor[\"Lavender\"] = 87] = \"Lavender\";\n    KnownColor[KnownColor[\"LavenderBlush\"] = 88] = \"LavenderBlush\";\n    KnownColor[KnownColor[\"LawnGreen\"] = 89] = \"LawnGreen\";\n    KnownColor[KnownColor[\"LemonChiffon\"] = 90] = \"LemonChiffon\";\n    KnownColor[KnownColor[\"LightBlue\"] = 91] = \"LightBlue\";\n    KnownColor[KnownColor[\"LightCoral\"] = 92] = \"LightCoral\";\n    KnownColor[KnownColor[\"LightCyan\"] = 93] = \"LightCyan\";\n    KnownColor[KnownColor[\"LightGoldenrodYellow\"] = 94] = \"LightGoldenrodYellow\";\n    KnownColor[KnownColor[\"LightGray\"] = 95] = \"LightGray\";\n    KnownColor[KnownColor[\"LightGreen\"] = 96] = \"LightGreen\";\n    KnownColor[KnownColor[\"LightPink\"] = 97] = \"LightPink\";\n    KnownColor[KnownColor[\"LightSalmon\"] = 98] = \"LightSalmon\";\n    KnownColor[KnownColor[\"LightSeaGreen\"] = 99] = \"LightSeaGreen\";\n    KnownColor[KnownColor[\"LightSkyBlue\"] = 100] = \"LightSkyBlue\";\n    KnownColor[KnownColor[\"LightSlateGray\"] = 101] = \"LightSlateGray\";\n    KnownColor[KnownColor[\"LightSteelBlue\"] = 102] = \"LightSteelBlue\";\n    KnownColor[KnownColor[\"LightYellow\"] = 103] = \"LightYellow\";\n    KnownColor[KnownColor[\"Lime\"] = 104] = \"Lime\";\n    KnownColor[KnownColor[\"LimeGreen\"] = 105] = \"LimeGreen\";\n    KnownColor[KnownColor[\"Linen\"] = 106] = \"Linen\";\n    KnownColor[KnownColor[\"Magenta\"] = 107] = \"Magenta\";\n    KnownColor[KnownColor[\"Maroon\"] = 108] = \"Maroon\";\n    KnownColor[KnownColor[\"MediumAquamarine\"] = 109] = \"MediumAquamarine\";\n    KnownColor[KnownColor[\"MediumBlue\"] = 110] = \"MediumBlue\";\n    KnownColor[KnownColor[\"MediumOrchid\"] = 111] = \"MediumOrchid\";\n    KnownColor[KnownColor[\"MediumPurple\"] = 112] = \"MediumPurple\";\n    KnownColor[KnownColor[\"MediumSeaGreen\"] = 113] = \"MediumSeaGreen\";\n    KnownColor[KnownColor[\"MediumSlateBlue\"] = 114] = \"MediumSlateBlue\";\n    KnownColor[KnownColor[\"MediumSpringGreen\"] = 115] = \"MediumSpringGreen\";\n    KnownColor[KnownColor[\"MediumTurquoise\"] = 116] = \"MediumTurquoise\";\n    KnownColor[KnownColor[\"MediumVioletRed\"] = 117] = \"MediumVioletRed\";\n    KnownColor[KnownColor[\"MidnightBlue\"] = 118] = \"MidnightBlue\";\n    KnownColor[KnownColor[\"MintCream\"] = 119] = \"MintCream\";\n    KnownColor[KnownColor[\"MistyRose\"] = 120] = \"MistyRose\";\n    KnownColor[KnownColor[\"Moccasin\"] = 121] = \"Moccasin\";\n    KnownColor[KnownColor[\"NavajoWhite\"] = 122] = \"NavajoWhite\";\n    KnownColor[KnownColor[\"Navy\"] = 123] = \"Navy\";\n    KnownColor[KnownColor[\"OldLace\"] = 124] = \"OldLace\";\n    KnownColor[KnownColor[\"Olive\"] = 125] = \"Olive\";\n    KnownColor[KnownColor[\"OliveDrab\"] = 126] = \"OliveDrab\";\n    KnownColor[KnownColor[\"Orange\"] = 127] = \"Orange\";\n    KnownColor[KnownColor[\"OrangeRed\"] = 128] = \"OrangeRed\";\n    KnownColor[KnownColor[\"Orchid\"] = 129] = \"Orchid\";\n    KnownColor[KnownColor[\"PaleGoldenrod\"] = 130] = \"PaleGoldenrod\";\n    KnownColor[KnownColor[\"PaleGreen\"] = 131] = \"PaleGreen\";\n    KnownColor[KnownColor[\"PaleTurquoise\"] = 132] = \"PaleTurquoise\";\n    KnownColor[KnownColor[\"PaleVioletRed\"] = 133] = \"PaleVioletRed\";\n    KnownColor[KnownColor[\"PapayaWhip\"] = 134] = \"PapayaWhip\";\n    KnownColor[KnownColor[\"PeachPuff\"] = 135] = \"PeachPuff\";\n    KnownColor[KnownColor[\"Peru\"] = 136] = \"Peru\";\n    KnownColor[KnownColor[\"Pink\"] = 137] = \"Pink\";\n    KnownColor[KnownColor[\"Plum\"] = 138] = \"Plum\";\n    KnownColor[KnownColor[\"PowderBlue\"] = 139] = \"PowderBlue\";\n    KnownColor[KnownColor[\"Purple\"] = 140] = \"Purple\";\n    KnownColor[KnownColor[\"Red\"] = 141] = \"Red\";\n    KnownColor[KnownColor[\"RosyBrown\"] = 142] = \"RosyBrown\";\n    KnownColor[KnownColor[\"RoyalBlue\"] = 143] = \"RoyalBlue\";\n    KnownColor[KnownColor[\"SaddleBrown\"] = 144] = \"SaddleBrown\";\n    KnownColor[KnownColor[\"Salmon\"] = 145] = \"Salmon\";\n    KnownColor[KnownColor[\"SandyBrown\"] = 146] = \"SandyBrown\";\n    KnownColor[KnownColor[\"SeaGreen\"] = 147] = \"SeaGreen\";\n    KnownColor[KnownColor[\"SeaShell\"] = 148] = \"SeaShell\";\n    KnownColor[KnownColor[\"Sienna\"] = 149] = \"Sienna\";\n    KnownColor[KnownColor[\"Silver\"] = 150] = \"Silver\";\n    KnownColor[KnownColor[\"SkyBlue\"] = 151] = \"SkyBlue\";\n    KnownColor[KnownColor[\"SlateBlue\"] = 152] = \"SlateBlue\";\n    KnownColor[KnownColor[\"SlateGray\"] = 153] = \"SlateGray\";\n    KnownColor[KnownColor[\"Snow\"] = 154] = \"Snow\";\n    KnownColor[KnownColor[\"SpringGreen\"] = 155] = \"SpringGreen\";\n    KnownColor[KnownColor[\"SteelBlue\"] = 156] = \"SteelBlue\";\n    KnownColor[KnownColor[\"Tan\"] = 157] = \"Tan\";\n    KnownColor[KnownColor[\"Teal\"] = 158] = \"Teal\";\n    KnownColor[KnownColor[\"Thistle\"] = 159] = \"Thistle\";\n    KnownColor[KnownColor[\"Tomato\"] = 160] = \"Tomato\";\n    KnownColor[KnownColor[\"Turquoise\"] = 161] = \"Turquoise\";\n    KnownColor[KnownColor[\"Violet\"] = 162] = \"Violet\";\n    KnownColor[KnownColor[\"Wheat\"] = 163] = \"Wheat\";\n    KnownColor[KnownColor[\"White\"] = 164] = \"White\";\n    KnownColor[KnownColor[\"WhiteSmoke\"] = 165] = \"WhiteSmoke\";\n    KnownColor[KnownColor[\"Yellow\"] = 166] = \"Yellow\";\n    KnownColor[KnownColor[\"YellowGreen\"] = 167] = \"YellowGreen\";\n    KnownColor[KnownColor[\"ButtonFace\"] = 168] = \"ButtonFace\";\n    KnownColor[KnownColor[\"ButtonHighlight\"] = 169] = \"ButtonHighlight\";\n    KnownColor[KnownColor[\"ButtonShadow\"] = 170] = \"ButtonShadow\";\n    KnownColor[KnownColor[\"GradientActiveCaption\"] = 171] = \"GradientActiveCaption\";\n    KnownColor[KnownColor[\"GradientInactiveCaption\"] = 172] = \"GradientInactiveCaption\";\n    KnownColor[KnownColor[\"MenuBar\"] = 173] = \"MenuBar\";\n    KnownColor[KnownColor[\"MenuHighlight\"] = 174] = \"MenuHighlight\";\n})(KnownColor || (KnownColor = {}));\n","import { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nvar PdfFunction = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfFunction` class.\n     * @public\n     */\n    function PdfFunction(dictionary) {\n        //Field\n        /**\n         * Internal variable to store dictionary.\n         * @private\n         */\n        this.mDictionary = null;\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        this.mDictionaryProperties = new DictionaryProperties();\n        this.mDictionary = dictionary;\n    }\n    Object.defineProperty(PdfFunction.prototype, \"domain\", {\n        //Properties\n        /**\n         * Gets or sets the domain of the function.\n         * @public\n         */\n        get: function () {\n            var domain = this.mDictionary.items.getValue(this.mDictionaryProperties.domain);\n            return domain;\n        },\n        set: function (value) {\n            this.mDictionary.items.setValue(this.mDictionaryProperties.domain, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"range\", {\n        /**\n         * Gets or sets the range.\n         * @public\n         */\n        get: function () {\n            var range = (this.mDictionary.items.getValue(this.mDictionaryProperties.range));\n            return range;\n        },\n        set: function (value) {\n            this.mDictionary.items.setValue(this.mDictionaryProperties.range, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"dictionary\", {\n        /**\n         * Gets the dictionary.\n         */\n        get: function () {\n            return this.mDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"element\", {\n        //IPdfWrapper Members\n        /**\n         * Gets the element.\n         */\n        get: function () {\n            return this.mDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFunction;\n}());\nexport { PdfFunction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSampledFunction.ts class for EJ2-PDF\n * Implements PDF Sampled Function.\n */\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfFunction } from './pdf-function';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfNumber } from './../../primitives/pdf-number';\nvar PdfSampledFunction = /** @class */ (function (_super) {\n    __extends(PdfSampledFunction, _super);\n    /**\n     * Initializes a new instance of the `PdfSampledFunction` class.\n     * @public\n     */\n    function PdfSampledFunction(domain, range, sizes, samples) {\n        var _this = _super.call(this, new PdfStream()) || this;\n        if (typeof domain === 'undefined') {\n            _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new PdfNumber(0));\n        }\n        else {\n            _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new PdfNumber(0));\n            _this.checkParams(domain, range, sizes, samples);\n            _this.setDomainAndRange(domain, range);\n            _this.setSizeAndValues(sizes, samples);\n        }\n        return _this;\n    }\n    // Helper methods\n    /**\n     * Checks the input parameters.\n     */\n    PdfSampledFunction.prototype.checkParams = function (domain, range, sizes, samples) {\n        var rLength = range.length;\n        var dLength = domain.length;\n        var sLength = samples.length;\n        var frameLength = (rLength * (dLength / 4));\n    };\n    /**\n     * Sets the domain and range.\n     */\n    PdfSampledFunction.prototype.setDomainAndRange = function (domain, range) {\n        this.domain = new PdfArray(domain);\n        this.range = new PdfArray(range);\n    };\n    /**\n     * Sets the size and values.\n     */\n    PdfSampledFunction.prototype.setSizeAndValues = function (sizes, samples) {\n        var s = (this.dictionary);\n        s.isResource = true;\n        this.dictionary.items.setValue(this.mDictionaryProperties.size, new PdfArray(sizes));\n        this.dictionary.items.setValue(this.mDictionaryProperties.bitsPerSample, new PdfNumber(8));\n        s.writeBytes(samples);\n    };\n    return PdfSampledFunction;\n}(PdfFunction));\nexport { PdfSampledFunction };\n","/**\n * PdfBrushes.ts class for EJ2-PDF\n */\nimport { PdfColor } from './../pdf-color';\nimport { Dictionary } from './../../collections/dictionary';\nimport { KnownColor } from './enum';\nimport { PdfSolidBrush } from './pdf-solid-brush';\n/**\n * `PdfBrushes` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrushes = /** @class */ (function () {\n    function PdfBrushes() {\n    }\n    Object.defineProperty(PdfBrushes, \"AliceBlue\", {\n        //Static Properties\n        /**\n         * Gets the AliceBlue brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.AliceBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.AliceBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.AliceBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"AntiqueWhite\", {\n        /**\n         * Gets the antique white brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.AntiqueWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.AntiqueWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.AntiqueWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Aqua\", {\n        /**\n         * Gets the Aqua default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Aqua)) {\n                brush = (this.sBrushes.getValue(KnownColor.Aqua));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Aqua);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Aquamarine\", {\n        /**\n         * Gets the Aquamarine default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Aquamarine)) {\n                brush = (this.sBrushes.getValue(KnownColor.Aquamarine));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Aquamarine);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Azure\", {\n        /**\n         * Gets the Azure default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Azure)) {\n                brush = (this.sBrushes.getValue(KnownColor.Azure));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Azure);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Beige\", {\n        /**\n         * Gets the Beige default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Beige)) {\n                brush = (this.sBrushes.getValue(KnownColor.Beige));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Beige);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Bisque\", {\n        /**\n         * Gets the Bisque default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Bisque)) {\n                brush = (this.sBrushes.getValue(KnownColor.Bisque));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Bisque);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Black\", {\n        /**\n         * Gets the Black default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Black)) {\n                brush = (this.sBrushes.getValue(KnownColor.Black));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Black);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BlanchedAlmond\", {\n        /**\n         * Gets the BlanchedAlmond default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BlanchedAlmond)) {\n                brush = (this.sBrushes.getValue(KnownColor.BlanchedAlmond));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BlanchedAlmond);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Blue\", {\n        /**\n         * Gets the Blue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Blue)) {\n                brush = (this.sBrushes.getValue(KnownColor.Blue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Blue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BlueViolet\", {\n        /**\n         * Gets the BlueViolet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BlueViolet)) {\n                brush = (this.sBrushes.getValue(KnownColor.BlueViolet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BlueViolet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Brown\", {\n        /**\n         * Gets the Brown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Brown)) {\n                brush = (this.sBrushes.getValue(KnownColor.Brown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Brown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BurlyWood\", {\n        /**\n         * Gets the BurlyWood default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BurlyWood)) {\n                brush = (this.sBrushes.getValue(KnownColor.BurlyWood));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BurlyWood);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"CadetBlue\", {\n        /**\n         * Gets the CadetBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.CadetBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.CadetBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.CadetBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Chartreuse\", {\n        /**\n         * Gets the Chartreuse default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Chartreuse)) {\n                brush = (this.sBrushes.getValue(KnownColor.Chartreuse));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Chartreuse);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Chocolate\", {\n        /**\n         * Gets the Chocolate default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Chocolate)) {\n                brush = (this.sBrushes.getValue(KnownColor.Chocolate));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Chocolate);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Coral\", {\n        /**\n         * Gets the Coral default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Coral)) {\n                brush = (this.sBrushes.getValue(KnownColor.Coral));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Coral);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"CornflowerBlue\", {\n        /**\n         * Gets the CornflowerBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.CornflowerBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.CornflowerBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.CornflowerBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Cornsilk\", {\n        /**\n         * Gets the Corn silk default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Cornsilk)) {\n                brush = (this.sBrushes.getValue(KnownColor.Cornsilk));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Cornsilk);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Crimson\", {\n        /**\n         *  Gets the Crimson default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Crimson)) {\n                brush = (this.sBrushes.getValue(KnownColor.Crimson));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Crimson);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Cyan\", {\n        /**\n         * Gets the Cyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Cyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.Cyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Cyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkBlue\", {\n        /**\n         * Gets the DarkBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkCyan\", {\n        /**\n         * Gets the DarkCyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkCyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkCyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkCyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGoldenrod\", {\n        /**\n         * Gets the DarkGoldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGoldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGoldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGoldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGray\", {\n        /**\n         * Gets the DarkGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGreen\", {\n        /**\n         * Gets the DarkGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkKhaki\", {\n        /**\n         * Gets the DarkKhaki default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkKhaki)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkKhaki));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkKhaki);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkMagenta\", {\n        /**\n         * Gets the DarkMagenta default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkMagenta)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkMagenta));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkMagenta);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOliveGreen\", {\n        /**\n         * Gets the DarkOliveGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOliveGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOliveGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOliveGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOrange\", {\n        /**\n         * Gets the DarkOrange default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOrange)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOrange));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOrange);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOrchid\", {\n        /**\n         * Gets the DarkOrchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOrchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOrchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOrchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkRed\", {\n        /**\n         * Gets the DarkRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSalmon\", {\n        /**\n         * Gets the DarkSalmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSalmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSalmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSalmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSeaGreen\", {\n        /**\n         * Gets the DarkSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSlateBlue\", {\n        /**\n         * Gets the DarkSlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSlateGray\", {\n        /**\n         * Gets the DarkSlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkTurquoise\", {\n        /**\n         * Gets the DarkTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkViolet\", {\n        /**\n         * Gets the DarkViolet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkViolet)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkViolet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkViolet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DeepPink\", {\n        /**\n         * Gets the DeepPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DeepPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.DeepPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DeepPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DeepSkyBlue\", {\n        /**\n         * Gets the DeepSkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DeepSkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DeepSkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DeepSkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DimGray\", {\n        /**\n         * Gets the DimGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DimGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DimGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DimGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DodgerBlue\", {\n        /**\n         * Gets the DodgerBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DodgerBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DodgerBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DodgerBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Firebrick\", {\n        /**\n         * Gets the Firebrick default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Firebrick)) {\n                brush = (this.sBrushes.getValue(KnownColor.Firebrick));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Firebrick);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"FloralWhite\", {\n        /**\n         * Gets the FloralWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.FloralWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.FloralWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.FloralWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"ForestGreen\", {\n        /**\n         * Gets the ForestGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.ForestGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.ForestGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.ForestGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Fuchsia\", {\n        /**\n         * Gets the Fuchsia default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Fuchsia)) {\n                brush = (this.sBrushes.getValue(KnownColor.Fuchsia));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Fuchsia);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gainsboro\", {\n        /**\n         * Gets the Gainsborough default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gainsboro)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gainsboro));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gainsboro);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"GhostWhite\", {\n        /**\n         * Gets the GhostWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.GhostWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.GhostWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.GhostWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gold\", {\n        /**\n         * Gets the Gold default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gold)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gold));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gold);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Goldenrod\", {\n        /**\n         * Gets the Goldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Goldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.Goldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Goldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gray\", {\n        /**\n         * Gets the Gray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gray)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Green\", {\n        /**\n         * Gets the Green default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Green)) {\n                brush = (this.sBrushes.getValue(KnownColor.Green));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Green);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"GreenYellow\", {\n        /**\n         * Gets the GreenYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.GreenYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.GreenYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.GreenYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Honeydew\", {\n        /**\n         * Gets the Honeydew default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Honeydew)) {\n                brush = (this.sBrushes.getValue(KnownColor.Honeydew));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Honeydew);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"HotPink\", {\n        /**\n         * Gets the HotPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.HotPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.HotPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.HotPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"IndianRed\", {\n        /**\n         * Gets the IndianRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.IndianRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.IndianRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.IndianRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Indigo\", {\n        /**\n         * Gets the Indigo default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Indigo)) {\n                brush = (this.sBrushes.getValue(KnownColor.Indigo));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Indigo);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Ivory\", {\n        /**\n         * Gets the Ivory default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Ivory)) {\n                brush = (this.sBrushes.getValue(KnownColor.Ivory));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Ivory);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Khaki\", {\n        /**\n         * Gets the Khaki default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Khaki)) {\n                brush = (this.sBrushes.getValue(KnownColor.Khaki));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Khaki);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Lavender\", {\n        /**\n         * Gets the Lavender default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Lavender)) {\n                brush = (this.sBrushes.getValue(KnownColor.Lavender));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Lavender);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LavenderBlush\", {\n        /**\n         * Gets the LavenderBlush default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LavenderBlush)) {\n                brush = (this.sBrushes.getValue(KnownColor.LavenderBlush));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LavenderBlush);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LawnGreen\", {\n        /**\n         * Gets the LawnGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LawnGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LawnGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LawnGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LemonChiffon\", {\n        /**\n         * Gets the LemonChiffon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LemonChiffon)) {\n                brush = (this.sBrushes.getValue(KnownColor.LemonChiffon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LemonChiffon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightBlue\", {\n        /**\n         * Gets the LightBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightCoral\", {\n        /**\n         * Gets the LightCoral default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightCoral)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightCoral));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightCoral);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightCyan\", {\n        /**\n         * Gets the LightCyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightCyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightCyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightCyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGoldenrodYellow\", {\n        /**\n         * Gets the LightGoldenrodYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGoldenrodYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGoldenrodYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGoldenrodYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGray\", {\n        /**\n         * Gets the LightGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGreen\", {\n        /**\n         * Gets the LightGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightPink\", {\n        /**\n         * Gets the LightPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSalmon\", {\n        /**\n         * Gets the LightSalmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSalmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSalmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSalmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSeaGreen\", {\n        /**\n         * Gets the LightSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSkyBlue\", {\n        /**\n         * Gets the LightSkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSlateGray\", {\n        /**\n         * Gets the LightSlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSteelBlue\", {\n        /**\n         * Gets the LightSteelBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSteelBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSteelBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSteelBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightYellow\", {\n        /**\n         * Gets the LightYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Lime\", {\n        /**\n         * Gets the Lime default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Lime)) {\n                brush = (this.sBrushes.getValue(KnownColor.Lime));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Lime);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LimeGreen\", {\n        /**\n         * Gets the LimeGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LimeGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LimeGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LimeGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Linen\", {\n        /**\n         * Gets the Linen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Linen)) {\n                brush = (this.sBrushes.getValue(KnownColor.Linen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Linen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Magenta\", {\n        /**\n         * Gets the Magenta default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Magenta)) {\n                brush = (this.sBrushes.getValue(KnownColor.Magenta));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Magenta);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Maroon\", {\n        /**\n         * Gets the Maroon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Maroon)) {\n                brush = (this.sBrushes.getValue(KnownColor.Maroon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Maroon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumAquamarine\", {\n        /**\n         * Gets the MediumAquamarine default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumAquamarine)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumAquamarine));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumAquamarine);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumBlue\", {\n        /**\n         * Gets the MediumBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumOrchid\", {\n        /**\n         * Gets the MediumOrchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumOrchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumOrchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumOrchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumPurple\", {\n        /**\n         * Gets the MediumPurple default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumPurple)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumPurple));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumPurple);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSeaGreen\", {\n        /**\n         * Gets the MediumSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSlateBlue\", {\n        /**\n         * Gets the MediumSlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSpringGreen\", {\n        /**\n         * Gets the MediumSpringGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSpringGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSpringGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSpringGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumTurquoise\", {\n        /**\n         * Gets the MediumTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumVioletRed\", {\n        /**\n         * Gets the MediumVioletRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumVioletRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumVioletRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumVioletRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MidnightBlue\", {\n        /**\n         * Gets the MidnightBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MidnightBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MidnightBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MidnightBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MintCream\", {\n        /**\n         * Gets the MintCream default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MintCream)) {\n                brush = (this.sBrushes.getValue(KnownColor.MintCream));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MintCream);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MistyRose\", {\n        /**\n         * Gets the MistyRose default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MistyRose)) {\n                brush = (this.sBrushes.getValue(KnownColor.MistyRose));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MistyRose);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Moccasin\", {\n        /**\n         * Gets the Moccasin default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Moccasin)) {\n                brush = (this.sBrushes.getValue(KnownColor.Moccasin));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Moccasin);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"NavajoWhite\", {\n        /**\n         * Gets the NavajoWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.NavajoWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.NavajoWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.NavajoWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Navy\", {\n        /**\n         * Gets the Navy default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Navy)) {\n                brush = (this.sBrushes.getValue(KnownColor.Navy));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Navy);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OldLace\", {\n        /**\n         * Gets the OldLace default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OldLace)) {\n                brush = (this.sBrushes.getValue(KnownColor.OldLace));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OldLace);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Olive\", {\n        /**\n         * Gets the Olive default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Olive)) {\n                brush = (this.sBrushes.getValue(KnownColor.Olive));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Olive);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OliveDrab\", {\n        /**\n         * Gets the OliveDrab default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OliveDrab)) {\n                brush = (this.sBrushes.getValue(KnownColor.OliveDrab));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OliveDrab);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Orange\", {\n        /**\n         * Gets the Orange default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Orange)) {\n                brush = (this.sBrushes.getValue(KnownColor.Orange));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Orange);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OrangeRed\", {\n        /**\n         * Gets the OrangeRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OrangeRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.OrangeRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OrangeRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Orchid\", {\n        /**\n         * Gets the Orchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Orchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.Orchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Orchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleGoldenrod\", {\n        /**\n         * Gets the PaleGoldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleGoldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleGoldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleGoldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleGreen\", {\n        /**\n         * Gets the PaleGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleTurquoise\", {\n        /**\n         * Gets the PaleTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleVioletRed\", {\n        /**\n         * Gets the PaleVioletRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleVioletRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleVioletRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleVioletRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PapayaWhip\", {\n        /**\n         * Gets the PapayaWhip default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PapayaWhip)) {\n                brush = (this.sBrushes.getValue(KnownColor.PapayaWhip));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PapayaWhip);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PeachPuff\", {\n        /**\n         * Gets the PeachPuff default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PeachPuff)) {\n                brush = (this.sBrushes.getValue(KnownColor.PeachPuff));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PeachPuff);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Peru\", {\n        /**\n         * Gets the Peru default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Peru)) {\n                brush = (this.sBrushes.getValue(KnownColor.Peru));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Peru);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Pink\", {\n        /**\n         * Gets the Pink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Pink)) {\n                brush = (this.sBrushes.getValue(KnownColor.Pink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Pink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Plum\", {\n        /**\n         * Gets the Plum default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Plum)) {\n                brush = (this.sBrushes.getValue(KnownColor.Plum));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Plum);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PowderBlue\", {\n        /**\n         * Gets the PowderBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PowderBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.PowderBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PowderBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Purple\", {\n        /**\n         * Gets the Purple default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Purple)) {\n                brush = (this.sBrushes.getValue(KnownColor.Purple));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Purple);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Red\", {\n        /**\n         * Gets the Red default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Red)) {\n                brush = (this.sBrushes.getValue(KnownColor.Red));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Red);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"RosyBrown\", {\n        /**\n         * Gets the RosyBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.RosyBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.RosyBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.RosyBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"RoyalBlue\", {\n        /**\n         * Gets the RoyalBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.RoyalBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.RoyalBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.RoyalBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SaddleBrown\", {\n        /**\n         * Gets the SaddleBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SaddleBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.SaddleBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SaddleBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Salmon\", {\n        /**\n         * Gets the Salmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Salmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.Salmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Salmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SandyBrown\", {\n        /**\n         * Gets the SandyBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SandyBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.SandyBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SandyBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SeaGreen\", {\n        /**\n         * Gets the SeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.SeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SeaShell\", {\n        /**\n         * Gets the SeaShell default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SeaShell)) {\n                brush = (this.sBrushes.getValue(KnownColor.SeaShell));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SeaShell);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Sienna\", {\n        /**\n         * Gets the Sienna default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Sienna)) {\n                brush = (this.sBrushes.getValue(KnownColor.Sienna));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Sienna);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Silver\", {\n        /**\n         * Gets the Silver default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Silver)) {\n                brush = (this.sBrushes.getValue(KnownColor.Silver));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Silver);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SkyBlue\", {\n        /**\n         * Gets the SkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SlateBlue\", {\n        /**\n         * Gets the SlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SlateGray\", {\n        /**\n         * Gets the SlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.SlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Snow\", {\n        /**\n         * Gets the Snow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Snow)) {\n                brush = (this.sBrushes.getValue(KnownColor.Snow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Snow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SpringGreen\", {\n        /**\n         * Gets the SpringGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SpringGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.SpringGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SpringGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SteelBlue\", {\n        /**\n         * Gets the SteelBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SteelBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SteelBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SteelBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Tan\", {\n        /**\n         * Gets the Tan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Tan)) {\n                brush = (this.sBrushes.getValue(KnownColor.Tan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Tan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Teal\", {\n        /**\n         * Gets the Teal default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Teal)) {\n                brush = (this.sBrushes.getValue(KnownColor.Teal));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Teal);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Thistle\", {\n        /**\n         * Gets the Thistle default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Thistle)) {\n                brush = (this.sBrushes.getValue(KnownColor.Thistle));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Thistle);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Tomato\", {\n        /**\n         * Gets the Tomato default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Tomato)) {\n                brush = (this.sBrushes.getValue(KnownColor.Tomato));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Tomato);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Transparent\", {\n        /**\n         * Gets the Transparent default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Transparent)) {\n                brush = (this.sBrushes.getValue(KnownColor.Transparent));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Transparent);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Turquoise\", {\n        /**\n         * Gets the Turquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Turquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.Turquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Turquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Violet\", {\n        /**\n         * Gets the Violet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Violet)) {\n                brush = (this.sBrushes.getValue(KnownColor.Violet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Violet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Wheat\", {\n        /**\n         * Gets the Wheat default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Wheat)) {\n                brush = (this.sBrushes.getValue(KnownColor.Wheat));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Wheat);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"White\", {\n        /**\n         * Gets the White default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.White)) {\n                brush = (this.sBrushes.getValue(KnownColor.White));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.White);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"WhiteSmoke\", {\n        /**\n         * Gets the WhiteSmoke default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.WhiteSmoke)) {\n                brush = (this.sBrushes.getValue(KnownColor.WhiteSmoke));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.WhiteSmoke);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Yellow\", {\n        /**\n         * Gets the Yellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Yellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.Yellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Yellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"YellowGreen\", {\n        /**\n         * Gets the YellowGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.YellowGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.YellowGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.YellowGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get the brush.\n     */\n    PdfBrushes.getBrush = function (colorName) {\n        var pdfColor = this.getColorValue(colorName);\n        var brush = new PdfSolidBrush(pdfColor);\n        this.sBrushes.setValue(colorName, brush);\n        return brush;\n    };\n    /**\n     * Get the color value.\n     * @param colorName The KnownColor name.\n     */\n    /* tslint:disable */\n    PdfBrushes.getColorValue = function (colorName) {\n        var color = new PdfColor();\n        switch (colorName) {\n            case KnownColor.Transparent:\n                color = new PdfColor(0, 255, 255, 255);\n                break;\n            case KnownColor.AliceBlue:\n                color = new PdfColor(255, 240, 248, 255);\n                break;\n            case KnownColor.AntiqueWhite:\n                color = new PdfColor(255, 250, 235, 215);\n                break;\n            case KnownColor.Aqua:\n                color = new PdfColor(255, 0, 255, 255);\n                break;\n            case KnownColor.Aquamarine:\n                color = new PdfColor(255, 127, 255, 212);\n                break;\n            case KnownColor.Azure:\n                color = new PdfColor(255, 240, 255, 255);\n                break;\n            case KnownColor.Beige:\n                color = new PdfColor(255, 245, 245, 220);\n                break;\n            case KnownColor.Bisque:\n                color = new PdfColor(255, 255, 228, 196);\n                break;\n            case KnownColor.Black:\n                color = new PdfColor(255, 0, 0, 0);\n                break;\n            case KnownColor.BlanchedAlmond:\n                color = new PdfColor(255, 255, 235, 205);\n                break;\n            case KnownColor.Blue:\n                color = new PdfColor(255, 0, 0, 255);\n                break;\n            case KnownColor.BlueViolet:\n                color = new PdfColor(255, 138, 43, 226);\n                break;\n            case KnownColor.Brown:\n                color = new PdfColor(255, 165, 42, 42);\n                break;\n            case KnownColor.BurlyWood:\n                color = new PdfColor(255, 222, 184, 135);\n                break;\n            case KnownColor.CadetBlue:\n                color = new PdfColor(255, 95, 158, 160);\n                break;\n            case KnownColor.Chartreuse:\n                color = new PdfColor(255, 127, 255, 0);\n                break;\n            case KnownColor.Chocolate:\n                color = new PdfColor(255, 210, 105, 30);\n                break;\n            case KnownColor.Coral:\n                color = new PdfColor(255, 255, 127, 80);\n                break;\n            case KnownColor.CornflowerBlue:\n                color = new PdfColor(255, 100, 149, 237);\n                break;\n            case KnownColor.Cornsilk:\n                color = new PdfColor(255, 255, 248, 220);\n                break;\n            case KnownColor.Crimson:\n                color = new PdfColor(255, 220, 20, 60);\n                break;\n            case KnownColor.Cyan:\n                color = new PdfColor(255, 0, 255, 255);\n                break;\n            case KnownColor.DarkBlue:\n                color = new PdfColor(255, 0, 0, 139);\n                break;\n            case KnownColor.DarkCyan:\n                color = new PdfColor(255, 0, 139, 139);\n                break;\n            case KnownColor.DarkGoldenrod:\n                color = new PdfColor(255, 184, 134, 11);\n                break;\n            case KnownColor.DarkGray:\n                color = new PdfColor(255, 169, 169, 169);\n                break;\n            case KnownColor.DarkGreen:\n                color = new PdfColor(255, 0, 100, 0);\n                break;\n            case KnownColor.DarkKhaki:\n                color = new PdfColor(255, 189, 183, 107);\n                break;\n            case KnownColor.DarkMagenta:\n                color = new PdfColor(255, 139, 0, 139);\n                break;\n            case KnownColor.DarkOliveGreen:\n                color = new PdfColor(255, 85, 107, 47);\n                break;\n            case KnownColor.DarkOrange:\n                color = new PdfColor(255, 255, 140, 0);\n                break;\n            case KnownColor.DarkOrchid:\n                color = new PdfColor(255, 153, 50, 204);\n                break;\n            case KnownColor.DarkRed:\n                color = new PdfColor(255, 139, 0, 0);\n                break;\n            case KnownColor.DarkSalmon:\n                color = new PdfColor(255, 233, 150, 122);\n                break;\n            case KnownColor.DarkSeaGreen:\n                color = new PdfColor(255, 143, 188, 139);\n                break;\n            case KnownColor.DarkSlateBlue:\n                color = new PdfColor(255, 72, 61, 139);\n                break;\n            case KnownColor.DarkSlateGray:\n                color = new PdfColor(255, 47, 79, 79);\n                break;\n            case KnownColor.DarkTurquoise:\n                color = new PdfColor(255, 0, 206, 209);\n                break;\n            case KnownColor.DarkViolet:\n                color = new PdfColor(255, 148, 0, 211);\n                break;\n            case KnownColor.DeepPink:\n                color = new PdfColor(255, 255, 20, 147);\n                break;\n            case KnownColor.DeepSkyBlue:\n                color = new PdfColor(255, 0, 191, 255);\n                break;\n            case KnownColor.DimGray:\n                color = new PdfColor(255, 105, 105, 105);\n                break;\n            case KnownColor.DodgerBlue:\n                color = new PdfColor(255, 30, 144, 255);\n                break;\n            case KnownColor.Firebrick:\n                color = new PdfColor(255, 178, 34, 34);\n                break;\n            case KnownColor.FloralWhite:\n                color = new PdfColor(255, 255, 250, 240);\n                break;\n            case KnownColor.ForestGreen:\n                color = new PdfColor(255, 34, 139, 34);\n                break;\n            case KnownColor.Fuchsia:\n                color = new PdfColor(255, 255, 0, 255);\n                break;\n            case KnownColor.Gainsboro:\n                color = new PdfColor(255, 220, 220, 220);\n                break;\n            case KnownColor.GhostWhite:\n                color = new PdfColor(255, 248, 248, 255);\n                break;\n            case KnownColor.Gold:\n                color = new PdfColor(255, 255, 215, 0);\n                break;\n            case KnownColor.Goldenrod:\n                color = new PdfColor(255, 218, 165, 32);\n                break;\n            case KnownColor.Gray:\n                color = new PdfColor(255, 128, 128, 128);\n                break;\n            case KnownColor.Green:\n                color = new PdfColor(255, 0, 128, 0);\n                break;\n            case KnownColor.GreenYellow:\n                color = new PdfColor(255, 173, 255, 47);\n                break;\n            case KnownColor.Honeydew:\n                color = new PdfColor(255, 240, 255, 240);\n                break;\n            case KnownColor.HotPink:\n                color = new PdfColor(255, 255, 105, 180);\n                break;\n            case KnownColor.IndianRed:\n                color = new PdfColor(255, 205, 92, 92);\n                break;\n            case KnownColor.Indigo:\n                color = new PdfColor(255, 75, 0, 130);\n                break;\n            case KnownColor.Ivory:\n                color = new PdfColor(255, 255, 255, 240);\n                break;\n            case KnownColor.Khaki:\n                color = new PdfColor(255, 240, 230, 140);\n                break;\n            case KnownColor.Lavender:\n                color = new PdfColor(255, 230, 230, 250);\n                break;\n            case KnownColor.LavenderBlush:\n                color = new PdfColor(255, 255, 240, 245);\n                break;\n            case KnownColor.LawnGreen:\n                color = new PdfColor(255, 124, 252, 0);\n                break;\n            case KnownColor.LemonChiffon:\n                color = new PdfColor(255, 255, 250, 205);\n                break;\n            case KnownColor.LightBlue:\n                color = new PdfColor(255, 173, 216, 230);\n                break;\n            case KnownColor.LightCoral:\n                color = new PdfColor(255, 240, 128, 128);\n                break;\n            case KnownColor.LightCyan:\n                color = new PdfColor(255, 224, 255, 255);\n                break;\n            case KnownColor.LightGoldenrodYellow:\n                color = new PdfColor(255, 250, 250, 210);\n                break;\n            case KnownColor.LightGreen:\n                color = new PdfColor(255, 144, 238, 144);\n                break;\n            case KnownColor.LightGray:\n                color = new PdfColor(255, 211, 211, 211);\n                break;\n            case KnownColor.LightPink:\n                color = new PdfColor(255, 255, 182, 193);\n                break;\n            case KnownColor.LightSalmon:\n                color = new PdfColor(255, 255, 160, 122);\n                break;\n            case KnownColor.LightSeaGreen:\n                color = new PdfColor(255, 32, 178, 170);\n                break;\n            case KnownColor.LightSkyBlue:\n                color = new PdfColor(255, 135, 206, 250);\n                break;\n            case KnownColor.LightSlateGray:\n                color = new PdfColor(255, 119, 136, 153);\n                break;\n            case KnownColor.LightSteelBlue:\n                color = new PdfColor(255, 176, 196, 222);\n                break;\n            case KnownColor.LightYellow:\n                color = new PdfColor(255, 255, 255, 224);\n                break;\n            case KnownColor.Lime:\n                color = new PdfColor(255, 0, 255, 0);\n                break;\n            case KnownColor.LimeGreen:\n                color = new PdfColor(255, 50, 205, 50);\n                break;\n            case KnownColor.Linen:\n                color = new PdfColor(255, 250, 240, 230);\n                break;\n            case KnownColor.Magenta:\n                color = new PdfColor(255, 255, 0, 255);\n                break;\n            case KnownColor.Maroon:\n                color = new PdfColor(255, 128, 0, 0);\n                break;\n            case KnownColor.MediumAquamarine:\n                color = new PdfColor(255, 102, 205, 170);\n                break;\n            case KnownColor.MediumBlue:\n                color = new PdfColor(255, 0, 0, 205);\n                break;\n            case KnownColor.MediumOrchid:\n                color = new PdfColor(255, 186, 85, 211);\n                break;\n            case KnownColor.MediumPurple:\n                color = new PdfColor(255, 147, 112, 219);\n                break;\n            case KnownColor.MediumSeaGreen:\n                color = new PdfColor(255, 60, 179, 113);\n                break;\n            case KnownColor.MediumSlateBlue:\n                color = new PdfColor(255, 123, 104, 238);\n                break;\n            case KnownColor.MediumSpringGreen:\n                color = new PdfColor(255, 0, 250, 154);\n                break;\n            case KnownColor.MediumTurquoise:\n                color = new PdfColor(255, 72, 209, 204);\n                break;\n            case KnownColor.MediumVioletRed:\n                color = new PdfColor(255, 199, 21, 133);\n                break;\n            case KnownColor.MidnightBlue:\n                color = new PdfColor(255, 25, 25, 112);\n                break;\n            case KnownColor.MintCream:\n                color = new PdfColor(255, 245, 255, 250);\n                break;\n            case KnownColor.MistyRose:\n                color = new PdfColor(255, 255, 228, 225);\n                break;\n            case KnownColor.Moccasin:\n                color = new PdfColor(255, 255, 228, 181);\n                break;\n            case KnownColor.NavajoWhite:\n                color = new PdfColor(255, 255, 222, 173);\n                break;\n            case KnownColor.Navy:\n                color = new PdfColor(255, 0, 0, 128);\n                break;\n            case KnownColor.OldLace:\n                color = new PdfColor(255, 253, 245, 230);\n                break;\n            case KnownColor.Olive:\n                color = new PdfColor(255, 128, 128, 0);\n                break;\n            case KnownColor.OliveDrab:\n                color = new PdfColor(255, 107, 142, 35);\n                break;\n            case KnownColor.Orange:\n                color = new PdfColor(255, 255, 165, 0);\n                break;\n            case KnownColor.OrangeRed:\n                color = new PdfColor(255, 255, 69, 0);\n                break;\n            case KnownColor.Orchid:\n                color = new PdfColor(255, 218, 112, 214);\n                break;\n            case KnownColor.PaleGoldenrod:\n                color = new PdfColor(255, 238, 232, 170);\n                break;\n            case KnownColor.PaleGreen:\n                color = new PdfColor(255, 152, 251, 152);\n                break;\n            case KnownColor.PaleTurquoise:\n                color = new PdfColor(255, 175, 238, 238);\n                break;\n            case KnownColor.PaleVioletRed:\n                color = new PdfColor(255, 219, 112, 147);\n                break;\n            case KnownColor.PapayaWhip:\n                color = new PdfColor(255, 255, 239, 213);\n                break;\n            case KnownColor.PeachPuff:\n                color = new PdfColor(255, 255, 218, 185);\n                break;\n            case KnownColor.Peru:\n                color = new PdfColor(255, 205, 133, 63);\n                break;\n            case KnownColor.Pink:\n                color = new PdfColor(255, 255, 192, 203);\n                break;\n            case KnownColor.Plum:\n                color = new PdfColor(255, 221, 160, 221);\n                break;\n            case KnownColor.PowderBlue:\n                color = new PdfColor(255, 176, 224, 230);\n                break;\n            case KnownColor.Purple:\n                color = new PdfColor(255, 128, 0, 128);\n                break;\n            case KnownColor.Red:\n                color = new PdfColor(255, 255, 0, 0);\n                break;\n            case KnownColor.RosyBrown:\n                color = new PdfColor(255, 188, 143, 143);\n                break;\n            case KnownColor.RoyalBlue:\n                color = new PdfColor(255, 65, 105, 225);\n                break;\n            case KnownColor.SaddleBrown:\n                color = new PdfColor(255, 139, 69, 19);\n                break;\n            case KnownColor.Salmon:\n                color = new PdfColor(255, 250, 128, 114);\n                break;\n            case KnownColor.SandyBrown:\n                color = new PdfColor(255, 244, 164, 96);\n                break;\n            case KnownColor.SeaGreen:\n                color = new PdfColor(255, 46, 139, 87);\n                break;\n            case KnownColor.SeaShell:\n                color = new PdfColor(255, 255, 245, 238);\n                break;\n            case KnownColor.Sienna:\n                color = new PdfColor(255, 160, 82, 45);\n                break;\n            case KnownColor.Silver:\n                color = new PdfColor(255, 192, 192, 192);\n                break;\n            case KnownColor.SkyBlue:\n                color = new PdfColor(255, 135, 206, 235);\n                break;\n            case KnownColor.SlateBlue:\n                color = new PdfColor(255, 106, 90, 205);\n                break;\n            case KnownColor.SlateGray:\n                color = new PdfColor(255, 112, 128, 144);\n                break;\n            case KnownColor.Snow:\n                color = new PdfColor(255, 255, 250, 250);\n                break;\n            case KnownColor.SpringGreen:\n                color = new PdfColor(255, 0, 255, 127);\n                break;\n            case KnownColor.SteelBlue:\n                color = new PdfColor(255, 70, 130, 180);\n                break;\n            case KnownColor.Tan:\n                color = new PdfColor(255, 210, 180, 140);\n                break;\n            case KnownColor.Teal:\n                color = new PdfColor(255, 0, 128, 128);\n                break;\n            case KnownColor.Thistle:\n                color = new PdfColor(255, 216, 191, 216);\n                break;\n            case KnownColor.Tomato:\n                color = new PdfColor(255, 255, 99, 71);\n                break;\n            case KnownColor.Turquoise:\n                color = new PdfColor(255, 64, 224, 208);\n                break;\n            case KnownColor.Violet:\n                color = new PdfColor(255, 238, 130, 238);\n                break;\n            case KnownColor.Wheat:\n                color = new PdfColor(255, 245, 222, 179);\n                break;\n            case KnownColor.White:\n                color = new PdfColor(255, 255, 255, 255);\n                break;\n            case KnownColor.WhiteSmoke:\n                color = new PdfColor(255, 245, 245, 245);\n                break;\n            case KnownColor.Yellow:\n                color = new PdfColor(255, 255, 255, 0);\n                break;\n            case KnownColor.YellowGreen:\n                color = new PdfColor(255, 154, 205, 50);\n                break;\n        }\n        return color;\n    };\n    //Static Fields\n    /**\n     * Local variable to store the brushes.\n     */\n    PdfBrushes.sBrushes = new Dictionary();\n    return PdfBrushes;\n}());\nexport { PdfBrushes };\n","/**\n * PdfBlend.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorBlend } from './pdf-color-blend';\n/**\n * `PdfBlend` Represents the blend color space\n * @private\n */\nvar PdfBlend = /** @class */ (function () {\n    function PdfBlend(count) {\n        //Constants\n        /**\n         * precision of the GCD calculations.\n         * @private\n         */\n        this.precision = 1000;\n        //\n    }\n    Object.defineProperty(PdfBlend.prototype, \"factors\", {\n        //Properties\n        /**\n         * Gets or sets the array of factor to the blend.\n         * @public\n         */\n        get: function () {\n            return this.mFactors;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Factors');\n            }\n            this.mFactors = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBlend.prototype, \"positions\", {\n        /**\n         * 'positions' Gets or sets the array of positions\n         * @public\n         */\n        get: function () {\n            return this.mPositions;\n        },\n        set: function (value) {\n            var positionarray = value;\n            for (var i = 0; i < positionarray.length; i++) {\n                if (((positionarray[i] < 0) || (positionarray[i] > 1))) {\n                    positionarray[i] = 0;\n                }\n            }\n            this.mPositions = positionarray;\n            this.mPositions = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBlend.prototype, \"count\", {\n        /**\n         * Gets the number of elements that specify the blend.\n         * @protected\n         */\n        get: function () {\n            return this.mCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Generates a correct color blend.\n     * @param colours The colours.\n     * @param colorSpace The color space.\n     */\n    PdfBlend.prototype.generateColorBlend = function (colours, colorSpace) {\n        if ((colours == null)) {\n            throw new Error('ArgumentNullException : colours');\n        }\n        if ((this.positions == null)) {\n            this.positions = [0];\n        }\n        var cBlend = new PdfColorBlend(this.count);\n        var positions = this.positions;\n        var clrs = null;\n        if ((positions.length === 1)) {\n            positions = [3];\n            positions[0] = 0;\n            positions[1] = this.positions[0];\n            positions[2] = 1;\n            /* tslint:disable */\n            clrs = new Array(3);\n            clrs[0] = colours[0];\n            clrs[1] = colours[0];\n            clrs[2] = colours[1];\n        }\n        else {\n            var c1 = colours[0];\n            var c2 = colours[1];\n            /* tslint:disable */\n            clrs = new Array(this.count);\n            var i = 0;\n            var count = this.count;\n            for (i = 0; i < count; ++i) {\n                clrs[i] = this.interpolate(this.mFactors[i], c1, c2, colorSpace);\n            }\n        }\n        cBlend.positions = positions;\n        cBlend.colors = clrs;\n        return cBlend;\n    };\n    /**\n     * 'clonePdfBlend' Clones this instance.\n     * @public\n     */\n    PdfBlend.prototype.clonePdfBlend = function () {\n        var blend = this;\n        if ((this.mFactors != null)) {\n            blend.factors = (this.mFactors);\n        }\n        if ((this.positions != null)) {\n            blend.positions = (this.positions);\n        }\n        return blend;\n    };\n    PdfBlend.prototype.gcd = function (u, v) {\n        if (typeof u === 'number' && typeof v === 'number' && typeof v !== 'undefined') {\n            if (((u < 0) || (u > 1))) {\n                throw new Error('ArgumentOutOfRangeException : u');\n            }\n            if (((v < 0) || (v > 1))) {\n                throw new Error('ArgumentOutOfRangeException : v');\n            }\n            var iU = (Math.max(1, (u * this.precision)));\n            var iV = (Math.max(1, (v * this.precision)));\n            var iResult = this.gcdInt(iU, iV);\n            var result = ((iResult) / this.precision);\n            return result;\n        }\n        else {\n            var values = u;\n            if ((values == null)) {\n                throw new Error('ArgumentNullException : values');\n            }\n            if ((values.length < 1)) {\n                throw new Error('ArgumentException : Not enough values in the array. - values');\n            }\n            var gcd = values[0];\n            if ((values.length > 1)) {\n                var count = values.length;\n                for (var i = 1; i < count; ++i) {\n                    gcd = this.gcd(values[i], gcd);\n                    if ((gcd === (1 / this.precision))) {\n                        break;\n                    }\n                }\n            }\n            return gcd;\n        }\n    };\n    /**\n     * Calculate the GCD int of the specified values.\n     * @param u The u.\n     * @param v The v.\n     */\n    PdfBlend.prototype.gcdInt = function (u, v) {\n        if ((u <= 0)) {\n            throw new Error('ArgumentOutOfRangeException' + u + 'The arguments cannot be less or equal to zero.');\n        }\n        if ((v <= 0)) {\n            throw new Error('ArgumentOutOfRangeException' + v + 'The arguments cannot be less or equal to zero.');\n        }\n        if (((u === 1) || (v === 1))) {\n            return 1;\n        }\n        var shift = 0;\n        while (this.isEven(u, v)) {\n            ++shift;\n            u >>= 1;\n            v >>= 1;\n        }\n        while (((u & 1) <= 0)) {\n            u >>= 1;\n        }\n        do {\n            while ((v & 1) <= 0) {\n                v >>= 1;\n            }\n            if (u > v) {\n                var t = v;\n                v = u;\n                u = t;\n            }\n            v = v - u;\n        } while (v !== 0);\n        return (u << shift);\n    };\n    PdfBlend.prototype.isEven = function (arg1, arg2) {\n        if (typeof arg2 === 'number' && typeof arg2 !== 'undefined') {\n            var result = true;\n            result = (result && ((arg1 & 1) <= 0)); //  Is u even?\n            result = (result && ((arg2 & 1) <= 0)); //  Is v even?\n            return result;\n        }\n        else {\n            return ((arg1 & 1) <= 0);\n        }\n    };\n    PdfBlend.prototype.interpolate = function (t, color1, color2, colorSpace) {\n        if (color1 instanceof PdfColor) {\n            var color = new PdfColor();\n            switch (colorSpace) {\n                case PdfColorSpace.Rgb:\n                    var red = (this.interpolate(t, color1.red, color2.red));\n                    var green = (this.interpolate(t, color1.green, color2.green));\n                    var blue = (this.interpolate(t, color1.blue, color2.blue));\n                    color = new PdfColor(red, green, blue);\n                    break;\n                case PdfColorSpace.GrayScale:\n                    var gray = (this.interpolate(t, color1.gray, color2.gray));\n                    color = new PdfColor(gray);\n                    break;\n                case PdfColorSpace.Cmyk:\n                    var cyan = (this.interpolate(t, color1.c, color2.c));\n                    var magenta = (this.interpolate(t, color1.m, color2.m));\n                    var yellow = (this.interpolate(t, color1.y, color2.y));\n                    var black = (this.interpolate(t, color1.k, color2.k));\n                    color = new PdfColor(cyan, magenta, yellow, black);\n                    break;\n            }\n            return color;\n        }\n        else {\n            var t0 = 0;\n            var t1 = 1;\n            var result = 0;\n            if ((t === t0)) {\n                result = color1;\n            }\n            else if ((t === t1)) {\n                result = color2;\n            }\n            else {\n                result = (color1 + ((t - t0) * ((color2 - color1) / (t1 - t0))));\n            }\n            return result;\n        }\n    };\n    return PdfBlend;\n}());\nexport { PdfBlend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfColorBlend.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfSampledFunction } from './../../general/functions/pdf-sampled-function';\nimport { PdfBlend } from './pdf-blend';\n/**\n * `PdfColorBlend` Represents the arrays of colors and positions used for\n *  interpolating color blending in a multicolor gradient.\n * @private\n */\nvar PdfColorBlend = /** @class */ (function (_super) {\n    __extends(PdfColorBlend, _super);\n    function PdfColorBlend(count) {\n        var _this = _super.call(this) || this;\n        if (typeof count === 'number') {\n            _this = _super.call(this, count) || this;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfColorBlend.prototype, \"colors\", {\n        //Properties\n        /**\n         * Gets or sets the array of colors.\n         * @public\n         */\n        get: function () {\n            return this.mcolors;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Colors');\n            }\n            this.mcolors = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Gets the function.\n     * @param colorSpace The color space.\n     * @public\n     */\n    PdfColorBlend.prototype.getFunction = function (colorSpace) {\n        var domain = [0, 1];\n        var colourComponents = this.getColorComponentsCount(colorSpace);\n        var maxComponentValue = this.getMaxComponentValue(colorSpace);\n        var range = this.setRange(colourComponents, maxComponentValue);\n        var func = null;\n        if ((this.mbrush == null && typeof this.mbrush === 'undefined')) {\n            var sizes = [1];\n            var samplesCount = void 0;\n            var step = 1;\n            if (this.positions.length === 2) {\n                samplesCount = 2;\n            }\n            else {\n                var positions = this.positions;\n                var intervals = this.getIntervals(positions);\n                var gcd = this.gcd(intervals);\n                step = gcd;\n                samplesCount = (((1 / gcd)) + 1);\n            }\n            sizes[0] = samplesCount;\n            var samples = this.getSamplesValues(colorSpace, samplesCount, maxComponentValue, step);\n            func = new PdfSampledFunction(domain, range, sizes, samples);\n            return func;\n        }\n        return func;\n    };\n    /**\n     * 'cloneColorBlend' Clones this instance.\n     * @public\n     */\n    PdfColorBlend.prototype.cloneColorBlend = function () {\n        var cBlend = this;\n        if ((this.mcolors != null && typeof this.mcolors !== 'undefined')) {\n            cBlend.colors = (this.mcolors);\n        }\n        if ((this.positions != null && typeof this.positions !== 'undefined')) {\n            cBlend.positions = (this.positions);\n        }\n        return cBlend;\n    };\n    /**\n     * Sets the range.\n     * @param colourComponents The colour components.\n     * @param maxValue The max value.\n     */\n    PdfColorBlend.prototype.setRange = function (colourComponents, maxValue) {\n        var range = [(colourComponents * 2)];\n        for (var i = 0; (i < colourComponents); ++i) {\n            range[(i * 2)] = 0;\n            range[((i * 2) + 1)] = 1;\n        }\n        return range;\n    };\n    /**\n     * Calculates the color components count according to colour space.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getColorComponentsCount = function (colorSpace) {\n        var count = 0;\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                count = 3;\n                break;\n            case PdfColorSpace.Cmyk:\n                count = 4;\n                break;\n            case PdfColorSpace.GrayScale:\n                count = 1;\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + ' colorSpace');\n        }\n        return count;\n    };\n    /**\n     * Gets samples values for specified colour space.\n     * @param colorSpace The color space.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getSamplesValues = function (colorSpace, sampleCount, maxComponentValue, step) {\n        var values;\n        switch (colorSpace) {\n            case PdfColorSpace.GrayScale:\n                values = this.getGrayscaleSamples(sampleCount, maxComponentValue, step);\n                break;\n            case PdfColorSpace.Cmyk:\n                values = this.getCmykSamples(sampleCount, maxComponentValue, step);\n                break;\n            case PdfColorSpace.Rgb:\n                values = this.getRgbSamples(sampleCount, maxComponentValue, step);\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + ' colorSpace');\n        }\n        return values;\n    };\n    /**\n     * Gets the grayscale samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getGrayscaleSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 2)];\n        for (var i = 0; (i < sampleCount); ++i) {\n            var color = this.getNextColor(i, step, PdfColorSpace.GrayScale);\n            var index = (i * 2);\n        }\n        return values;\n    };\n    /**\n     * Gets the RGB samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getRgbSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 3)];\n        for (var i = 0; (i < sampleCount); ++i) {\n            var color = this.getNextColor(i, step, PdfColorSpace.Rgb);\n            var index = (i * 3);\n            values[index] = color.r;\n            values[(index + 1)] = color.g;\n            values[(index + 2)] = color.b;\n        }\n        return values;\n    };\n    /**\n     * Gets the CMYK samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getCmykSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 4)];\n        for (var i = 0; (i < sampleCount); i++) {\n            var color = this.getNextColor(i, step, PdfColorSpace.Cmyk);\n            var index = (i * 4);\n            values[index] = ((color.c * maxComponentValue));\n            values[(index + 1)] = ((color.m * maxComponentValue));\n            values[(index + 2)] = ((color.y * maxComponentValue));\n            values[(index + 3)] = ((color.k * maxComponentValue));\n        }\n        return values;\n    };\n    /**\n     * Calculates the color that should be at the specified index.\n     * @param index The index.\n     * @param step The step.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getNextColor = function (index, step, colorSpace) {\n        var position = (step * index);\n        var indexHi;\n        var indexLow;\n        var result = this.getIndices(position, indexLow, indexHi);\n        indexLow = result.indexLow;\n        indexHi = result.indexHi;\n        var color;\n        if (indexLow === indexHi) {\n            color = this.mcolors[indexLow];\n        }\n        else {\n            var positionLow = this.positions[indexLow];\n            var positionHi = this.positions[indexHi];\n            var colorLow = this.mcolors[indexLow];\n            var colorHi = this.mcolors[indexHi];\n            var t = ((position - positionLow) / (positionHi - positionLow));\n            color = this.interpolate(t, colorLow, colorHi, colorSpace);\n        }\n        return color;\n    };\n    /**\n     * Gets the indices.\n     * @param position The position.\n     * @param indexLow The index low.\n     * @param indexHi The index hi.\n     */\n    PdfColorBlend.prototype.getIndices = function (position, indexLow, indexHi) {\n        var positions = this.positions;\n        indexLow = 0;\n        indexHi = 0;\n        for (var i = 0; (i < this.mcolors.length); ++i) {\n            var currPos = positions[i];\n            if ((currPos === position)) {\n                indexHi = i;\n                indexLow = i;\n                break;\n            }\n            else if ((currPos > position)) {\n                indexHi = i;\n                break;\n            }\n            indexLow = i;\n            indexHi = i;\n        }\n        return { indexLow: indexLow, indexHi: indexHi };\n    };\n    /**\n     * Calculates the max component value.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getMaxComponentValue = function (colorSpace) {\n        var result = 0;\n        switch (colorSpace) {\n            case PdfColorSpace.Cmyk:\n            case PdfColorSpace.Rgb:\n                result = 255;\n                break;\n            case PdfColorSpace.GrayScale:\n                result = 65535;\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + 'colorSpace');\n        }\n        return result;\n    };\n    /**\n     * Gets an intervals array from the positions array.\n     * @param positions The positions array.\n     */\n    PdfColorBlend.prototype.getIntervals = function (positions) {\n        var count = positions.length;\n        var intervals = [(count - 1)];\n        var prev = positions[0];\n        for (var i = 1; (i < count); ++i) {\n            var v = positions[i];\n            intervals[(i - 1)] = (v - prev);\n            prev = v;\n        }\n        return intervals;\n    };\n    return PdfColorBlend;\n}(PdfBlend));\nexport { PdfColorBlend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfLinearGradientBrush.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PointF, Rectangle } from './../../drawing/pdf-drawing';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from '../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfColorBlend } from './pdf-color-blend';\nimport { PdfGradientBrush } from './pdf-gradient-brush';\nimport { PdfExtend, PdfLinearGradientMode, ShadingType } from './enum';\n/**\n * `PdfLinearGradientBrush` Implements linear gradient brush by using PDF axial shading pattern.\n * @private\n */\nvar PdfLinearGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfLinearGradientBrush, _super);\n    /**\n     * Initializes a new instance of the `PdfLinearGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfLinearGradientBrush(arg1, arg2, arg3, arg4) {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PdfColor && arg4 instanceof PdfColor) {\n            _this.initialize(arg3, arg4);\n            _this.mPointStart = arg1;\n            _this.mPointEnd = arg2;\n            _this.setPoints(_this.mPointStart, _this.mPointEnd);\n        }\n        else if (arg1 instanceof Rectangle) {\n            _this.initialize(arg2, arg3);\n            /* tslint:disable-next-line:max-line-length */\n            if ((arg4 === PdfLinearGradientMode.BackwardDiagonal || arg4 === PdfLinearGradientMode.ForwardDiagonal || arg4 === PdfLinearGradientMode.Horizontal || arg4 === PdfLinearGradientMode.Vertical)) {\n                _this.mBoundaries = arg1;\n                switch (arg4) {\n                    case PdfLinearGradientMode.BackwardDiagonal:\n                        _this.mPointStart = new PointF(arg1.right, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                        break;\n                    case PdfLinearGradientMode.ForwardDiagonal:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.right, arg1.bottom);\n                        break;\n                    case PdfLinearGradientMode.Horizontal:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.right, arg1.top);\n                        break;\n                    case PdfLinearGradientMode.Vertical:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                        break;\n                    default:\n                        throw new Error('ArgumentException -- Unsupported linear gradient mode: ' + arg4 + ' mode');\n                }\n                _this.setPoints(_this.mPointStart, _this.mPointEnd);\n            }\n            else if (typeof arg4 === 'number' && typeof arg4 !== 'undefined') {\n                _this.mBoundaries = arg1;\n                arg4 = arg4 % 360;\n                if ((arg4 === 0)) {\n                    _this.mPointStart = new PointF(arg1.left, arg1.top);\n                    _this.mPointEnd = new PointF(arg1.right, arg1.top);\n                }\n                else if ((arg4 === 90)) {\n                    _this.mPointStart = new PointF(arg1.left, arg1.top);\n                    _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                }\n                else if ((arg4 === 180)) {\n                    _this.mPointEnd = new PointF(arg1.left, arg1.top);\n                    _this.mPointStart = new PointF(arg1.right, arg1.top);\n                }\n                else if ((arg4 === 270)) {\n                    _this.mPointEnd = new PointF(arg1.left, arg1.top);\n                    _this.mPointStart = new PointF(arg1.left, arg1.bottom);\n                }\n                else {\n                    var d2r = (Math.PI / 180);\n                    var radAngle = (arg4 * d2r);\n                    var k = Math.tan(radAngle);\n                    var x = (_this.mBoundaries.left\n                        + ((_this.mBoundaries.right - _this.mBoundaries.left) / 2));\n                    var y = (_this.mBoundaries.top\n                        + ((_this.mBoundaries.bottom - _this.mBoundaries.top) / 2));\n                    var centre = new PointF(x, y);\n                    x = (_this.mBoundaries.width / (2 * (Math.cos(radAngle))));\n                    y = ((k * x));\n                    x = (x + centre.x);\n                    y = (y + centre.y);\n                    var p1 = new PointF(x, y);\n                    var cp1 = _this.subPoints(p1, centre);\n                    //  P1 - P0\n                    var p = _this.choosePoint(arg4);\n                    var coef = (_this.mulPoints(_this.subPoints(p, centre), cp1)\n                        / _this.mulPoints(cp1, cp1));\n                    _this.mPointEnd = _this.addPoints(centre, _this.mulPoint(cp1, coef));\n                    //  Parametric line equation.\n                    _this.mPointStart = _this.addPoints(centre, _this.mulPoint(cp1, (coef * -1)));\n                }\n                _this.setPoints(_this.mPointEnd, _this.mPointStart);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfLinearGradientBrush` class.\n     * @param color1 The starting color of the gradient.\n     * @param color2 The end color of the gradient.\n     */\n    PdfLinearGradientBrush.prototype.initialize = function (color1, color2) {\n        this.mColours = [color1, color2];\n        this.mColourBlend = new PdfColorBlend(2);\n        this.mColourBlend.positions = [0, 1];\n        this.mColourBlend.colors = this.mColours;\n        this.initShading();\n    };\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"blend\", {\n        //Properties\n        /**\n         * Gets or sets a PdfBlend that specifies positions\n         * and factors that define a custom falloff for the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Blend');\n            }\n            if ((this.mColours == null)) {\n                throw new Error('NotSupportedException : There is no starting and ending colours specified.');\n            }\n            this.mBlend = value;\n            //  TODO: generate correct colour blend.\n            this.mColourBlend = this.mBlend.generateColorBlend(this.mColours, this.colorSpace);\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"interpolationColors\", {\n        /**\n         * Gets or sets a ColorBlend that defines a multicolor linear gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColourBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : InterpolationColors');\n            }\n            this.mBlend = null;\n            this.mColours = null;\n            this.mColourBlend = value;\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"linearColors\", {\n        /**\n         * Gets or sets the starting and ending colors of the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColours;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : LinearColors');\n            }\n            if ((value.length < 2)) {\n                throw new Error('ArgumentException : The array is too small - LinearColors');\n            }\n            if ((this.mColours == null && typeof this.mColours === 'undefined')) {\n                this.mColours = [value[0], value[1]];\n            }\n            else {\n                this.mColours[0] = value[0];\n                this.mColours[1] = value[1];\n            }\n            if ((this.mBlend == null && typeof this.mBlend === 'undefined')) {\n                //  Set correct colour blend.\n                this.mColourBlend = new PdfColorBlend(2);\n                this.mColourBlend.colors = this.mColours;\n                this.mColourBlend.positions = [0, 1];\n            }\n            else {\n                this.mColourBlend = this.mBlend.generateColorBlend(this.mColours, this.colorSpace);\n            }\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"rectangle\", {\n        /**\n         * Gets a rectangular region that defines the boundaries of the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBoundaries;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"extend\", {\n        /**\n         * Gets or sets the value indicating whether the gradient should extend starting and ending points.\n         * @public\n         */\n        get: function () {\n            var result = PdfExtend.None;\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            if ((extend != null)) {\n                var extStart = (extend.items(0));\n                var extEnd = (extend.items(1));\n                if (extStart.value) {\n                    result = (result | PdfExtend.Start);\n                }\n                if (extEnd.value) {\n                    result = (result | PdfExtend.End);\n                }\n            }\n            return result;\n        },\n        set: function (value) {\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            var extStart;\n            var extEnd;\n            if ((extend == null)) {\n                extStart = new PdfBoolean(false);\n                extEnd = new PdfBoolean(false);\n                extend = new PdfArray();\n                extend.add(extStart);\n                extend.add(extEnd);\n                this.shading.items.setValue(this.mDictionaryProperties.extend, extend);\n            }\n            else {\n                extStart = (extend.items(0));\n                extEnd = (extend.items(1));\n            }\n            // extStart.value = ((value && PdfExtend.Start) > 0);\n            // extEnd.value = ((value && PdfExtend.End) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Adds two points to each other.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.addPoints = function (point1, point2) {\n        var x = (point1.x + point2.x);\n        var y = (point1.y + point2.y);\n        var result = new PointF(x, y);\n        return result;\n    };\n    /**\n     * Subs the second point from the first one.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.subPoints = function (point1, point2) {\n        var x = (point1.x - point2.x);\n        var y = (point1.y - point2.y);\n        var result = new PointF(x, y);\n        return result;\n    };\n    /**\n     * Makes scalar multiplication of two points.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.mulPoints = function (point1, point2) {\n        var result = ((point1.x * point2.x) + (point1.y * point2.y));\n        return result;\n    };\n    /**\n     * Multiplies the point by the value specified.\n     * @param point The point1.\n     * @param value The value.\n     */\n    PdfLinearGradientBrush.prototype.mulPoint = function (point, value) {\n        point.x = (point.x * value);\n        point.y = (point.y * value);\n        return point;\n    };\n    /**\n     * Choose the point according to the angle.\n     * @param angle The angle.\n     */\n    PdfLinearGradientBrush.prototype.choosePoint = function (angle) {\n        var point = new PointF(0, 0);\n        //  Choose the correct point.\n        if ((angle < 90) && (angle > 0)) {\n            point = new PointF(this.mBoundaries.right, this.mBoundaries.bottom);\n        }\n        else if ((angle < 180) && (angle > 90)) {\n            point = new PointF(this.mBoundaries.left, this.mBoundaries.bottom);\n        }\n        else if ((angle < 270) && (angle > 180)) {\n            point = new PointF(this.mBoundaries.left, this.mBoundaries.top);\n        }\n        else if (angle > 270) {\n            point = new PointF(this.mBoundaries.right, this.mBoundaries.top);\n        }\n        else {\n            throw new Error('PdfException - Internal error.');\n        }\n        return point;\n    };\n    /**\n     * Sets the start and end points.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.setPoints = function (point1, point2) {\n        var points = new PdfArray();\n        points.add(new PdfNumber(point1.x));\n        points.add(new PdfNumber(this.updateY(point1.y)));\n        points.add(new PdfNumber(point2.x));\n        points.add(new PdfNumber(this.updateY(point2.y)));\n        this.shading.items.setValue(this.mDictionaryProperties.coords, points);\n    };\n    /**\n     * Updates y co-ordinate.\n     * @param y Y co-ordinate..\n     */\n    PdfLinearGradientBrush.prototype.updateY = function (y) {\n        if (y !== 0) {\n            return -y;\n        }\n        else {\n            return y;\n        }\n    };\n    //Overrides\n    /**\n     * Initializes the shading dictionary.\n     * @private\n     */\n    PdfLinearGradientBrush.prototype.initShading = function () {\n        this.colorSpace = PdfColorSpace.Rgb;\n        this.function = this.mColourBlend.getFunction(this.colorSpace);\n        this.shading.items.setValue(this.mDictionaryProperties.shadingType, new PdfNumber((ShadingType.Axial)));\n    };\n    //Overrides\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfLinearGradientBrush.prototype.clone = function () {\n        var brush = this;\n        brush.resetPatternDictionary(new PdfDictionary(this.patternDictionary));\n        brush.shading = new PdfDictionary();\n        brush.initShading();\n        brush.setPoints(brush.mPointStart, brush.mPointEnd);\n        if (brush !== null && brush instanceof PdfLinearGradientBrush) {\n            if ((this.matrix != null && typeof this.matrix !== 'undefined')) {\n                brush.matrix = this.matrix.clone();\n            }\n        }\n        if ((this.mColours != null && typeof this.mColours !== 'undefined')) {\n            brush.mColours = (this.mColours);\n        }\n        if ((this.blend != null && typeof this.blend !== 'undefined')) {\n            brush.blend = this.blend.clonePdfBlend();\n        }\n        else if ((this.interpolationColors != null && typeof this.interpolationColors !== 'undefined')) {\n            brush.interpolationColors = this.interpolationColors.cloneColorBlend();\n        }\n        brush.extend = this.extend;\n        this.cloneBackgroundValue(brush);\n        this.cloneAntiAliasingValue(brush);\n        return brush;\n    };\n    /**\n     * Resets the function.\n     * @public\n     */\n    PdfLinearGradientBrush.prototype.resetFunction = function () {\n        this.function = this.mColourBlend.getFunction(this.colorSpace);\n    };\n    return PdfLinearGradientBrush;\n}(PdfGradientBrush));\nexport { PdfLinearGradientBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfRadialGradientBrush.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from '../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfColorBlend } from './pdf-color-blend';\nimport { PdfGradientBrush } from './pdf-gradient-brush';\nimport { PdfExtend, ShadingType } from './enum';\n/**\n * `PdfRadialGradientBrush` Represent radial gradient brush.\n * @private\n */\nvar PdfRadialGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfRadialGradientBrush, _super);\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfRadialGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfRadialGradientBrush(centerStart, radiusStart, centerEnd, radiusEnd, colorStart, colorEnd) {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Local varaible to store the dictionary properties.\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        _this.initialize(colorStart, colorEnd);\n        if (radiusStart < 0) {\n            throw new Error('ArgumentOutOfRangeException : radiusStart - The radius cannot be less then zero.');\n        }\n        if (radiusEnd < 0) {\n            throw new Error('ArgumentOutOfRangeException : radiusEnd - The radius cannpt be less then zero.');\n        }\n        _this.mPointEnd = centerEnd;\n        _this.mPointStart = centerStart;\n        _this.mRadiusStart = radiusStart;\n        _this.mRadiusEnd = radiusEnd;\n        _this.setPoints(_this.mPointStart, _this.mPointEnd, _this.mRadiusStart, _this.mRadiusEnd);\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfRadialGradientBrush` class.\n     * @param color1 The color1.\n     * @param color2 The color2.\n     */\n    PdfRadialGradientBrush.prototype.initialize = function (color1, color2) {\n        this.mColour = [color1, color2];\n        this.mColourBlends = new PdfColorBlend(2);\n        this.mColourBlends.positions = [0, 1];\n        this.mColourBlends.colors = this.mColour;\n        this.initShading();\n    };\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"blend\", {\n        //Properties\n        /**\n         * Gets or sets a PdfBlend that specifies positions and factors that define a custom falloff for the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Blend');\n            }\n            if ((this.mColour == null && typeof this.mColour === 'undefined')) {\n                throw new Error('NotSupportedException : There is no starting and ending colours specified.');\n            }\n            this.mBlend = value;\n            this.mColourBlends = this.mBlend.generateColorBlend(this.mColour, this.colorSpace);\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"interpolationColors\", {\n        /**\n         * Gets or sets a ColorBlend that defines a multicolor radial gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColourBlends;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : InterpolationColors');\n            }\n            this.mBlend = null;\n            this.mColour = null;\n            this.mColourBlends = value;\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"linearColors\", {\n        /**\n         * Gets or sets the starting and ending colors of the radial gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColour;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : radial LinearColors');\n            }\n            if ((value.length < 2)) {\n                throw new Error('ArgumentException : The array is too small LinearColors');\n            }\n            if ((this.mColour == null && typeof this.mColour === 'undefined')) {\n                this.mColour = [value[0], value[1]];\n            }\n            else {\n                this.mColour[0] = value[0];\n                this.mColour[1] = value[1];\n            }\n            if ((this.mBlend == null && typeof this.mBlend === 'undefined')) {\n                //  Set correct colour blend.\n                this.mColourBlends = new PdfColorBlend(2);\n                this.mColourBlends.colors = this.mColour;\n                this.mColourBlends.positions = [0, 1];\n            }\n            else {\n                this.mColourBlends = this.mBlend.generateColorBlend(this.mColour, this.colorSpace);\n            }\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"rectangle\", {\n        /**\n         * Gets or sets the rectangle.\n         * @public\n         */\n        get: function () {\n            return this.mBoundaries;\n        },\n        set: function (value) {\n            this.mBoundaries = value;\n            this.bBox = PdfArray.fromRectangle(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"extend\", {\n        /**\n         * Gets or sets the value indicating whether the gradient\n         *  should extend starting and ending points.\n         * @public\n         */\n        get: function () {\n            var result1 = PdfExtend.None;\n            var extend1 = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            if (extend1 !== null && typeof extend1 !== 'undefined') {\n                var extStart = (extend1.items(0));\n                var extEnd = (extend1.items(1));\n                if (extStart.value) {\n                    result1 = (result1 | PdfExtend.Start);\n                }\n                if (extEnd.value) {\n                    result1 = (result1 | PdfExtend.End);\n                }\n            }\n            return result1;\n        },\n        set: function (value) {\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            var extStart;\n            var extEnd1;\n            if (extend == null && typeof extend === 'undefined') {\n                extStart = new PdfBoolean(false);\n                extEnd1 = new PdfBoolean(false);\n                extend = new PdfArray();\n                extend.add(extStart);\n                extend.add(extEnd1);\n                this.shading.items.setValue(this.mDictionaryProperties.extend, extend);\n            }\n            else {\n                extStart = (extend.items(0));\n                extEnd1 = (extend.items(1));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Sets the points.\n     * @param pointStart The point start.\n     * @param pointEnd The point end.\n     * @param radiusStart The radius start.\n     * @param radiusEnd The radius end.\n     */\n    PdfRadialGradientBrush.prototype.setPoints = function (pointStart, pointEnd, radiusStart, radiusEnd) {\n        var points = new PdfArray();\n        points.add(new PdfNumber(pointStart.x));\n        points.add(new PdfNumber(this.updateY(pointStart.y)));\n        points.add(new PdfNumber(radiusStart));\n        points.add(new PdfNumber(pointEnd.x));\n        points.add(new PdfNumber(this.updateY(pointEnd.y)));\n        if ((radiusStart !== radiusEnd)) {\n            points.add(new PdfNumber(radiusEnd));\n        }\n        else {\n            points.add(new PdfNumber(0));\n        }\n        this.shading.items.setValue(this.mDictionaryProperties.coords, points);\n    };\n    /**\n     * Update y co-ordinate.\n     * @param y Y co-ordinate.\n     */\n    PdfRadialGradientBrush.prototype.updateY = function (y) {\n        if (y !== 0) {\n            return -y;\n        }\n        else {\n            return y;\n        }\n    };\n    /**\n     * Initializess the shading dictionary.\n     * @private\n     */\n    PdfRadialGradientBrush.prototype.initShading = function () {\n        this.colorSpace = PdfColorSpace.Rgb;\n        this.function = this.mColourBlends.getFunction(this.colorSpace);\n        this.shading.items.setValue(this.mDictionaryProperties.shadingType, new PdfNumber((ShadingType.Radial)));\n    };\n    //Overrides\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfRadialGradientBrush.prototype.clone = function () {\n        var rBrush = this;\n        rBrush.resetPatternDictionary(new PdfDictionary(this.patternDictionary));\n        rBrush.shading = new PdfDictionary();\n        rBrush.initShading();\n        rBrush.setPoints(this.mPointStart, this.mPointEnd, this.mRadiusStart, this.mRadiusEnd);\n        if (rBrush instanceof PdfRadialGradientBrush) {\n            if ((this.matrix !== null && typeof this.matrix !== 'undefined')) {\n                rBrush.matrix = this.matrix.clone();\n            }\n        }\n        if ((this.mColour !== null && typeof this.mColour !== 'undefined')) {\n            rBrush.mColour = (this.mColour);\n        }\n        if ((this.blend !== null && typeof this.blend !== 'undefined')) {\n            rBrush.blend = this.blend.clonePdfBlend();\n        }\n        else if ((this.interpolationColors !== null && typeof this.interpolationColors !== 'undefined')) {\n            rBrush.interpolationColors = this.interpolationColors.cloneColorBlend();\n        }\n        rBrush.extend = this.extend;\n        this.cloneBackgroundValue(rBrush);\n        this.cloneAntiAliasingValue(rBrush);\n        return rBrush;\n    };\n    /**\n     * Resets the function.\n     * @public\n     */\n    PdfRadialGradientBrush.prototype.resetFunction = function () {\n        this.function = this.mColourBlends.getFunction(this.colorSpace);\n    };\n    return PdfRadialGradientBrush;\n}(PdfGradientBrush));\nexport { PdfRadialGradientBrush };\n","/**\n * public Enum for `PdfBorderOverlapStyle`.\n * @private\n */\nexport var PdfBorderOverlapStyle;\n(function (PdfBorderOverlapStyle) {\n    /**\n     * Specifies the type of `Overlap`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Overlap\"] = 0] = \"Overlap\";\n    /**\n     * Specifies the type of `Inside`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Inside\"] = 1] = \"Inside\";\n})(PdfBorderOverlapStyle || (PdfBorderOverlapStyle = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBorders, PdfPaddings } from './pdf-borders';\nimport { PdfBorderOverlapStyle } from './../../tables/light-tables/enum';\n/**\n * Base class for the `grid style`,\n */\nvar PdfGridStyleBase = /** @class */ (function () {\n    function PdfGridStyleBase() {\n    }\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundBrush;\n        },\n        set: function (value) {\n            this.gridBackgroundBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextBrush;\n        },\n        set: function (value) {\n            this.gridTextBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextPen;\n        },\n        set: function (value) {\n            this.gridTextPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridFont;\n        },\n        set: function (value) {\n            this.gridFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `background Image`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundImage;\n        },\n        set: function (value) {\n            this.gridBackgroundImage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyleBase;\n}());\nexport { PdfGridStyleBase };\n/**\n * `PdfGridStyle` class provides customization of the appearance for the 'PdfGrid'.\n */\nvar PdfGridStyle = /** @class */ (function (_super) {\n    __extends(PdfGridStyle, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGridStyle` class.\n     * @private\n     */\n    function PdfGridStyle() {\n        var _this = _super.call(this) || this;\n        _this.gridBorderOverlapStyle = PdfBorderOverlapStyle.Overlap;\n        _this.bAllowHorizontalOverflow = false;\n        _this.gridHorizontalOverflowType = PdfHorizontalOverflowType.LastPage;\n        return _this;\n    }\n    Object.defineProperty(PdfGridStyle.prototype, \"cellSpacing\", {\n        //Properties\n        /**\n         * Gets or sets the `cell spacing` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellSpacing === 'undefined') {\n                this.gridCellSpacing = 0;\n            }\n            return this.gridCellSpacing;\n        },\n        set: function (value) {\n            this.gridCellSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"horizontalOverflowType\", {\n        /**\n         * Gets or sets the type of the `horizontal overflow` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridHorizontalOverflowType;\n        },\n        set: function (value) {\n            this.gridHorizontalOverflowType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"allowHorizontalOverflow\", {\n        /**\n         * Gets or sets a value indicating whether to `allow horizontal overflow`.\n         * @private\n         */\n        get: function () {\n            return this.bAllowHorizontalOverflow;\n        },\n        set: function (value) {\n            this.bAllowHorizontalOverflow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n                this.gridCellPadding = value;\n            }\n            else {\n                this.gridCellPadding = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"borderOverlapStyle\", {\n        /**\n         * Gets or sets the `border overlap style` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridBorderOverlapStyle;\n        },\n        set: function (value) {\n            this.gridBorderOverlapStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyle;\n}(PdfGridStyleBase));\nexport { PdfGridStyle };\n/**\n * `PdfGridCellStyle` class provides customization of the appearance for the 'PdfGridCell'.\n */\nvar PdfGridCellStyle = /** @class */ (function (_super) {\n    __extends(PdfGridCellStyle, _super);\n    /**\n     * Initializes a new instance of the `PdfGridCellStyle` class.\n     * @private\n     */\n    function PdfGridCellStyle() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridCellBorders = PdfBorders.default;\n        return _this;\n    }\n    Object.defineProperty(PdfGridCellStyle.prototype, \"stringFormat\", {\n        //Properties\n        /**\n         * Gets the `string format` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"borders\", {\n        /**\n         * Gets or sets the `border` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridCellBorders;\n        },\n        set: function (value) {\n            this.gridCellBorders = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (this.gridCellPadding == null || typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            this.gridCellPadding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridCellStyle;\n}(PdfGridStyleBase));\nexport { PdfGridCellStyle };\n/**\n * `PdfGridRowStyle` class provides customization of the appearance for the `PdfGridRow`.\n */\nvar PdfGridRowStyle = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowStyle` class.\n     * @private\n     */\n    function PdfGridRowStyle() {\n        //\n    }\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBackgroundBrush = function (value) {\n        this.gridRowBackgroundBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.backgroundBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextBrush = function (value) {\n        this.gridRowTextBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextPen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextPen = function (value) {\n        this.gridRowTextPen = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textPen = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setFont = function (value) {\n        this.gridRowFont = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.font = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"border\", {\n        /**\n         * Gets or sets the `border` of the current row.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBorder === 'undefined') {\n                this.setBorder(new PdfBorders());\n            }\n            return this.gridRowBorder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBorder = function (value) {\n        this.gridRowBorder = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.borders = value;\n            }\n        }\n    };\n    /**\n     * sets the `parent row` of the current object.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `backgroundImage` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundImage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * sets the `backgroundImage` of the 'PdfGridCell'.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setBackgroundImage = function (value) {\n        this.gridRowBackgroundImage = value;\n    };\n    return PdfGridRowStyle;\n}());\nexport { PdfGridRowStyle };\n/**\n * public Enum for `PdfHorizontalOverflowType`.\n * @private\n */\nexport var PdfHorizontalOverflowType;\n(function (PdfHorizontalOverflowType) {\n    /**\n     * Specifies the type of `NextPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"NextPage\"] = 0] = \"NextPage\";\n    /**\n     * Specifies the type of `LastPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"LastPage\"] = 1] = \"LastPage\";\n})(PdfHorizontalOverflowType || (PdfHorizontalOverflowType = {}));\n","import { PdfGrid } from './pdf-grid';\nimport { PdfGridCellStyle } from './styles/style';\nimport { PdfStringLayouter } from './../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\nimport { RectangleF, PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfDashStyle, PdfLineCap } from './../../graphics/enum';\nimport { PdfBorderOverlapStyle } from './../tables/light-tables/enum';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfImage } from './../../graphics/images/pdf-image';\nimport { PdfBitmap } from './../../graphics/images/pdf-bitmap';\nimport { PdfTextWebLink } from './../../annotations/pdf-text-web-link';\nimport { PdfLayoutType } from './../../graphics/figures/enum';\nimport { PdfGridLayouter, PdfGridLayoutFormat } from './../../structured-elements/grid/layout/grid-layouter';\nimport { PdfLayoutParams } from '../../../implementation/graphics/figures/base/element-layouter';\n/**\n * `PdfGridCell` class represents the schema of a cell in a 'PdfGrid'.\n */\nvar PdfGridCell = /** @class */ (function () {\n    function PdfGridCell(row) {\n        /**\n         * `Width` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellWidth = 0;\n        /**\n         * `Height` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellHeight = 0;\n        /**\n         * `tempval`to stores current width .\n         * @default 0\n         * @private\n         */\n        this.tempval = 0;\n        this.fontSpilt = false;\n        /**\n         * Specifies weather the `cell is drawn`.\n         * @default true\n         * @private\n         */\n        this.finsh = true;\n        /**\n         * The `remaining height` of row span.\n         * @default 0\n         * @private\n         */\n        this.rowSpanRemainingHeight = 0;\n        this.hasRowSpan = false;\n        this.hasColSpan = false;\n        /**\n         * the 'isFinish' is set to page finish\n         */\n        this.isFinish = true;\n        /**\n         * The `present' to store the current cell.\n         * @default false\n         * @private\n         */\n        this.present = false;\n        this.gridRowSpan = 1;\n        this.colSpan = 1;\n        if (typeof row !== 'undefined') {\n            this.gridRow = row;\n        }\n    }\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeContinue\", {\n        //Properties\n        get: function () {\n            return this.internalIsCellMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsCellMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeContinue\", {\n        get: function () {\n            return this.internalIsRowMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsRowMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeStart\", {\n        get: function () {\n            return this.internalIsCellMergeStart;\n        },\n        set: function (value) {\n            this.internalIsCellMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeStart\", {\n        get: function () {\n            return this.internalIsRowMergeStart;\n        },\n        set: function (value) {\n            this.internalIsRowMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"remainingString\", {\n        /**\n         * Gets or sets the `remaining string` after the row split between pages.\n         * @private\n         */\n        get: function () {\n            return this.remaining;\n        },\n        set: function (value) {\n            this.remaining = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"FinishedDrawingCell\", {\n        /**\n         * Gets or sets the `FinishedDrawingCell` .\n         * @private\n         */\n        get: function () {\n            return this.isFinish;\n        },\n        set: function (value) {\n            this.isFinish = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `string format`.\n         * @private\n         */\n        get: function () {\n            if (this.format == null) {\n                this.format = new PdfStringFormat();\n            }\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"row\", {\n        /**\n         * Gets or sets the parent `row`.\n         * @private\n         */\n        get: function () {\n            return this.gridRow;\n        },\n        set: function (value) {\n            this.gridRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the cell.\n         * @private\n         */\n        get: function () {\n            return this.objectValue;\n        },\n        set: function (value) {\n            this.objectValue = value;\n            if (this.objectValue instanceof PdfGrid) {\n                this.row.grid.isSingleGrid = false;\n                var grid = this.objectValue;\n                grid.ParentCell = this;\n                this.objectValue.isChildGrid = true;\n                var rowCount = this.row.grid.rows.count;\n                for (var i = 0; i < rowCount; i++) {\n                    var row = this.row.grid.rows.getRow(i);\n                    var colCount = row.cells.count;\n                    for (var j = 0; j < colCount; j++) {\n                        var cell = row.cells.getCell(j);\n                        cell.parent = this;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"rowSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of rows that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.gridRowSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw new Error('ArgumentException : Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.gridRowSpan = value;\n                this.row.rowSpanExists = true;\n                this.row.grid.hasRowSpanSpan = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"style\", {\n        /**\n         * Gets or sets the cell `style`.\n         * @private\n         */\n        get: function () {\n            if (this.cellStyle == null) {\n                this.cellStyle = new PdfGridCellStyle();\n            }\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"height\", {\n        /**\n         * Gets the `height` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellHeight === 0) {\n                this.cellHeight = this.measureHeight();\n            }\n            return this.cellHeight;\n        },\n        set: function (value) {\n            this.cellHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"columnSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of columns that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.colSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw Error('Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.colSpan = value;\n                this.row.columnSpanExists = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"width\", {\n        /**\n         * Gets the `width` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellWidth === 0 || this.row.grid.isComplete) {\n                this.cellWidth = this.measureWidth();\n            }\n            return Math.round(this.cellWidth);\n        },\n        set: function (value) {\n            this.cellWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the width`.\n     * @private\n     */\n    PdfGridCell.prototype.measureWidth = function () {\n        // .. Calculate the cell text width.\n        // .....Add border widths, cell spacings and paddings to the width.\n        var width = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string') {\n            /* tslint:disable */\n            var slr = layouter.layout(this.objectValue, this.getTextFont(), this.stringFormat, new SizeF(Number.MAX_VALUE, Number.MAX_VALUE), false, new SizeF(0, 0));\n            width += slr.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            width = this.objectValue.size.width;\n            //width += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            width += this.objectValue.width;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            var result = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(0, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            width += result.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding != null) {\n                width += (this.style.cellPadding.left + this.style.cellPadding.right);\n            }\n            else {\n                width += (this.row.grid.style.cellPadding.left + this.row.grid.style.cellPadding.right);\n            }\n        }\n        else {\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    width += this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    width += this.style.cellPadding.right;\n                }\n            }\n            else {\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    width += this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    width += this.row.grid.style.cellPadding.right;\n                }\n            }\n        }\n        width += this.row.grid.style.cellSpacing;\n        return width;\n    };\n    /**\n     * Draw the `cell background`.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBackground = function (graphics, bounds) {\n        var backgroundBrush = this.getBackgroundBrush();\n        //graphics.isTemplateGraphics = true;\n        if (backgroundBrush != null) {\n            graphics.save();\n            graphics.drawRectangle(backgroundBrush, bounds.x, bounds.y, bounds.width, bounds.height);\n            graphics.restore();\n        }\n        if (this.style.backgroundImage != null) {\n            var image = this.getBackgroundImage();\n            graphics.drawImage(this.style.backgroundImage, bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    /**\n     * `Adjusts the text layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustContentLayoutArea = function (bounds) {\n        //Add Padding value to its Cell Bounds\n        var returnBounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (typeof this.style.cellPadding === 'undefined' || this.style.cellPadding == null) {\n                returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n                returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n                returnBounds.width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                returnBounds.height -= (this.gridRow.grid.style.cellPadding.bottom + this.gridRow.grid.style.cellPadding.top);\n                returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n            }\n            else {\n                returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n                returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n                returnBounds.width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n                returnBounds.height -= (this.style.cellPadding.bottom + this.style.cellPadding.top);\n                returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n                if (this.rowSpan === 1) {\n                    returnBounds.width -= (this.style.borders.left.width);\n                }\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (typeof this.gridRow.grid.style.cellPadding.left !== 'undefined' && this.gridRow.grid.style.cellPadding.hasLeftPad) {\n                    returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n                    returnBounds.width -= this.gridRow.grid.style.cellPadding.left;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.top !== 'undefined' && this.gridRow.grid.style.cellPadding.hasTopPad) {\n                    returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n                    returnBounds.height -= this.gridRow.grid.style.cellPadding.top;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.right !== 'undefined' && this.gridRow.grid.style.cellPadding.hasRightPad) {\n                    returnBounds.width -= this.gridRow.grid.style.cellPadding.right;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.bottom !== 'undefined' && this.gridRow.grid.style.cellPadding.hasBottomPad) {\n                    returnBounds.height -= this.gridRow.grid.style.cellPadding.bottom;\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n                    returnBounds.width -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n                    returnBounds.height -= this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    returnBounds.width -= this.style.cellPadding.right;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    returnBounds.height -= this.style.cellPadding.bottom;\n                }\n            }\n            returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n            returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n        }\n        return returnBounds;\n    };\n    /**\n     * `Draws` the specified graphics.\n     * @private\n     */\n    PdfGridCell.prototype.draw = function (graphics, bounds, cancelSubsequentSpans) {\n        var isrowbreak = false;\n        /*if (!this.row.grid.isSingleGrid)\n        {\n            //Check whether the Grid Span to Nextpage\n            if ((this.remainingString != null) || (PdfGridLayouter.repeatRowIndex != -1))\n            {\n                this.DrawParentCells(graphics, bounds, true);\n            }\n            else if (this.row.grid.rows.count > 1)\n            {\n                for (let i : number  = 0; i < this.row.grid.rows.count; i++)\n                {\n                    if (this.row == this.row.grid.rows.getRow(i))\n                    {\n                        if (this.row.grid.rows.getRow(i).rowBreakHeight > 0)\n                            isrowbreak = true;\n                        if ((i > 0) && (isrowbreak))\n                            this.DrawParentCells(graphics, bounds, false);\n                    }\n                }\n            }\n        } */\n        var result = null;\n        /*if (cancelSubsequentSpans)\n        {\n            //..Cancel all subsequent cell spans, if no space exists.\n            let currentCellIndex : number = this.row.cells.indexOf(this);\n            for (let i : number = currentCellIndex + 1; i <= currentCellIndex + this.colSpan; i++)\n            {\n                this.row.cells.getCell(i).isCellMergeContinue = false;\n                this.row.cells.getCell(i).isRowMergeContinue = false;\n            }\n            this.colSpan = 1;\n        }*/\n        //..Skip cells which were already covered by spanmap.\n        if (this.internalIsCellMergeContinue || this.internalIsRowMergeContinue) {\n            if (this.internalIsCellMergeContinue && this.row.grid.style.allowHorizontalOverflow) {\n                if ((this.row.rowOverflowIndex > 0 && (this.row.cells.indexOf(this) != this.row.rowOverflowIndex + 1)) || (this.row.rowOverflowIndex == 0 && this.internalIsCellMergeContinue)) {\n                    return result;\n                }\n            }\n            else {\n                return result;\n            }\n        }\n        //Adjust bounds with Row and Column Spacing\n        bounds = this.adjustOuterLayoutArea(bounds, graphics);\n        this.drawCellBackground(graphics, bounds);\n        var textPen = this.getTextPen();\n        var textBrush = this.getTextBrush();\n        if (typeof textPen === 'undefined' && typeof textBrush === 'undefined') {\n            textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        }\n        var font = this.getTextFont();\n        var strFormat = this.getStringFormat();\n        var innerLayoutArea = bounds;\n        if (innerLayoutArea.height >= graphics.clientSize.height) {\n            // If to break row to next page.\n            if (this.row.grid.allowRowBreakAcrossPages) {\n                innerLayoutArea.height -= innerLayoutArea.y;\n                if (typeof this._rowHeight !== 'undefined' && this._rowHeight !== null && innerLayoutArea.height > this._rowHeight) {\n                    innerLayoutArea.height = this._rowHeight;\n                }\n                //bounds.height -= bounds.y;\n                // if(this.row.grid.isChildGrid)\n                // {\n                //     innerLayoutArea.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n                // }\n            }\n            // if user choose to cut the row whose height is more than page height.\n            // else\n            // {\n            //     innerLayoutArea.height = graphics.clientSize.height;\n            //     bounds.height = graphics.clientSize.height;\n            // }\n        }\n        innerLayoutArea = this.adjustContentLayoutArea(innerLayoutArea);\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var temp = void 0;\n            var layoutRectangle = void 0;\n            if (innerLayoutArea.height < font.height)\n                layoutRectangle = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, font.height);\n            else\n                layoutRectangle = innerLayoutArea;\n            if (innerLayoutArea.height < font.height && this.row.grid.isChildGrid && this.row.grid.ParentCell != null) {\n                var height = layoutRectangle.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom - this.row.grid.style.cellPadding.bottom;\n                if (this.row.grid.splitChildRowIndex != -1) {\n                    this.fontSpilt = true;\n                    this.row.rowFontSplit = true;\n                }\n                if (height > 0 && height < font.height)\n                    layoutRectangle.height = height;\n                // else if (height + this.row.grid.style.cellPadding.bottom > 0 && height + this.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = height + this.row.grid.style.cellPadding.bottom;\n                // else if (bounds.height < font.height)\n                //     layoutRectangle.height = bounds.height;\n                // else if (bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;                        \n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                layoutRectangle.width -= this.gridRow.grid.style.cellSpacing;\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            if (this.isFinish) {\n                // if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined'){\n                //     this.remaining = '';\n                //     graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                // } else {\n                temp = this.remaining === '' ? this.remaining : this.objectValue;\n                graphics.drawString(temp, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined') {\n                    this.remaining = '';\n                    //graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n            }\n            else {\n                if (typeof this.remaining == 'undefined' || this.remaining === null) {\n                    this.remaining = '';\n                }\n                if (this.row.repeatFlag) {\n                    graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n                //  else {\n                //     if(this.row.grid.ParentCell.row.repeatFlag) {\n                //         graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);                    \n                //     } else {\n                //         layoutRectangle.height = this.row.height;\n                //         graphics.drawString((this.objectValue as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                //         bounds.height = this.row.height;\n                //     }\n                //  }\n                this.isFinish = true;\n                //graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n            }\n            result = graphics.stringLayoutResult;\n            // if(this.row.grid.isChildGrid && this.row.rowBreakHeight > 0 && result !=null) {\n            //     bounds.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n            // }\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var childGrid = this.objectValue;\n            childGrid.isChildGrid = true;\n            childGrid.ParentCell = this;\n            var layoutRect = void 0;\n            layoutRect = innerLayoutArea;\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            // layoutRect = bounds;\n            // if (this.style.cellPadding != null){\n            //     layoutRect = bounds;            \n            // } else if((this.row.grid.style.cellPadding != null) && (childGrid.style.cellPadding.bottom === 0.5) && (childGrid.style.cellPadding.top === 0.5)\n            //                               && (childGrid.style.cellPadding.left === 5.76) && (childGrid.style.cellPadding.right === 5.76)\n            //                               && (this.gridRow.grid.style.cellSpacing === 0) && (childGrid.style.cellSpacing === 0)) {\n            //     layoutRect = innerLayoutArea;\n            // }\n            // if(this.objectValue.style.cellPadding != null && typeof this.objectValue.style.cellPadding !== 'undefined'){\n            //     layoutRect = bounds;\n            // }           \n            var layouter = new PdfGridLayouter(childGrid);\n            var format = new PdfGridLayoutFormat();\n            if (this.row.grid.LayoutFormat != null)\n                format = this.row.grid.LayoutFormat;\n            else\n                format.layout = PdfLayoutType.Paginate;\n            var param = new PdfLayoutParams();\n            if (graphics.layer != null) {\n                // Define layout parameters.\n                param.page = graphics.page;\n                param.bounds = layoutRect;\n                param.format = format;\n                //Set the span \n                childGrid.setSpan();\n                childGrid.checkSpan();\n                // Draw the child grid.\n                var childGridResult = layouter.Layouter(param);\n                //let childGridResult : PdfLayoutResult = layouter.innerLayout(param);\n                this.value = childGrid;\n                if (this.row.grid.splitChildRowIndex !== -1) {\n                    this.height = this.row.rowBreakHeightValue;\n                }\n                if (param.page != childGridResult.page) //&& (isWidthGreaterthanParent != true))\n                 {\n                    childGridResult.bounds.height = this.row.rowBreakHeightValue;\n                    if (this.row.rowBreakHeight == 0)\n                        this.row.NestedGridLayoutResult = childGridResult;\n                    else\n                        this.row.rowBreakHeight = this.row.rowBreakHeightValue;\n                    //bounds.height = this.row.rowBreakHeight;\n                    //After drawing paginated nested grid, the bounds of the parent grid in start page should be corrected for borders.\n                    //bounds.height = graphics.clientSize.height - bounds.y;\n                }\n            }\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            var imageBounds = void 0;\n            if (this.objectValue.width <= innerLayoutArea.width) {\n                imageBounds = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, this.objectValue.width, innerLayoutArea.height);\n            }\n            else {\n                imageBounds = innerLayoutArea;\n            }\n            graphics.drawImage(this.objectValue, imageBounds.x, imageBounds.y, imageBounds.width, imageBounds.height);\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            this.objectValue.draw(graphics.currentPage, innerLayoutArea);\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            this.objectValue = \"\";\n            graphics.drawString(this.objectValue, font, textPen, textBrush, innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, innerLayoutArea.height, strFormat);\n            if (this.style.cellPadding != null && this.style.cellPadding.bottom == 0 && this.style.cellPadding.left == 0 && this.style.cellPadding.right == 0 && this.style.cellPadding.top == 0) {\n                bounds.width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n        }\n        if (this.style.borders != null) {\n            if (!this.fontSpilt)\n                this.drawCellBorders(graphics, bounds);\n            else {\n                if (this.row.grid.ParentCell.row.grid.splitChildRowIndex != -1) {\n                    this.row.rowFontSplit = false;\n                    this.drawCellBorders(graphics, bounds);\n                }\n            }\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Draws the `cell border` constructed by drawing lines.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBorders = function (graphics, bounds) {\n        if (this.row.grid.style.borderOverlapStyle === PdfBorderOverlapStyle.Inside) {\n            bounds.x += this.style.borders.left.width;\n            bounds.y += this.style.borders.top.width;\n            bounds.width -= this.style.borders.right.width;\n            bounds.height -= this.style.borders.bottom.width;\n        }\n        var p1 = new PointF(bounds.x, bounds.y + bounds.height);\n        var p2 = new PointF(bounds.x, bounds.y);\n        var pen = this.cellStyle.borders.left;\n        if (this.cellStyle.borders.left.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        // SetTransparency(ref graphics, pen);\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x + bounds.width, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.right;\n        if ((bounds.x + bounds.width) > (graphics.clientSize.width - (pen.width / 2))) {\n            p1 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y);\n            p2 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y + bounds.height);\n        }\n        if (this.cellStyle.borders.right.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y);\n        pen = this.cellStyle.borders.top;\n        if (this.cellStyle.borders.top.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        p2 = new PointF(bounds.x, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.bottom;\n        if ((bounds.y + bounds.height) > (graphics.clientSize.height - (pen.width / 2))) {\n            p1 = new PointF((bounds.x + bounds.width), (graphics.clientSize.height - (pen.width / 2)));\n            p2 = new PointF(bounds.x, (graphics.clientSize.height - (pen.width / 2)));\n        }\n        if (this.cellStyle.borders.bottom.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n    };\n    // private setTransparency(graphics : PdfGraphics, pen : PdfPen) : void {\n    //     let alpha : number = (pen.color.a / 255) as number;\n    //     graphics.save();\n    //     graphics.setTransparency(alpha);\n    // }\n    /**\n     * `Adjusts the outer layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustOuterLayoutArea = function (bounds, g) {\n        var isHeader = false;\n        var cellSpacing = this.row.grid.style.cellSpacing;\n        if (cellSpacing > 0) {\n            bounds = new RectangleF(bounds.x + cellSpacing, bounds.y + cellSpacing, bounds.width - cellSpacing, bounds.height - cellSpacing);\n        }\n        var currentColIndex = this.row.cells.indexOf(this);\n        if (this.columnSpan > 1 || (this.row.rowOverflowIndex > 0 && (currentColIndex == this.row.rowOverflowIndex + 1) && this.isCellMergeContinue)) {\n            var span = this.columnSpan;\n            if (span == 1 && this.isCellMergeContinue) {\n                for (var j = currentColIndex + 1; j < this.row.grid.columns.count; j++) {\n                    if (this.row.cells.getCell(j).isCellMergeContinue)\n                        span++;\n                    else\n                        break;\n                }\n            }\n            var totalWidth = 0;\n            for (var i = currentColIndex; i < currentColIndex + span; i++) {\n                if (this.row.grid.style.allowHorizontalOverflow) {\n                    var width = void 0;\n                    var compWidth = this.row.grid.size.width < g.clientSize.width ? this.row.grid.size.width : g.clientSize.width;\n                    if (this.row.grid.size.width > g.clientSize.width) {\n                        width = bounds.x + totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    else {\n                        width = totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    if (width > compWidth) {\n                        break;\n                    }\n                }\n                totalWidth += this.row.grid.columns.getColumn(i).width;\n            }\n            totalWidth -= this.row.grid.style.cellSpacing;\n            bounds.width = totalWidth;\n        }\n        if (this.rowSpan > 1 || this.row.rowSpanExists) {\n            var span = this.rowSpan;\n            var currentRowIndex = this.row.grid.rows.rowCollection.indexOf(this.row);\n            if (currentRowIndex == -1) {\n                currentRowIndex = this.row.grid.headers.indexOf(this.row);\n                if (currentRowIndex != -1) {\n                    isHeader = true;\n                }\n            }\n            // if (span == 1 && this.isCellMergeContinue) {\n            //         for (let j : number = currentRowIndex + 1; j < this.row.grid.rows.count; j++)\n            //         {\n            //             let flag : boolean = (isHeader ? this.row.grid.headers.getHeader(j).cells.getCell(currentColIndex).isCellMergeContinue : this.row.grid.rows.getRow(j).cells.getCell(currentColIndex).isCellMergeContinue);\n            //             if (flag)\n            //                 span++;\n            //             else\n            //                 break;\n            //         }\n            // }\n            var totalHeight = 0;\n            var max = 0;\n            for (var i = currentRowIndex; i < currentRowIndex + span; i++) {\n                totalHeight += (isHeader ? this.row.grid.headers.getHeader(i).height : this.row.grid.rows.getRow(i).height);\n                var row = this.row.grid.rows.getRow(i);\n                var rowIndex = this.row.grid.rows.rowCollection.indexOf(row);\n                /*if (this.rowSpan > 1)\n                    {\n                        for (let k : number = 0; k < this.row.cells.count; k++) {\n                            let cell : PdfGridCell = this.row.cells.getCell(k);\n                            if(cell.rowSpan>1)\n                            {\n                                let tempHeight : number =0;\n                                \n                                for (let j :number = i; j < i +cell.rowSpan; j++)\n                                {\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = false;\n                                    tempHeight += this.row.grid.rows.getRow(j).height;\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = true;\n                                }\n                                //To check the Row spanned cell height is greater than the total spanned row height.\n                                if(cell.height>tempHeight)\n                                {\n                                    if (max < (cell.height - tempHeight))\n                                    {\n                                        max = cell.height - tempHeight;\n                                        if (this.rowSpanRemainingHeight != 0 && max > this.rowSpanRemainingHeight)\n                                        {\n                                            max += this.rowSpanRemainingHeight;\n                                        }\n                                        let index :number = row.cells.indexOf(cell);\n                                        //set the m_rowspanRemainingHeight to last rowspanned row.\n                                        this.row.grid.rows.getRow((rowIndex +cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight = max;\n                                        this.rowSpanRemainingHeight = this.row.grid.rows.getRow((rowIndex + cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (!this.row.grid.rows.getRow(i).isRowSpanRowHeightSet)\n                    this.row.grid.rows.getRow(i).isRowHeightSet = true;*/\n            }\n            var cellIndex = this.row.cells.indexOf(this);\n            totalHeight -= this.row.grid.style.cellSpacing;\n            // if (this.row.cells.getCell(cellIndex).height > totalHeight && (!this.row.grid.rows.getRow((currentRowIndex + span) - 1).isRowHeightSet)) {\n            //      this.row.grid.rows.getRow((currentRowIndex + span) - 1).cells.getCell(cellIndex).rowSpanRemainingHeight = this.row.cells.getCell(cellIndex).height - totalHeight;\n            //      totalHeight = this.row.cells.getCell(cellIndex).height;\n            //      bounds.height = totalHeight;\n            // } else {\n            bounds.height = totalHeight;\n            //  }\n            if (!this.row.rowMergeComplete) {\n                bounds.height = totalHeight;\n            }\n        }\n        return bounds;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `text font`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextFont = function () {\n        if (typeof this.style.font !== 'undefined' && this.style.font != null) {\n            return this.style.font;\n        }\n        else if (typeof this.row.style.font !== 'undefined' && this.row.style.font != null) {\n            return this.row.style.font;\n        }\n        else if (typeof this.row.grid.style.font !== 'undefined' && this.row.grid.style.font != null) {\n            return this.row.grid.style.font;\n        }\n        else {\n            return PdfDocument.defaultFont;\n        }\n    };\n    /**\n     * Gets the `text brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextBrush = function () {\n        if (typeof this.style.textBrush !== 'undefined' && this.style.textBrush != null) {\n            return this.style.textBrush;\n        }\n        else if (typeof this.row.style.textBrush !== 'undefined' && this.row.style.textBrush != null) {\n            return this.row.style.textBrush;\n        }\n        else {\n            return this.row.grid.style.textBrush;\n        }\n    };\n    /**\n     * Gets the `text pen`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextPen = function () {\n        if (typeof this.style.textPen !== 'undefined' && this.style.textPen != null) {\n            return this.style.textPen;\n        }\n        else if (typeof this.row.style.textPen !== 'undefined' && this.row.style.textPen != null) {\n            return this.row.style.textPen;\n        }\n        else {\n            return this.row.grid.style.textPen;\n        }\n    };\n    /**\n     * Gets the `background brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundBrush = function () {\n        if (typeof this.style.backgroundBrush !== 'undefined' && this.style.backgroundBrush != null) {\n            return this.style.backgroundBrush;\n        }\n        else if (typeof this.row.style.backgroundBrush !== 'undefined' && this.row.style.backgroundBrush != null) {\n            return this.row.style.backgroundBrush;\n        }\n        else {\n            return this.row.grid.style.backgroundBrush;\n        }\n    };\n    /**\n     * Gets the `background image`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundImage = function () {\n        if (typeof this.style.backgroundImage !== 'undefined' && this.style.backgroundImage != null) {\n            return this.style.backgroundImage;\n        }\n        else if (typeof this.row.style.backgroundImage !== 'undefined' && this.row.style.backgroundImage != null) {\n            return this.row.style.backgroundImage;\n        }\n        else {\n            return this.row.grid.style.backgroundImage;\n        }\n    };\n    /**\n     * Gets the current `StringFormat`.\n     * @private\n     */\n    PdfGridCell.prototype.getStringFormat = function () {\n        if (typeof this.style.stringFormat !== 'undefined' && this.style.stringFormat != null) {\n            return this.style.stringFormat;\n        }\n        else {\n            return this.stringFormat;\n        }\n    };\n    /**\n     * Calculates the `height`.\n     * @private\n     */\n    PdfGridCell.prototype.measureHeight = function () {\n        // .. Calculate the cell text height.\n        // .....Add border widths, cell spacings and paddings to the height.\n        var width = this.calculateWidth();\n        // //check whether the Current PdfGridCell has padding\n        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n            width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            //width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        else {\n            width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n            width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        var height = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var currentValue = this.objectValue;\n            /* tslint:disable */\n            if (!this.isFinish)\n                currentValue = !(this.remaining === null || this.remaining === '' ||\n                    typeof this.remaining === 'undefined') ? this.remaining : this.objectValue;\n            var slr = null;\n            var cellIndex = this.row.cells.indexOf(this);\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n            }\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                if (this.gridRow.grid.isChildGrid) {\n                    if (width < 0) {\n                        this.tempval = width;\n                        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                            this.tempval += (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                        }\n                        else {\n                            this.tempval += (this.style.cellPadding.right + this.style.cellPadding.left);\n                            this.tempval += (this.style.borders.left.width + this.style.borders.right.width);\n                        }\n                    }\n                    else {\n                        this.tempval = width;\n                    }\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(this.tempval, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n                else {\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n            }\n            /* tslint:enable */\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var cellIndex = this.row.cells.indexOf(this);\n            var internalWidth = 0;\n            if ((this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.style.cellPadding.right;\n                }\n            }\n            else if ((this.row.grid.style.cellPadding != null || typeof this.row.grid.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.right;\n                }\n            }\n            else {\n                internalWidth = this.calculateWidth();\n            }\n            this.objectValue.tempWidth = internalWidth;\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                height = this.objectValue.size.height;\n            }\n            else {\n                height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n            }\n            if (this.gridRow.grid.style.cellSpacing !== 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n                //height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (this.row.grid.style.cellPadding.hasBottomPad && typeof this.row.grid.style.cellPadding.bottom !== 'undefined') {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            height += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            height += this.objectValue.height;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            /* tslint:disable */\n            var slr = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            height += slr.actualSize.height;\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            }\n            else {\n                width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        //Add padding top and bottom value to height\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            else {\n                height += (this.style.cellPadding.top + this.style.cellPadding.bottom);\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (typeof this.row.grid.style.cellPadding.bottom !== 'undefined' && this.row.grid.style.cellPadding.hasBottomPad) {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    height += this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    height += this.style.cellPadding.bottom;\n                }\n            }\n        }\n        height += this.row.grid.style.cellSpacing;\n        return height;\n    };\n    /**\n     * return the calculated `width` of the cell.\n     * @private\n     */\n    PdfGridCell.prototype.calculateWidth = function () {\n        var cellIndex = this.row.cells.indexOf(this);\n        var rowindex = this.row.grid.rows.rowCollection.indexOf(this.row);\n        var columnSpan = this.columnSpan;\n        var width = 0;\n        if (columnSpan === 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n            }\n        }\n        else if (columnSpan > 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n                if ((i + 1) < columnSpan) {\n                    this.row.cells.getCell(cellIndex + i + 1).hasColSpan = true;\n                }\n            }\n        }\n        if (this.parent != null && this.parent.row.width > 0) {\n            if ((this.row.grid.isChildGrid) && this.parent != null && (this.row.width > this.parent.row.width)) {\n                width = 0;\n                for (var j = 0; j < this.parent.columnSpan; j++) {\n                    width += this.parent.row.grid.columns.getColumn(j).width;\n                }\n                width = width / this.row.cells.count;\n            }\n        }\n        return width;\n    };\n    return PdfGridCell;\n}());\nexport { PdfGridCell };\n/**\n * `PdfGridCellCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridCell' objects.\n * @private\n */\nvar PdfGridCellCollection = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridCellCollection` class with the row.\n     * @private\n     */\n    function PdfGridCellCollection(row) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.cells = [];\n        this.gridRow = row;\n    }\n    //Properties\n    /**\n     * Gets the current `cell`.\n     * @private\n     */\n    PdfGridCellCollection.prototype.getCell = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException');\n        }\n        return this.cells[index];\n    };\n    Object.defineProperty(PdfGridCellCollection.prototype, \"count\", {\n        /**\n         * Gets the cells `count`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.cells.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridCellCollection.prototype.add = function (cell) {\n        if (typeof cell === 'undefined') {\n            var tempcell = new PdfGridCell();\n            this.add(tempcell);\n            return cell;\n        }\n        else {\n            cell.row = this.gridRow;\n            this.cells.push(cell);\n        }\n    };\n    /**\n     * Returns the `index of` a particular cell in the collection.\n     * @private\n     */\n    PdfGridCellCollection.prototype.indexOf = function (cell) {\n        return this.cells.indexOf(cell);\n    };\n    return PdfGridCellCollection;\n}());\nexport { PdfGridCellCollection };\n","import { PdfGridCell } from './pdf-grid-cell';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\n/**\n * `PdfGridColumn` class represents the schema of a column in a 'PdfGrid'.\n */\nvar PdfGridColumn = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumn` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumn(grid) {\n        /**\n         * The `width` of the column.\n         * @default 0\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridColumn.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the 'PdfGridColumn'.\n         * @private\n         */\n        get: function () {\n            return this.columnWidth;\n        },\n        set: function (value) {\n            this.isCustomWidth = true;\n            this.columnWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumn.prototype, \"format\", {\n        /**\n         * Gets or sets the information about the text `formatting`.\n         * @private\n         */\n        get: function () {\n            if (this.stringFormat == null) {\n                this.stringFormat = new PdfStringFormat(); //GetDefaultFormat();\n            }\n            return this.stringFormat;\n        },\n        set: function (value) {\n            this.stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridColumn;\n}());\nexport { PdfGridColumn };\n/**\n * `PdfGridColumnCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridColumn' objects.\n * @private\n */\nvar PdfGridColumnCollection = /** @class */ (function () {\n    //properties\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumnCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumnCollection(grid) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.internalColumns = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n        this.internalColumns = [];\n    }\n    //Iplementation\n    /**\n     * `Add` a new column to the 'PdfGrid'.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.add = function (count) {\n        // public add(column : PdfGridColumn) : void\n        // public add(arg : number|PdfGridColumn) : void {\n        // if (typeof arg === 'number') {\n        for (var i = 0; i < count; i++) {\n            this.internalColumns.push(new PdfGridColumn(this.grid));\n            for (var index = 0; index < this.grid.rows.count; index++) {\n                var row = this.grid.rows.getRow(index);\n                var cell = new PdfGridCell();\n                cell.value = '';\n                row.cells.add(cell);\n            }\n        }\n        // } else {\n        //     let column : PdfGridColumn = new PdfGridColumn(this.grid);\n        //     this.columns.push(column);\n        //     return column;\n        // }\n    };\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of columns` in the 'PdfGrid'.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.internalColumns.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"width\", {\n        /**\n         * Gets the `widths`.\n         * @private\n         */\n        get: function () {\n            if (this.columnWidth === 0) {\n                this.columnWidth = this.measureColumnsWidth();\n            }\n            if (this.grid.initialWidth !== 0 && this.columnWidth !== this.grid.initialWidth && !this.grid.style.allowHorizontalOverflow) {\n                this.columnWidth = this.grid.initialWidth;\n                this.grid.isPageWidth = true;\n            }\n            return this.columnWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"columns\", {\n        /**\n         * Gets the `array of PdfGridColumn`.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.internalColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfGridColumn` from the specified index.[Read-Only]\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getColumn = function (index) {\n        if (index >= 0 && index <= this.columns.length) {\n            return this.columns[index];\n        }\n        else {\n            throw Error('can not get the column from the index: ' + index);\n        }\n    };\n    //Implementation\n    /**\n     * `Calculates the column widths`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.measureColumnsWidth = function () {\n        var totalWidth = 0;\n        this.grid.measureColumnsWidth();\n        for (var i = 0, count = this.internalColumns.length; i < count; i++) {\n            totalWidth += this.internalColumns[i].width;\n        }\n        return totalWidth;\n    };\n    /**\n     * Gets the `widths of the columns`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getDefaultWidths = function (totalWidth) {\n        var widths = [];\n        var summ = 0.0;\n        var subFactor = this.count;\n        for (var i = 0; i < this.count; i++) {\n            if (this.grid.isPageWidth && totalWidth >= 0 && !this.internalColumns[i].isCustomWidth) {\n                this.internalColumns[i].width = 0;\n            }\n            else {\n                widths[i] = this.internalColumns[i].width;\n                if (this.internalColumns[i].width > 0 && this.internalColumns[i].isCustomWidth) {\n                    totalWidth -= this.internalColumns[i].width;\n                    subFactor--;\n                }\n                else {\n                    widths[i] = 0;\n                }\n            }\n        }\n        for (var i = 0; i < this.count; i++) {\n            var width = totalWidth / subFactor;\n            if (widths[i] <= 0) {\n                widths[i] = width;\n            }\n        }\n        return widths;\n    };\n    return PdfGridColumnCollection;\n}());\nexport { PdfGridColumnCollection };\n","import { PdfGridCell, PdfGridCellCollection } from './pdf-grid-cell';\nimport { PdfGridRowStyle } from './styles/style';\n/**\n * `PdfGridRow` class provides customization of the settings for the particular row.\n */\nvar PdfGridRow = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRow` class with the parent grid.\n     * @private\n     */\n    function PdfGridRow(grid) {\n        /**\n         * Stores the index of the overflowing row.\n         * @private\n         */\n        this.gridRowOverflowIndex = 0;\n        /**\n         * The `height` of the row.\n         * @private\n         */\n        this.rowHeight = 0;\n        /**\n         * The `width` of the row.\n         * @private\n         */\n        this.rowWidth = 0;\n        /**\n         * The `isFinish` of the row.\n         * @private\n         */\n        this.isrowFinish = false;\n        /**\n         * Check whether the Row span row height `is set explicitly`.\n         * @default false\n         * @public\n         */\n        this.isRowSpanRowHeightSet = false;\n        /**\n         * The `page count` of the row.\n         * @public\n         */\n        this.noOfPageCount = 0;\n        /**\n         * Check whether the row height `is set explicitly`.\n         * @default false\n         * @private\n         */\n        this.isRowHeightSet = false;\n        this.isPageBreakRowSpanApplied = false;\n        /**\n         * Check weather the row merge `is completed` or not.\n         * @default true\n         * @private\n         */\n        this.isRowMergeComplete = true;\n        this.repeatFlag = false;\n        this.rowFontSplit = false;\n        this.isHeaderRow = false;\n        this.pdfGrid = grid;\n    }\n    Object.defineProperty(PdfGridRow.prototype, \"rowSpanExists\", {\n        //Properties\n        /**\n         * Gets or sets a value indicating [`row span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bRowSpanExists;\n        },\n        set: function (value) {\n            this.bRowSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"cells\", {\n        /**\n         * Gets the `cells` from the selected row.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.gridCells == null) {\n                this.gridCells = new PdfGridCellCollection(this);\n            }\n            return this.gridCells;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"grid\", {\n        /**\n         * Gets or sets the parent `grid`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGrid;\n        },\n        set: function (value) {\n            this.pdfGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"style\", {\n        /**\n         * Gets or sets the row `style`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.rowStyle === 'undefined') {\n                this.rowStyle = new PdfGridRowStyle();\n                this.rowStyle.setParent(this);\n            }\n            return this.rowStyle;\n        },\n        set: function (value) {\n            this.rowStyle = value;\n            for (var i = 0; i < this.cells.count; i++) {\n                this.cells.getCell(i).style.borders = value.border;\n                if (typeof value.font !== 'undefined') {\n                    this.cells.getCell(i).style.font = value.font;\n                }\n                if (typeof value.backgroundBrush !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundBrush = value.backgroundBrush;\n                }\n                if (typeof value.backgroundImage !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundImage = value.backgroundImage;\n                }\n                if (typeof value.textBrush !== 'undefined') {\n                    this.cells.getCell(i).style.textBrush = value.textBrush;\n                }\n                if (typeof value.textPen !== 'undefined') {\n                    this.cells.getCell(i).style.textPen = value.textPen;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowBreakHeight\", {\n        /**\n         * `Height` of the row yet to be drawn after split.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBreakHeight === 'undefined') {\n                this.gridRowBreakHeight = 0;\n            }\n            return this.gridRowBreakHeight;\n        },\n        set: function (value) {\n            this.gridRowBreakHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowOverflowIndex\", {\n        /**\n         * `over flow index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.gridRowOverflowIndex;\n        },\n        set: function (value) {\n            this.gridRowOverflowIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the row.\n         * @private\n         */\n        get: function () {\n            if (!this.isRowHeightSet) {\n                this.rowHeight = this.measureHeight();\n            }\n            return this.rowHeight;\n        },\n        set: function (value) {\n            this.rowHeight = value;\n            this.isRowHeightSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the row.\n         * @private\n         */\n        get: function () {\n            if (this.rowWidth === 0 || typeof this.rowWidth === 'undefined') {\n                this.rowWidth = this.measureWidth();\n            }\n            return this.rowWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"NestedGridLayoutResult\", {\n        /**\n         * Gets or sets the row `Nested grid Layout Result`.\n         * @private\n         */\n        get: function () {\n            return this.gridResult;\n        },\n        set: function (value) {\n            this.gridResult = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"columnSpanExists\", {\n        /**\n         * Gets or sets a value indicating [`column span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bColumnSpanExists;\n        },\n        set: function (value) {\n            this.bColumnSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowMergeComplete\", {\n        /**\n         * Check whether the Row `has row span or row merge continue`.\n         * @private\n         */\n        get: function () {\n            return this.isRowMergeComplete;\n        },\n        set: function (value) {\n            this.isRowMergeComplete = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowIndex\", {\n        /**\n         * Returns `index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.grid.rows.rowCollection.indexOf(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the height`.\n     * @private\n     */\n    PdfGridRow.prototype.measureHeight = function () {\n        var rowSpanRemainingHeight = 0;\n        var rowHeight;\n        var maxHeight = 0;\n        if (this.cells.getCell(0).rowSpan > 1) {\n            rowHeight = 0;\n        }\n        else {\n            rowHeight = this.cells.getCell(0).height;\n        }\n        for (var i = 0; i < this.cells.count; i++) {\n            var cell = this.cells.getCell(i);\n            //get the maximum rowspan remaining height.\n            if (cell.rowSpanRemainingHeight > rowSpanRemainingHeight) {\n                rowSpanRemainingHeight = cell.rowSpanRemainingHeight;\n            }\n            //skip the cell if row spanned.\n            // if (cell.isRowMergeContinue) {\n            //     continue;\n            // }\n            // if (!cell.isRowMergeContinue) {\n            //     this.rowMergeComplete = false;\n            // }\n            this.rowMergeComplete = false;\n            if (cell.rowSpan > 1) {\n                var cellIn = i;\n                var rowin = this.isHeaderRow ? this.grid.headers.indexOf(this) : this.grid.rows.rowCollection.indexOf(this);\n                for (var j = 0; j < cell.rowSpan; j++) {\n                    if ((j + 1) < cell.rowSpan) {\n                        (this.isHeaderRow ? this.grid.headers.getHeader(rowin + j + 1) : this.grid.rows.getRow(rowin + j + 1)).cells.getCell(cellIn).hasRowSpan = true;\n                    }\n                }\n                if (maxHeight < cell.height) {\n                    maxHeight = cell.height;\n                }\n                continue;\n            }\n            rowHeight = Math.max(rowHeight, cell.height);\n        }\n        if (maxHeight > rowHeight) {\n            rowHeight = maxHeight;\n        }\n        if (rowHeight === 0) {\n            rowHeight = maxHeight;\n        }\n        else if (rowSpanRemainingHeight > 0) {\n            rowHeight += rowSpanRemainingHeight;\n        }\n        return rowHeight;\n    };\n    PdfGridRow.prototype.measureWidth = function () {\n        var rowWid = 0;\n        for (var i = 0; i < this.grid.columns.count; i++) {\n            var column = this.grid.columns.getColumn(i);\n            rowWid += column.width;\n        }\n        return rowWid;\n    };\n    return PdfGridRow;\n}());\nexport { PdfGridRow };\n/**\n * `PdfGridRowCollection` class provides access to an ordered, strongly typed collection of 'PdfGridRow' objects.\n * @private\n */\nvar PdfGridRowCollection = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridRowCollection(grid) {\n        this.rows = [];\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridRowCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the number of header in the `PdfGrid`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRowCollection.prototype, \"rowCollection\", {\n        //Implementation\n        /**\n         * Return the row collection of the `grid`.\n         * @private\n         */\n        get: function () {\n            return this.rows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowCollection.prototype.addRow = function (arg) {\n        if (typeof arg === 'undefined') {\n            var temprow = new PdfGridRow(this.grid);\n            this.addRow(temprow);\n            return temprow;\n        }\n        else {\n            arg.style.setBackgroundBrush(this.grid.style.backgroundBrush);\n            arg.style.setFont(this.grid.style.font);\n            arg.style.setTextBrush(this.grid.style.textBrush);\n            arg.style.setTextPen(this.grid.style.textPen);\n            if (arg.cells.count === 0) {\n                for (var i = 0; i < this.grid.columns.count; i++) {\n                    arg.cells.add(new PdfGridCell());\n                }\n            }\n            this.rows.push(arg);\n        }\n    };\n    /**\n     * Return the row by index.\n     * @private\n     */\n    PdfGridRowCollection.prototype.getRow = function (index) {\n        return this.rows[index];\n    };\n    return PdfGridRowCollection;\n}());\nexport { PdfGridRowCollection };\n/**\n * `PdfGridHeaderCollection` class provides customization of the settings for the header.\n * @private\n */\nvar PdfGridHeaderCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfGridHeaderCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridHeaderCollection(grid) {\n        /**\n         * The array to store the `rows` of the grid header.\n         * @private\n         */\n        this.rows = [];\n        this.grid = grid;\n        this.rows = [];\n    }\n    //Properties\n    /**\n     * Gets a 'PdfGridRow' object that represents the `header` row in a 'PdfGridHeaderCollection' control.[Read-Only].\n     * @private\n     */\n    PdfGridHeaderCollection.prototype.getHeader = function (index) {\n        // if (index < 0 || index >= Count) {\n        //     throw new IndexOutOfRangeException();\n        // }\n        return (this.rows[index]);\n    };\n    Object.defineProperty(PdfGridHeaderCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of header` in the 'PdfGrid'.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridHeaderCollection.prototype.add = function (arg) {\n        if (typeof arg === 'number') {\n            var row = void 0;\n            for (var i = 0; i < arg; i++) {\n                row = new PdfGridRow(this.grid);\n                row.isHeaderRow = true;\n                for (var j = 0; j < this.grid.columns.count; j++) {\n                    row.cells.add(new PdfGridCell());\n                }\n                this.rows.push(row);\n            }\n            return this.rows;\n        }\n        else {\n            this.rows.push(arg);\n        }\n    };\n    PdfGridHeaderCollection.prototype.indexOf = function (row) {\n        return this.rows.indexOf(row);\n    };\n    return PdfGridHeaderCollection;\n}());\nexport { PdfGridHeaderCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfGrid.ts class for EJ2-PDF\n */\nimport { PdfGridColumnCollection } from './pdf-grid-column';\nimport { PdfGridRowCollection, PdfGridHeaderCollection } from './pdf-grid-row';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutElement } from './../../graphics/figures/layout-element';\nimport { PdfLayoutFormat } from './../../graphics/figures/base/element-layouter';\nimport { PdfGridStyle } from './styles/style';\nimport { PdfBorders } from './styles/pdf-borders';\nimport { PdfGridLayouter } from './../../structured-elements/grid/layout/grid-layouter';\nvar PdfGrid = /** @class */ (function (_super) {\n    __extends(PdfGrid, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGrid() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        /**\n         * Check the child grid is ' split or not'\n         */\n        _this.isGridSplit = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        _this.splitChildRowIndex = -1;\n        /**\n         * The event raised on `begin cell lay outing`.\n         * @event\n         * @private\n         */\n        //public beginPageLayout : Function;\n        /**\n         * The event raised on `end cell lay outing`.\n         * @event\n         * @private\n         */\n        //public endPageLayout : Function;\n        _this.hasRowSpanSpan = false;\n        _this.hasColumnSpan = false;\n        _this.isSingleGrid = true;\n        return _this;\n    }\n    Object.defineProperty(PdfGrid.prototype, \"raiseBeginCellDraw\", {\n        //Properties\n        /**\n         * Gets a value indicating whether the `start cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginCellDraw !== 'undefined' && typeof this.beginCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseEndCellDraw\", {\n        /**\n         * Gets a value indicating whether the `end cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endCellDraw !== 'undefined' && typeof this.endCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"repeatHeader\", {\n        /**\n         * Gets or sets a value indicating whether to `repeat header`.\n         * @private\n         */\n        get: function () {\n            if (this.bRepeatHeader == null || typeof this.bRepeatHeader === 'undefined') {\n                this.bRepeatHeader = false;\n            }\n            return this.bRepeatHeader;\n        },\n        set: function (value) {\n            this.bRepeatHeader = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"allowRowBreakAcrossPages\", {\n        /**\n         * Gets or sets a value indicating whether to split or cut rows that `overflow a page`.\n         * @private\n         */\n        get: function () {\n            return this.breakRow;\n        },\n        set: function (value) {\n            this.breakRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"columns\", {\n        /**\n         * Gets the `column` collection of the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridColumns == null || typeof this.gridColumns === 'undefined') {\n                this.gridColumns = new PdfGridColumnCollection(this);\n            }\n            return this.gridColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"rows\", {\n        /**\n         * Gets the `row` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridRows == null) {\n                this.gridRows = new PdfGridRowCollection(this);\n            }\n            return this.gridRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"headers\", {\n        /**\n         * Gets the `headers` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridHeaders == null || typeof this.gridHeaders === 'undefined') {\n                this.gridHeaders = new PdfGridHeaderCollection(this);\n            }\n            return this.gridHeaders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"initialWidth\", {\n        /**\n         * Indicating `initial width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.gridInitialWidth;\n        },\n        set: function (value) {\n            this.gridInitialWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"style\", {\n        /**\n         * Gets or sets the `grid style`.\n         * @private\n         */\n        get: function () {\n            if (this.gridStyle == null) {\n                this.gridStyle = new PdfGridStyle();\n            }\n            return this.gridStyle;\n        },\n        set: function (value) {\n            if (this.gridStyle == null) {\n                this.gridStyle = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isPageWidth\", {\n        /**\n         * Gets a value indicating whether the grid column width is considered to be `page width`.\n         * @private\n         */\n        get: function () {\n            return this.ispageWidth;\n        },\n        set: function (value) {\n            this.ispageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isChildGrid\", {\n        /**\n         * Gets or set if grid `is nested grid`.\n         * @private\n         */\n        get: function () {\n            return this.ischildGrid;\n        },\n        set: function (value) {\n            this.ischildGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"size\", {\n        /**\n         * Gets or set if grid ' is split or not'\n         * @public\n         */\n        // public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }\n        /**\n         * Gets the `size`.\n         * @private\n         */\n        get: function () {\n            if ((this.gridSize.width === 0 || typeof this.gridSize.width === 'undefined') && this.gridSize.height === 0) {\n                this.gridSize = this.measure();\n            }\n            return this.gridSize;\n            // } else {\n            //     return this.gridSize;\n            // }\n        },\n        set: function (value) {\n            this.gridSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"ParentCell\", {\n        get: function () {\n            return this.parentCell;\n        },\n        set: function (value) {\n            this.parentCell = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"LayoutFormat\", {\n        get: function () {\n            return this.layoutFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGrid.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null)) {\n            var width = (arg1.graphics.clientSize.width - arg2);\n            var layoutRectangle = new RectangleF(arg2, arg3, width, 0);\n            return this.drawHelper(arg1, layoutRectangle, arg4);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'boolean') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    /**\n     * `measures` this instance.\n     * @private\n     */\n    PdfGrid.prototype.measure = function () {\n        var height = 0;\n        var width = this.columns.width;\n        for (var i = 0; i < this.headers.count; i++) {\n            var row = this.headers.getHeader(i);\n            height += row.height;\n        }\n        for (var i = 0; i < this.rows.count; i++) {\n            var row = this.rows.getRow(i);\n            height += row.height;\n        }\n        return new SizeF(width, height);\n    };\n    PdfGrid.prototype.onBeginCellDraw = function (args) {\n        if (this.raiseBeginCellDraw) {\n            this.beginCellDraw(this, args);\n        }\n    };\n    PdfGrid.prototype.onEndCellDraw = function (args) {\n        if (this.raiseEndCellDraw) {\n            this.endCellDraw(this, args);\n        }\n    };\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    PdfGrid.prototype.layout = function (param) {\n        var width = param.bounds.width;\n        var height = param.bounds.height;\n        var hasChanged = false;\n        if (typeof param.bounds.width === 'undefined' || param.bounds.width === 0) {\n            width = param.page.getClientSize().width - param.bounds.x;\n            hasChanged = true;\n        }\n        if (typeof param.bounds.height === 'undefined' || param.bounds.height === 0) {\n            height = param.page.getClientSize().height - param.bounds.y;\n            hasChanged = true;\n        }\n        if (hasChanged) {\n            param.bounds = new RectangleF(param.bounds.x, param.bounds.y, width, height);\n        }\n        if (this.rows.count !== 0) {\n            var currentRow = this.rows.getRow(0).cells.getCell(0).style;\n            if (currentRow.borders != null && ((currentRow.borders.left != null && currentRow.borders.left.width !== 1) ||\n                (currentRow.borders.top != null && currentRow.borders.top.width !== 1))) {\n                var x = currentRow.borders.left.width / 2;\n                var y = currentRow.borders.top.width / 2;\n                if (param.bounds.x === PdfBorders.default.right.width / 2 && param.bounds.y === PdfBorders.default.right.width / 2) {\n                    var newBound = new RectangleF(x, y, this.gridSize.width, this.gridSize.height);\n                    param.bounds = newBound;\n                }\n            }\n        }\n        this.setSpan();\n        this.checkSpan();\n        this.layoutFormat = param.format;\n        this.gridLocation = param.bounds;\n        var layouter = new PdfGridLayouter(this);\n        var result = (layouter.Layouter(param));\n        return result;\n    };\n    PdfGrid.prototype.setSpan = function () {\n        var colSpan = 1;\n        var rowSpan = 1;\n        var currentCellIndex = 0;\n        var currentRowIndex = 0;\n        var maxSpan = 0;\n        var rowCount = this.headers.count;\n        for (var i = 0; i < rowCount; i++) {\n            var row = this.headers.getHeader(i);\n            maxSpan = 0;\n            var colCount = row.cells.count;\n            for (var j = 0; j < colCount; j++) {\n                var cell = row.cells.getCell(j);\n                maxSpan = Math.max(maxSpan, cell.rowSpan);\n                //Skip setting span map for already coverted rows/columns.\n                if (!cell.isCellMergeContinue && !cell.isRowMergeContinue && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                    if (cell.columnSpan + j > row.cells.count) {\n                        throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    }\n                    if (cell.rowSpan + i > this.headers.count) {\n                        throw new Error('Invalid span specified at Header ' + j.toString() + ' column ' + i.toString());\n                    }\n                    // if (this.rows.count !== 0 && cell.rowSpan + i > this.rows.count) {\n                    //     throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    // }\n                    if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                        colSpan = cell.columnSpan;\n                        rowSpan = cell.rowSpan;\n                        currentCellIndex = j;\n                        currentRowIndex = i;\n                        cell.isCellMergeStart = true;\n                        cell.isRowMergeStart = true;\n                        //Set Column merges for first row\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).rowSpan = rowSpan;\n                            colSpan--;\n                        }\n                        currentCellIndex = j;\n                        colSpan = cell.columnSpan;\n                        //Set Row Merges and column merges foreach subsequent rows.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            rowSpan--;\n                            while (colSpan > 1) {\n                                currentCellIndex++;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                colSpan--;\n                            }\n                            colSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                        }\n                    }\n                    else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                        colSpan = cell.columnSpan;\n                        currentCellIndex = j;\n                        cell.isCellMergeStart = true;\n                        //Set Column merges.\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            colSpan--;\n                        }\n                    }\n                    else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                        rowSpan = cell.rowSpan;\n                        currentRowIndex = i;\n                        //Set row Merges.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            rowSpan--;\n                        }\n                    }\n                }\n            }\n            row.maximumRowSpan = maxSpan;\n        }\n    };\n    PdfGrid.prototype.checkSpan = function () {\n        var cellcolSpan;\n        var cellrowSpan = 1;\n        var cellmaxSpan = 0;\n        var currentCellIndex;\n        var currentRowIndex = 0;\n        cellcolSpan = cellrowSpan = 1;\n        currentCellIndex = currentRowIndex = 0;\n        if (this.hasRowSpanSpan || this.hasColumnSpan) {\n            var rowCount = this.rows.count;\n            for (var i = 0; i < rowCount; i++) {\n                var row = this.rows.getRow(i);\n                cellmaxSpan = 0;\n                var colCount = row.cells.count;\n                for (var j = 0; j < colCount; j++) {\n                    var cell = row.cells.getCell(j);\n                    cellmaxSpan = Math.max(cellmaxSpan, cell.rowSpan);\n                    //Skip setting span map for already coverted rows/columns.\n                    if (!cell.isCellMergeContinue && !cell.isRowMergeContinue\n                        && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                        if (cell.columnSpan + j > row.cells.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.rowSpan + i > this.rows.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                            cellcolSpan = cell.columnSpan;\n                            cellrowSpan = cell.rowSpan;\n                            currentCellIndex = j;\n                            currentRowIndex = i;\n                            cell.isCellMergeStart = true;\n                            cell.isRowMergeStart = true;\n                            //Set Column merges for first row\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                            currentCellIndex = j;\n                            cellcolSpan = cell.columnSpan;\n                            //Set Row Merges and column merges foreach subsequent rows.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellrowSpan--;\n                                while (cellcolSpan > 1) {\n                                    currentCellIndex++;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                    cellcolSpan--;\n                                }\n                                cellcolSpan = cell.columnSpan;\n                                currentCellIndex = j;\n                            }\n                        }\n                        else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                            cellcolSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                            cell.isCellMergeStart = true;\n                            //Set Column merges.\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                        }\n                        else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                            cellrowSpan = cell.rowSpan;\n                            currentRowIndex = i;\n                            //Set row Merges.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                cellrowSpan--;\n                            }\n                        }\n                    }\n                }\n                row.maximumRowSpan = cellmaxSpan;\n            }\n        }\n    };\n    PdfGrid.prototype.measureColumnsWidth = function (bounds) {\n        if (typeof bounds !== 'undefined') {\n            this.isPageWidth = false;\n            var widths = this.columns.getDefaultWidths(bounds.width - bounds.x);\n            //let tempWidth : number = this.columns.getColumn(0).width;\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                // if (this.columns.getColumn(i).width < 0)\n                //     this.columns.getColumn(i).columnWidth = widths[i];\n                // else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth && widths[i]>0 && this.isComplete)\n                this.columns.getColumn(i).columnWidth = widths[i];\n                this.tempWidth = widths[i];\n            }\n            if (this.ParentCell != null && this.style.allowHorizontalOverflow == false && this.ParentCell.row.grid.style.allowHorizontalOverflow == false) {\n                var padding = 0;\n                var columnWidth = 0;\n                var columnCount = this.columns.count;\n                var childGridColumnWidth = 0;\n                if (this.ParentCell.style.cellPadding != null || typeof this.ParentCell.style.cellPadding !== 'undefined') {\n                    if (typeof this.ParentCell.style.cellPadding.left != 'undefined' && this.ParentCell.style.cellPadding.hasLeftPad) {\n                        padding += this.ParentCell.style.cellPadding.left;\n                    }\n                    if (typeof this.ParentCell.style.cellPadding.right != 'undefined' && this.ParentCell.style.cellPadding.hasRightPad) {\n                        padding += this.ParentCell.style.cellPadding.right;\n                    }\n                }\n                for (var i = 0; i < this.ParentCell.columnSpan; i++) {\n                    columnWidth += this.ParentCell.row.grid.columns.getColumn(this.parentCellIndex + i).width;\n                }\n                for (var j = 0; j < this.columns.count; j++) {\n                    if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                        columnWidth -= this.gridColumns.getColumn(j).width;\n                        columnCount--;\n                    }\n                }\n                if ((this.ParentCell.row.grid.style.cellPadding != null || typeof this.ParentCell.row.grid.style.cellPadding != 'undefined')) {\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.top != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasTopPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.top;\n                    }\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.bottom != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasBottomPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.bottom;\n                    }\n                }\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    columnWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n                if (columnWidth > padding) {\n                    childGridColumnWidth = (columnWidth - padding) / columnCount;\n                    this.tempWidth = childGridColumnWidth;\n                    if (this.ParentCell != null) {\n                        for (var j = 0; j < this.columns.count; j++) {\n                            if (!this.columns.getColumn(j).isCustomWidth)\n                                this.columns.getColumn(j).columnWidth = childGridColumnWidth;\n                        }\n                    }\n                }\n            }\n            // if (this.ParentCell != null && this.ParentCell.row.width > 0)\n            // {\n            //     if (this.isChildGrid && this.gridSize.width > this.ParentCell.row.width)\n            //     {\n            //         widths = this.columns.getDefaultWidths(bounds.width);\n            //         for (let i : number = 0; i < this.columns.count; i++)\n            //         {\n            //             this.columns.getColumn(i).width = widths[i];\n            //         }\n            //     }\n            // }\n        }\n        else {\n            var widths = [this.columns.count];\n            for (var n = 0; n < this.columns.count; n++) {\n                widths[n] = 0;\n            }\n            var cellWidth = 0;\n            var cellWidths = 0;\n            if ((typeof this.isChildGrid === 'undefined' && typeof this.gridLocation !== 'undefined') || (this.isChildGrid === null && typeof this.gridLocation !== 'undefined')) {\n                this.initialWidth = this.gridLocation.width;\n            }\n            if (this.headers.count > 0) {\n                var colCount_1 = this.headers.getHeader(0).cells.count;\n                var rowCount = this.headers.count;\n                for (var i = 0; i < colCount_1; i++) {\n                    cellWidth = 0;\n                    for (var j = 0; j < rowCount; j++) {\n                        var rowWidth = Math.min(this.initialWidth, this.headers.getHeader(j).cells.getCell(i).width);\n                        cellWidth = Math.max(cellWidth, rowWidth);\n                    }\n                    widths[i] = cellWidth;\n                }\n            }\n            // else {\n            //     let colCount : number = this.rows.getRow(0).cells.count;\n            //     let rowCount : number = this.rows.count;\n            //     for (let i : number = 0; i < colCount; i++) {\n            //         cellWidth = 0;\n            //         for (let j : number = 0; j < rowCount; j++) {\n            //             let rowWidth : number = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n            //             cellWidth = Math.max(cellWidth, rowWidth);\n            //         }\n            //         widths[i] = cellWidth;\n            //     }\n            // }\n            cellWidth = 0;\n            for (var i = 0, colCount_2 = this.columns.count; i < colCount_2; i++) {\n                for (var j = 0, rowCount = this.rows.count; j < rowCount; j++) {\n                    if ((this.rows.getRow(j).cells.getCell(i).columnSpan == 1 && !this.rows.getRow(j).cells.getCell(i).isCellMergeContinue) || this.rows.getRow(j).cells.getCell(i).value != null) {\n                        if (this.rows.getRow(j).cells.getCell(i).value != null && !this.rows.getRow(j).grid.style.allowHorizontalOverflow) {\n                            var value = this.rows.getRow(j).grid.style.cellPadding.right +\n                                this.rows.getRow(j).grid.style.cellPadding.left\n                                + this.rows.getRow(j).cells.getCell(i).style.borders.left.width / 2;\n                            //  if (this.initialWidth != 0 )\n                            //         (this.rows.getRow(j).cells.getCell(i).value as PdfGrid).initialWidth = this.initialWidth - value;\n                        }\n                        var rowWidth = 0;\n                        rowWidth = this.initialWidth > 0.0 ? Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width) : this.rows.getRow(j).cells.getCell(i).width;\n                        // let internalWidth : number = this.rows.getRow(j).cells.getCell(i).width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.left.width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.right.width;\n                        // let internalHeight : number = this.rows.getRow(j).cells.getCell(i).height;\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.top.width);\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.bottom.width);\n                        // let isCorrectWidth : boolean = (internalWidth + this.gridLocation.x) > this.currentGraphics.clientSize.width;\n                        // let isCorrectHeight : boolean = (internalHeight + this.gridLocation.y) > this.currentGraphics.clientSize.height;\n                        // if (isCorrectWidth || isCorrectHeight) {\n                        //     throw Error('Image size exceeds client size of the page. Can not insert this image');\n                        // }\n                        // rowWidth = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n                        cellWidth = Math.max(widths[i], Math.max(cellWidth, rowWidth));\n                        cellWidth = Math.max(this.columns.getColumn(i).width, cellWidth);\n                    }\n                }\n                if (this.rows.count != 0)\n                    widths[i] = cellWidth;\n                cellWidth = 0;\n            }\n            for (var i = 0, RowCount = this.rows.count; i < RowCount; i++) {\n                for (var j = 0, ColCount = this.columns.count; j < ColCount; j++) {\n                    if (this.rows.getRow(i).cells.getCell(j).columnSpan > 1) {\n                        var total = widths[j];\n                        for (var k = 1; k < this.rows.getRow(i).cells.getCell(j).columnSpan; k++) {\n                            total += widths[j + k];\n                        }\n                        // if (this.rows.getRow(i).cells.getCell(j).width > total)\n                        // {\n                        //     let extendedWidth : number = this.rows.getRow(i).cells.getCell(j).width - total;\n                        //     extendedWidth = extendedWidth / this.rows.getRow(i).cells.getCell(j).columnSpan;\n                        //     for (let k : number = j; k < j + this.rows.getRow(i).cells.getCell(j).columnSpan; k++)\n                        //         widths[k] += extendedWidth;\n                        // }\n                    }\n                }\n            }\n            // if (this.isChildGrid && this.initialWidth != 0)\n            // {\n            //     widths = this.columns.getDefaultWidths(this.initialWidth);\n            // }\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                if (this.columns.getColumn(i).width <= 0)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n                else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n            }\n            var padding = 0;\n            var colWidth = 0;\n            var colCount = this.columns.count;\n            var childGridColWidth = 0;\n            colWidth = this.tempWidth;\n            for (var j = 0; j < this.columns.count; j++) {\n                if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                    colWidth -= this.gridColumns.getColumn(j).width;\n                    colCount--;\n                }\n            }\n            // if (this.style.cellSpacing != 0){\n            //     colWidth -= this.style.cellSpacing * 2;\n            // }\n            if (colWidth > 0) {\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    colWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n            }\n            if (colWidth > padding) {\n                childGridColWidth = (colWidth) / colCount;\n                if (this.ParentCell != null) {\n                    for (var j = 0; j < this.columns.count; j++) {\n                        if (!this.columns.getColumn(j).isCustomWidth)\n                            this.columns.getColumn(j).columnWidth = childGridColWidth;\n                    }\n                }\n            }\n        }\n    };\n    return PdfGrid;\n}(PdfLayoutElement));\nexport { PdfGrid };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfGrid } from '../pdf-grid';\nimport { PdfStringFormat } from './../../../graphics/fonts/pdf-string-format';\nimport { SizeF, RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfBorders } from '../styles/pdf-borders';\nimport { PdfLayoutType, PdfLayoutBreakType } from './../../../graphics/figures/enum';\nimport { PdfLayoutResult, PdfLayoutFormat, ElementLayouter } from './../../../graphics/figures/base/element-layouter';\nimport { PdfHorizontalOverflowType } from '../styles/style';\nimport { TemporaryDictionary } from './../../../collections/object-object-pair/dictionary';\nimport { PdfStringLayouter } from './../../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../../document/pdf-document';\n/**\n * Class `lay outing the text`.\n *\n */\nvar PdfGridLayouter = /** @class */ (function (_super) {\n    __extends(PdfGridLayouter, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGridLayouter(baseFormat) {\n        var _this = _super.call(this, baseFormat) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridInitialWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        _this.childheight = 0;\n        /**\n         * Check weather it is `child grid or not`.\n         * @private\n         */\n        _this.isChildGrid = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.hasRowSpanSpan = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.flag = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.columnRanges = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.currentLocation = new PointF(0, 0);\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        _this.slr = null;\n        _this.remainderText = null;\n        _this.isPaginate = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        _this.isOverloadWithPosition = false;\n        return _this;\n    }\n    Object.defineProperty(PdfGridLayouter.prototype, \"Grid\", {\n        //Properties\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    //Public methods\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /*public layout(graphics : PdfLayoutParams) : PdfLayoutResult\n    public layout(graphics : PdfGraphics, bounds : RectangleF) : void\n    public layout(graphics : PdfGraphics, bounds : PointF) : void\n    public layout(graphics ?: PdfGraphics | PdfLayoutParams, bounds ?: PointF | RectangleF) : void | PdfLayoutResult  {\n        if (graphics instanceof PdfGraphics) {\n        if (bounds instanceof PointF) {\n            if (bounds.x === 0) {\n                bounds.x = PdfBorders.default.right.width / 2;\n            }\n            if (bounds.y === 0) {\n                bounds.y = PdfBorders.default.top.width / 2;\n            }\n            let boundaries : RectangleF = new RectangleF(bounds, new SizeF(0, 0));\n            this.layout(graphics, boundaries);\n        } else {\n            let width : number = graphics.clientSize.width;\n            let parameter : PdfLayoutParams = new PdfLayoutParams();\n            parameter.bounds = bounds;\n            this.currentGraphics = graphics;\n            if (graphics.layer != null) {\n                let index : number = 0;\n                if (this.currentGraphics.page instanceof PdfPage) {\n                    index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                } else {\n                    index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n                }\n            } else {\n                this.layoutInternal(parameter);\n            }\n        }\n    }\n    }*/\n    /**\n     * Gets the `format`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getFormat = function (format) {\n        var f = format;\n        return f;\n    };\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutInternal = function (param) {\n        var format = this.getFormat(param.format);\n        this.gridLayoutFormat = this.getFormat(param.format);\n        this.currentPage = param.page;\n        if (this.currentPage !== null) {\n            var pageHeight = this.currentPage.getClientSize().height;\n            var pageWidth = this.currentPage.getClientSize().width;\n            this.currentPageBounds = this.currentPage.getClientSize();\n        }\n        else {\n            throw Error('Can not set page as null');\n            //this.currentPageBounds = this.currentGraphics.clientSize;\n        }\n        this.currentGraphics = this.currentPage.graphics;\n        //this.currentGraphics = (this.currentPage != null ) ? this.currentPage.graphics : this.currentGraphics;\n        // if (this.currentGraphics.layer !== null) {\n        //     let index : number = 0;\n        //     if (this.currentGraphics.page instanceof PdfPage) {\n        //         index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n        //     } else {\n        //         index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n        //     }\n        //     this.listOfNavigatePages.push(index);\n        // }\n        var index = 0;\n        index = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        this.listOfNavigatePages.push(index);\n        if (format != null && format.break === PdfLayoutBreakType.FitColumnsToPage) {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), new SizeF(this.Grid.columns.width, this.currentGraphics.clientSize.height));\n        }\n        else {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        }\n        //this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        if (this.Grid.rows.count !== 0) {\n            this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width :\n                (this.currentBounds.width - this.Grid.rows.getRow(0).cells.getCell(0).style.borders.left.width / 2);\n        }\n        else if (this.Grid.headers.count !== 0) {\n            // this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width : (this.currentBounds.width -\n            //                                 this.Grid.headers.getHeader(0).cells.getCell(0).style.borders.left.width / 2);\n            this.currentBounds.width = param.bounds.width;\n        }\n        else {\n            throw Error('Please add row or header into grid');\n        }\n        this.startLocation = new PointF(param.bounds.x, param.bounds.y);\n        // if (this.Grid.style.allowHorizontalOverflow && this.currentBounds.width > this.currentGraphics.clientSize.width) {\n        //     this.currentBounds.width = this.currentGraphics.clientSize.width;\n        //     this.currentBounds.width -= this.currentBounds.x;\n        // }\n        // if (this.Grid.isChildGrid) {\n        //     this.childheight = param.bounds.height;\n        // }\n        // if (param.format !== null && param.format.usePaginateBounds) {\n        //     if (param.format.paginateBounds.height > 0) {\n        //         this.currentBounds.height = param.format.paginateBounds.height;\n        //     }\n        //} else \n        if (param.bounds.height > 0 && !this.Grid.isChildGrid) {\n            this.currentBounds.height = param.bounds.height;\n        }\n        if (!this.Grid.isChildGrid) {\n            this.hType = this.Grid.style.horizontalOverflowType;\n        }\n        if (!this.Grid.style.allowHorizontalOverflow) {\n            this.columnRanges = [];\n            if (typeof this.Grid.isChildGrid !== 'undefined' && typeof this.Grid.isChildGrid) {\n                this.Grid.measureColumnsWidth(this.currentBounds);\n            }\n            else {\n                this.Grid.measureColumnsWidth(new RectangleF(this.currentBounds.x, this.currentBounds.y, this.currentBounds.x + this.currentBounds.width, this.currentBounds.height));\n            }\n            this.columnRanges.push([0, this.Grid.columns.count - 1]);\n        }\n        else {\n            this.Grid.measureColumnsWidth();\n            this.determineColumnDrawRanges();\n        }\n        if (this.Grid.hasRowSpanSpan) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                if (this.Grid.rows.getRow(i).height !== -1 && !this.Grid.rows.getRow(i).isRowHeightSet) {\n                    this.Grid.rows.getRow(i).isRowHeightSet = true;\n                }\n            }\n        }\n        var result = this.layoutOnPage(param);\n        return result;\n    };\n    // /* tslint:enable */\n    /**\n     * `Determines the column draw ranges`.\n     * @private\n     */\n    PdfGridLayouter.prototype.determineColumnDrawRanges = function () {\n        var startColumn = 0;\n        var endColumn = 0;\n        var cellWidths = 0;\n        var availableWidth = this.currentGraphics.clientSize.width - this.currentBounds.x;\n        for (var i = 0; i < this.Grid.columns.count; i++) {\n            cellWidths += this.Grid.columns.getColumn(i).width;\n            if (cellWidths >= availableWidth) {\n                var subWidths = 0;\n                for (var j = startColumn; j <= i; j++) {\n                    subWidths += this.Grid.columns.getColumn(j).width;\n                    if (subWidths > availableWidth) {\n                        break;\n                    }\n                    endColumn = j;\n                }\n                this.columnRanges.push([startColumn, endColumn]);\n                startColumn = endColumn + 1;\n                endColumn = startColumn;\n                cellWidths = (endColumn <= i) ? this.Grid.columns.getColumn(i).width : 0;\n            }\n        }\n        // if (startColumn !== this.columns.Count) {\n        this.columnRanges.push([startColumn, this.Grid.columns.count - 1]);\n        // }\n    };\n    /**\n     * `Layouts the on page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutOnPage = function (param) {\n        /* tslint:disable */\n        this.pageBounds.x = param.bounds.x;\n        this.pageBounds.y = param.bounds.y;\n        this.pageBounds.height = param.bounds.height;\n        var format = this.getFormat(param.format);\n        var endArgs = null;\n        var result = null;\n        var layoutedPages = new TemporaryDictionary();\n        var startPage = param.page;\n        var isParentCell = false;\n        var cellBounds = [];\n        for (var index = 0; index < this.columnRanges.length; index++) {\n            var range = this.columnRanges[index];\n            this.cellStartIndex = range[0];\n            this.cellEndIndex = range[1];\n            var returnObject = this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex);\n            this.currentBounds = returnObject.currentBounds;\n            this.currentRowIndex = returnObject.currentRowIndex;\n            // if (returnObject.returnValue) {\n            //     result = new PdfGridLayoutResult(this.currentPage, this.currentBounds);\n            //     break;\n            // }\n            //Draw Headers.\n            var drawHeader = void 0;\n            for (var i_1 = 0; i_1 < this.Grid.headers.count; i_1++) {\n                var row = this.Grid.headers.getHeader(i_1);\n                var headerHeight = this.currentBounds.y;\n                this.isHeader = true;\n                if (startPage != this.currentPage) {\n                    for (var k = this.cellStartIndex; k <= this.cellEndIndex; k++) {\n                        if (row.cells.getCell(k).isCellMergeContinue) {\n                            row.cells.getCell(k).isCellMergeContinue = false;\n                            row.cells.getCell(k).value = \"\";\n                        }\n                    }\n                }\n                // RowLayoutResult\n                var headerResult = this.drawRow(row);\n                if (headerHeight === this.currentBounds.y) {\n                    drawHeader = true;\n                    if (PdfGridLayouter.repeatRowIndex === -1) {\n                        PdfGridLayouter.repeatRowIndex = i_1;\n                    }\n                }\n                else {\n                    drawHeader = false;\n                }\n                if (!headerResult.isFinish && startPage !== null\n                    && format.layout !== PdfLayoutType.OnePage && drawHeader) {\n                    this.startLocation.x = this.currentBounds.x;\n                    this.currentPage = this.getNextPageformat(format);\n                    this.startLocation.y = this.currentBounds.y;\n                    if (typeof format.paginateBounds !== 'undefined' && format.paginateBounds.x === 0 && format.paginateBounds.y === 0 && format.paginateBounds.width === 0 && format.paginateBounds.height === 0)\n                        this.currentBounds.x += this.startLocation.x;\n                    this.drawRow(row);\n                }\n                this.isHeader = false;\n            }\n            var i = 0;\n            var length_1 = this.Grid.rows.count;\n            var repeatRow = void 0;\n            var startingHeight = 0;\n            var flag = true;\n            //Here is to draw parent Grid and Cells\n            cellBounds = [];\n            //Draw row by row with the specified cell range.\n            for (var j = 0; j < this.Grid.rows.count; j++) {\n                var row = this.Grid.rows.getRow(j);\n                i++;\n                this.currentRowIndex = i - 1;\n                var originalHeight = this.currentBounds.y;\n                startPage = this.currentPage;\n                PdfGridLayouter.repeatRowIndex = -1;\n                if (flag && row.grid.isChildGrid) {\n                    startingHeight = originalHeight;\n                    flag = false;\n                }\n                var rowResult = null;\n                ///rowResult = this.drawRow(row);\n                /*if(!row.isrowFinish) {\n                    if(!row.grid.isgridSplit){\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                        row.isrowDraw = true;\n                    } else {\n                        if(!row.isrowDraw){\n                            rowResult = this.drawRow(row);\n                            row.isrowFinish = true;\n                            row.isrowDraw = true;\n                            row.grid.isgridSplit = false;\n                        } else {\n                            rowResult =  null;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    //row.isrowFinish = false;\n                    //rowResult = this.drawRow(row);\n                    rowResult = null;\n                    break;\n                    \n                }             */\n                if (this.Grid.splitChildRowIndex == -1) {\n                    rowResult = this.drawRow(row);\n                    row.isrowFinish = true;\n                }\n                else {\n                    if (row.grid.ParentCell.row.grid.isGridSplit && this.Grid.splitChildRowIndex <= row.rowIndex) {\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                    }\n                    else if (row.isrowFinish) {\n                        continue;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                //rowResult = this.drawRow(row);\n                cellBounds.push(rowResult.bounds.width);\n                /*if (row.isRowBreaksNextPage)\n                    {\n                        let x : number  = 0;\n                        for (let l : number = 0; l < row.cells.count; l++)\n                        {\n                            let isNestedRowBreak : boolean = false;\n                            if (row.height == row.cells.getCell(l).height)\n                            {\n                                let n : number;\n                                let grid : PdfGrid = row.cells.getCell(l).value as PdfGrid;\n                                for (let m : number = grid.rows.count; 0 < m; m--)\n                                {\n                                    if ((grid.rows.getRow(m - 1).rowBreakHeight > 0))\n                                    {\n                                        isNestedRowBreak = true;\n                                        break;\n                                    }\n                                    if (grid.rows.getRow(m - 1).isRowBreaksNextPage)\n                                    {\n                                        row.rowBreakHeightValue = grid.rows.getRow(m - 1).rowBreakHeightValue;\n                                        break;\n                                    }\n                                    row.rowBreakHeightValue += grid.rows.getRow(m - 1).height;\n                                }\n                            }\n                            if (isNestedRowBreak)\n                                break;\n                        }\n                        for (let j : number = 0; j < row.cells.count; j++)\n                        {\n\n                            if (row.height > row.cells.getCell(j).height)\n                            {\n                                row.cells.getCell(j).value = \" \";\n                                let rect : RectangleF ;\n                                let page : PdfPage = this.getNextPage(this.currentPage);\n                                let section : PdfSection = this.currentPage.section;\n                                let index : number = section.indexOf(page);\n                                for (let k : number = 0; k < (section.count - 1) - index; k++)\n                                {\n                                    rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, page.getClientSize().height);\n                                    PdfGridLayouter.repeatRowIndex = -1;\n                                    row.cells.getCell(j).draw(page.graphics, rect, false);\n                                    page = this.getNextPage(page);\n                                }\n                                rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, row.rowBreakHeightValue);\n\n                                row.cells.getCell(j).draw(page.graphics, rect, false);\n                            }\n                            x += row.grid.columns.getColumn(j).width;\n                        }\n                    }*/\n                //if height remains same, it is understood that row is not drawn in the page\n                if (originalHeight === this.currentBounds.y) {\n                    repeatRow = true;\n                    PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                }\n                else {\n                    repeatRow = false;\n                    PdfGridLayouter.repeatRowIndex = -1;\n                }\n                while (!rowResult.isFinish && startPage != null) {\n                    var tempResult = this.getLayoutResult();\n                    /*if (startPage != this.currentPage)\n                        {\n                            if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            {\n                                let bounds : RectangleF= new RectangleF(new PointF(format.paginateBounds.x,format.paginateBounds.y), new SizeF(param.bounds.width, tempResult.bounds.height));\n                                bounds.x += param.bounds.x;\n                                if (row.grid.ParentCell.row.grid.style.cellPadding != null)\n                                {\n                                    bounds.y += row.grid.ParentCell.row.grid.style.cellPadding.top;\n                                    if (bounds.height > this.currentPageBounds.height)\n                                    {\n                                        bounds.height = this.currentPageBounds.height - bounds.y;\n                                        bounds.height -= (row.grid.ParentCell.row.grid.style.cellPadding.bottom);\n                                    }\n                                }\n                                // Draw border for cells in the nested grid cell's row.\n                                for (let c : number = 0; c < row.cells.count; c++)\n                                {\n                                    let cell : PdfGridCell = row.cells.getCell(c);\n                                    let cellWidth :  number= 0;\n                                    if (cell.columnSpan > 1)\n                                    {\n                                        for (; c < cell.columnSpan; c++)\n                                            cellWidth += row.grid.columns.getColumn(c).width;\n                                    }\n                                    else\n                                        cellWidth = Math.max(cell.width, row.grid.columns.getColumn(c).width);\n                                    cell.drawCellBorders(this.currentGraphics, new RectangleF(new PointF(bounds.x,bounds.y), new SizeF(cellWidth, bounds.height)));\n                                    bounds.x += cellWidth;\n                                    c += (cell.columnSpan - 1);\n                                }\n                            }\n                        }\n                        */\n                    endArgs = this.raisePageLayouted(tempResult);\n                    if (endArgs.cancel || repeatRow)\n                        break;\n                    else if (this.Grid.allowRowBreakAcrossPages) {\n                        //If there is no space in the current page, add new page and then draw the remaining row.\n                        this.currentPage = this.getNextPageformat(format);\n                        originalHeight = this.currentBounds.y;\n                        var location_1 = new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                        if ((format.paginateBounds.x === 0 && format.paginateBounds.y === 0 && format.paginateBounds.width === 0 &&\n                            format.paginateBounds.height === 0) && (this.startLocation.x === location_1.x && this.startLocation.y === location_1.y)) {\n                            this.currentBounds.x += this.startLocation.x;\n                            this.currentBounds.y += this.startLocation.y;\n                        }\n                        if (this.isPaginate) {\n                            this.startLocation.y = this.currentBounds.y;\n                            this.isPaginate = false;\n                        }\n                        if (this.Grid.isChildGrid && row.grid.ParentCell != null) {\n                            if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                                if (row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top < this.currentBounds.height) {\n                                    this.currentBounds.y = this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                                }\n                            }\n                        }\n                        if (row.grid.ParentCell != null) {\n                            row.grid.ParentCell.row.isRowBreaksNextPage = true;\n                            row.grid.ParentCell.row.rowBreakHeightValue = row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top + this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                            for (var i_2 = row.rowIndex + 1; i_2 < row.grid.rows.count; i_2++) {\n                                row.grid.ParentCell.row.rowBreakHeightValue += row.grid.rows.getRow(i_2).height;\n                            }\n                            //row.rowBreakHeight = row.grid.ParentCell.row.rowBreakHeightValue;\n                        }\n                        /*if (row.noOfPageCount > 1)\n                        {\n                            let temp : number = row.rowBreakHeightValue;\n                            for (let j : number = 1; j < row.noOfPageCount; j++)\n                            {\n                                row.rowBreakHeightValue = 0;\n                                row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                this.drawRow(row);\n                                this.currentPage = this.getNextPageformat(format);\n                                startPage = this.currentPage;\n                            }\n                            row.rowBreakHeightValue = temp;\n                            row.noOfPageCount = 1;\n                            rowResult = this.drawRow(row);\n                        } else {\n                            rowResult = this.drawRow(row);\n                        }\n                        /*if(row.grid.isChildGrid){\n                            row.isrowFinish = false;\n                            row.isrowDraw = false;\n                            row.grid.isgridSplit = true;\n                            row.grid.ParentCell.row.grid.isgridSplit = true;\n                            //rowResult.isFinish = false;\n                            break;\n                        }*/\n                        if (row.grid.isChildGrid) {\n                            //row.grid.isgridSplit = true;\n                            row.isrowFinish = false;\n                            //row.grid.ParentCell.row.grid.isgridSplit = true;\n                            row.grid.splitChildRowIndex = row.rowIndex;\n                            row.grid.ParentCell.row.grid.splitChildRowIndex = row.grid.ParentCell.row.rowIndex;\n                            if (row.grid.ParentCell.row.grid.isGridSplit) {\n                                row.grid.ParentCell.row.noOfPageCount += 1;\n                                row.grid.ParentCell.row.grid.isGridSplit = false;\n                            }\n                            break;\n                        }\n                        if (row.noOfPageCount < 1) {\n                            if (row.grid.splitChildRowIndex != -1) {\n                                row.grid.isGridSplit = true;\n                            }\n                            if (row.style.border != null && ((row.style.border.left != null && row.style.border.left.width !== 1)\n                                || (row.style.border.top != null && row.style.border.top.width !== 1))) {\n                                var x = row.style.border.left.width / 2;\n                                var y = row.style.border.top.width / 2;\n                                if (this.currentBounds.x === PdfBorders.default.right.width / 2 && this.currentBounds.y === PdfBorders.default.right.width / 2) {\n                                    var newBound = new RectangleF(x, y, this.currentBounds.width, this.currentBounds.height);\n                                    this.currentBounds = newBound;\n                                }\n                            }\n                            if (this.Grid.repeatHeader) {\n                                for (var j_1 = 0; j_1 < this.Grid.headers.count; j_1++) {\n                                    var headerRepeat = this.Grid.headers.getHeader(j_1);\n                                    this.drawRow(headerRepeat);\n                                }\n                            }\n                            rowResult = this.drawRow(row);\n                            if (row.noOfPageCount >= 1) {\n                                var temp = row.rowBreakHeightValue;\n                                for (var j_2 = 0; j_2 < row.noOfPageCount; j_2++) {\n                                    //this.currentPage.section.add();\n                                    var tempResult1 = this.getLayoutResult();\n                                    endArgs = this.raisePageLayouted(tempResult1);\n                                    this.currentPage = this.getNextPageformat(format);\n                                    originalHeight = this.currentBounds.y;\n                                    //row.rowBreakHeightValue = 0;\n                                    if (row.grid.splitChildRowIndex != -1) {\n                                        row.grid.isGridSplit = true;\n                                    }\n                                    this.currentBounds.y = 0.5;\n                                    if (this.Grid.repeatHeader) {\n                                        for (var i_3 = 0; i_3 < this.Grid.headers.count; i_3++) {\n                                            var header = this.Grid.headers.getHeader(i_3);\n                                            this.drawRow(header);\n                                        }\n                                    }\n                                    //row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                    this.drawRow(row);\n                                }\n                                // row.rowBreakHeight = temp;\n                                // row.noOfPageCount = 1;\n                                // rowResult = this.drawRow(row);\n                            }\n                            row.grid.splitChildRowIndex = -1;\n                            row.grid.isGridSplit = false;\n                            rowResult.isFinish = this.checkIsFisished(row);\n                            //row.NestedGridLayoutResult.bounds.height = row.rowBreakHeightValue;\n                            //this.currentBounds.y = rowResult.bounds.y;\n                            for (var i_4 = 0; i_4 < row.cells.count; i_4++) {\n                                if (row.cells.getCell(i_4).value instanceof PdfGrid) {\n                                    row.cells.getCell(i_4).value.splitChildRowIndex = -1;\n                                }\n                            }\n                        }\n                    }\n                    // else if (!this.Grid.allowRowBreakAcrossPages && i < length)\n                    // {\n                    //     this.currentPage = this.getNextPageformat(format);\n                    //     break;\n                    // }\n                    // else if (i >= length)\n                    //     break;\n                }\n                if (!rowResult.isFinish && startPage !== null && format.layout !== PdfLayoutType.OnePage && repeatRow) {\n                    // During pagination, cell position is maintained here.\n                    this.startLocation.x = this.currentBounds.x;\n                    var isAddNextPage = false;\n                    this.currentPage = this.getNextPageformat(format);\n                    /*if (!this.Grid.isSingleGrid)\n                    {\n                        for ( let j : number= 0; j < this.Grid.rows.count; j++)\n                        {\n                            let isWidthGreaterthanParent : boolean = false;\n                            for (let k : number = 0; k < this.Grid.rows.getRow(j).cells.count; k++)\n                            {\n                                if (this.Grid.rows.getRow(j).cells.getCell(k).width > this.currentPageBounds.width)\n                                    isWidthGreaterthanParent = true;\n                            }\n                            if (isWidthGreaterthanParent && this.Grid.rows.getRow(j).cells.getCell(this.rowBreakPageHeightCellIndex).pageCount > 0)\n                            {\n                                isAddNextPage = true;\n                            }\n                        }\n                    }\n                    if (!this.Grid.isRearranged && isAddNextPage)\n                         {\n                             let section : PdfSection = this.currentPage.section;\n                             \n                             //this.currentPage = section.add();\n                         \n                             this.currentGraphics = this.currentPage.graphics;\n                             this.currentBounds = new RectangleF(new PointF(0,0), this.currentPage.getClientSize());\n                          \n                             let pageindex  : number = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                         }\n                         else\n                         {\n                             this.currentPage = this.getNextPageformat(format);\n                         }\n                         if (format.paginateBounds.y == 0)\n                             this.currentBounds.y = PdfBorders.default.top.width/2;\n                         else\n                         {\n                             this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;\n                             \n                         }*/\n                    if (this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex).returnValue) {\n                        break;\n                    }\n                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.height > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.height = param.bounds.height;\n                    }\n                    if (typeof param.format !== 'undefined' && param.format != null && typeof param.format.usePaginateBounds !== 'undefined' && !param.format.usePaginateBounds && !(param.format.paginateBounds.x === 0 && param.format.paginateBounds.y === 0 && param.format.paginateBounds.width === 0 && param.format.paginateBounds.height === 0) && param.format.paginateBounds.y === 0) {\n                        this.currentBounds.y = PdfBorders.default.top.width / 2;\n                    }\n                    else {\n                        this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;\n                        if (format != null && (format.paginateBounds.x !== 0 || format.paginateBounds.y !== 0 || format.paginateBounds.height !== 0 || format.paginateBounds.width !== 0)) {\n                            this.currentBounds.x = format.paginateBounds.x;\n                            this.currentBounds.width = format.paginateBounds.width;\n                            this.currentBounds.height = format.paginateBounds.height;\n                        }\n                    }\n                    if (typeof param.format !== 'undefined' && (param.format !== null) && typeof param.format.usePaginateBounds !== 'undefined' && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.y > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.y = param.bounds.y;\n                    }\n                    this.startLocation.y = this.currentBounds.y;\n                    if ((format.paginateBounds.x === format.paginateBounds.y) &&\n                        (format.paginateBounds.y === format.paginateBounds.height) &&\n                        (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                        this.currentBounds.x += this.startLocation.x;\n                    }\n                    if (this.currentBounds.x === PdfBorders.default.left.width / 2) {\n                        this.currentBounds.y += this.startLocation.x;\n                    }\n                    if (this.Grid.repeatHeader) {\n                        for (var i_5 = 0; i_5 < this.Grid.headers.count; i_5++) {\n                            var header = this.Grid.headers.getHeader(i_5);\n                            this.drawRow(header);\n                        }\n                    }\n                    this.drawRow(row);\n                    if (this.currentPage !== null && !layoutedPages.containsKey(this.currentPage)) {\n                        layoutedPages.add(this.currentPage, range);\n                    }\n                }\n                if (row.NestedGridLayoutResult != null) {\n                    // Position for next row in the grid.\n                    this.currentPage = row.NestedGridLayoutResult.page;\n                    this.currentGraphics = this.currentPage.graphics; //If not, next row will not be drawn in the layouted page.\n                    this.startLocation = new PointF(row.NestedGridLayoutResult.bounds.x, row.NestedGridLayoutResult.bounds.y);\n                    var recalHeight = this.ReCalculateHeight(row, row.NestedGridLayoutResult.bounds.height);\n                    this.currentBounds.y = recalHeight;\n                    //this.currentBounds.y = row.NestedGridLayoutResult.bounds.height;\n                    if (startPage != this.currentPage) {\n                        var secion = this.currentPage.section;\n                        var startIndex = secion.indexOf(startPage) + 1;\n                        var endIndex = secion.indexOf(this.currentPage);\n                        for (var page = startIndex; page < endIndex + 1; page++) {\n                            var pageGraphics = this.currentPage.graphics;\n                            var location_2 = new PointF(format.paginateBounds.x, format.paginateBounds.y);\n                            var height = page == endIndex ? (row.NestedGridLayoutResult.bounds.height - param.bounds.y) :\n                                (this.currentBounds.height - location_2.y);\n                            if (height <= pageGraphics.clientSize.height)\n                                height += param.bounds.y;\n                            // if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            //     location.x += param.bounds.x;\n                            location_2.y = format == null ? 0.5 : format.paginateBounds.y;\n                            // Draw border for last paginated row containing nested grid.\n                            for (var c = 0; c < row.cells.count; c++) {\n                                var cell = row.cells.getCell(c);\n                                var cellWidth = 0;\n                                var totalwidth = 0;\n                                if (cell.value instanceof PdfGrid) {\n                                    for (var i_6 = 0; i_6 < cell.value.columns.count; i_6++) {\n                                        totalwidth += cell.value.columns.getColumn(i_6).columnWidth;\n                                    }\n                                }\n                                else {\n                                    totalwidth = cell.width;\n                                }\n                                // if (cell.columnSpan > 1)\n                                // {\n                                //     for (; c < cell.columnSpan; c++)\n                                //         cellWidth += row.grid.columns.getColumn(c).width;\n                                // }\n                                // else\n                                cellWidth = Math.max(totalwidth, row.grid.columns.getColumn(c).width);\n                                cell.drawCellBorders(pageGraphics, new RectangleF(location_2, new SizeF(cellWidth, height)));\n                                location_2.x += cellWidth;\n                                c += (cell.columnSpan - 1);\n                            }\n                        }\n                        // So, nested grid drawing is completed for the current row. Update page.\n                        // Otherwise, the next nested grid of the parent will draw borders from start.\n                        startPage = this.currentPage;\n                    }\n                }\n            }\n            var isPdfGrid = false;\n            var maximumCellBoundsWidth = 0;\n            if (cellBounds.length > 0) {\n                maximumCellBoundsWidth = cellBounds[0];\n            }\n            var largeNavigatePage = [[1, 2]];\n            for (var c = 0; c < this.Grid.rows.count; c++) {\n                if (this.cellEndIndex != -1 && this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value instanceof PdfGrid) {\n                    var grid = this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value;\n                    this.rowLayoutBoundsWidth = grid.rowLayoutBoundsWidth;\n                    isPdfGrid = true;\n                    // if (largeNavigatePage[0][0] < grid.listOfNavigatePages.length)\n                    // {\n                    //     largeNavigatePage[0][0] = grid.listOfNavigatePages.length;\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                    // else if ((largeNavigatePage[0][0] == grid.listOfNavigatePages.length) && (largeNavigatePage[0][1] < cellBounds[c]))\n                    // {\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                }\n            }\n            if (!isPdfGrid && cellBounds.length > 0) {\n                for (var c = 0; c < i - 1; c++) {\n                    if (maximumCellBoundsWidth < cellBounds[c]) {\n                        maximumCellBoundsWidth = cellBounds[c];\n                    }\n                }\n                this.rowLayoutBoundsWidth = maximumCellBoundsWidth;\n            }\n            else {\n                this.rowLayoutBoundsWidth = largeNavigatePage[0][1];\n            }\n            if (this.columnRanges.indexOf(range) < this.columnRanges.length - 1\n                && startPage != null && format.layout != PdfLayoutType.OnePage) {\n                isParentCell = this.Grid.isChildGrid;\n                if (largeNavigatePage[0][0] != 0) {\n                    var section = this.currentPage.section;\n                    var pageIndex = section.indexOf(this.currentPage);\n                    this.currentGraphics = this.currentPage.graphics;\n                    this.currentBounds = new RectangleF(new PointF(0, 0), this.currentPage.getClientSize());\n                    var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n                }\n                else {\n                    this.currentPage = this.getNextPageformat(format);\n                }\n                // let locationGrid : PointF= new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                // if (format.paginateBounds == new RectangleF(0,0,0,0) && this.startLocation == locationGrid)\n                // {\n                //     this.currentBounds.x += this.startLocation.x;\n                //     this.currentBounds.y += this.startLocation.y;\n                // }\n            }\n            if (this.columnRanges.length - 1 !== index && this.columnRanges.length > 1 && format.layout !== PdfLayoutType.OnePage) {\n                this.currentPage = this.getNextPageformat(format);\n                if ((format.paginateBounds.x === format.paginateBounds.y) && (format.paginateBounds.y === format.paginateBounds.height)\n                    && (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                    this.currentBounds.x += this.startLocation.x;\n                    this.currentBounds.y += this.startLocation.y;\n                    //this.currentBounds.height = this.pageBounds.height;\n                }\n            }\n        }\n        result = this.getLayoutResult();\n        if (this.Grid.style.allowHorizontalOverflow && this.Grid.style.horizontalOverflowType == PdfHorizontalOverflowType.NextPage) {\n            this.reArrangePages(layoutedPages);\n        }\n        this.raisePageLayouted(result);\n        return result;\n    };\n    PdfGridLayouter.prototype.checkIsFisished = function (row) {\n        var result = true;\n        for (var i = 0; i < row.cells.count; i++) {\n            if (!row.cells.getCell(i).FinishedDrawingCell) {\n                result = false;\n            }\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getNextPageformat = function (format) {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        this.flag = false;\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        this.currentGraphics = nextPage.graphics;\n        var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        if (!(this.listOfNavigatePages.indexOf(pageindex) !== -1)) {\n            this.listOfNavigatePages.push(pageindex);\n        }\n        this.currentBounds = new RectangleF(new PointF(0, 0), nextPage.getClientSize());\n        if ((typeof format !== 'undefined') && format != null && format.usePaginateBounds && (typeof format.paginateBounds !== 'undefined') && format.paginateBounds != null && (format.paginateBounds.x !== format.paginateBounds.y) && (format.paginateBounds.y !== format.paginateBounds.height)\n            && (format.paginateBounds.height !== format.paginateBounds.width) && (format.paginateBounds.width !== 0)) {\n            this.currentBounds.x = format.paginateBounds.x;\n            this.currentBounds.y = format.paginateBounds.y;\n            this.currentBounds.height = format.paginateBounds.height;\n        }\n        return nextPage;\n    };\n    PdfGridLayouter.prototype.CheckIfDefaultFormat = function (format) {\n        var defaultFormat = new PdfStringFormat();\n        return (format.alignment === defaultFormat.alignment && format.characterSpacing === defaultFormat.characterSpacing &&\n            format.clipPath === defaultFormat.clipPath && format.firstLineIndent === defaultFormat.firstLineIndent &&\n            format.horizontalScalingFactor === defaultFormat.horizontalScalingFactor &&\n            format.lineAlignment === defaultFormat.lineAlignment\n            && format.lineLimit === defaultFormat.lineLimit && format.lineSpacing === defaultFormat.lineSpacing &&\n            format.measureTrailingSpaces === defaultFormat.measureTrailingSpaces && format.noClip === defaultFormat.noClip &&\n            format.paragraphIndent === defaultFormat.paragraphIndent && format.rightToLeft === defaultFormat.rightToLeft &&\n            format.subSuperScript === defaultFormat.subSuperScript && format.wordSpacing === defaultFormat.wordSpacing &&\n            format.wordWrap === defaultFormat.wordWrap);\n    };\n    /**\n     * `Raises BeforeCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.RaiseBeforeCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, style) {\n        var args = null;\n        if (this.Grid.raiseBeginCellDraw) {\n            args = new PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style);\n            this.Grid.onBeginCellDraw(args);\n            style = args.style;\n        }\n        return style;\n    };\n    /**\n     * `Raises AfterCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseAfterCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, cellstyle) {\n        var args = null;\n        if (this.Grid.raiseEndCellDraw) {\n            args = new PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, cellstyle);\n            this.Grid.onEndCellDraw(args);\n        }\n    };\n    PdfGridLayouter.prototype.reArrangePages = function (layoutedPages) {\n        var document = this.currentPage.document;\n        var pages = [];\n        var keys = layoutedPages.keys();\n        var values = layoutedPages.values();\n        for (var i = 0; i < keys.length; i++) {\n            var page = keys[i];\n            page.section = null;\n            pages.push(page);\n            document.pages.remove(page);\n        }\n        /* tslint:disable */\n        for (var i = 0; i < layoutedPages.size(); i++) {\n            var count = 0;\n            for (var j = i, count_1 = (layoutedPages.size() / this.columnRanges.length); j < layoutedPages.size(); j += count_1) {\n                var page = pages[j];\n                if (typeof page !== 'undefined' && document.pages.indexOf(page) === -1) {\n                    document.pages.add(page);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    /**\n     * Gets the `layout result`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getLayoutResult = function () {\n        if (this.Grid.isChildGrid && this.Grid.allowRowBreakAcrossPages) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                var row = this.Grid.rows.getRow(i);\n                if (row.rowBreakHeight > 0 && row.repeatFlag) {\n                    this.startLocation.y = this.currentPage.origin.y;\n                }\n            }\n        }\n        var bounds;\n        if (!this.isChanged) {\n            bounds = new RectangleF(this.startLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n                this.startLocation.y));\n        }\n        // else {\n        //     bounds = new RectangleF(this.currentLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n        //                              this.currentLocation.y));\n        // }\n        /* tslint:enable */\n        return new PdfGridLayoutResult(this.currentPage, bounds);\n    };\n    /**\n     * `Recalculate row height` for the split cell to be drawn.\n     * @private\n     */\n    PdfGridLayouter.prototype.ReCalculateHeight = function (row, height) {\n        var newHeight = 0.0;\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            if (!(row.cells.getCell(i).remainingString === null || row.cells.getCell(i).remainingString === '' ||\n                typeof row.cells.getCell(i).remainingString === 'undefined')) {\n                newHeight = Math.max(newHeight, row.cells.getCell(i).measureHeight());\n            }\n        }\n        return Math.max(height, newHeight);\n    };\n    /**\n     * `Raises BeforePageLayout event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds, currentRow) {\n        var cancel = false;\n        if (this.Grid.raiseBeginPageLayout) {\n            var args = new PdfGridBeginPageLayoutEventArgs(currentBounds, currentPage, currentRow);\n            this.Grid.onBeginPageLayout(args);\n            // if (currentBounds !== args.Bounds) {\n            //     this.isChanged = true;\n            //     this.currentLocation = new PointF(args.Bounds.x, args.Bounds.y);\n            //     this.measureColumnsWidth(new RectangleF(new PointF(args.Bounds.x, args.Bounds.y) ,\n            //                                                  new SizeF(args.Bounds.width + args.Bounds.x ,\n            //                                                                 args.Bounds.height)));\n            // }\n            cancel = (typeof args.cancel === 'undefined' ? false : args.cancel);\n            currentBounds = args.bounds;\n            currentRow = args.startRowIndex;\n        }\n        return { returnValue: cancel, currentBounds: currentBounds, currentRowIndex: currentRow };\n    };\n    /**\n     * `Raises PageLayout event` if needed.\n     * @private\n     */\n    PdfGridLayouter.prototype.raisePageLayouted = function (result) {\n        var args = new PdfGridEndPageLayoutEventArgs(result);\n        if (this.Grid.raiseEndPageLayout) {\n            this.Grid.onEndPageLayout(args);\n        }\n        return args;\n    };\n    PdfGridLayouter.prototype.drawRow = function (row, result, height) {\n        if (typeof result === 'undefined') {\n            //.. Check if required space available.\n            //.....If the row conains spans which  falls through more than one page, then draw the row to next page.                        \n            var result_1 = new RowLayoutResult();\n            var rowHeightWithSpan = 0;\n            var location_3 = new PointF(0, 0);\n            var size = new SizeF(0, 0);\n            var isHeader = false;\n            if (row.rowSpanExists) {\n                var maxSpan = 0;\n                var currRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                if (currRowIndex === -1) {\n                    currRowIndex = this.Grid.headers.indexOf(row);\n                    if (currRowIndex !== -1) {\n                        isHeader = true;\n                    }\n                }\n                for (var i = 0; i < row.cells.count; i++) {\n                    var cell = row.cells.getCell(i);\n                    maxSpan = Math.max(maxSpan, cell.rowSpan);\n                }\n                for (var i = currRowIndex; i < currRowIndex + maxSpan; i++) {\n                    rowHeightWithSpan += (isHeader ? this.Grid.headers.getHeader(i).height : this.Grid.rows.getRow(i).height);\n                }\n                // let rowMaxHeight : number = rowHeightWithSpan;\n                // for (let i : number = 0; i < row.cells.count; i++ ) {\n                //     rowMaxHeight = rowMaxHeight > row.cells.getCell(i).height ? rowMaxHeight : row.cells.getCell(i).height;\n                // }\n                // let flag : boolean = true;\n                // let nextRow : PdfGridRow = this.Grid.headers.getHeader(this.Grid.headers.indexOf(row) + 1);\n                // for (let i : number = 0; i < nextRow.cells.count; i++ ) {\n                //     if (nextRow.cells.getCell(i).value !== '' && nextRow.cells.getCell(i).value !== undefined) {\n                //         flag = false;\n                //         break;\n                //     }\n                // }\n                // if ((rowMaxHeight > rowHeightWithSpan) && flag) {\n                //     row.height += (rowMaxHeight - rowHeightWithSpan);\n                // }                \n            }\n            var calculatedHeight = row.rowBreakHeight > 0.0 ? row.rowBreakHeight : row.height;\n            if (typeof this.Grid.isChildGrid !== 'undefined' && this.Grid.isChildGrid && typeof this.Grid.ParentCell !== 'undefined' && this.Grid.ParentCell != null) {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                // if (calculatedHeight + this.Grid.ParentCell.row.grid.style.cellPadding.bottom +\n                //             this.Grid.ParentCell.row.grid.style.cellPadding.top > this.currentPageBounds.height) {\n                //     if (this.Grid.allowRowBreakAcrossPages) {\n                //         result.isFinish = true;\n                //         if ( this.Grid.isChildGrid && row.rowBreakHeight > 0 ) {\n                //             if (this.Grid.ParentCell.row.grid.style.cellPadding !== null) {\n                //                 this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             }\n                //             this.currentBounds.x = this.startLocation.x;\n                //         }\n                //         result.bounds = this.currentBounds ;\n                //         this.drawRowWithBreak(result, row, calculatedHeight);\n                //     } else {\n                //         //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.                       \n                //         if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                //             this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             calculatedHeight = this.currentBounds.height - this.currentBounds.y -\n                //                     this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                //         }\n                //         result.isFinish = false;\n                //         this.drawRow( row, result, calculatedHeight);\n                //     }\n                // } else\n                if (this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom + calculatedHeight >\n                    this.currentPageBounds.height || this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom\n                    + calculatedHeight > this.currentBounds.height || this.currentBounds.y +\n                    this.Grid.ParentCell.row.grid.style.cellPadding.bottom + rowHeightWithSpan > this.currentPageBounds.height) {\n                    //If a row is repeated and still cannot fit in page, proceed draw.\n                    if (typeof this.Grid.ParentCell.row.grid.LayoutFormat !== 'undefined' && this.Grid.ParentCell.row.grid.LayoutFormat.break === PdfLayoutBreakType.FitPage) {\n                        PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                        this.Grid.splitChildRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            // if (this.Grid.isChildGrid && row.rowBreakHeightValue > 0) {\n                            //     // if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            //     //     this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                            //     // }\n                            //     this.currentBounds.x = this.startLocation.x;\n                            // }\n                            result_1.bounds = this.currentBounds;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                        }\n                        // else {\n                        //     result.isFinish = false;\n                        //     row.repeatFlag = false;\n                        //     this.drawRow( row, result, calculatedHeight);\n                        // }\n                    }\n                    // else {\n                    //     result.isFinish = false;\n                    // }\n                }\n                else {\n                    result_1.isFinish = true;\n                    if (row.grid.ParentCell.row.rowBreakHeightValue > 0) {\n                        row.repeatFlag = true;\n                    }\n                    else {\n                        row.repeatFlag = false;\n                        calculatedHeight = row.height;\n                    }\n                    if (this.Grid.isChildGrid && row.rowBreakHeight > 0) {\n                        if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            calculatedHeight += this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                        }\n                    }\n                    this.drawRow(row, result_1, calculatedHeight);\n                }\n            }\n            else {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                if (calculatedHeight > this.currentPageBounds.height) {\n                    if (this.Grid.allowRowBreakAcrossPages) {\n                        result_1.isFinish = true;\n                        //result.bounds = this.currentBounds;\n                        this.drawRowWithBreak(result_1, row, calculatedHeight);\n                        row.isrowFinish = true;\n                        row.repeatFlag = true;\n                        if (row.grid.splitChildRowIndex !== -1) {\n                            result_1.isFinish = false;\n                        }\n                    }\n                    // else {\n                    //     //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.\n                    //     result.isFinish = false;\n                    //     this.drawRow( row, result, calculatedHeight);\n                    // }\n                }\n                else if (this.currentBounds.y + calculatedHeight > this.currentPageBounds.height ||\n                    this.currentBounds.y + calculatedHeight > (this.currentBounds.height + this.startLocation.y) ||\n                    this.currentBounds.y + rowHeightWithSpan > this.currentPageBounds.height) {\n                    // If a row is repeated and still cannot fit in page, proceed draw.\n                    var isFit = false;\n                    if ((this.Grid.allowRowBreakAcrossPages && !this.Grid.repeatHeader && !row.isRowHeightSet && !row.rowMergeComplete)) {\n                        if (this.Grid.LayoutFormat !== null && this.Grid.LayoutFormat.paginateBounds.height > 0) {\n                            isFit = this.isFitToCell((this.currentBounds.height + this.startLocation.y) - this.currentBounds.y, this.Grid, row);\n                        }\n                        else\n                            isFit = this.isFitToCell(this.currentPageBounds.height - this.currentBounds.y, this.Grid, row);\n                        if (isFit) {\n                            this.isPaginate = true;\n                        }\n                    }\n                    else if (this.Grid.allowRowBreakAcrossPages && this.Grid.LayoutFormat != null && this.Grid.LayoutFormat.layout == PdfLayoutType.Paginate && this.Grid.LayoutFormat.break != PdfLayoutBreakType.FitElement && row.isRowHeightSet && this.currentBounds.y + height > this.currentPageBounds.height) {\n                        isFit = this.isFitToCell(this.currentPageBounds.height - this.currentBounds.y, this.Grid, row);\n                        if (!isFit)\n                            isFit = !(this.slr !== null && this.slr.actualSize.height == 0 && this.slr.remainder != null && this.slr.remainder.length > 0 && this.remainderText == this.slr.remainder);\n                        if (isFit && this.slr != null && this.slr.lineCount > 1) {\n                            //It may text cutoff issue\n                            isFit = false;\n                        }\n                        this.remainderText = null;\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex || isFit) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                            if (row.grid.splitChildRowIndex !== -1) {\n                                result_1.isFinish = false;\n                            }\n                        }\n                        else {\n                            result_1.isFinish = false;\n                            this.drawRow(row, result_1, calculatedHeight);\n                        }\n                    }\n                    else {\n                        result_1.isFinish = false;\n                    }\n                }\n                else {\n                    result_1.isFinish = true;\n                    this.drawRow(row, result_1, calculatedHeight);\n                    row.repeatFlag = false;\n                }\n            }\n            return result_1;\n        }\n        else {\n            var skipcell = false;\n            var location_4 = new PointF(this.currentBounds.x, this.currentBounds.y);\n            // if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x && row.width <\n            //                 this.currentPage.getClientSize().width) {\n            //     location.x = this.startLocation.x;\n            // }\n            result.bounds = new RectangleF(location_4, new SizeF(0, 0));\n            height = this.ReCalculateHeight(row, height);\n            for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n                var cancelSpans = ((i > this.cellEndIndex + 1) && (row.cells.getCell(i).columnSpan > 1));\n                // let cancelSpans : boolean = false;\n                if (!cancelSpans) {\n                    for (var j = 1; j < row.cells.getCell(i).columnSpan; j++) {\n                        row.cells.getCell(i + j).isCellMergeContinue = true;\n                    }\n                }\n                var size = new SizeF(this.Grid.columns.getColumn(i).width, height);\n                // if (size.width > this.currentGraphics.clientSize.width) {\n                //     size.width = this.currentGraphics.clientSize.width;\n                // }\n                // if (this.Grid.isChildGrid && this.Grid.style.allowHorizontalOverflow) {\n                //     if (size.width >= this.currentGraphics.clientSize.width) {\n                //         size.width -= 2 * this.currentBounds.x;\n                //     }\n                // }\n                /* tslint:disable */\n                if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n                    this.CheckIfDefaultFormat(row.cells.getCell(i).stringFormat)) {\n                    row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n                }\n                var cellstyle = row.cells.getCell(i).style;\n                var tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                row.cells.getCell(i).style = this.RaiseBeforeCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_4, size), tempValue, cellstyle);\n                //row.cells.getCell(i).style = cellstyle;\n                if (!skipcell) {\n                    if (row.cells.getCell(i).value instanceof PdfGrid) {\n                        var grid = row.cells.getCell(i).value;\n                        grid.parentCellIndex = i;\n                    }\n                    var stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location_4, size), cancelSpans);\n                    if (row.grid.style.allowHorizontalOverflow && (row.cells.getCell(i).columnSpan > this.cellEndIndex ||\n                        i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1) && this.cellEndIndex < row.cells.count - 1) {\n                        row.rowOverflowIndex = this.cellEndIndex;\n                    }\n                    if (row.grid.style.allowHorizontalOverflow && (row.rowOverflowIndex > 0 && (row.cells.getCell(i).columnSpan >\n                        this.cellEndIndex || i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1)) &&\n                        row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1 > 0) {\n                        row.cells.getCell(row.rowOverflowIndex + 1).value = stringResult !== null ? (stringResult.remainder !== undefined) ?\n                            stringResult.remainder : '' : '';\n                        row.cells.getCell(row.rowOverflowIndex + 1).stringFormat = row.cells.getCell(i).stringFormat;\n                        row.cells.getCell(row.rowOverflowIndex + 1).style = row.cells.getCell(i).style;\n                        row.cells.getCell(row.rowOverflowIndex + 1).columnSpan = row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1;\n                    }\n                }\n                /* tslint:enable */\n                tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                if (!cancelSpans) {\n                    this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_4, size), tempValue, row.cells.getCell(i).style);\n                }\n                if (row.cells.getCell(i).value instanceof PdfGrid) {\n                    var grid = row.cells.getCell(i).value;\n                    if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                        location_4.x = grid.rowLayoutBoundsWidth;\n                        location_4.x += grid.style.cellSpacing;\n                    }\n                    else {\n                        location_4.x += this.Grid.columns.getColumn(i).width;\n                    }\n                }\n                else {\n                    location_4.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            if (!row.rowMergeComplete || row.isRowHeightSet) {\n                this.currentBounds.y += height;\n            }\n            result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location_4.x, location_4.y));\n        }\n    };\n    PdfGridLayouter.prototype.isFitToCell = function (currentHeight, grid, gridRow) {\n        var isFit = false;\n        var layouter = new PdfStringLayouter();\n        for (var i = 0; i < gridRow.cells.count; i++) {\n            var cell = gridRow.cells.getCell(i);\n            if (typeof cell.value !== 'undefined' && cell.value !== null && typeof cell.value === 'string') {\n                var font = null;\n                if (typeof cell.style.font !== 'undefined' && cell.style.font != null) {\n                    font = cell.style.font;\n                }\n                else if (typeof cell.row.style.font !== 'undefined' && cell.row.style.font != null) {\n                    font = cell.row.style.font;\n                }\n                else if (typeof cell.row.grid.style.font !== 'undefined' && cell.row.grid.style.font != null) {\n                    font = cell.row.grid.style.font;\n                }\n                else {\n                    font = PdfDocument.defaultFont;\n                }\n                this.remainderText = cell.value;\n                var width = cell.width;\n                var column = grid.columns.getColumn(i);\n                if (column.isCustomWidth && cell.width > column.width) {\n                    width = column.width;\n                }\n                this.slr = layouter.layout(cell.value, font, cell.stringFormat, new SizeF(width, currentHeight), false, this.currentPageBounds);\n                var height = this.slr.actualSize.height;\n                if (cell.value !== '' && height === 0) {\n                    isFit = false;\n                    break;\n                }\n                if (cell.style !== null && cell.style.borders !== null && cell.style.borders.top !== null && cell.style.borders.bottom !== null) {\n                    height += (cell.style.borders.top.width + cell.style.borders.bottom.width) * 2;\n                }\n                if (this.slr.lineCount > 1 && cell.stringFormat != null && cell.stringFormat.lineSpacing != 0) {\n                    height += (this.slr.lineCount - 1) * (cell.style.stringFormat.lineSpacing);\n                }\n                if (cell.style.cellPadding === null) {\n                    height += (grid.style.cellPadding.top + grid.style.cellPadding.bottom);\n                }\n                else {\n                    height += (grid.style.cellPadding.top + grid.style.cellPadding.bottom);\n                }\n                height += grid.style.cellSpacing;\n                if (currentHeight > height || (typeof this.slr.remainder !== 'undefined' && this.slr.remainder !== null)) {\n                    isFit = true;\n                    break;\n                }\n            }\n        }\n        return isFit;\n    };\n    PdfGridLayouter.prototype.drawRowWithBreak = function (result, row, calculateHeight) {\n        var location = new PointF(this.currentBounds.x, this.currentBounds.y);\n        if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x) {\n            location.x = this.startLocation.x;\n        }\n        result.bounds = new RectangleF(location, new SizeF(0, 0));\n        this.gridHeight = row.rowBreakHeight > 0 ? this.currentPageBounds.height : 0;\n        // Calculate the remaining height.\n        if (row.grid.style.cellPadding.top + this.currentBounds.y + row.grid.style.cellPadding.bottom < this.currentPageBounds.height) {\n            row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n        }\n        // else {\n        //     row.rowBreakHeight = calculateHeight;\n        //     result.isFinish = false;\n        //     return;\n        // }\n        // No need to explicit break if the row height is equal to grid height.\n        for (var i = 0; i < row.cells.count; i++) {\n            var cell = row.cells.getCell(i);\n            var cellHeight = cell.measureHeight();\n            if (cellHeight === calculateHeight && cell.value instanceof PdfGrid) {\n                row.rowBreakHeight = 0;\n            }\n            // else if (cellHeight === calculateHeight && (cell.value as PdfGrid) === null) {\n            //     row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n            // }\n        }\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            var cancelSpans = ((row.cells.getCell(i).columnSpan + i > this.cellEndIndex + 1) &&\n                (row.cells.getCell(i).columnSpan > 1));\n            // if (!cancelSpans) {\n            //     for (let k : number = 1; k < row.cells.getCell(i).columnSpan; k++) {\n            //         row.cells.getCell(i + k).isCellMergeContinue = true;\n            //     }\n            //}\n            var size = new SizeF(this.Grid.columns.getColumn(i).width, this.gridHeight > 0.0 ? this.gridHeight :\n                this.currentPageBounds.height);\n            // if (size.width === 0) {\n            //     size = new SizeF(row.cells.getCell(i).width, size.height);\n            // }\n            // if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n            //         this.CheckIfDefaultFormat((row.cells.getCell(i).stringFormat))) {\n            //     row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n            // }\n            var cellstyle1 = row.cells.getCell(i).style;\n            row.cells.getCell(i).style = cellstyle1;\n            var skipcell = false;\n            var stringResult = null;\n            if (!skipcell) {\n                row.cells.getCell(i)._rowHeight = row.height;\n                stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location, size), cancelSpans);\n            }\n            //If still row is to be drawn, set cell finished drawing cell as false and update the text to be drawn.\n            if (row.rowBreakHeight > 0.0) {\n                if (stringResult != null && typeof stringResult.remainder !== 'undefined') {\n                    row.cells.getCell(i).FinishedDrawingCell = false;\n                    row.cells.getCell(i).remainingString = stringResult.remainder == null ? ' ' : stringResult.remainder;\n                    row.rowBreakHeight = calculateHeight - stringResult.actualSize.height;\n                }\n            }\n            result.isFinish = (!result.isFinish) ? result.isFinish : row.cells.getCell(i).FinishedDrawingCell;\n            // let tempValue : string = ((typeof row.cells.getCell(i).value === 'string' &&\n            //row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '') as string;\n            // if (!cancelSpans) {\n            //     // this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i,\n            //     //           new RectangleF(location, size), tempValue, row.cells.getCell(i).style);            \n            //     this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location, size),\n            //                             (row.cells.getCell(i).value as string) ? row.cells.getCell(i).value.toString() : ' ',\n            //                             row.cells.getCell(i).style);\n            //     }                \n            if (row.cells.getCell(i).value instanceof PdfGrid) {\n                var grid = row.cells.getCell(i).value;\n                this.rowBreakPageHeightCellIndex = i;\n                // row.cells.getCell(i).pageCount = grid.listOfNavigatePages.length;\n                // for (let j : number = 0;j<grid.listOfNavigatePages.length;j++){\n                //     let pageIndex : number =grid.listOfNavigatePages.indexOf(j);\n                //             this.Grid.listOfNavigatePages.push(pageIndex);\n                //     }\n                if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                    location.x = this.rowLayoutBoundsWidth;\n                    location.x += grid.style.cellSpacing;\n                }\n                else {\n                    location.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            else {\n                location.x += this.Grid.columns.getColumn(i).width;\n            }\n        }\n        this.currentBounds.y += this.gridHeight > 0.0 ? this.gridHeight : calculateHeight;\n        result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location.x, location.y));\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    PdfGridLayouter.repeatRowIndex = -1;\n    return PdfGridLayouter;\n}(ElementLayouter));\nexport { PdfGridLayouter };\n// recalculateBounds : boolean, clientSize : SizeF\n//Implementation\n/**\n * `Initializes` internal data.\n * @private\n */\n//Internal declaration\nvar PdfGridLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutResult, _super);\n    /**\n     * Constructor\n     * @private\n     */\n    function PdfGridLayoutResult(page, bounds) {\n        return _super.call(this, page, bounds) || this;\n    }\n    return PdfGridLayoutResult;\n}(PdfLayoutResult));\nexport { PdfGridLayoutResult };\n/**\n * `PdfGridLayoutFormat` class represents a flexible grid that consists of columns and rows.\n */\nvar PdfGridLayoutFormat = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutFormat, _super);\n    /**\n     * Initializes a new instance of the `PdfGridLayoutFormat` class.\n     * @private\n     */\n    function PdfGridLayoutFormat(baseFormat) {\n        return _super.call(this, baseFormat) || this;\n    }\n    return PdfGridLayoutFormat;\n}(PdfLayoutFormat));\nexport { PdfGridLayoutFormat };\nvar GridCellEventArgs = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize a new instance for `GridCellEventArgs` class.\n     * @private\n     */\n    function GridCellEventArgs(graphics, rowIndex, cellIndex, bounds, value) {\n        this.gridRowIndex = rowIndex;\n        this.gridCellIndex = cellIndex;\n        this.internalValue = value;\n        this.gridBounds = bounds;\n        this.pdfGraphics = graphics;\n    }\n    Object.defineProperty(GridCellEventArgs.prototype, \"rowIndex\", {\n        // Properties\n        /**\n         * Gets the value of current `row index`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"cellIndex\", {\n        /**\n         * Gets the value of current `cell index`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"value\", {\n        /**\n         * Gets the actual `value` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.gridBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"graphics\", {\n        /**\n         * Gets the instance of `current graphics`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return GridCellEventArgs;\n}());\nexport { GridCellEventArgs };\nvar PdfGridBeginCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StartCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.style = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"skip\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating whether the value of this cell should be `skipped`.\n         * @private\n         */\n        get: function () {\n            return this.bSkip;\n        },\n        set: function (value) {\n            this.bSkip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"style\", {\n        /**\n         * Gets or sets a `style` value of the cell.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridBeginCellDrawEventArgs };\nvar PdfGridEndCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfGridEndCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.cellStyle = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridEndCellDrawEventArgs.prototype, \"style\", {\n        // Propertise\n        /**\n         * Get the `PdfGridCellStyle`.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridEndCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridEndCellDrawEventArgs };\nvar PdfCancelEventArgs = /** @class */ (function () {\n    function PdfCancelEventArgs() {\n    }\n    Object.defineProperty(PdfCancelEventArgs.prototype, \"cancel\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `cancel`.\n         * @private\n         */\n        get: function () {\n            return this.isCancel;\n        },\n        set: function (value) {\n            this.isCancel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCancelEventArgs;\n}());\nexport { PdfCancelEventArgs };\nvar BeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(BeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `BeginPageLayoutEventArgs` class with the specified rectangle and page.\n     * @private\n     */\n    function BeginPageLayoutEventArgs(bounds, page) {\n        var _this = _super.call(this) || this;\n        _this.bounds = bounds;\n        _this.pdfPage = page;\n        return _this;\n    }\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"bounds\", {\n        // Properties\n        /**\n         * Gets or sets value that indicates the lay outing `bounds` on the page.\n         * @private\n         */\n        get: function () {\n            return this.cellBounds;\n        },\n        set: function (value) {\n            this.cellBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `page` where the lay outing should start.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return BeginPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { BeginPageLayoutEventArgs };\n/**\n * `EndPageLayoutEventArgs` class is alternate for end page layout events.\n */\nvar EndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(EndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `EndPageLayoutEventArgs` class. with the specified 'PdfLayoutResult'.\n     * @private\n     */\n    function EndPageLayoutEventArgs(result) {\n        var _this = _super.call(this) || this;\n        _this.layoutResult = result;\n        return _this;\n    }\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"result\", {\n        // Properties\n        /**\n         * Gets the lay outing `result` of the page.\n         * @private\n         */\n        get: function () {\n            return this.layoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"nextPage\", {\n        /**\n         * Gets or sets a value indicating the `next page` where the element should be layout.\n         * @private\n         */\n        get: function () {\n            return this.nextPdfPage;\n        },\n        set: function (value) {\n            this.nextPdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EndPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { EndPageLayoutEventArgs };\n/**\n * `PdfGridBeginPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridBeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridBeginPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginPageLayoutEventArgs(bounds, page, startRow) {\n        var _this = _super.call(this, bounds, page) || this;\n        _this.startRow = startRow;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginPageLayoutEventArgs.prototype, \"startRowIndex\", {\n        // Properties\n        /**\n         * Gets the `start row index`.\n         * @private\n         */\n        get: function () {\n            return this.startRow;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginPageLayoutEventArgs;\n}(BeginPageLayoutEventArgs));\nexport { PdfGridBeginPageLayoutEventArgs };\n/**\n * `PdfGridEndPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridEndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridEndPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndPageLayoutEventArgs(result) {\n        return _super.call(this, result) || this;\n    }\n    return PdfGridEndPageLayoutEventArgs;\n}(EndPageLayoutEventArgs));\nexport { PdfGridEndPageLayoutEventArgs };\nvar RowLayoutResult = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `RowLayoutResult` class.\n     * @private\n     */\n    function RowLayoutResult() {\n        this.layoutedBounds = new RectangleF(0, 0, 0, 0);\n    }\n    Object.defineProperty(RowLayoutResult.prototype, \"isFinish\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is finish`.\n         * @private\n         */\n        get: function () {\n            return this.bIsFinished;\n        },\n        set: function (value) {\n            this.bIsFinished = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RowLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets or sets the `bounds`.\n         * @private\n         */\n        get: function () {\n            return this.layoutedBounds;\n        },\n        set: function (value) {\n            this.layoutedBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RowLayoutResult;\n}());\nexport { RowLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * ShapeLayouter.ts class for EJ2-PDF\n * @private\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfLayoutBreakType, PdfLayoutType } from './../../figures/enum';\nimport { BeginPageLayoutEventArgs, EndPageLayoutEventArgs } from './../../../structured-elements/grid/layout/grid-layouter';\n/**\n * ShapeLayouter class.\n * @private\n */\nvar ShapeLayouter = /** @class */ (function (_super) {\n    __extends(ShapeLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `ShapeLayouter` class.\n     * @private\n     */\n    function ShapeLayouter(element) {\n        var _this = _super.call(this, element) || this;\n        // Fields\n        /**\n         * Initializes the object to store `older form elements` of previous page.\n         * @default 0\n         * @private\n         */\n        _this.olderPdfForm = 0;\n        /**\n         * The `bounds` of the shape element.\n         * * @default new RectangleF()\n         * @private\n         */\n        _this.shapeBounds = new RectangleF();\n        /**\n         * Total Page size of the web page.\n         * * @default 0\n         * @private\n         */\n        _this.totalPageSize = 0;\n        return _this;\n    }\n    Object.defineProperty(ShapeLayouter.prototype, \"element\", {\n        // Properties\n        /**\n         * Gets shape element.\n         * @private\n         */\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Layouts the element.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutInternal = function (param) {\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var shapeLayoutBounds = this.element.getBounds();\n        shapeLayoutBounds.x = 0;\n        shapeLayoutBounds.y = 0;\n        /* tslint:disable */\n        var isEmpty = (this.shapeBounds.x === this.shapeBounds.y && this.shapeBounds.y === this.shapeBounds.width && this.shapeBounds.width === this.shapeBounds.height && this.shapeBounds.height === 0) ? true : false;\n        /* tslint:enable */\n        if ((this.isPdfGrid) && (!(isEmpty))) {\n            shapeLayoutBounds = this.shapeBounds;\n        }\n        var result = null;\n        var pageResult = new ShapeLayoutResult();\n        pageResult.page = currentPage;\n        /*tslint:disable:no-constant-condition */\n        while (true) {\n            // Raise event.\n            var result1 = this.raiseBeforePageLayout(currentPage, currentBounds);\n            currentBounds = result1.currentBounds;\n            var endArgs = null;\n            if (!result1.cancel) {\n                pageResult = this.layoutOnPage(currentPage, currentBounds, shapeLayoutBounds, param);\n                // Raise event.\n                endArgs = this.raiseEndPageLayout(pageResult);\n                result1.cancel = (endArgs === null) ? false : endArgs.cancel;\n            }\n            if (!pageResult.end && !result1.cancel) {\n                currentBounds = this.getPaginateBounds(param);\n                shapeLayoutBounds = this.getNextShapeBounds(shapeLayoutBounds, pageResult);\n                currentPage = (endArgs === null || endArgs.nextPage === null) ?\n                    this.getNextPage(currentPage) : endArgs.nextPage;\n                if (this.isPdfGrid) {\n                    result = this.getLayoutResult(pageResult);\n                    break;\n                }\n            }\n            else {\n                result = this.getLayoutResult(pageResult);\n                break;\n            }\n        }\n        return result;\n    };\n    /**\n     * Raises BeforePageLayout event.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds) {\n        var cancel = false;\n        if (this.element.raiseBeginPageLayout) {\n            var args = new BeginPageLayoutEventArgs(currentBounds, currentPage);\n            this.element.onBeginPageLayout(args);\n            cancel = args.cancel;\n            currentBounds = args.bounds;\n        }\n        return { currentBounds: currentBounds, cancel: cancel };\n    };\n    /**\n     * Raises PageLayout event if needed.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseEndPageLayout = function (pageResult) {\n        var args = null;\n        if (this.element.raiseEndPageLayout) {\n            var res = this.getLayoutResult(pageResult);\n            args = new EndPageLayoutEventArgs(res);\n            this.element.onEndPageLayout(args);\n        }\n        return args;\n    };\n    /**\n     * Creates layout result.\n     * @private\n     */\n    ShapeLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfLayoutResult(pageResult.page, pageResult.bounds);\n        return result;\n    };\n    /**\n     * Calculates the next active shape bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.getNextShapeBounds = function (shapeLayoutBounds, pageResult) {\n        var layoutedBounds = pageResult.bounds;\n        shapeLayoutBounds.y = (shapeLayoutBounds.y + layoutedBounds.height);\n        shapeLayoutBounds.height = (shapeLayoutBounds.height - layoutedBounds.height);\n        return shapeLayoutBounds;\n    };\n    /**\n     * Layouts the element on the current page.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutOnPage = function (currentPage, curBounds, sBounds, param) {\n        var result = new ShapeLayoutResult();\n        curBounds = this.checkCorrectCurrentBounds(currentPage, curBounds, param);\n        var fitToPage = this.fitsToBounds(curBounds, sBounds);\n        var canDraw = !((param.format.break === PdfLayoutBreakType.FitElement)\n            && (!fitToPage && (currentPage === param.page)));\n        var shapeFinished = false;\n        if (canDraw) {\n            var drawRectangle = this.getDrawBounds(curBounds, sBounds);\n            this.drawShape(currentPage.graphics, curBounds, drawRectangle);\n            result.bounds = this.getPageResultBounds(curBounds, sBounds);\n            shapeFinished = ((curBounds.height) >= (sBounds.height));\n        }\n        result.end = (shapeFinished || (param.format.layout === PdfLayoutType.OnePage));\n        result.page = currentPage;\n        return result;\n    };\n    /**\n     * Returns Rectangle for element drawing on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getDrawBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.y = (result.y - shapeLayoutBounds.y);\n        result.height = (result.height + shapeLayoutBounds.y);\n        return result;\n    };\n    /**\n     * Draws the shape.\n     * @private\n     */\n    ShapeLayouter.prototype.drawShape = function (g, currentBounds, drawRectangle) {\n        var gState = g.save();\n        try {\n            g.setClip(currentBounds);\n            this.element.drawGraphicsHelper(g, new PointF(drawRectangle.x, drawRectangle.y));\n        }\n        finally {\n            g.restore(gState);\n        }\n    };\n    /**\n     * Corrects current bounds on the page.\n     * @protected\n     */\n    ShapeLayouter.prototype.checkCorrectCurrentBounds = function (currentPage, curBounds, param) {\n        var pageSize = currentPage.graphics.clientSize;\n        curBounds.width = (curBounds.width > 0) ? curBounds.width : (pageSize.width - curBounds.x);\n        curBounds.height = (curBounds.height > 0) ? curBounds.height : (pageSize.height - curBounds.y);\n        if (this.isPdfGrid) {\n            curBounds.height = (curBounds.height - this.bottomCellPadding);\n        }\n        return curBounds;\n    };\n    /**\n     * Calculates bounds where the shape was layout on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getPageResultBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.height = Math.min(result.height, shapeLayoutBounds.height);\n        return result;\n    };\n    /**\n     * Checks whether shape rectangle fits to the lay outing bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.fitsToBounds = function (currentBounds, shapeLayoutBounds) {\n        var fits = (shapeLayoutBounds.height <= currentBounds.height);\n        return fits;\n    };\n    /**\n     * Initializes the offset `index`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.index = 0;\n    /**\n     * Initializes the `difference in page height`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.splitDiff = 0;\n    /**\n     * Determines the `end of Vertical offset` values.\n     * * @default false\n     * @private\n     */\n    ShapeLayouter.last = false;\n    /**\n     * Determines the document link annotation `border width`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.borderWidth = 0;\n    return ShapeLayouter;\n}(ElementLayouter));\nexport { ShapeLayouter };\n/**\n * Contains lay outing result settings.\n * @private\n */\nvar ShapeLayoutResult = /** @class */ (function () {\n    function ShapeLayoutResult() {\n    }\n    return ShapeLayoutResult;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLayoutElement } from './../layout-element';\nimport { ShapeLayouter } from './shape-layouter';\n/**\n * Base class for the main shapes.\n * @private\n */\nvar PdfShapeElement = /** @class */ (function (_super) {\n    __extends(PdfShapeElement, _super);\n    function PdfShapeElement() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // methods\n    /**\n     * Gets the bounds.\n     * @private\n     */\n    PdfShapeElement.prototype.getBounds = function () {\n        var rect = this.getBoundsInternal();\n        return rect;\n    };\n    /**\n     * `drawGraphicsHelper` the graphics.\n     * @public\n     */\n    PdfShapeElement.prototype.drawGraphicsHelper = function (graphics, location) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException :graphics');\n        }\n        this.drawShapeHelper(graphics, location.x, location.y);\n    };\n    /**\n     * `drawShapeHelper` the graphics.\n     * @private\n     */\n    PdfShapeElement.prototype.drawShapeHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0.5 || y !== 0.5);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    /**\n     * Layouts the element.\n     * @private\n     */\n    PdfShapeElement.prototype.layout = function (param) {\n        var layouter = new ShapeLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    return PdfShapeElement;\n}(PdfLayoutElement));\nexport { PdfShapeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfDrawElement.ts class for EJ2-PDF\n */\nimport { PdfShapeElement } from './pdf-shape-element';\n/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfDrawElement = /** @class */ (function (_super) {\n    __extends(PdfDrawElement, _super);\n    /**\n     * Initializes a new instance of the `PdfDrawElement` class.\n     * @protected\n     */\n    function PdfDrawElement(pen) {\n        var _this = _super.call(this) || this;\n        if (typeof pen !== 'undefined') {\n            _this.mpen = pen;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDrawElement.prototype, \"pen\", {\n        // Properties\n        /**\n         * Gets or sets a pen that will be used to draw the element.\n         * @public\n         */\n        get: function () {\n            return this.mpen;\n        },\n        set: function (value) {\n            this.mpen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDrawElement;\n}(PdfShapeElement));\nexport { PdfDrawElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfFillElement.ts class for EJ2-PDF\n */\nimport { PdfDrawElement } from './draw-element';\nimport { PdfPen } from './../../pdf-pen';\nimport { PdfColor } from './../../pdf-color';\n/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfFillElement = /** @class */ (function (_super) {\n    __extends(PdfFillElement, _super);\n    /**\n     * Initializes a new instance of the `PdfFillElement` class.\n     * @protected\n     */\n    function PdfFillElement(arg1, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store pen.\n         * @private\n         */\n        _this.mbrush = null;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1) || this;\n        }\n        else {\n            _this.mbrush = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfFillElement.prototype, \"brush\", {\n        // Properties\n        /**\n         * Gets or sets a brush of the element.\n         * @public\n         */\n        get: function () {\n            return this.mbrush;\n        },\n        set: function (value) {\n            this.mbrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets the pen. If both pen and brush are not explicitly defined, default pen will be used.\n     * @protected\n     */\n    PdfFillElement.prototype.obtainPen = function () {\n        return ((this.mbrush == null) && (this.pen == null)) ? new PdfPen(new PdfColor(0, 0, 0)) : this.pen;\n    };\n    return PdfFillElement;\n}(PdfDrawElement));\nexport { PdfFillElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Path.ts class for EJ2-PDF\n */\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutFormat } from './../figures/base/element-layouter';\nimport { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PathPointType } from './enum';\nimport { PdfFillElement } from './../figures/base/fill-element';\nimport { PdfFillMode } from './../enum';\n/**\n * `PdfPath` class Implements graphics path, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfPath = /** @class */ (function (_super) {\n    __extends(PdfPath, _super);\n    /**\n     * Initializes a new instance of the `PdfPath` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfPath(arg1, arg2, arg3, arg4) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Local variable to store the points.\n         * @private\n         */\n        _this.mpoints = null;\n        /**\n         * Local variable to store the path Types.\n         * @private\n         */\n        _this.mpathTypes = null;\n        /**\n         * Local variable to store the Start Figure.\n         * @private\n         */\n        _this.mStartFigure = true;\n        /**\n         * Local variable to store the fill Mode.\n         * @private\n         */\n        _this.mfillMode = PdfFillMode.Alternate;\n        /**\n         * Local variable to store the Beziers.\n         * @private\n         */\n        _this.isBeziers3 = false;\n        /**\n         * Local variable to store the xps.\n         * @private\n         */\n        _this.isXps = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1) || this;\n            if (arg2 instanceof PdfBrush) {\n                _this = _super.call(this, arg1, arg2) || this;\n                _this.fillMode = arg3;\n            }\n            else if (arg2 !== null && typeof arg2 !== 'undefined' && arg3 !== null && typeof arg3 !== 'undefined') {\n                _this.addPath(arg2, arg3);\n            }\n        }\n        else if (arg1 instanceof PdfBrush) {\n            _this = _super.call(this, arg1) || this;\n            if (arg2 !== null && typeof arg2 !== 'undefined') {\n                _this.fillMode = arg2;\n            }\n            if (arg3 !== null && typeof arg3 !== 'undefined' && arg4 !== null && typeof arg4 !== 'undefined') {\n                _this.addPath(arg3, arg4);\n            }\n        }\n        else {\n            _this.addPath(arg1, arg2);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPath.prototype, \"fillMode\", {\n        // Properties\n        /**\n         * Gets or sets the fill mode.\n         * @public\n         */\n        get: function () {\n            return this.mfillMode;\n        },\n        set: function (value) {\n            this.mfillMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathPoints\", {\n        /**\n         * Gets the path points.\n         * @public\n         */\n        get: function () {\n            return this.points;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathTypes\", {\n        /**\n         * Gets the path point types.\n         * @public\n         */\n        get: function () {\n            return this.types;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pointCount\", {\n        /**\n         * Gets the point count.\n         * @public\n         */\n        get: function () {\n            var count = 0;\n            if ((this.mpoints != null)) {\n                count = this.mpoints.length;\n            }\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"lastPoint\", {\n        /**\n         * Gets the last points.\n         * @public\n         */\n        get: function () {\n            return this.getLastPoint();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"points\", {\n        /**\n         * Gets the points list.\n         * @private\n         */\n        get: function () {\n            if ((this.mpoints == null)) {\n                this.mpoints = [];\n            }\n            return this.mpoints;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"types\", {\n        /**\n         * Gets the types.\n         * @private\n         */\n        get: function () {\n            if ((this.mpathTypes == null)) {\n                this.mpathTypes = [];\n            }\n            return this.mpathTypes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPath.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof PointF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null) && typeof arg3 === 'number') {\n            var widthValue = (arg1.graphics.clientSize.width - arg2);\n            var layoutRect = new RectangleF(arg2, arg3, widthValue, 0);\n            return this.drawHelper(arg1, layoutRect, arg4);\n        }\n        else if (arg2 instanceof RectangleF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    PdfPath.prototype.addArc = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof RectangleF) {\n            this.addArc(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\n        }\n        else {\n            var points = this.getBezierArcPoints(arg1, arg2, (arg2 + arg3), (arg2 + arg4), arg5, arg6);\n            for (var i = 0; i < points.length; i = i + 8) {\n                /* tslint:disable-next-line:max-line-length */\n                var point = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n                this.addPoints(point, PathPointType.Bezier3);\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PdfPath.prototype.addBezier = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF && arg4 instanceof PointF) {\n            this.addBezier(arg1.x, arg1.y, arg2.x, arg2.y, arg3.x, arg3.y, arg4.x, arg4.y);\n        }\n        else {\n            var points = [];\n            points.push(arg1);\n            points.push(arg2);\n            points.push(arg3);\n            points.push(arg4);\n            points.push(arg5);\n            points.push(arg6);\n            points.push(arg7);\n            points.push(arg8);\n            this.addPoints(points, PathPointType.Bezier3);\n        }\n    };\n    PdfPath.prototype.addEllipse = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.addEllipse(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.startFigure();\n            this.addArc(arg1, arg2, arg3, arg4, 0, 360);\n            this.closeFigure();\n        }\n    };\n    PdfPath.prototype.addLine = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF) {\n            this.addLine(arg1.x, arg1.y, arg2.x, arg2.y);\n        }\n        else {\n            var points = [];\n            points.push(arg1);\n            points.push(arg2);\n            points.push(arg3);\n            points.push(arg4);\n            this.addPoints(points, PathPointType.Line);\n        }\n    };\n    PdfPath.prototype.addPath = function (arg1, arg2) {\n        if (arg1 instanceof PdfPath) {\n            this.addPath(arg1.pathPoints, arg1.pathTypes);\n        }\n        else {\n            if ((arg1 == null)) {\n                throw new Error('ArgumentNullException:pathPoints');\n            }\n            if ((arg2 == null)) {\n                throw new Error('ArgumentNullException:pathTypes');\n            }\n            var count = arg1.length;\n            if ((count !== arg2.length)) {\n                throw new Error('The argument arrays should be of equal length.');\n            }\n        }\n    };\n    PdfPath.prototype.addPie = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof RectangleF) {\n            this.addPie(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\n        }\n        else {\n            this.startFigure();\n            this.addArc(arg1, arg2, arg3, arg4, arg5, arg6);\n            this.addPoint(new PointF((arg1 + (arg3 / 2)), (arg2 + (arg4 / 2))), PathPointType.Line);\n            this.closeFigure();\n        }\n    };\n    /**\n     * `add a polygon` specified by points.\n     * @param points The points of the polygon\n     */\n    PdfPath.prototype.addPolygon = function (points) {\n        var count = (points.length * 2);\n        var p = [];\n        this.startFigure();\n        for (var i = 0; i < points.length; i++) {\n            p.push(points[i].x);\n            p.push(points[i].y);\n        }\n        this.addPoints(p, PathPointType.Line);\n        this.closeFigure();\n    };\n    PdfPath.prototype.addRectangle = function (arg1, y, width, height) {\n        if (arg1 instanceof RectangleF) {\n            this.addRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            var points = [];\n            this.startFigure();\n            points.push(arg1);\n            points.push(y);\n            points.push((arg1 + width));\n            points.push(y);\n            points.push((arg1 + width));\n            points.push((y + height));\n            points.push(arg1);\n            points.push((y + height));\n            this.addPoints(points, PathPointType.Line);\n            this.closeFigure();\n        }\n    };\n    /**\n     * Starts a new figure.\n     * @public\n     */\n    PdfPath.prototype.startFigure = function () {\n        this.mStartFigure = true;\n    };\n    /**\n     * Closed all non-closed figures.\n     * @public\n     */\n    PdfPath.prototype.closeAllFigures = function () {\n        var startPath = this.pathPoints[0];\n        for (var i = 0; i < this.mpathTypes.length; i++) {\n            var pt = ((this.types[i]));\n            var flag = false;\n            if (((i !== 0) && (pt === PathPointType.Start))) {\n                this.closeFigure((i - 1));\n                flag = true;\n            }\n            else if (((i === (this.mpathTypes.length - 1)) && (!flag && this.isXps))) {\n                if ((startPath.x === this.pathPoints[i].y)) {\n                    this.closeFigure(i);\n                }\n            }\n        }\n    };\n    /**\n     * Gets the last point.\n     * @public\n     */\n    PdfPath.prototype.getLastPoint = function () {\n        var lastPoint = new PointF(0, 0);\n        var count = this.pointCount;\n        if (((count > 0) && (this.mpoints != null))) {\n            lastPoint.x = this.mpoints[(count - 1)].x;\n            lastPoint.y = this.mpoints[(count - 1)].y;\n        }\n        return lastPoint;\n    };\n    /**\n     * Gets the bezier points for arc constructing.\n     * @public\n     */\n    PdfPath.prototype.getBezierArcPoints = function (x1, y1, x2, y2, s1, e1) {\n        if ((x1 > x2)) {\n            var tmp = void 0;\n            tmp = x1;\n            x1 = x2;\n            x2 = tmp;\n        }\n        if ((y2 > y1)) {\n            var tmp = void 0;\n            tmp = y1;\n            y1 = y2;\n            y2 = tmp;\n        }\n        var fragAngle;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle = (e1 / numFragments);\n        }\n        var xcen = ((x1 + x2) / 2);\n        var ycen = ((y1 + y2) / 2);\n        var rx = ((x2 - x1) / 2);\n        var ry = ((y2 - y1) / 2);\n        var halfAng = ((fragAngle * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var theta0 = (((s1 + (i * fragAngle)) * (Math.PI / 180)));\n            var theta1 = (((s1 + ((i + 1) * fragAngle)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(theta0));\n            var cos1 = (Math.cos(theta1));\n            var sin0 = (Math.sin(theta0));\n            var sin1 = (Math.sin(theta1));\n            if ((fragAngle > 0)) {\n                /* tslint:disable-next-line:max-line-length */\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                /* tslint:disable-next-line:max-line-length */\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointList;\n    };\n    /**\n     * `getBoundsInternal` Returns a rectangle that bounds this element.\n     * @public\n     */\n    PdfPath.prototype.getBoundsInternal = function () {\n        var points = this.pathPoints;\n        var bounds = new RectangleF(0, 0, 0, 0);\n        if ((points.length > 0)) {\n            var xmin = points[0].x;\n            var xmax = points[0].x;\n            var ymin = points[0].y;\n            var ymax = points[0].y;\n            for (var i = 1; i < points.length; i++) {\n                var point = points[i];\n                xmin = Math.min(point.x, xmin);\n                xmax = Math.max(point.x, xmax);\n                ymin = Math.min(point.y, ymin);\n                ymax = Math.max(point.y, ymax);\n            }\n            bounds = new RectangleF(xmin, ymin, (xmax - xmin), (ymax - ymin));\n        }\n        return bounds;\n    };\n    /**\n     * `drawInternal` Draws an element on the Graphics.\n     * @param graphics Graphics context where the element should be printed.\n     * @public\n     */\n    PdfPath.prototype.drawInternal = function (graphics) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException :graphics');\n        }\n        graphics.drawPath(this.obtainPen(), this.brush, this);\n    };\n    PdfPath.prototype.addPoints = function (points, pointType, startIndex, endIndex) {\n        if (typeof startIndex === 'undefined' && typeof endIndex === 'undefined') {\n            this.addPoints(points, pointType, 0, points.length);\n        }\n        else {\n            for (var i = startIndex; i < endIndex; i++) {\n                var point = new PointF(points[i], points[(i + 1)]);\n                if ((i === startIndex)) {\n                    if (((this.pointCount <= 0) || this.mStartFigure)) {\n                        this.addPoint(point, PathPointType.Start);\n                        this.mStartFigure = false;\n                    }\n                    else if (((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y) && !this.isBeziers3)) {\n                        this.addPoint(point, PathPointType.Line);\n                    }\n                    else if ((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y)) {\n                        this.addPoint(point, PathPointType.Bezier3);\n                    }\n                }\n                else {\n                    this.addPoint(point, pointType);\n                }\n                i++;\n            }\n        }\n    };\n    /**\n     * `add a point` Adds the point and its type\n     * @param points The points.\n     * @param pointType Type of the points.\n     * @private\n     */\n    PdfPath.prototype.addPoint = function (point, pointType) {\n        this.points.push(point);\n        this.types.push((pointType));\n    };\n    PdfPath.prototype.closeFigure = function (index) {\n        if (typeof index === 'undefined') {\n            if ((this.pointCount > 0)) {\n                this.closeFigure(this.pointCount - 1);\n            }\n            this.startFigure();\n        }\n        else {\n            if ((index < 0)) {\n                throw new Error('IndexOutOfRangeException()');\n            }\n            var pt = ((this.types[index]));\n            pt = (pt | PathPointType.CloseSubpath);\n            this.types[index] = (pt);\n        }\n    };\n    return PdfPath;\n}(PdfFillElement));\nexport { PdfPath };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPen } from './../pdf-pen';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { PdfFillElement } from './../figures/base/fill-element';\n/**\n * `PdfRectangleArea` class Implements graphics rectangle area, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfRectangleArea = /** @class */ (function (_super) {\n    __extends(PdfRectangleArea, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfRectangleArea(arg1, arg2, arg3, arg4, arg5, arg6) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * public variable to store the rectangle.\n         * @public\n         */\n        _this.bounds = new RectangleF(0, 0, 0, 0);\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1, arg2) || this;\n            if (arg3 instanceof RectangleF) {\n                _this.bounds = arg3;\n            }\n            else {\n                _this.bounds = new RectangleF(arg3, arg4, arg5, arg6);\n            }\n        }\n        else if (arg1 instanceof RectangleF) {\n            _this.bounds = arg1;\n        }\n        else {\n            _this.bounds = new RectangleF(arg1, arg2, arg3, arg4);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfRectangleArea.prototype, \"x\", {\n        //Properties\n        /**\n         * Gets or sets the X co-ordinate of the upper-left corner of this the element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.x;\n        },\n        set: function (value) {\n            this.bounds.x = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"y\", {\n        /**\n         * Gets or sets the Y co-ordinate of the upper-left corner of this the element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.y;\n        },\n        set: function (value) {\n            this.bounds.y = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"width\", {\n        /**\n         * Gets or sets the width of this element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.width;\n        },\n        set: function (value) {\n            this.bounds.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"height\", {\n        /**\n         * Gets or sets the height of this element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.height;\n        },\n        set: function (value) {\n            this.bounds.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    PdfRectangleArea.prototype.getBoundsInternal = function () {\n        return this.bounds;\n    };\n    return PdfRectangleArea;\n}(PdfFillElement));\nexport { PdfRectangleArea };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPen } from './../pdf-pen';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { PdfRectangleArea } from './rectangle-area';\n/**\n * `PdfEllipsePart` class Implements graphics ellipse part, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfEllipsePart = /** @class */ (function (_super) {\n    __extends(PdfEllipsePart, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfEllipsePart(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * public variable to store the start angle.\n         * @public\n         */\n        _this.startAngle = 0;\n        /**\n         * public variable to store the sweep angle.\n         * @public\n         */\n        _this.sweepAngle = 0;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof RectangleF && typeof arg2 !== 'undefined' && typeof arg3 !== 'undefined') {\n            _this = _super.call(this, arg1) || this;\n            _this.startAngle = arg2;\n            _this.sweepAngle = arg3;\n        }\n        else if (arg1 instanceof PdfPen) {\n            if (arg3 instanceof RectangleF) {\n                _this = _super.call(this, arg1, arg2, arg3) || this;\n                _this.startAngle = arg4;\n                _this.sweepAngle = arg5;\n            }\n            else {\n                _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;\n                _this.startAngle = arg7;\n                _this.sweepAngle = arg8;\n            }\n        }\n        else {\n            _this = _super.call(this, arg1, arg2, arg3, arg4) || this;\n            _this.startAngle = arg5;\n            _this.sweepAngle = arg6;\n        }\n        return _this;\n    }\n    return PdfEllipsePart;\n}(PdfRectangleArea));\nexport { PdfEllipsePart };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * arc.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutFormat } from './../figures/base/element-layouter';\nimport { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfEllipsePart } from './../figures/ellipse-part';\n/**\n * `PdfArc` class Implements graphics arc, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfArc = /** @class */ (function (_super) {\n    __extends(PdfArc, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfArc(arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        var _this = this;\n        if (typeof arg1 === 'undefined') {\n            _this = _super.call(this) || this;\n        }\n        else if (arg1 instanceof RectangleF) {\n            _this = _super.call(this, arg1, arg2, arg3) || this;\n        }\n        else if (arg1 instanceof PdfPen) {\n            if (arg2 instanceof RectangleF) {\n                _this = _super.call(this, arg1, null, arg2, arg3, arg4) || this;\n            }\n            else if (typeof arg6 === 'undefined' && typeof arg7 === 'undefined') {\n                _this = _super.call(this, arg1, null, 0, 0, arg2, arg3, arg4, arg5) || this;\n            }\n            else if (typeof arg6 !== 'undefined' && typeof arg7 !== 'undefined') {\n                _this = _super.call(this, arg1, null, arg2, arg3, arg4, arg5, arg6, arg7) || this;\n            }\n        }\n        else if (typeof arg1 !== 'undefined' && typeof arg5 === 'undefined' && typeof arg6 === 'undefined') {\n            _this = _super.call(this, 0, 0, arg1, arg2, arg3, arg4) || this;\n        }\n        else if (typeof arg1 !== 'undefined' && typeof arg5 !== 'undefined' && typeof arg6 !== 'undefined') {\n            _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;\n        }\n        return _this;\n    }\n    PdfArc.prototype.draw = function (argu1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(argu1, arg2.x, arg2.y);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(argu1, arg2, null);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(argu1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof PointF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(argu1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null) && typeof arg3 === 'number') {\n            var widthValue = (argu1.graphics.clientSize.width - arg2);\n            var layoutRect = new RectangleF(arg2, arg3, widthValue, 0);\n            return this.drawHelper(argu1, layoutRect, arg4);\n        }\n        else {\n            return this.drawHelper(argu1, arg2, arg3);\n        }\n    };\n    // Implementation\n    /**\n     * `drawInternal` Draws an element on the Graphics.\n     * @param graphics Graphics context where the element should be printed.\n     *\n     */\n    PdfArc.prototype.drawInternal = function (graphics) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException : graphics');\n        }\n        graphics.drawArc(this.obtainPen(), this.bounds, this.startAngle, this.sweepAngle);\n    };\n    return PdfArc;\n}(PdfEllipsePart));\nexport { PdfArc };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTrueTypeFont.ts class for EJ2-PDF\n */\nimport { UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { PdfFont } from './pdf-font';\nimport { PdfFontStyle } from './enum';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfTextDirection } from './../enum';\nimport { RtlRenderer } from './rtl-renderer';\n//https://www.giftofspeed.com/base64-encoder/\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size) || this;\n        /**\n         * Indicates whether the font is embedded or not.\n         * @private\n         */\n        _this.isEmbedFont = false;\n        /**\n         * Indicates whether the font is unicoded or not.\n         * @private\n         */\n        _this.isUnicode = true;\n        if (style !== undefined) {\n            _this.createFontInternal(base64String, style);\n        }\n        else {\n            _this.createFontInternal(base64String, PdfFontStyle.Regular);\n        }\n        return _this;\n    }\n    PdfTrueTypeFont.prototype.equalsToFont = function (font) {\n        var result = false;\n        //let result : boolean = this.fontInternal.equalsToFont(font);\n        return result;\n    };\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n            var returnValue = this.getUnicodeLineWidth(line, /*out*/ width, format);\n            width = returnValue.width;\n        }\n        else {\n            width = this.fontInternal.getLineWidth(line);\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Returns width of the char.\n     */\n    PdfTrueTypeFont.prototype.getCharWidth = function (charCode, format) {\n        var codeWidth = this.fontInternal.getCharWidth(charCode);\n        var size = this.metrics.getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    //Implementation\n    PdfTrueTypeFont.prototype.createFontInternal = function (base64String, style) {\n        this.fontInternal = new UnicodeTrueTypeFont(base64String, this.size);\n        this.calculateStyle(style);\n        this.initializeInternals();\n    };\n    PdfTrueTypeFont.prototype.calculateStyle = function (style) {\n        var iStyle = this.fontInternal.ttfMetrics.macStyle;\n        if ((style & PdfFontStyle.Underline) !== 0) {\n            iStyle |= PdfFontStyle.Underline;\n        }\n        if ((style & PdfFontStyle.Strikeout) !== 0) {\n            iStyle |= PdfFontStyle.Strikeout;\n        }\n        this.setStyle(iStyle);\n    };\n    PdfTrueTypeFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        if (PdfDocument.enableCache) {\n            // Search for the similar fonts.\n            equalFont = PdfDocument.cache.search(this);\n        }\n        var internals = null;\n        // There is not equal font in the cache.\n        if (equalFont !== null && equalFont !== undefined) {\n            // Get the settings from the cached font.\n            internals = equalFont.getInternals();\n            var metrics = equalFont.metrics;\n            metrics = metrics.clone();\n            metrics.size = this.size;\n            this.metrics = metrics;\n            this.fontInternal = equalFont.fontInternal;\n        }\n        else {\n            if (equalFont == null) {\n                if (this.fontInternal instanceof UnicodeTrueTypeFont) {\n                    this.fontInternal.isEmbed = this.isEmbedFont;\n                }\n                this.fontInternal.createInternals();\n                internals = this.fontInternal.getInternals();\n                this.metrics = this.fontInternal.metrics;\n            }\n        }\n        this.metrics.isUnicodeFont = true;\n        this.setInternals(internals);\n        //this.ttfReader = (this.fontInternal as UnicodeTrueTypeFont).ttfReader;\n    };\n    /**\n     * Stores used symbols.\n     */\n    PdfTrueTypeFont.prototype.setSymbols = function (text) {\n        var internalFont = this.fontInternal;\n        if (internalFont != null) {\n            internalFont.setSymbols(text);\n        }\n    };\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"Unicode\", {\n        /**\n         * Property\n         *\n         */\n        get: function () {\n            return this.isUnicode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // public get Font() : UnicodeTrueTypeFont {\n    //     return this.fontInternal as UnicodeTrueTypeFont;\n    // }\n    PdfTrueTypeFont.prototype.getUnicodeLineWidth = function (line, /*out*/ width, format) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        width = 0;\n        var glyphIndices = null;\n        var rtlRender = new RtlRenderer();\n        /* tslint:disable-next-line:max-line-length */\n        var result = rtlRender.getGlyphIndex(line, this, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, /*out*/ glyphIndices, true);\n        var resultGlyph = result.success;\n        glyphIndices = result.glyphs;\n        if (resultGlyph && glyphIndices !== null) {\n            var ttfReader = this.fontInternal.ttfReader;\n            for (var i = 0, len = glyphIndices.length; i < len; i++) {\n                var glyphIndex = glyphIndices[i];\n                var glyph = ttfReader.getGlyph(glyphIndex);\n                if (glyph !== null && typeof glyph !== 'undefined') {\n                    width += glyph.width;\n                }\n            }\n        }\n        return { success: resultGlyph, width: width };\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\n","/**\n * PdfPageTemplateElement.ts class for EJ2-Pdf\n */\nimport { PdfDockStyle, PdfAlignmentStyle, TemplateType } from './enum';\nimport { PointF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTemplate } from './../graphics/figures/pdf-template';\nimport { PdfPage } from './pdf-page';\nimport { RectangleF } from './../drawing/pdf-drawing';\n/**\n * Describes a `page template` object that can be used as header/footer, watermark or stamp.\n */\nvar PdfPageTemplateElement = /** @class */ (function () {\n    /* tslint:disable */\n    function PdfPageTemplateElement(arg1, arg2, arg3, arg4, arg5) {\n        if (arg1 instanceof RectangleF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, null);\n        }\n        else if (arg1 instanceof RectangleF && arg2 instanceof PdfPage && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, arg2);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, null);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, arg3);\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1.width, arg1.height, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, arg3);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n        }\n        else {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n            // this.graphics.colorSpace = this.page.document.colorSpace;\n        }\n        /* tslint:enable */\n    }\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"dock\", {\n        // Properties\n        /**\n         * Gets or sets the `dock style` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.dockStyle;\n        },\n        set: function (value) {\n            // if (this.dockStyle !== value && this.Type === TemplateType.None) {\n            this.dockStyle = value;\n            // Reset alignment.\n            this.resetAlignment();\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"alignment\", {\n        /**\n         * Gets or sets `alignment` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.alignmentStyle;\n        },\n        set: function (value) {\n            // if (this.alignmentStyle !== value) {\n            this.setAlignment(value);\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"foreground\", {\n        /**\n         * Indicates whether the page template is located `in front of the page layers or behind of it`.\n         * @private\n         */\n        get: function () {\n            return this.isForeground;\n        },\n        set: function (value) {\n            // if (this.foreground !== value) {\n            this.isForeground = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"background\", {\n        /**\n         * Indicates whether the page template is located `behind of the page layers or in front of it`.\n         * @private\n         */\n        get: function () {\n            return !this.isForeground;\n        },\n        set: function (value) {\n            this.isForeground = !value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"location\", {\n        /**\n         * Gets or sets `location` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.currentLocation;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"x\", {\n        /**\n         * Gets or sets `X` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.x : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.x = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"y\", {\n        /**\n         * Gets or sets `Y` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.y : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.y = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"size\", {\n        /**\n         * Gets or sets `size` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.size;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.template.reset(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"width\", {\n        /**\n         * Gets or sets `width` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.width;\n        },\n        set: function (value) {\n            if (this.template.width !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.width = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"height\", {\n        /**\n         * Gets or sets `height` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.height;\n        },\n        set: function (value) {\n            if (this.template.height !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.height = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"graphics\", {\n        /**\n         * Gets `graphics` context of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"template\", {\n        /**\n         * Gets Pdf `template` object.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.pdfTemplate === 'undefined' || this.pdfTemplate == null) {\n            //     this.pdfTemplate = new PdfTemplate(this.size);\n            // }\n            return this.pdfTemplate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"type\", {\n        /**\n         * Gets or sets `type` of the usage of this page template.\n         * @private\n         */\n        get: function () {\n            return this.templateType;\n        },\n        set: function (value) {\n            this.updateDocking(value);\n            this.templateType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"bounds\", {\n        /**\n         * Gets or sets `bounds` of the page template.\n         * @public\n         */\n        get: function () {\n            return new RectangleF(new PointF(this.x, this.y), this.size);\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.location = new PointF(value.x, value.y);\n                this.size = new SizeF(value.width, value.height);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize Bounds` Initialize the bounds value of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.InitiateBounds = function (arg1, arg2, arg3, arg4, arg5) {\n        this.x = arg1;\n        this.y = arg2;\n        this.pdfTemplate = new PdfTemplate(arg3, arg4);\n        // this.graphics.colorSpace = this.page.document.colorSpace;\n    };\n    /**\n     * `Updates Dock` property if template is used as header/footer.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.updateDocking = function (type) {\n        if (type !== TemplateType.None) {\n            switch (type) {\n                case TemplateType.Top:\n                    this.dock = PdfDockStyle.Top;\n                    break;\n                case TemplateType.Bottom:\n                    this.dock = PdfDockStyle.Bottom;\n                    break;\n                case TemplateType.Left:\n                    this.dock = PdfDockStyle.Left;\n                    break;\n                case TemplateType.Right:\n                    this.dock = PdfDockStyle.Right;\n                    break;\n            }\n            this.resetAlignment();\n        }\n    };\n    /**\n     * `Resets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.resetAlignment = function () {\n        this.alignment = PdfAlignmentStyle.None;\n    };\n    /**\n     * `Sets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.setAlignment = function (alignment) {\n        if (this.dock === PdfDockStyle.None) {\n            this.alignmentStyle = alignment;\n        }\n        else {\n            // Template is docked and alignment has been changed.\n            var canBeSet = false;\n            switch (this.dock) {\n                case PdfDockStyle.Left:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.MiddleLeft ||\n                        alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Top:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.TopCenter ||\n                        alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Right:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.MiddleRight ||\n                        alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Bottom:\n                    canBeSet = (alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.BottomCenter\n                        || alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Fill:\n                    canBeSet = (alignment === PdfAlignmentStyle.MiddleCenter || alignment === PdfAlignmentStyle.None);\n                    break;\n            }\n            if (canBeSet) {\n                this.alignmentStyle = alignment;\n            }\n        }\n    };\n    /**\n     * Draws the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.draw = function (layer, document) {\n        var page = layer.page;\n        var bounds = this.calculateBounds(page, document);\n        layer.graphics.drawPdfTemplate(this.template, new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n    };\n    /**\n     * Calculates bounds of the page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.calculateBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.alignmentStyle !== PdfAlignmentStyle.None) {\n            result = this.getAlignmentBounds(page, document);\n        }\n        else if (this.dockStyle !== PdfDockStyle.None) {\n            result = this.getDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleAlignmentBounds(page, document);\n        }\n        else {\n            result = this.getTemplateAlignmentBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleAlignmentBounds = function (page, document) {\n        var bounds = this.bounds;\n        var pdfSection = page.section;\n        var actualBounds = pdfSection.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                x = 0;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                x = actualBounds.width - this.width;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = 0;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                x = 0;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                x = actualBounds.width - this.width;\n                y = actualBounds.height - this.height;\n                break;\n        }\n        bounds.x = x;\n        bounds.y = y;\n        return bounds;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                if (this.type === TemplateType.Left) {\n                    x = this.convertSign(actualBounds.x);\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = this.convertSign(actualBounds.x);\n                    y = this.convertSign(actualBounds.y);\n                }\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = this.convertSign(actualBounds.y);\n                break;\n            case PdfAlignmentStyle.TopRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = this.convertSign(actualBounds.y);\n                }\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = this.convertSign(actualBounds.x);\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                if (this.type === TemplateType.Left) {\n                    x = this.convertSign(actualBounds.x);\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = this.convertSign(actualBounds.x);\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n        }\n        result.x = x;\n        result.y = y;\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getDockBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleDockBounds(page, document);\n        }\n        else {\n            result = this.getTemplateDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = 0;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = 0;\n                y = 0;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = 0;\n                y = actualBounds.height - this.height;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Calculates template bounds basing on docking if template is a page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var actualSize = section.pageSettings.getActualSize();\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = this.convertSign(actualBounds.x);\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = this.convertSign(actualBounds.x);\n                y = this.convertSign(actualBounds.y);\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y = actualSize.height - actualBounds.y;\n                }\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = this.convertSign(actualBounds.x);\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y -= actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Ignore value zero, otherwise convert sign.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.convertSign = function (value) {\n        return (value !== 0 || (value === 0 && 1 / value === -Infinity)) ? -value : value;\n    };\n    return PdfPageTemplateElement;\n}());\nexport { PdfPageTemplateElement };\n"],"names":["defaultToString","item","Object","prototype","toString","call","Dictionary","toStringFunction","this","table","nElements","toStr","getValue","key","pair","value","setValue","k","remove","previousElement","keys","keysArray","namesOfKeys","index1","length","pair1","push","values","valuesArray","namesOfValues","index2","pair2","containsKey","clear","size","PdfName","stringStartMark","internalValue","isSaving6","position6","normalizeValue","defineProperty","get","status6","set","enumerable","configurable","index6","val","save","writer","write","escapeString","clone","crossTable","newName","stringValue","result","i","len_1","ch","delimiters","indexOf","c","replacements","Operators","forTest","obj","endObj","r","whiteSpace","slash","newLine","stream","endStream","xref","f","n","trailer","startxref","eof","header","beginText","endText","beginPath","appendLineSegment","stroke","fill","fillEvenOdd","fillStroke","fillStrokeEvenOdd","appendbeziercurve","appendRectangle","saveState","restoreState","paintXObject","modifyCtm","modifyTM","setLineWidth","setLineCapStyle","setLineJoinStyle","setDashPattern","setFlatnessTolerance","closePath","closeStrokePath","closeFillStrokePath","setCharacterSpace","setWordSpace","setHorizontalScaling","setTextLeading","setFont","setRenderingMode","setTextRise","setTextScaling","setCoords","goToNextLine","setText","setTextWithFormatting","setTextOnNewLine","selectcolorspaceforstroking","selectcolorspacefornonstroking","setrbgcolorforstroking","setrbgcolorfornonstroking","setcmykcolorforstroking","setcmykcolorfornonstroking","setgraycolorforstroking","setgraycolorfornonstroking","clipPath","clipPathEvenOdd","endPath","setGraphicsState","comment","evenOdd","setMiterLimit","setColorAndPattern","setColorAndPatternStroking","DictionaryProperties","pages","kids","count","resources","type","mediaBox","parent","root","decodeParms","filter","font","type1","baseFont","encoding","subtype","contents","procset","colorSpace","extGState","pattern","xObject","width","height","bitsPerComponent","image","dctdecode","columns","blackIs1","s","predictor","deviceRgb","next","action","link","a","annot","p","rect","uri","annots","ca","CA","xyz","fit","dest","BM","flatedecode","rotate","bBox","form","w","cIDFontType2","cIDToGIDMap","identity","dw","fontDescriptor","cIDSystemInfo","fontName","flags","fontBBox","missingWidth","stemV","italicAngle","capHeight","ascent","descent","leading","avgWidth","fontFile2","maxWidth","xHeight","stemH","registry","ordering","supplement","type0","identityH","toUnicode","descendantFonts","background","shading","matrix","antiAlias","function","extend","shadingType","coords","domain","range","functionType","bitsPerSample","patternType","paintType","tilingType","xStep","yStep","viewerPreferences","centerWindow","displayTitle","fitWindow","hideMenuBar","hideToolBar","hideWindowUI","pageMode","pageLayout","duplex","printScaling","PdfDictionary","dictionary","position7","primitiveItems","prefix","suffix","object","archive","isResource","encrypt","dictionaryProperties","items","index","status","freezeChanges","status7","isSaving7","index7","getArchive","setArchive","setEncrypt","modify","getEncrypt","freezer","bChanged","onBeginSave","beginSave","sender","onFontDictionaryBeginSave","fontDictionaryBeginSave","onDescendantFontBeginSave","descendantFontBeginSave","onTemplateBeginSave","pageBeginDrawTemplate","pageBeginSave","onBeginAnnotationSave","annotationBeginSave","onSectionBeginSave","saveEvent","sectionBeginSave","state","bRaiseEvent","Count","saveItems","SaveSectionCollectionEventHandler","SaveDescendantFontEventHandler","SaveFontDictionaryEventHandler","SaveAnnotationEventHandler","SaveSectionEventHandler","SaveTemplateEventHandler","PdfNumber","position5","integer","status5","isSaving5","index5","intValue","floatToString","number","returnString","toFixed","min","x","y","z","Math","PdfArray","array","startMark","endMark","position9","clonedObject9","isFont","internalElements","tempArray","elements","tempNumberArray","pdfNumber","add","status9","isSaving9","index9","pdfCrossTable","element","markedChange","contains","tempElement","inputElement","getItems","len","newArray","fromRectangle","bounds","insert","tempElements","markChanged","removeAt","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","hasOwnProperty","__","constructor","create","PdfStream","_super","data","_this","dicPrefix","dicSuffix","clonedObject2","bCompress","dataStream2","bCompress2","clearStream","internalStream","text","Error","writeBytes","String","fromCharCode","onCmapBeginSave","cmapBeginSave","onFontProgramBeginSave","fontProgramBeginSave","compressContent","byteArray","charCodeAt","dataArray","Uint8Array","sw","CompressedStreamWriter","close","getCompressedString","addFilter","filterName","PdfReferenceHolder","name","bytesToString","output","SaveCmapEventHandler","SaveFontProgramEventHandler","InternalEnum","ForceEncoding","SourceType","PdfString","bHex","position1","clonedObject1","bDecrypted","isParentDecrypted","isPacked","isFormField","isColorSpace","isHexString","status1","isSaving1","bConverted","bForceEncoding","bytesToHex","bytes","undefined","encode","Ascii","pdfEncode","stringMark","escapeSymbols","currentData","CrossTable","newString","toUnicodeArray","bAddPrefix","code","byteToString","hexStringMark","hexFormatPattern","PdfReference","objNumber","genNumber","index3","position3","Number","status3","isSaving3","obj1","obj2","index4","position4","objectIndex","initialize","status4","isSaving4","primitiveObject","pdfReference","tempObj","position","cTable","document","isSaving","getReference","PdfAction","pdfDictionary","PdfUriAction","uniformResourceIdentifier","PdfHorizontalAlignment","PdfVerticalAlignment","PdfTextAlignment","TextRenderingMode","PdfLineJoin","PdfLineCap","PdfDashStyle","PdfFillMode","PdfColorSpace","PdfBlendMode","PdfGraphicsUnit","PdfGridImagePosition","PdfTextDirection","PdfColor","color1","color2","color3","color4","assignRGB","filled","redColor","greenColor","g","blueColor","grayColor","gray","alpha","maxColourChannelValue","cyanColor","magentaColor","yellowColor","blackColor","assignCMYK","red","green","blue","black","cyan","magenta","yellow","isEmpty","str","Rgb","rgbToString","GrayScale","grayScaleToString","Cmyk","cmykToString","ifStroking","colour","grayStringsSroke","grayStringsFill","rgbStrings","m","toArray","PointF","SizeF","RectangleF","arg1","arg2","arg3","arg4","pointf","sizef","Rectangle","left","top","right","bottom","topLeft","PdfBrush","PdfSolidBrush","color","pdfColor","monitorChanges","brush","streamWriter","getResources","saveChanges","currentColorSpace","diff","setColorAndSpace","resetChanges","PdfFontStyle","PdfFontFamily","PdfFontType","PdfWordWrapType","PdfSubSuperScript","FontEncoding","TtfCmapFormat","TtfCmapEncoding","TtfPlatformID","TtfMicrosoftEncodingID","TtfMacintoshEncodingID","FontDescriptorFlags","TtfCompositeGlyphFlags","PdfStringFormat","scalingFactor","wordWrapType","Word","internalLineLimit","textAlignment","verticalAlignment","direction","Top","isRightToLeft","internalCharacterSpacing","internalWordSpacing","clip","pdfSubSuperScript","None","internalParagraphIndent","firstLineIndent","trailingSpaces","isNoClip","initialLineIndent","StringTokenizer","textValue","currentPosition","getCharsCount","symbols","numSymbols","curIndex","readLine","pos","substr","text2","peekLine","line","readWord","peekWord","word","read","end","num","builder","peek","readToEnd","symbol","tab","spaces","whiteSpacePattern","PdfStringLayouter","isOverloadWithPosition","layout","arg5","arg6","arg7","clientSize","doLayout","format","rectSize","pageHeight","rectangle","reader","PdfStringLayoutResult","lineResult","lines","lineIndent","getLineIndent","layoutLine","numSymbolsInserted","returnedValue","copyToResult","success","numInserted","finalizeResult","firstLine","paragraphIndent","getLineHeight","lineSpacing","getLineWidth","layoutLineHeight","lineWidth","lineType","LineType","FirstParagraphLine","round","addToLineResult","NewLineBreak","curLine","curIndent","curLineWidth","getWrapType","WordOnly","textRemainder","substring","wordWrap","Character","ln","LayoutBreak","LastParagraphLine","layoutLines","breakType","info","LineInfo","actualSize","max","allowPartialLines","lineLimit","maxHeight","expHeight","lineHeight","trimLine","size1","rightToLeft","trim","empty","content","PdfFont","style","fontStyle","Regular","fontSize","setStyle","metrics","getHeight","Bold","Italic","Strikeout","Underline","fontMetrics","pdfFontInternals","measureString","temparg2","layoutArea","temparg3","equalsTo","equalsToFont","getInternals","setInternals","internals","applyFormatSettings","realWidth","characterSpacing","wordSpacing","charSizeMultiplier","syncObject","PdfWriter","pdfDocument","buffer","overload","tempOverload","ObjectStatus","PdfMainObjectCollection","objectCollections","mainObjectCollection","primitiveObjectCollection","isNew","objInfo","ObjectInfo","Registered","lookFor","reference","wasNew","trySetReference","found","setReference","destroy","_i","_a","pdfObject","objectCollectionIndex","PdfDocumentBase","isStreamCopied","PdfDocument","objects","currentSavingObject","pdfCatalog","setMainObjectCollection","setCrossTable","setCatalog","catalog","filename","Encoding","SW","StreamWriter","encoding_1","SW_1","Promise","resolve","reject","blobData","Blob","docSave","ObjectType","PdfBoolean","objectStatus","saving","boolToStr","PdfViewerPreferences","_dictionaryProperties","_centerWindow","_fitWindow","_displayTitle","_splitWindow","_hideMenuBar","_hideToolBar","_hideWindowUI","_pageMode","PdfPageMode","UseNone","_pageLayout","PdfPageLayout","SinglePage","_dictionary","_duplex","DuplexMode","_catalog","_mapPageMode","_mapDuplexMode","_mapPageLayout","_pageScaling","PageScalingMode","AppDefault","mode","Simplex","DuplexFlipShortEdge","DuplexFlipLongEdge","UseOutlines","UseThumbs","FullScreen","UseOC","UseAttachments","OneColumn","TwoColumnLeft","TwoColumnRight","TwoPageLeft","TwoPageRight","PdfCatalog","sections","tempDictionaryProperties","_viewerPreferences","PdfCrossTable","maxGenNumIndex","objectCount","merging","internalTrailer","pdfObjects","saveHead","mappedReferences","markTrailerReferences","saveObjects","saveCount","xrefPos","registerObject","saveSections","saveTrailer","saveTheEndess","objectCollection","prevXRef","objectNum","prepareSubsection","saveSubsection","Free","getItem","offset","generation","isFree","addOffsetLength","addGenNumberLength","total","split","version","generateFileVersion","bNew","getSubReference","objnumber","nextObjNumber","tempIndex","tempkey","tempvalue","bForceNew","saveIndirectObject","currentSavingObj","doSaveObject","free","RegisteredObject","dereference","tempOffset","offsetNumber","tempReference","Normal","PdfPageSize","letter","note","legal","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","b0","b1","b2","b3","b4","b5","archE","archD","archC","archB","archA","flsa","halfLetter","letter11x17","ledger","PdfPageOrientation","PdfPageRotateAngle","PdfNumberStyle","PdfDockStyle","PdfAlignmentStyle","TemplateType","PdfMargins","pdfMargin","setMargins","leftMargin","topMargin","rightMargin","bottomMargin","margin1","margin2","margin3","margin4","PdfPageSettings","margins","pageMargins","pageSize","rotateAngle","RotateAngle0","pageOrientation","Portrait","pageOrigin","isRotation","setSize","orientation","updateSize","Landscape","getActualSize","PdfStreamWriter","dictionaryName","writeOperator","executeObject","useEvenOddRule","fillStrokePath","fillPath","closeFillPath","textScaling","strokePath","restoreGraphicsState","saveGraphicsState","startNextLine","writePoint","showText","checkTextParam","writeText","setLeading","setTextRenderingMode","renderingMode","setCharacterSpacing","charSpacing","setWordSpacing","showNextLineText","setColorSpace","temparg1","op","opcode","start","updateY","arg","string","writeComment","forStroking","setLineDashPattern","patternOffset","setLineDashPatternHelper","tempPattern","miterLimit","setLineCap","lineCapStyle","setLineJoin","lineJoinStyle","returnValue","appendBezierSegment","setColourWithPattern","colours","patternName","PdfPen","dashOffsetValue","penDashPattern","pdfDashStyle","Solid","pdfLineCap","pdfLineJoin","penWidth","internalMiterLimit","setBrush","Custom","Dash","Dot","DashDot","DashDotDot","sBrush","pdfBrush","currentPen","dashControl","lineJoin","lineCap","pen","getPattern","dashOffset","dashPattern","PdfTransformationMatrix","radDegFactor","PI","transformationMatrix","Matrix","translate","offsetX","offsetY","scale","scaleX","scaleY","angle","cos","sin","multiply","degreesToRadians","degreesX","degRadFactor","radiansToDegrees","radians","metrixElements","transform","point","x2","y2","tempMatrix","dispose","ProcedureSets","pdf","imageB","imageC","imageI","TemporaryDictionary","mKeys","mValues","ReferenceError","RangeError","splice","PdfTransparency","PdfAutomaticFieldInfoCollection","automaticFieldsInformation","fieldInfo","automaticFields","PdfGraphicsElement","drawHelper","graphics","bNeedSave","gState","translateTransform","drawInternal","restore","PdfAutomaticField","internalBounds","internalTemplateSize","internalFont","internalBrush","internalPen","internalStringFormat","performDrawHelper","location","scalingX","scalingY","getFont","stringFormat","draw","location_1","PdfAutomaticFieldInfo","getSize","getBrush","defaultFont","getPageFromGraphics","page","currentPage","field","pageNumberFieldLocation","pageNumberField","ByteArray","mPosition","dataView","DataView","readByte","getBuffer","writeFromBase64String","base64","arr","encodedString","input","chr1","chr2","chr3","enc2","enc3","keyStr","resultIndex","totalLength","replace","charAt","byteLength","readNextTwoBytes","ImageFormat","ImageDecoder","sof1Marker","sof2Marker","sof3Marker","sof5Marker","sof6Marker","sof7Marker","sof9Marker","sof10Marker","sof11Marker","sof13Marker","sof14Marker","sof15Marker","mFormat","Unknown","mbitsPerComponent","mStream","mHeight","mWidth","mImageData","internalBuffer","checkIfJpeg","TypeError","Jpeg","parseJpegImage","reset","imgData","isLengthExceed","skip","readExceededJPGImage","mJpegHeader","getImageDictionary","imageData","imageStream","tempString","decodedString","imageDataAsNumberArray","compress","getColorSpace","getDecodeParams","decodeParams","isContinueReading","getMarker","skipStream","noOfBytes","temp","marker","markerLength","mPngHeader","GIF_HEADER","BMP_HEADER","PdfUnitConverter","dpi","updateProportionsHelper","convertUnits","from","to","convertFromPixels","convertToPixels","proportions","pixelPerInch","horizontalResolution","verticalResolution","PdfImage","imageWidth","imageHeight","imagePhysicalDimension","getPointSize","dpiX","dpiY","ucX","ucY","ptWidth","Pixel","Point","ptHeight","PdfBitmap","imageStatus","loadImage","initializeAsync","decoder","TtfTableInfo","checksum","TtfNameTable","TtfNameRecord","TtfHeadTable","TtfMetrics","macStyle","TtfHorizontalHeaderTable","TtfOS2Table","TtfPostTable","TtfLongHorMetric","TtfCmapSubTable","TtfCmapTable","TtfGlyphInfo","charCode","compareTo","glyph","TtfLocaTable","TtfAppleCmapSubTable","TtfMicrosoftCmapSubTable","TtfTrimmedCmapSubTable","TtfGlyphHeader","BigEndianWriter","capacity","int32Size","int16Size","int64Size","bufferLength","length_1","internalPosition","writeShort","flush","writeInt","writeUInt","buff","writeString","TtfReader","fontData","isTtcFont","isMacTtf","metricsName","isMacTTF","missedGlyphs","tableNames","entrySelectors","macintoshDictionary","microsoftDictionary","internalMacintoshGlyphs","internalMicrosoftGlyphs","readFontDictionary","nameTable","readNameTable","headTable","readHeadTable","initializeFontName","checkPreambula","numTables","readInt16","tableDirectory","tableKey","readString","readInt32","lowestPosition","fixOffsets","minOffset","MAX_VALUE","tableKeys","shift","tableInfo","getTable","formatSelector","readUInt16","recordsCount","nameRecords","record","platformID","encodingID","languageID","nameID","unicode","readFixed","fontRevision","checkSumAdjustment","readUInt32","magicNumber","unitsPerEm","created","readInt64","modified","xMin","yMin","xMax","yMax","lowestReadableSize","fontDirectionHint","indexToLocalFormat","glyphDataFormat","readHorizontalHeaderTable","ascender","descender","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","metricDataFormat","numberOfHMetrics","readOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","readBytes","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","vendorIdentifier","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContext","readPostTable","formatType","underlinePosition","underlineThickness","isFixedPitch","minType42","maxType42","minType1","maxType1","readWidthTable","glyphCount","advanceWidth","lsb","glyphWidth","floor","readCmapTable","tablesCount","subTables","subTable","readCmapSubTable","getCmapEncoding","Macintosh","Microsoft","Apple","readAppleCmapTable","readMicrosoftCmapTable","Trimmed","readTrimmedCmapTable","maxMacIndex","glyphInfo","getWidth","macintosh","addGlyph","collection","Unicode","microsoft","segCountX2","searchRange","entrySelector","rangeShift","segCount","endCount","readUshortArray","reservedPad","startCount","idDelta","idRangeOffset","glyphID","codeOffset","j","id","Symbol","firstCode","entryCount","fontFamily","postScriptName","glyphCode","Undefined","Roman","microsoftGlyphs","macintoshGlyphs","initializeMetrics","horizontalHeadTable","os2Table","postTable","cmapTables","bSymbol","isSymbol","factor","winAscent","macAscent","winDescent","macDescent","ceil","fontBox","widthTable","updateWidth","subScriptSizeFactor","superscriptSizeFactor","getGlyph","byteToProcess","space","getString","getDefaultGlyph","readLocaTable","bShort","offsets","updateGlyphChars","glyphChars","locaTable","glyphCharKeys","nextKey","processCompositeGlyph","glyphOffset","glyphHeader","numberOfContours","skipBytes","glyphIndex","MoreComponents","Arg1And2AreWords","WeHaveScale","WeHaveAnXyScale","WeHaveTwoByTwo","generateGlyphTable","newLocaTable","newGlyphTable","activeGlyphs","sort","glyphSize","glyphSizeAligned","align","nextGlyphOffset","nextGlyphIndex","oldGlyphOffset","oldNextGlyphOffset","glyphTableSize","updateLocaTable","bLocaIsShort","newLocaTableOut","newLocaUpdated","newLocaSize","getFontProgram","locaTableSize","getFontProgramLength","fontProgramLength","writeCheckSums","writeGlyphs","tableName","usedTablesSize","nextTableSize","calculateCheckSum","byte1","byte2","byte3","byte4","i_1","setOffset","createInternals","bIsLocaShort","isFontPresent","getGlyphChars","chars","charKeys","getAllGlyphs","allGlyphInfo","readFontProgram","result1","result2","convertString","getCharWidth","isUnicode","i1","i2","i3","i4","low","written","PdfFontMetrics","getAscent","getDescent","getLineGap","clearTypeFonts","clearTypeFontCollection","subSuperScript","SubScript","SuperScript","WidthTable","internalWidthTable","StandardWidthTable","widths","UnicodeTrueTypeFont","base64String","nameString","isCompress","isEmbedFont","cmapPrefix","cmapEndCodespaceRange","cmapBeginRange","cmapEndRange","cmapSuffix","fontString","Initialize","ttfReader","ttfMetrics","fontDictionary","fontProgram","cmap","descendantFont","subsetName","getFontName","createDescendantFont","createCmap","createFontDictionary","createFontProgram","isBold","random","formatName","ret","createFontDescriptor","systemInfo","createSystemInfo","descriptor","getDescriptorFlags","getBoundBox","descFonts","usedChars","getDescendantWidth","generateCmap","generateFontProgram","chLen","firstGlyphIndex","lastGlyphIndex","firstGlyphIndexWasSet","widthDetails","first","last","middlePart","toHexString","nextRange","FixedPitch","Symbolic","Nonsymbolic","isItalic","ForceBold","abs","isCaseChange","toUpperCase","setSymbols","ArabicShapeRenderer","arabicCharTable","alef","alefHamza","alefHamzaBelow","alefMadda","lam","hamza","zeroWidthJoiner","hamzaAbove","hamzaBelow","wawHamza","yehHamza","waw","alefMaksura","yeh","farsiYeh","shadda","madda","lwa","lwawh","lwawhb","lwawm","bwhb","fathatan","superScriptalef","vowel","arabicMapTable","getCharacterShape","shape","level","str2","doShape","previous","ArabicShape","present","ligature","shapeCount","getShapeCount","Shapes","Value","append","Ligature","Type","shapeValue","shapeType","shapeVowel","shapeLigature","shapeShapes","Bidi","indexes","indexLevels","mirroringShapeCharacters","update","doMirrorShaping","res","getLogicalToVisualString","inputText","isRtl","rtlCharacters","RtlCharacters","getVisualOrder","setDefaultIndexLevel","doOrder","resultBuilder","sIndex","eIndex","odd","even","pstart","pend","reArrange","types","textOrder","rtlCharacterTypes","L","LRE","LRO","R","AL","RLE","RLO","PDF","EN","ES","ET","AN","CS","NSM","BN","B","S","WS","ON","charTypes","getCharacterCode","doVisualOrder","levels","characterCodes","setDefaultLevels","setLevels","updateLevels","getEmbeddedCharactersLength","preview","preType","checkNSM","checkEmbeddedCharacters","startType","endType","charType","checkEuropeanDigits","checkArabicCharacters","checkEuropeanNumberSeparator","checkEuropeanNumberTerminator","l","getLength","checkOtherNeutrals","checkOtherCharacters","pst","checkCommanCharacters","validSet","t","byte","lt","tt","rt","RtlRenderer","openBracket","closeBracket","rtl","wordSpace","customLayout","splitLayout","customSplitLayout","getGlyphIndex","glyphs","custom","fontInternal","Uint16Array","textDirection","layouted","txt","words","addChars","PdfLayoutType","PdfLayoutBreakType","PathPointType","PdfGradientBrush","mbackground","mbStroking","mfunction","mpatternDictionary","sh","aa","mcolorSpace","csValue","colorSpaceToDeviceName","mshading","patternDictionary","mmatrix","resetFunction","name_1","getName","resetPatternDictionary","cloneAntiAliasingValue","cloneBackgroundValue","PdfTemplate","writeTransformation","tempSize","templateSize","pdfGraphics","gr","GetResourceEventHandler","PdfGraphics","initializeCoordinates","PdfResources","addType","addSubType","baseDictionary","properties","getNames","primitive","names","sName","generateName","PdfTilingBrush","pdfNames","fonts","requireProcedureSet","procedureSetName","procSets","removeFont","Guid","getNewGuidString","xobjects","savable","transDic","parentXObjects","hasSameImageStream","oldReference","values_1","mStroking","mLocation","mDictionaryProperties","PdfPage","mPage","brushStream","mResources","setBox","setObligatoryFields","mTransformationMatrix","tempBrushStream","tempResource","mBox","tileTransform","box","mGraphics","name1","previousTextRenderingMode","Fill","previousCharacterSpacing","previousWordSpacing","previousTextScaling","procedureSets","isNormalRender","isUseFontSize","isEmfTextScaled","isEmf","isEmfPlus","isBaselineFormat","emfScalingFactor","colorSpaceChanged","isPointOverload","currentColorSpaces","isImageOptimized","graphicsState","istransparencySet","internalAutomaticFields","startCutIndex","canvasSize","pdfStreamWriter","pdfStringLayoutResult","internalMediaBoxUpperRightBound","clipBounds","pageLayer","bStateSaved","currentBrush","currentFont","bCSInitialized","currentStringFormat","drawPdfTemplate","template","bNeedScale","getTranslateTransform","getScaleTransform","newLocation","drawString","arg8","arg9","temparg4","temparg5","temparg6","temparg7","temparg8","temparg9","checkCorrectLayoutRectangle","drawStringLayoutResult","drawLine","stateControl","drawRectangle","xOffset","yOffset","layer","drawPathHelper","Winding","isPen","isBrush","isEvenOdd","Alternate","drawImage","physicalDimension","name_2","setResources","resource","getLineBounds","lineIndex","layoutRectangle","lineCount","getTextVerticalAlignShift","hShift","getHorizontalAlignShift","shouldJustify","textSize","layoutedRectangle","alignment","Center","Right","lineAlignment","Middle","Bottom","setLayer","pageSave","performDraw","applyStringSettings","horizontalScalingFactor","resultHeight","remainingString","drawLayoutResult","underlineStrikeoutText","getNextPage","section","getPages","setClip","tm","getTextRenderingMode","cs","ws","textHeight","boundsHeight","vAlignShift","ttfFont","lineInfo","hAlignShift","drawUnicodeLine","drawAsciiLine","justifyLine","useWordSpace","Justify","rtlRender","blocks","rightAlign","RightToLeft","drawUnicodeBlocks","breakUnicodeLine","tokens","token","convertToUnicode","getUnicodeString","xShift","spaceWidth","tokenWidth","converted","boundsWidth","hasWordSpacing","whitespacesCount","justifyStyle","goodWidth","hasSpaces","goodLineBreakStyle","underline","strikeout","linePen","createUnderlineStikeoutPen","vShift","underlineYOffset","strikeoutYOffset","x1","FillStroke","Stroke","ClipFlag","layoutBounds","firstParagraphLine","Left","lastDocumentCS","lastGraphicsCS","initCurrentColorSpace","penControl","brushControl","fontControl","colorspace","lgb","curSubSuper","prevSubSuper","setTransparency","trasparencies","transp","td","TransparencyData","name_3","clipTranslateMargins","clipArea","scaleTransform","rotateTransform","getRotateTransform","mediaBoxUpperRightBound","cropBox","PdfGraphicsState","textRenderingMode","doRestoreState","pop","drawPath","path","buildUpPath","pathPoints","pathTypes","fillMode","drawArc","constructArcPath","cnt","typeValue","Start","Bezier3","p2","p3","getBezierPoints","Line","checkFlags","points","pathTypesValuesMask","CloseSubpath","y1","startAng","sweepAngle","getBezierArc","pt","numX1","numY1","numX2","numY2","s1","e1","tmp","fragAngle1","numFragments","xcen","ycen","rx","ry","halfAng","kappa","pointsList","thetaValue0","thetaValue1","cos0","cos1","sin0","sin1","transparencyObject","internalTextRenderingMode","internalTextScaling","pdfColorSpace","elements_1","forEach","pdfPen","pdfFont","alphaPen","alphaBrush","blendMode","PdfPageLayer","streamClipPageTemplates","isVisible","sublayer","contentLength","pdfPage","clipPageTemplates","layerid","layerName","initializeGraphics","PdfPageLayerCollection","sign","oPage","sc","isSame","origin","clipRect","getActualBounds","pageSettings","PdfCollection","parentLayerCount","optionalContent","PdfPageBase","lPage","parseLayers","list","firstArgument","secondArgument","addLayer","insertLayer","loadedPage","saveStream","restoreStream","saveData","defLayerIndex","pageDictionary","pdfSection","layers","defaultLayerIndex","layerCollection","PdfAnnotationCollection","alreadyExistsAnnotationError","missingAnnotationException","internalAnnotations","lists","annotation","doAdd","destination","setPage","layoutResult","lastPosition","setColor","annotationCollection","defaultLayer","parentDocument","annotations","setSection","resetProgress","isProgressOn","getClientSize","doc","drawPageTemplates","containsTemplates","backLayer","drawTemplates","frontLayer","PageAddedEventArgs","PdfSectionPageCollection","PdfDocumentTemplate","leftTemplate","checkElement","topTemplate","rightTemplate","bottomTemplate","evenLeft","evenTop","evenRight","evenBottom","oddLeft","oddTop","oddRight","oddBottom","getLeft","isEven","EvenLeft","OddLeft","getTop","EvenTop","OddTop","getRight","EvenRight","OddRight","getBottom","EvenBottom","OddBottom","pageCollectionIndex","templateElement","PdfSectionTemplate","leftValue","topValue","rightValue","bottomValue","stampValue","PdfSection","pageAdded","pdfPages","settings","initialSettings","sectionCollection","pagesReferences","pageTemplate","pagesCollection","pointToNativePdf","setPageSettings","PageSettingsState","pageCount","foreground","documentHeaders","getDocumentTemplates","sectionTemplates","getSectionTemplates","templates","applyDocumentTopTemplate","applyDocumentBottomTemplate","applyDocumentLeftTemplate","applyDocumentRightTemplate","page_1","checkPresence","pageAddedMethod","rh","args","onPageAdded","document_1","getLeftIndentWidth","top_1","getTopIndentHeight","getRightIndentWidth","getBottomIndentHeight","includeMargins","templateWidth","docTemplateWidth","templateHeight","docTemplateHeight","temproaryPages","applyPageSettings","container","parentSettings","PdfSectionCollection","rotateFactor","sectionHeaders","drawTemplatesHelper","pageRotate","sectionCount","pdfSectionCollection","section_1","checkSection","countPages","PdfDocumentPageCollection","pdfPageCollectionIndex","getLastSection","getPageByIndex","getPage","sectionStartIndex","pageIndex","numPages","PdfCacheCollection","referenceObjects","pdfFontCollection","search","group","getGroup","createNewGroup","tGroup","representative","removeGroup","slice","isMerging","defaultMargin","isMerge","cacheCollection","documentPageCollection","defaultStandardFont","PdfStandardFont","Helvetica","isCacheEnabled","checkPagesPresence","cache","PdfStandardFontMetricsFactory","getMetrics","getHelveticaMetrics","Courier","getCourierMetrics","TimesRoman","getTimesMetrics","getSymbolMetrics","ZapfDingbats","getZapfDingbatsMetrics","subSuperScriptFactor","helveticaBoldItalicAscent","helveticaBoldItalicDescent","helveticaBoldItalicName","arialBoldWidth","helveticaBoldAscent","helveticaBoldDescent","helveticaBoldName","helveticaItalicAscent","helveticaItalicDescent","helveticaItalicName","arialWidth","helveticaAscent","helveticaDescent","helveticaName","courierBoldItalicAscent","courierBoldItalicDescent","courierBoldItalicName","fixedWidth","courierBoldAscent","courierBoldDescent","courierBoldName","courierItalicAscent","courierItalicDescent","courierItalicName","courierAscent","courierDescent","courierName","timesBoldItalicAscent","timesBoldItalicDescent","timesBoldItalicName","timesRomanBoldItalicWidths","timesBoldAscent","timesBoldDescent","timesBoldName","timesRomanBoldWidth","timesItalicAscent","timesItalicDescent","timesItalicName","timesRomanItalicWidth","timesAscent","timesDescent","timesName","timesRomanWidth","symbolAscent","symbolDescent","symbolName","symbolWidth","zapfDingbatsAscent","zapfDingbatsDescent","zapfDingbatsName","zapfDingbatsWidth","fontFamilyPrototype","encodings","pdfFontFamily","checkStyle","initializeInternals","convert","getCharWidthInternal","equal","stFont","fontFamilyEqual","lineReducer","styleEqual","WinAnsiEncoding","charOffset","PdfAnnotation","textBrush","textFont","internalColor","darkness","nativeRectangle","initialHeight","tempLoacation","PdfLinkAnnotation","PdfActionLinkAnnotation","pdfAction","getSetAction","PdfDocumentLinkAnnotation","pdfDestination","ElementLayouter","layoutElement","getElement","param","layoutInternal","Layouter","getPaginateBounds","usePaginateBounds","paginateBounds","PdfLayoutFormat","baseFormat","break","boundsSet","layoutType","layoutPaginateBounds","PdfLayoutParams","layoutFormat","PdfLayoutResult","PdfBorders","defaultBorderPenLeft","dashStyle","defaultBorderPenRight","defaultBorderPenTop","defaultBorderPenBottom","leftPen","rightPen","topPen","bottomPen","PdfPaddings","hasLeftPad","hasRightPad","hasTopPad","hasBottomPad","leftPad","rightPad","bottomPad","topPad","PdfLayoutElement","beginPageLayout","endPageLayout","onBeginPageLayout","onEndPageLayout","bEmbedFonts","default","newBound","TextLayouter","currentBounds","pageResult","TextPageLayoutResult","remainder","layoutOnPage","getLayoutResult","PdfTextLayoutResult","lastLineBounds","checkCorrectBounds","stringResult","textFinished","FitElement","PdfTextWebLink","getTextPageBounds","verticalShift","remainderText","lastLineTextBounds","PdfTextElement","elementValue","hasPointOverload","isPdfTextElement","drawText","stringLayoutResult","previousPosition","calculateResultBounds","lineSize","maximumWidth","startPosition","PdfUriAnnotation","pdfUriAction","uriAction","uniformResourceLocator","uriAnnotation","recalculateBounds","defaultBorder","previousFontStyle","calculateBounds","url","drawMultipleLineWithPoint","drawMultipleLineWithBounds","PdfNumbersConvertor","intArabic","numberStyle","Numeric","LowerLatin","arabicToLetter","toLowerCase","LowerRoman","arabicToRoman","UpperLatin","UpperRoman","retval","retvalM","generateNumber","retvalCM","retvalD","retvalCD","retvalC","retvalXC","retvalL","retvalXL","retvalX","retvalIX","retvalV","retvalIV","retvalI","arabic","stack","convertToLetter","appendChar","magnitude","numberstring","letterLimit","acsiiStartIndex","PdfTemplateValuePair","pdfTemplate","PdfMultipleValueField","drawLocation","PdfPageNumberField","internalNumberStyle","internalGetValue","PdfCompositeField","arguments","internalText","automaticField","PdfSingleValueField","painterGraphics","PdfPageCountField","PdfDestinationMode","PdfExtend","PdfDestination","destinationMode","Location","zoomFactor","destinationLocation","initializePrimitive","simplePage","FitToPage","PdfFunction","mDictionary","PdfSampledFunction","sizes","samples","checkParams","setDomainAndRange","setSizeAndValues","PdfLinearGradientMode","ShadingType","KnownColor","PdfBrushes","sBrushes","AliceBlue","AntiqueWhite","Aqua","Aquamarine","Azure","Beige","Bisque","Black","BlanchedAlmond","Blue","BlueViolet","Brown","BurlyWood","CadetBlue","Chartreuse","Chocolate","Coral","CornflowerBlue","Cornsilk","Crimson","Cyan","DarkBlue","DarkCyan","DarkGoldenrod","DarkGray","DarkGreen","DarkKhaki","DarkMagenta","DarkOliveGreen","DarkOrange","DarkOrchid","DarkRed","DarkSalmon","DarkSeaGreen","DarkSlateBlue","DarkSlateGray","DarkTurquoise","DarkViolet","DeepPink","DeepSkyBlue","DimGray","DodgerBlue","Firebrick","FloralWhite","ForestGreen","Fuchsia","Gainsboro","GhostWhite","Gold","Goldenrod","Gray","Green","GreenYellow","Honeydew","HotPink","IndianRed","Indigo","Ivory","Khaki","Lavender","LavenderBlush","LawnGreen","LemonChiffon","LightBlue","LightCoral","LightCyan","LightGoldenrodYellow","LightGray","LightGreen","LightPink","LightSalmon","LightSeaGreen","LightSkyBlue","LightSlateGray","LightSteelBlue","LightYellow","Lime","LimeGreen","Linen","Magenta","Maroon","MediumAquamarine","MediumBlue","MediumOrchid","MediumPurple","MediumSeaGreen","MediumSlateBlue","MediumSpringGreen","MediumTurquoise","MediumVioletRed","MidnightBlue","MintCream","MistyRose","Moccasin","NavajoWhite","Navy","OldLace","Olive","OliveDrab","Orange","OrangeRed","Orchid","PaleGoldenrod","PaleGreen","PaleTurquoise","PaleVioletRed","PapayaWhip","PeachPuff","Peru","Pink","Plum","PowderBlue","Purple","Red","RosyBrown","RoyalBlue","SaddleBrown","Salmon","SandyBrown","SeaGreen","SeaShell","Sienna","Silver","SkyBlue","SlateBlue","SlateGray","Snow","SpringGreen","SteelBlue","Tan","Teal","Thistle","Tomato","Transparent","Turquoise","Violet","Wheat","White","WhiteSmoke","Yellow","YellowGreen","colorName","getColorValue","PdfBlend","precision","mFactors","mPositions","positionarray","mCount","generateColorBlend","positions","cBlend","PdfColorBlend","clrs","c1","c2","interpolate","colors","clonePdfBlend","factors","gcd","u","v","iU","iV","gcdInt","mcolors","getFunction","colourComponents","getColorComponentsCount","maxComponentValue","getMaxComponentValue","setRange","func","mbrush","samplesCount","step","intervals","getIntervals","getSamplesValues","cloneColorBlend","maxValue","sampleCount","getGrayscaleSamples","getCmykSamples","getRgbSamples","getNextColor","indexHi","indexLow","getIndices","positionLow","positionHi","colorLow","colorHi","currPos","prev","PdfLinearGradientBrush","mPointStart","mPointEnd","setPoints","BackwardDiagonal","ForwardDiagonal","Horizontal","Vertical","mBoundaries","radAngle","tan","centre","p1","cp1","subPoints","choosePoint","coef","mulPoints","addPoints","mulPoint","mColours","mColourBlend","initShading","mBlend","extStart","extEnd","End","point1","point2","blend","interpolationColors","PdfRadialGradientBrush","centerStart","radiusStart","centerEnd","radiusEnd","colorStart","colorEnd","mRadiusStart","mRadiusEnd","mColour","mColourBlends","extend1","extEnd1","pointStart","pointEnd","PdfBorderOverlapStyle","PdfGridStyleBase","gridBackgroundBrush","gridTextBrush","gridTextPen","gridFont","gridBackgroundImage","PdfGridStyle","gridBorderOverlapStyle","Overlap","bAllowHorizontalOverflow","gridHorizontalOverflowType","PdfHorizontalOverflowType","LastPage","gridCellSpacing","gridCellPadding","PdfGridCellStyle","gridCellBorders","PdfGridRowStyle","gridRowBackgroundBrush","setBackgroundBrush","cells","getCell","backgroundBrush","gridRowTextBrush","setTextBrush","gridRowTextPen","setTextPen","textPen","gridRowFont","gridRowBorder","setBorder","borders","setParent","gridRowBackgroundImage","setBackgroundImage","PdfGridCell","row","cellWidth","cellHeight","tempval","fontSpilt","finsh","rowSpanRemainingHeight","hasRowSpan","hasColSpan","isFinish","gridRowSpan","colSpan","gridRow","internalIsCellMergeContinue","internalIsRowMergeContinue","internalIsCellMergeStart","internalIsRowMergeStart","remaining","objectValue","PdfGrid","grid","isSingleGrid","ParentCell","isChildGrid","rowCount","rows","getRow","colCount","rowSpanExists","hasRowSpanSpan","cellStyle","measureHeight","columnSpanExists","isComplete","measureWidth","layouter","getTextFont","webLink","cellPadding","cellSpacing","drawCellBackground","getBackgroundBrush","backgroundImage","getBackgroundImage","adjustContentLayoutArea","returnBounds","rowSpan","cancelSubsequentSpans","allowHorizontalOverflow","rowOverflowIndex","adjustOuterLayoutArea","getTextPen","getTextBrush","strFormat","getStringFormat","innerLayoutArea","allowRowBreakAcrossPages","_rowHeight","splitChildRowIndex","rowFontSplit","repeatFlag","childGrid","layoutRect","PdfGridLayouter","PdfGridLayoutFormat","LayoutFormat","Paginate","setSpan","checkSpan","childGridResult","rowBreakHeightValue","rowBreakHeight","NestedGridLayoutResult","imageBounds","drawCellBorders","borderOverlapStyle","Inside","Square","isHeader","currentColIndex","columnSpan","isCellMergeContinue","span","totalWidth","compWidth","getColumn","currentRowIndex","rowCollection","headers","totalHeight","getHeader","rowMergeComplete","calculateWidth","currentValue","cellIndex","internalWidth","tempWidth","PdfGridCellCollection","cell","tempcell","PdfGridColumn","columnWidth","isCustomWidth","PdfGridColumnCollection","internalColumns","measureColumnsWidth","initialWidth","isPageWidth","getDefaultWidths","subFactor","PdfGridRow","gridRowOverflowIndex","rowHeight","rowWidth","isrowFinish","isRowSpanRowHeightSet","noOfPageCount","isRowHeightSet","isPageBreakRowSpanApplied","isRowMergeComplete","isHeaderRow","pdfGrid","bRowSpanExists","gridCells","rowStyle","border","gridRowBreakHeight","gridResult","bColumnSpanExists","cellIn","rowin","rowWid","PdfGridRowCollection","addRow","temprow","PdfGridHeaderCollection","gridSize","isGridSplit","isRearranged","pageBounds","listOfNavigatePages","parentCellIndex","breakRow","hasColumnSpan","beginCellDraw","endCellDraw","bRepeatHeader","gridColumns","gridRows","gridHeaders","gridInitialWidth","gridStyle","ispageWidth","ischildGrid","measure","parentCell","onBeginCellDraw","raiseBeginCellDraw","onEndCellDraw","raiseEndCellDraw","hasChanged","currentRow","gridLocation","currentCellIndex","maxSpan","isRowMergeContinue","isCellMergeStart","isRowMergeStart","maximumRowSpan","cellcolSpan","cellrowSpan","cellmaxSpan","padding","columnCount","childGridColumnWidth","colCount_1","colCount_2","RowCount","ColCount","colWidth","childGridColWidth","childheight","flag","columnRanges","currentLocation","slr","isPaginate","getFormat","gridLayoutFormat","currentPageBounds","currentGraphics","FitColumnsToPage","Grid","startLocation","hType","horizontalOverflowType","determineColumnDrawRanges","startColumn","endColumn","cellWidths","availableWidth","subWidths","layoutedPages","startPage","cellBounds","cellStartIndex","cellEndIndex","returnObject","raiseBeforePageLayout","drawHeader","headerHeight","headerResult","drawRow","repeatRowIndex","OnePage","getNextPageformat","repeatRow","originalHeight","rowResult","rowIndex","tempResult","raisePageLayouted","cancel","isRowBreaksNextPage","i_2","repeatHeader","j_1","headerRepeat","j_2","tempResult1","i_3","checkIsFisished","i_4","i_5","recalHeight","ReCalculateHeight","secion","startIndex","endIndex","pageGraphics","location_2","totalwidth","i_6","isPdfGrid","maximumCellBoundsWidth","largeNavigatePage","rowLayoutBoundsWidth","NextPage","reArrangePages","FinishedDrawingCell","nextPage","pageindex","CheckIfDefaultFormat","defaultFormat","measureTrailingSpaces","noClip","RaiseBeforeCellDraw","PdfGridBeginCellDrawEventArgs","raiseAfterCellDraw","cellstyle","PdfGridEndCellDrawEventArgs","count_1","isChanged","PdfGridLayoutResult","newHeight","raiseBeginPageLayout","PdfGridBeginPageLayoutEventArgs","startRowIndex","PdfGridEndPageLayoutEventArgs","raiseEndPageLayout","result_1","RowLayoutResult","rowHeightWithSpan","currRowIndex","calculatedHeight","FitPage","drawRowWithBreak","repeatRowNumber","isFit","isFitToCell","location_4","cancelSpans","tempValue","currentHeight","column","calculateHeight","gridHeight","cellstyle1","rowBreakPageHeightCellIndex","GridCellEventArgs","gridRowIndex","gridCellIndex","gridBounds","bSkip","PdfCancelEventArgs","isCancel","BeginPageLayoutEventArgs","EndPageLayoutEventArgs","nextPdfPage","startRow","layoutedBounds","bIsFinished","ShapeLayouter","olderPdfForm","shapeBounds","totalPageSize","shapeLayoutBounds","getBounds","ShapeLayoutResult","endArgs","getNextShapeBounds","curBounds","sBounds","checkCorrectCurrentBounds","fitToPage","fitsToBounds","shapeFinished","getDrawBounds","drawShape","getPageResultBounds","drawGraphicsHelper","bottomCellPadding","splitDiff","borderWidth","PdfShapeElement","apply","getBoundsInternal","drawShapeHelper","PdfDrawElement","mpen","PdfFillElement","obtainPen","PdfPath","mpoints","mpathTypes","mStartFigure","mfillMode","isBeziers3","isXps","addPath","getLastPoint","widthValue","addArc","getBezierArcPoints","addBezier","addEllipse","startFigure","closeFigure","addLine","addPie","addPoint","addPolygon","addRectangle","closeAllFigures","startPath","lastPoint","pointCount","fragAngle","pointList","theta0","theta1","xmin","xmax","ymin","ymax","pointType","PdfRectangleArea","PdfEllipsePart","startAngle","PdfArc","argu1","PdfTrueTypeFont","createFontInternal","getUnicodeLineWidth","codeWidth","calculateStyle","iStyle","equalFont","enableCache","isEmbed","isUnicodeFont","glyphIndices","resultGlyph","PdfPageTemplateElement","InitiateBounds","dockStyle","resetAlignment","alignmentStyle","setAlignment","isForeground","templateType","updateDocking","dock","canBeSet","TopLeft","MiddleLeft","BottomLeft","TopCenter","TopRight","MiddleRight","BottomRight","BottomCenter","MiddleCenter","getAlignmentBounds","getDockBounds","getSimpleAlignmentBounds","getTemplateAlignmentBounds","actualBounds","convertSign","getSimpleDockBounds","getTemplateDockBounds","Infinity"],"mappings":"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KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,OAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,OAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,OAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,OAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,OAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,OAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAE7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,KAAM,MAC7CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,MAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,MAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,MAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,MAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,MAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,MAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,MAC9CR,KAAKkiD,yBAAyB1hD,SAAS,KAAO,OAC9CR,KAAKkiD,yBAAyB1hD,SAAS,MAAO,OAC9C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AAK,IAAK,IAAK,IAC3E,IAAK,KAMTd,EAA8B4B,YAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAM/E5B,EAA8BqD,iBAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK,EACxE,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAMTrD,EAA8B6C,qBAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAC5E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAM,EAC1E,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC5E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAMT7C,EAA8BiD,uBAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,EACxE,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACvE,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAMTjD,EAA8ByC,4BAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAMTzC,EAA8ByD,aAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GAMxCzD,EAA8B6D,mBAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,KAEtB7D,KCllBP5xD,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GA0CxC+wD,GAAiC,SAAU3wD,GAE3C,SAAS2wD,EAAgBmE,EAAqB7oE,EAAMonB,GAChD,IAAInT,EAAQF,EAAO5V,KAAKG,KAAM0B,OAAwB,IAAVonB,EAA2ByhD,aAA+BnE,EAAmBmE,EAAoBzhD,MAAQ/H,eAAaiI,QAAWF,IAAU9oB,KAwBvL,OAnBA2V,EAAMrG,qBAAuB,IAAItH,EAMjC2N,EAAM60D,WAAa,UAAW,mBAAoB,mBAAoB,oBAClE,kBAAmB,iBAAkB,aAErC70D,EAAM80D,mBADyB,IAAxBF,EACevpD,gBAAcqlD,UAE9BkE,aAA+BnE,EACfmE,EAAoBv2B,WAGpBu2B,EAE1B50D,EAAM+0D,aACN/0D,EAAMg1D,sBACCh1D,EA8HX,OAxJAd,GAAUuxD,EAAiB3wD,GA4B3B/V,OAAOuC,eAAemkE,EAAgBzmE,UAAW,cAO7CuC,IAAK,WACD,OAAOlC,KAAKyqE,eAEhBpoE,YAAY,EACZC,cAAc,IAOlB8jE,EAAgBzmE,UAAU+qE,WAAa,WACnC,GAAI1qE,KAAKg0C,aAAehzB,gBAAc6yB,QAAU7zC,KAAKg0C,aAAehzB,gBAAcimD,aAAc,CAC5F,IAAIn+C,EAAQ9oB,KAAK8oB,MACjBA,KAAW/H,eAAasI,KAAOtI,eAAauI,QAC5CtpB,KAAKkpB,SAASJ,KAOtBs9C,EAAgBzmE,UAAU4mB,aAAe,SAAU3C,EAAMsB,GACrD,GAAY,MAARtB,EACA,MAAM,IAAIvN,MAAM,8BAKpB,IAAK,IAHD/M,EAAQ,EAGHpG,GAFElD,KAAKyX,KAEH,GAAGpD,GADhBuP,EAAOwiD,EAAgBwE,QAAQhnD,IACJ5iB,OAAQkC,EAAImR,EAAKnR,IAAK,CAC7C,IAAIE,EAAKwgB,EAAK1gB,GAEdoG,GADgBtJ,KAAK6qE,qBAAqBznE,EAAI8hB,GAGlD,IAAIxjB,EAAO1B,KAAKmpB,QAAQkX,QAAQnb,GAGhC,OAFA5b,GAAUuf,EAAQ2B,mBAAqB9oB,EACvC4H,EAAQtJ,KAAKoqB,oBAAoBxG,EAAMsB,EAAQ5b,IAOnD88D,EAAgBzmE,UAAUqqB,aAAe,SAAUrhB,GAC/C,IAAImiE,GAAQ,EACRC,EAASpiE,EACb,GAAc,MAAVoiE,EAAgB,CAChB,IAAIC,EAAmBhrE,KAAKg0C,aAAe+2B,EAAO/2B,WAC9Ci3B,IAAiBlqD,eAAayI,UAAYzI,eAAawI,WACvD2hD,GAAclrE,KAAK8oB,MAAQmiD,KAAkBF,EAAOjiD,MAAQmiD,GAChEH,EAASE,GAAmBE,EAEhC,OAAOJ,GAMX1E,EAAgBzmE,UAAUgrE,oBAAsB,WAGhCt+C,GAAYm6C,MAAMlB,OAAOtlE,MAErC,IAAImqB,EAAY,KAGZhB,EAAUs9C,GAA8BC,WAAW1mE,KAAKyqE,cAAezqE,KAAK8oB,MAAO9oB,KAAK0B,MAC5F1B,KAAKmpB,QAAUA,EACfgB,EAAYnqB,KAAKm5C,kBACjBn5C,KAAKkqB,aAAaC,IAMtBi8C,EAAgBzmE,UAAUw5C,gBAAkB,WACxC,IAAItqC,EAAa,IAAID,EAIrB,GAHAC,EAAWU,MAAM/O,SAASR,KAAKsP,qBAAqBjH,KAAM,IAAI1G,EAAQ3B,KAAKsP,qBAAqB3G,OAChGkG,EAAWU,MAAM/O,SAASR,KAAKsP,qBAAqBvG,QAAS,IAAIpH,EAAQ3B,KAAKsP,qBAAqB1G,QACnGiG,EAAWU,MAAM/O,SAASR,KAAKsP,qBAAqBzG,SAAU,IAAIlH,EAAQ3B,KAAKmpB,QAAQ8qB,iBACnFj0C,KAAKg0C,aAAehzB,gBAAc6yB,QAAU7zC,KAAKg0C,aAAehzB,gBAAcimD,aAAc,CAC5F,IAAIn+D,EAAW9I,KAAKwqE,UAAUppD,eAAa+pD,iBAC3Ct8D,EAAWU,MAAM/O,SAASR,KAAKsP,qBAAqBxG,SAAU,IAAInH,EAAQmH,IAE9E,OAAO+F,GAMXu3D,EAAgBzmE,UAAUkrE,qBAAuB,SAAUxiC,EAAUnjB,GACjE,IACItL,EAAO,EACXA,EAAOyuB,EAAStxB,WAAW,GACT,MAAd/W,KAAKyX,MAA8B,MAAdzX,KAAKyX,MAA8B,MAAdzX,KAAKyX,MACjC,MAAdzX,KAAKyX,MAA8B,MAAdzX,KAAKyX,OAC1BmC,GAAcwsD,EAAgBgF,YAElCxxD,EAAQA,GAAQ,GAAc,MAATA,EAAgBA,EAAO,EAI5C,OAHc5Z,KAAKmpB,QACMksB,WACN9lC,MAAMqK,IAO7BwsD,EAAgBwE,QAAU,SAAUx0D,GAChC,OAAOA,GAOXgwD,EAAgBgF,WAAa,GACtBhF,GACTv9C,GClLEwiD,GAA+B,WAC/B,SAASA,EAAc/rD,GAMnBtf,KAAKsP,qBAAuB,IAAItH,EAKhChI,KAAKqgB,SAAW,IAAI5D,EAAS,IAAK,IAAK,KAKvCzc,KAAKqlB,UAAY,IAAIhG,EAAW,EAAG,EAAG,EAAG,GAKzCrf,KAAKm7D,QAAU,KAMfn7D,KAAKsrE,UAAY,IAAInrD,EAAc,IAAI1D,EAAS,EAAG,EAAG,IAMtDzc,KAAKurE,SAAW,IAAInF,GAAgBplD,gBAAc8lD,WAAY,IAM9D9mE,KAAKklB,OAAS,IAAItD,EAAgB9F,mBAAiB05C,MAKnDx1D,KAAK4oB,QAAU,GAKf5oB,KAAKyb,cAAgB,IAAI7M,EAKzB5O,KAAKwrE,cAAgB,IAAI/uD,EAMzBzc,KAAKyrE,SAAW,OACI,IAATnsD,EACPtf,KAAK6a,cAGL7a,KAAK6a,aACL7a,KAAKwU,OAAS8K,GAsLtB,OAnLA5f,OAAOuC,eAAeopE,EAAc1rE,UAAW,SAM3CuC,IAAK,WACD,OAAOlC,KAAKqgB,UAEhBje,IAAK,SAAU7B,GACXP,KAAKqgB,SAAW9f,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeopE,EAAc1rE,UAAW,cAK3CuC,IAAK,WACD,OAAOlC,KAAKwrE,eAEhBppE,IAAK,SAAU7B,GACXP,KAAKwrE,cAAgBjrE,GAEzB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeopE,EAAc1rE,UAAW,UAK3CuC,IAAK,WACD,OAAOlC,KAAKqlB,WAEhBjjB,IAAK,SAAU7B,GACXP,KAAKqlB,UAAY9kB,GAErB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeopE,EAAc1rE,UAAW,QAK3CuC,IAAK,WACD,OAAOlC,KAAKm7D,SAEhB94D,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeopE,EAAc1rE,UAAW,QAK3CuC,IAAK,WACD,OAAOlC,KAAKurE,UAEhBnpE,IAAK,SAAU7B,GACXP,KAAKurE,SAAWhrE,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeopE,EAAc1rE,UAAW,gBAK3CuC,IAAK,WACD,OAAOlC,KAAKklB,QAEhB9iB,IAAK,SAAU7B,GACXP,KAAKklB,OAAS3kB,GAElB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeopE,EAAc1rE,UAAW,SAK3CuC,IAAK,WACD,OAAOlC,KAAKsrE,WAEhBlpE,IAAK,SAAU7B,GACXP,KAAKsrE,UAAY/qE,GAErB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeopE,EAAc1rE,UAAW,QAK3CuC,IAAK,WACD,OAAOlC,KAAK4oB,SAEhBxmB,IAAK,SAAU7B,GACXP,KAAK4oB,QAAUroB,EACfP,KAAK6O,WAAWU,MAAM/O,SAASR,KAAKsP,qBAAqBtG,SAAU,IAAIiP,EAAUjY,KAAK4oB,WAE1FvmB,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeopE,EAAc1rE,UAAW,cAK3CuC,IAAK,WACD,OAAOlC,KAAKyb,eAEhBrZ,IAAK,SAAU7B,GACXP,KAAKyb,cAAgBlb,GAEzB8B,YAAY,EACZC,cAAc,IAOlB+oE,EAAc1rE,UAAUkb,WAAa,WACjC7a,KAAKyb,cAAczK,oBAAsB,IAAIW,EAA2B3R,MACxEA,KAAKyb,cAAclM,MAAM/O,SAASR,KAAKsP,qBAAqBjH,KAAM,IAAI1G,EAAQ3B,KAAKsP,qBAAqBlF,SAM5GihE,EAAc1rE,UAAUm+D,QAAU,SAAUr9B,GACxCzgC,KAAKm7D,QAAU16B,EACfzgC,KAAKyb,cAAclM,MAAM/O,SAASR,KAAKsP,qBAAqBjF,EAAG,IAAImN,EAAmBxX,KAAKm7D,WAM/FkQ,EAAc1rE,UAAU2Q,UAAY,WAChCtQ,KAAKyC,QAOT4oE,EAAc1rE,UAAU8C,KAAO,WAC3B,IAAIipE,EAAkB,IAAIrsD,EAAWrf,KAAKqlB,UAAU3S,EAAG1S,KAAKqlB,UAAU1S,EAAG3S,KAAKqlB,UAAU/b,MAAOtJ,KAAKqlB,UAAU9b,QAC1G6oD,EAAUpyD,KAAKm7D,QAAQ/I,QACvBuZ,EAAgBD,EAAgBniE,OAChCqiE,EAAgBxZ,EAAQ0P,iBAAiB9hE,KAAKygC,KAAM,IAAIthB,EAAOusD,EAAgBh5D,EAAGg5D,EAAgB/4D,IACtG+4D,EAAgBh5D,EAAIk5D,EAAcl5D,EAClCg5D,EAAgBpiE,MAAQsiE,EAAcl5D,EAAIg5D,EAAgBpiE,MAC1DoiE,EAAgB/4D,EAAKi5D,EAAcj5D,EAAI3S,KAAKygC,KAAKplB,SAAS2gD,aAAarlC,QAAQ7W,IAC/E4rD,EAAgBniE,OAASmiE,EAAgB/4D,EAAIg5D,EAC7C3rE,KAAKyb,cAAclM,MAAM/O,SAASR,KAAKsP,qBAAqBhF,KAAMwI,EAASyB,cAAcm3D,IACzF1rE,KAAK6O,WAAWU,MAAM/O,SAASR,KAAKsP,qBAAqB7E,GAAI,IAAIqH,EAAU9R,KAAKyrE,YAEpF/rE,OAAOuC,eAAeopE,EAAc1rE,UAAW,WAO3CuC,IAAK,WACD,OAAOlC,KAAKyb,eAEhBpZ,YAAY,EACZC,cAAc,IAEX+oE,KC3QPx2D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GAmBxCw2D,GAAmC,SAAUp2D,GAE7C,SAASo2D,EAAkBxmD,GACvB,OAAO5P,EAAO5V,KAAKG,KAAMqlB,IAAcrlB,KAW3C,OAbA6U,GAAUg3D,EAAmBp2D,GAS7Bo2D,EAAkBlsE,UAAUkb,WAAa,WACrCpF,EAAO9V,UAAUkb,WAAWhb,KAAKG,MACjCA,KAAK6O,WAAWU,MAAM/O,SAASR,KAAKsP,qBAAqBvG,QAAS,IAAIpH,EAAQ3B,KAAKsP,qBAAqBpF,QAErG2hE,GACTR,IClCEx2D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GAkBxCy2D,GAAyC,SAAUr2D,GAOnD,SAASq2D,EAAwBzmD,GAC7B,IAAI1P,EAAQF,EAAO5V,KAAKG,KAAMqlB,IAAcrlB,KAQ5C,OADA2V,EAAMo2D,UAAY,KACXp2D,EAeX,OA9BAd,GAAUi3D,EAAyBr2D,GAsBnCq2D,EAAwBnsE,UAAUqsE,aAAe,SAAUzrE,GACvD,QAAqB,IAAVA,EACP,OAAOP,KAAK+rE,UAGZ/rE,KAAK+rE,UAAYxrE,GAGlBurE,GACTD,IClDEh3D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GA0CxC42D,GAA2C,SAAUx2D,GAErD,SAASw2D,EAA0B5mD,EAAWw4C,GAC1C,IAAIloD,EAAQF,EAAO5V,KAAKG,KAAMqlB,IAAcrlB,KAW5C,OAJA2V,EAAMu2D,eAAiB,UACI,IAAhBrO,IACPloD,EAAMkoD,YAAcA,GAEjBloD,EAmEX,OAhFAd,GAAUo3D,EAA2Bx2D,GAerC/V,OAAOuC,eAAegqE,EAA0BtsE,UAAW,eA+BvDuC,IAAK,WACD,OAAOlC,KAAKksE,gBAEhB9pE,IAAK,SAAU7B,GAEXP,KAAKksE,eAAiB3rE,GAG1B8B,YAAY,EACZC,cAAc,IAOlB2pE,EAA0BtsE,UAAU8C,KAAO,WACvCgT,EAAO9V,UAAU8C,KAAK5C,KAAKG,MACA,MAAvBA,KAAKksE,gBACLlsE,KAAK6O,WAAWU,MAAM/O,SAASR,KAAKsP,qBAAqBzE,KAAM7K,KAAKksE,eAAen4D,UAO3Fk4D,EAA0BtsE,UAAUkD,MAAQ,WACxC,IAAIuH,EAAQ,IAAI6hE,EAA0BjsE,KAAKwU,OAAQxU,KAAK69D,aAK5D,OAJAzzD,EAAMgW,MAAQpgB,KAAKogB,MACnBhW,EAAMmW,MAAQvgB,KAAKugB,MACnBnW,EAAMyzD,YAAc79D,KAAK69D,YACzBzzD,EAAMzB,KAAO3I,KAAK2I,KACXyB,GAEJ6hE,GACTJ,ICpHEM,GAAiC,WAMjC,SAASA,EAAgBp4D,GACrB/T,KAAKosE,cAAgBr4D,EAiDzB,OA/CArU,OAAOuC,eAAekqE,EAAgBxsE,UAAW,YAM7CuC,IAAK,WACD,OAAOlC,KAAKosE,eAEhB/pE,YAAY,EACZC,cAAc,IAMlB6pE,EAAgBxsE,UAAU0sE,WAAa,WACnC,OAAOrsE,KAAKosE,eAOhBD,EAAgBxsE,UAAUilB,OAAS,SAAU0nD,GACzC,OAAOtsE,KAAKusE,eAAeD,IAE/BH,EAAgBxsE,UAAU6sE,SAAW,SAAUF,GAC3C,OAAOtsE,KAAKusE,eAAeD,IAM/BH,EAAgBxsE,UAAUwyD,YAAc,SAAUzxB,GAG9C,OAFcA,EAAY0xB,QACH1+C,OAG3By4D,EAAgBxsE,UAAU8sE,kBAAoB,SAAUH,GACpD,GAAc,MAATA,EACD,MAAM,IAAIj2D,MAAM,iCAIpB,OAFai2D,EAAMpnD,OAAOwnD,kBAAoBJ,EAAMpnD,OAAOynD,eACrD,IAAIttD,EAAWitD,EAAM93D,OAAO9B,EAAG,EAAG45D,EAAM93D,OAAOlL,MAAOgjE,EAAM93D,OAAOjL,SAGtE4iE,KAGPS,GAAiC,WACjC,SAASA,EAAgBC,QACK,IAAfA,IAIP7sE,KAAK8sE,MAAQD,EAAWC,MACxB9sE,KAAK4kB,OAASioD,EAAWjoD,OACzB5kB,KAAK2sE,eAAiBE,EAAWF,eACjC3sE,KAAK+sE,UAAYF,EAAWH,mBAsEpC,OAnEAhtE,OAAOuC,eAAe2qE,EAAgBjtE,UAAW,UAM7CuC,IAAK,WAID,OAAOlC,KAAKgtE,YAEhB5qE,IAAK,SAAU7B,GACXP,KAAKgtE,WAAazsE,GAEtB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe2qE,EAAgBjtE,UAAW,SAK7CuC,IAAK,WAID,OAAOlC,KAAK6nB,WAEhBzlB,IAAK,SAAU7B,GACXP,KAAK6nB,UAAYtnB,GAErB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe2qE,EAAgBjtE,UAAW,kBAK7CuC,IAAK,WAID,YAHyC,IAA9BlC,KAAKitE,sBAAqE,MAA7BjtE,KAAKitE,uBACzDjtE,KAAKitE,qBAAuB,IAAI5tD,EAAW,EAAG,EAAG,EAAG,IAEjDrf,KAAKitE,sBAEhB7qE,IAAK,SAAU7B,GACXP,KAAKitE,qBAAuB1sE,EAC5BP,KAAK+sE,WAAY,GAErB1qE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe2qE,EAAgBjtE,UAAW,qBAK7CuC,IAAK,WAID,OAAOlC,KAAK+sE,WAEhB1qE,YAAY,EACZC,cAAc,IAEXsqE,KAGPM,GAAiC,WACjC,SAASA,KA6CT,OA3CAxtE,OAAOuC,eAAeirE,EAAgBvtE,UAAW,QAM7CuC,IAAK,WACD,OAAOlC,KAAKm7D,SAEhB/4D,IAAK,SAAU7B,GACXP,KAAKm7D,QAAU56D,GAEnB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeirE,EAAgBvtE,UAAW,UAK7CuC,IAAK,WACD,OAAO,IAAImd,EAAWrf,KAAKs1D,aAAa5iD,EAAG1S,KAAKs1D,aAAa3iD,EAAG3S,KAAKs1D,aAAahsD,MAAOtJ,KAAKs1D,aAAa/rD,SAE/GnH,IAAK,SAAU7B,GACXP,KAAKs1D,aAAe/0D,GAExB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeirE,EAAgBvtE,UAAW,UAK7CuC,IAAK,WACD,OAAOlC,KAAKmtE,cAEhB/qE,IAAK,SAAU7B,GACXP,KAAKmtE,aAAe5sE,GAExB8B,YAAY,EACZC,cAAc,IAEX4qE,KAGPE,GAAiC,WAMjC,SAASA,EAAgB3sC,EAAMjsB,GAC3BxU,KAAKm7D,QAAU16B,EACfzgC,KAAKs1D,aAAe9gD,EAyBxB,OAvBA9U,OAAOuC,eAAemrE,EAAgBztE,UAAW,QAM7CuC,IAAK,WACD,OAAOlC,KAAKm7D,SAEhB94D,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAemrE,EAAgBztE,UAAW,UAK7CuC,IAAK,WACD,OAAOlC,KAAKs1D,cAEhBjzD,YAAY,EACZC,cAAc,IAEX8qE,KC9NPC,GAA4B,WAM5B,SAASA,IACL,IAAIC,EAAuB,IAAI7yC,GAAO,IAAIhe,EAAS,EAAG,EAAG,IACzD6wD,EAAqBC,UAAYrxD,eAAa2e,MAC9C,IAAI2yC,EAAwB,IAAI/yC,GAAO,IAAIhe,EAAS,EAAG,EAAG,IAC1D+wD,EAAsBD,UAAYrxD,eAAa2e,MAC/C,IAAI4yC,EAAsB,IAAIhzC,GAAO,IAAIhe,EAAS,EAAG,EAAG,IACxDgxD,EAAoBF,UAAYrxD,eAAa2e,MAC7C,IAAI6yC,EAAyB,IAAIjzC,GAAO,IAAIhe,EAAS,EAAG,EAAG,IAC3DixD,EAAuBH,UAAYrxD,eAAa2e,MAChD76B,KAAK2tE,QAAUL,EACfttE,KAAK4tE,SAAWJ,EAChBxtE,KAAK6tE,OAASJ,EACdztE,KAAK8tE,UAAYJ,EA4FrB,OA1FAhuE,OAAOuC,eAAeorE,EAAW1tE,UAAW,QAMxCuC,IAAK,WACD,OAAOlC,KAAK2tE,SAEhBvrE,IAAK,SAAU7B,GACXP,KAAK2tE,QAAUptE,GAEnB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeorE,EAAW1tE,UAAW,SAKxCuC,IAAK,WACD,OAAOlC,KAAK4tE,UAEhBxrE,IAAK,SAAU7B,GACXP,KAAK4tE,SAAWrtE,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeorE,EAAW1tE,UAAW,OAKxCuC,IAAK,WACD,OAAOlC,KAAK6tE,QAEhBzrE,IAAK,SAAU7B,GACXP,KAAK6tE,OAASttE,GAElB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeorE,EAAW1tE,UAAW,UAKxCuC,IAAK,WACD,OAAOlC,KAAK8tE,WAEhB1rE,IAAK,SAAU7B,GACXP,KAAK8tE,UAAYvtE,GAErB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeorE,EAAW1tE,UAAW,OAKxCyC,IAAK,SAAU7B,GACXP,KAAK2tE,QAAU3tE,KAAK4tE,SAAW5tE,KAAK6tE,OAAS7tE,KAAK8tE,UAAYvtE,GAElE8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeorE,EAAW1tE,UAAW,SAKxCuC,IAAK,WACD,OAASlC,KAAK2tE,UAAY3tE,KAAK4tE,UAAc5tE,KAAK2tE,UAAY3tE,KAAK6tE,QAAY7tE,KAAK2tE,UAAY3tE,KAAK8tE,WAEzGzrE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeorE,EAAY,WAK9BnrE,IAAK,WACD,OAAO,IAAImrE,GAEfhrE,YAAY,EACZC,cAAc,IAEX+qE,KAGPU,GAA6B,WAC7B,SAASA,EAAYluD,EAAME,EAAOD,EAAKE,GAKnChgB,KAAKguE,YAAa,EAKlBhuE,KAAKiuE,aAAc,EAKnBjuE,KAAKkuE,WAAY,EAKjBluE,KAAKmuE,cAAe,OACA,IAATtuD,GAEP7f,KAAKouE,QAAUpuE,KAAKquE,SAAW,KAE/BruE,KAAKsuE,UAAYtuE,KAAKuuE,OAAS,KAG/BvuE,KAAKouE,QAAUvuD,EACf7f,KAAKquE,SAAWtuD,EAChB/f,KAAKuuE,OAASzuD,EACd9f,KAAKsuE,UAAYtuD,EACjBhgB,KAAKguE,YAAa,EAClBhuE,KAAKiuE,aAAc,EACnBjuE,KAAKkuE,WAAY,EACjBluE,KAAKmuE,cAAe,GA+E5B,OA5EAzuE,OAAOuC,eAAe8rE,EAAYpuE,UAAW,QAMzCuC,IAAK,WACD,OAAOlC,KAAKouE,SAEhBhsE,IAAK,SAAU7B,GACXP,KAAKouE,QAAU7tE,EACfP,KAAKguE,YAAa,GAEtB3rE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8rE,EAAYpuE,UAAW,SAKzCuC,IAAK,WACD,OAAOlC,KAAKquE,UAEhBjsE,IAAK,SAAU7B,GACXP,KAAKquE,SAAW9tE,EAChBP,KAAKiuE,aAAc,GAEvB5rE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8rE,EAAYpuE,UAAW,OAKzCuC,IAAK,WACD,OAAOlC,KAAKuuE,QAEhBnsE,IAAK,SAAU7B,GACXP,KAAKuuE,OAAShuE,EACdP,KAAKkuE,WAAY,GAErB7rE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8rE,EAAYpuE,UAAW,UAKzCuC,IAAK,WACD,OAAOlC,KAAKsuE,WAEhBlsE,IAAK,SAAU7B,GACXP,KAAKsuE,UAAY/tE,EACjBP,KAAKmuE,cAAe,GAExB9rE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8rE,EAAYpuE,UAAW,OAKzCyC,IAAK,SAAU7B,GACXP,KAAKouE,QAAUpuE,KAAKquE,SAAWruE,KAAKuuE,OAASvuE,KAAKsuE,UAAY/tE,EAC9DP,KAAKguE,YAAa,EAClBhuE,KAAKiuE,aAAc,EACnBjuE,KAAKkuE,WAAY,EACjBluE,KAAKmuE,cAAe,GAExB9rE,YAAY,EACZC,cAAc,IAEXyrE,KCtOPS,GAAkC,WAClC,SAASA,KAiFT,OA/EA9uE,OAAOuC,eAAeusE,EAAiB7uE,UAAW,wBAM9CuC,IAAK,WACD,YAAwC,IAAzBlC,KAAKyuE,iBAExBpsE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeusE,EAAiB7uE,UAAW,sBAK9CuC,IAAK,WACD,YAAsC,IAAvBlC,KAAK0uE,eAExBrsE,YAAY,EACZC,cAAc,IAGlBksE,EAAiB7uE,UAAUgvE,kBAAoB,SAAU3L,GACjDhjE,KAAKyuE,iBACLzuE,KAAKyuE,gBAAgBzuE,KAAMgjE,IAGnCwL,EAAiB7uE,UAAUivE,gBAAkB,SAAU5L,GAC/ChjE,KAAK0uE,eACL1uE,KAAK0uE,cAAc1uE,KAAMgjE,IAGjCwL,EAAiB7uE,UAAUm/B,WAAa,SAAUvf,EAAMC,EAAMC,EAAMoF,GAChE,GAAIrF,aAAgBL,QAAgC,IAAfK,EAAKlW,YAAyC,IAATmW,EACtE,OAAOzf,KAAK8+B,WAAWvf,EAAMC,EAAK9M,EAAG8M,EAAK7M,GAEzC,GAAoB,iBAAT6M,GAAqC,iBAATC,QAAqC,IAAToF,EACpE,OAAO7kB,KAAK8+B,WAAWvf,EAAMC,EAAMC,EAAM,MAExC,GAAID,aAAgBH,QAAoC,IAAfG,EAAKlW,YAAyC,IAATmW,EAC/E,OAAOzf,KAAK8+B,WAAWvf,EAAMC,EAAM,MAElC,GAAIA,aAAgBL,QAAgC,IAAfK,EAAKlW,OAAyBmW,aAAgBmtD,GACpF,OAAO5sE,KAAK8+B,WAAWvf,EAAMC,EAAK9M,EAAG8M,EAAK7M,EAAG8M,GAE5C,GAAoB,iBAATD,GAAqC,iBAATC,IAAsBoF,aAAgB+nD,IAA2B,MAAR/nD,GAAe,CAChH,IAAIvb,EAASiW,EAAKwf,SAAS/Z,WAAW1b,MAAQkW,EAC1CoxC,EAAkB,IAAIvxC,EAAWG,EAAMC,EAAMnW,EAAO,GACxD,OAAOtJ,KAAK8+B,WAAWvf,EAAMqxC,EAAiB/rC,GAE7C,GAAIrF,aAAgBH,QAAoC,IAAfG,EAAKlW,OAAyC,kBAATmW,EAE/E,OADAzf,KAAK6uE,YAAcpvD,EACZzf,KAAK8+B,WAAWvf,EAAMC,EAAM,MAGnC,IAAI8sD,EAAQ,IAAIY,GACZpjD,EAAWtK,EACXyvC,EAAWxvC,EAGf,GAFA6sD,EAAM7rC,KAAOlhB,EACb+sD,EAAM93D,OAASsV,EACF,MAATwiD,EAAe,CACf,IAAI55D,EAAI45D,EAAM93D,OAAO9B,EACjBC,EAAI25D,EAAM93D,OAAO7B,EACE,IAAnB25D,EAAM93D,OAAO9B,IACbA,EAAI26D,GAAWyB,QAAQ/uD,MAAMzW,MAAQ,GAElB,IAAnBgjE,EAAM93D,OAAO7B,IACbA,EAAI06D,GAAWyB,QAAQhvD,IAAIxW,MAAQ,GAEvC,IAAIylE,EAAW,IAAI1vD,EAAW3M,EAAGC,EAAG25D,EAAM93D,OAAOlL,MAAOgjE,EAAM93D,OAAOjL,QACrE+iE,EAAM93D,OAASu6D,EAEnBzC,EAAMpnD,OAAsB,MAAZ+pC,EAAoBA,EAAW,IAAI2d,GAEnD,OADa5sE,KAAK4kB,OAAO0nD,IAI1BkC,KCzFP35D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GA0BxC25D,GAA8B,SAAUv5D,GAOxC,SAASu5D,EAAaj7D,GAClB,OAAO0B,EAAO5V,KAAKG,KAAM+T,IAAY/T,KAuGzC,OA9GA6U,GAAUm6D,EAAcv5D,GASxB/V,OAAOuC,eAAe+sE,EAAarvE,UAAW,WAK1CuC,IAAK,WACD,OAAOuT,EAAO9V,UAAU0sE,WAAWxsE,KAAKG,OAE5CqC,YAAY,EACZC,cAAc,IAOlB0sE,EAAarvE,UAAU4sE,eAAiB,SAAUD,GAE9CtsE,KAAKklB,OAAwC,OAA9BllB,KAAK+T,QAAQksB,mBAA8D,IAA9BjgC,KAAK+T,QAAQksB,aAAgCjgC,KAAK+T,QAAQksB,aAAe,KACrI,IAAIS,EAAc4rC,EAAM7rC,KACpBwuC,EAAgB3C,EAAM93D,OACtB4B,EAAOpW,KAAK+T,QAAQxT,MACpB0C,EAAS,KACTisE,EAAa,IAAIC,GAGrB,IAFAD,EAAWzuC,KAAOC,EAClBwuC,EAAWE,UAAYh5D,IACd,CACL84D,EAAalvE,KAAKqvE,aAAaj5D,EAAMsqB,EAAauuC,EAAe3C,GACjErpE,EAASjD,KAAKsvE,gBAAgBJ,GAC9B,MAGJ,OAAOjsE,GAMX+rE,EAAarvE,UAAU2vE,gBAAkB,SAAUJ,GAE/C,OADa,IAAIK,GAAoBL,EAAWzuC,KAAMyuC,EAAW16D,OAAQ06D,EAAWE,UAAWF,EAAWM,iBAQ9GR,EAAarvE,UAAU0vE,aAAe,SAAUj5D,EAAMsqB,EAAauuC,EAAe3C,GAC9E,IAAIrpE,EAAS,IAAIksE,GACjBlsE,EAAOmsE,UAAYh5D,EACnBnT,EAAOw9B,KAAOC,EACduuC,EAAgBjvE,KAAKyvE,mBAAmB/uC,EAAauuC,GACrD,IACIS,GADW,IAAIhrD,GACSE,OAAOxO,EAAMpW,KAAK+T,QAAQpL,KAAM3I,KAAKklB,OAAQ+pD,EAAevuC,EAAY+9B,gBAAgBl1D,QAAQ,EAAO,IAAI6V,EAAM,EAAG,IAC5IuwD,EAA0C,MAA1BD,EAAaN,UAI7BrwC,GAHautC,EAAMpnD,OAAO4nD,QAAU/kB,qBAAmB6nB,YAC9BF,EAAa/mD,MAE3B+X,EAAY3B,UACvBxe,EAAQvgB,KAAK+T,QAAQusB,WACrBtgC,KAAK+T,mBAAmB87D,KACxBtvD,EAAMH,MAAQ,IAAI3D,EAAS,EAAG,EAAG,MAErCsiB,EAASywB,uBAAuBkgB,EAAc1vE,KAAK+T,QAAQpL,KAAM3I,KAAK+T,QAAQ+nB,IAAKvb,EAAO0uD,EAAejvE,KAAKklB,QAC/FwqD,EAAajqD,MAAMiqD,EAAa7e,UAAY,GAK3D,OAJA5tD,EAAOusE,eAAiBzwC,EAAS2xB,cAAcgf,EAAa7e,UAAY,EAAG6e,EAAc1vE,KAAK+T,QAAQpL,KAAMsmE,EAAejvE,KAAKklB,QAChIjiB,EAAOuR,OAASxU,KAAK8vE,kBAAkBpvC,EAAauuC,EAAeS,GACnEzsE,EAAOmsE,UAAYM,EAAaN,UAChCnsE,EAAOghB,MACAhhB,GAOX+rE,EAAarvE,UAAU8vE,mBAAqB,SAAU/uC,EAAauuC,GAC/D,IAAIp4C,EAAW6J,EAAY3B,SAAS/Z,WAEpC,OADAiqD,EAAc1lE,OAAU0lE,EAAc1lE,OAAS,EAAK0lE,EAAc1lE,OAASstB,EAASttB,OAAS0lE,EAAct8D,EACpGs8D,GAOXD,EAAarvE,UAAUmwE,kBAAoB,SAAUpvC,EAAauuC,EAAeS,GAC7E,IAAIxe,EAAWwe,EAAa1nD,WACxBtV,EAAIu8D,EAAcv8D,EAClBC,EAAIs8D,EAAct8D,EAClBrJ,EAAS2lE,EAAc3lE,MAAQ,EAAK2lE,EAAc3lE,MAAQ4nD,EAAS5nD,MACnEC,EAAS2nD,EAAS3nD,OAGtBmJ,EAFkBguB,EAAY3B,SAASwwB,4BAA4B2B,EAAU+d,EAAcv8D,EAAGu8D,EAAct8D,EAAG3S,KAAKklB,QAEpGxS,EAEhB,IAAIq9D,EAAgBrvC,EAAY3B,SAAS+xB,0BAA0BI,EAAS3nD,OAAQ0lE,EAAc1lE,OAAQvJ,KAAKklB,QAG/G,OADa,IAAI7F,EAAW3M,EAD5BC,GAAKo9D,EAC6BzmE,EAAOC,IAGtCylE,GACT7C,IAEEgD,GAAsC,WAGtC,OAFA,gBAKAI,GAAqC,SAAU95D,GAO/C,SAAS85D,EAAoB9uC,EAAMjsB,EAAQ46D,EAAWI,GAClD,IAAI75D,EAAQF,EAAO5V,KAAKG,KAAMygC,EAAMjsB,IAAWxU,KAG/C,OAFA2V,EAAMq6D,cAAgBZ,EACtBz5D,EAAMs6D,mBAAqBT,EACpB75D,EAyBX,OAnCAd,GAAU06D,EAAqB95D,GAY/B/V,OAAOuC,eAAestE,EAAoB5vE,UAAW,aAMjDuC,IAAK,WACD,OAAOlC,KAAKgwE,eAEhB3tE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAestE,EAAoB5vE,UAAW,kBAKjDuC,IAAK,WACD,OAAOlC,KAAKiwE,oBAEhB5tE,YAAY,EACZC,cAAc,IAEXitE,GACTnC,ICvLEv4D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GAkCxC66D,GAAgC,SAAUz6D,GAE1C,SAASy6D,EAAe5wD,EAAMC,EAAMC,EAAMC,EAAMoF,GAC5C,IAAIlP,EAAQF,EAAO5V,KAAKG,OAASA,KAwDjC,OAlDA2V,EAAMiT,QAAU,GAKhBjT,EAAMw6D,aAAe,GAMrBx6D,EAAMy6D,kBAAmB,EAMzBz6D,EAAM06D,kBAAmB,OACL,IAAT/wD,IAGc,iBAATA,QAAqC,IAATC,GACxC5J,EAAMiT,QAAUtJ,EAChB3J,EAAMw6D,aAAe7wD,GAEA,iBAATA,GAAqBC,aAAgBsJ,QAA2B,IAATrJ,GACnE7J,EAAMiT,QAAUtJ,EAChB3J,EAAMw6D,aAAe7wD,EACrB3J,EAAM+kD,QAAUn7C,GAEK,iBAATD,GAAqBC,aAAgBsJ,GAAWrJ,aAAgBib,SAA0B,IAAThb,GAC7F9J,EAAMiT,QAAUtJ,EAChB3J,EAAMw6D,aAAe7wD,EACrB3J,EAAM+kD,QAAUn7C,EAChB5J,EAAM8kD,OAASj7C,GAEM,iBAATF,GAAqBC,aAAgBsJ,GAAWrJ,aAAgBU,QAA4B,IAATT,GAC/F9J,EAAMiT,QAAUtJ,EAChB3J,EAAMw6D,aAAe7wD,EACrB3J,EAAM+kD,QAAUn7C,EAChB5J,EAAM8lB,SAAWjc,IAGjB7J,EAAMiT,QAAUtJ,EAChB3J,EAAMw6D,aAAe7wD,EACrB3J,EAAM+kD,QAAUn7C,EAChB5J,EAAM8kD,OAASj7C,EACf7J,EAAM8lB,SAAWhc,EACjB9J,EAAMuP,OAASL,IAEZlP,EAiUX,OA3XAd,GAAUq7D,EAAgBz6D,GA4D1B/V,OAAOuC,eAAeiuE,EAAevwE,UAAW,QA6B5CuC,IAAK,WACD,OAAOlC,KAAK4oB,SAEhBxmB,IAAK,SAAU7B,GACXP,KAAKmwE,aAAe5vE,EACpBP,KAAK4oB,QAAUroB,GAEnB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeiuE,EAAevwE,UAAW,SAM5CuC,IAAK,WACD,OAAOlC,KAAKmwE,cAEhB9tE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeiuE,EAAevwE,UAAW,OAM5CuC,IAAK,WACD,OAAOlC,KAAKy6D,QAGhBr4D,IAAK,SAAU7B,GACXP,KAAKy6D,OAASl6D,GAElB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeiuE,EAAevwE,UAAW,SAM5CuC,IAAK,WACD,OAAOlC,KAAKy7B,UAGhBr5B,IAAK,SAAU7B,GACXP,KAAKy7B,SAAWl7B,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeiuE,EAAevwE,UAAW,QA6B5CuC,IAAK,WACD,OAAOlC,KAAK06D,SAEhBt4D,IAAK,SAAU7B,GACXP,KAAK06D,QAAUn6D,EACXP,KAAK06D,mBAAmB0L,IAAmC,MAAhBpmE,KAAK4oB,QAChD5oB,KAAKmwE,aAAe/J,GAAgBwE,QAAQ5qE,KAAK4oB,SAGjD5oB,KAAKmwE,aAAenwE,KAAK4oB,SAGjCvmB,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeiuE,EAAevwE,UAAW,gBAK5CuC,IAAK,WACD,OAAOlC,KAAKklB,QAEhB9iB,IAAK,SAAU7B,GACXP,KAAKklB,OAAS3kB,GAElB8B,YAAY,EACZC,cAAc,IAOlB4tE,EAAevwE,UAAU2gC,SAAW,WAChC,OAAyB,MAAjBtgC,KAAKy7B,eAA6C,IAAlBz7B,KAAKy7B,SAA4B,IAAItb,EAAc,IAAI1D,EAAS,EAAG,EAAG,IAAMzc,KAAKy7B,UAa7Hy0C,EAAevwE,UAAUilB,OAAS,SAAU0nD,GAGxC,OAFe,IAAI0C,GAAahvE,MACV4kB,OAAO0nD,IAGjC4D,EAAevwE,UAAU2wE,SAAW,SAAU/wD,EAAMC,EAAMC,EAAMoF,GAC5D,GAAIrF,aAAgBL,QAAgC,IAAfK,EAAKlW,YAAyC,IAATmW,EAEtE,OADAzf,KAAKowE,kBAAmB,EACjBpwE,KAAKswE,SAAS/wD,EAAMC,EAAK9M,EAAG8M,EAAK7M,GAEvC,GAAoB,iBAAT6M,GAAqC,iBAATC,QAAqC,IAAToF,EAEpE,OADA7kB,KAAKowE,kBAAmB,EACjBpwE,KAAKswE,SAAS/wD,EAAMC,EAAMC,EAAM,MAEtC,GAAID,aAAgBH,QAAoC,IAAfG,EAAKlW,YAAyC,IAATmW,EAC/E,OAAOzf,KAAKswE,SAAS/wD,EAAMC,EAAM,MAEhC,GAAIA,aAAgBL,QAAgC,IAAfK,EAAKlW,OAAyBmW,aAAgBmtD,GAEpF,OADA5sE,KAAKowE,kBAAmB,EACjBpwE,KAAKswE,SAAS/wD,EAAMC,EAAK9M,EAAG8M,EAAK7M,EAAG8M,GAE1C,GAAoB,iBAATD,GAAqC,iBAATC,IAAsBoF,aAAgB+nD,IAA2B,MAAR/nD,GAAe,CAChH7kB,KAAKowE,kBAAmB,EACxB,IAAI9mE,EAASiW,EAAKwf,SAAS/Z,WAAW1b,MAAQkW,EAC1CoxC,EAAkB,IAAIvxC,EAAWG,EAAMC,EAAMnW,EAAO,GACxD,OAAOtJ,KAAKswE,SAAS/wD,EAAMqxC,EAAiB/rC,GAE3C,GAAIrF,aAAgBH,QAAoC,IAAfG,EAAKlW,OAAyC,kBAATmW,EAC/E,OAAOzf,KAAKswE,SAAS/wD,EAAMC,EAAM,MAGjC,IAAIoF,EAAS,IAAIF,EACjB,GAAI1kB,KAAKowE,iBAAkB,CACvB,IAAIG,EAAqB3rD,EAAOA,OAAO5kB,KAAKO,MAAOP,KAAK2I,KAAM3I,KAAKigC,aAAc,IAAI7gB,EAAOG,EAAKwf,SAAS/Z,WAAW1b,MAAQkW,EAAK9M,EAAI,IAAI,EAAM6M,EAAKwf,SAAS/Z,YAC1J+4C,OAAe,EAEfj0C,EAAWtK,EACXyvC,EAAWxvC,EAKf,IAPI6sD,EAAQ,IAAIY,IAGVzsC,KAAOlhB,EACb+sD,EACM93D,OAASsV,EACfwiD,EAAMpnD,OAAsB,MAAZ+pC,EAAoBA,EAAW,IAAI2d,GAC/C2D,EAAmB9qD,MAAMzkB,OAAS,EAAG,CAErC,GADAhB,KAAKoW,KAAOm6D,EAAmB3oD,YAAY,GAAGxR,KAC1Ck2D,EAAM93D,OAAO7B,GAAK25D,EAAM7rC,KAAK1B,SAAS/Z,WAAWzb,OAAQ,CACzD,IAAIinE,EAAmB,IAAIrxD,EAAOmtD,EAAM93D,OAAO9B,EAAG45D,EAAM93D,OAAO7B,GAC/DorD,EAAe/9D,KAAK4kB,OAAO0nD,GAE3B,IACK,IAFD93D,EAAS,IAAI6K,EAAW,EAAG0+C,EAAavpD,OAAO7B,EAAI49D,EAAmBjoD,WAAY/I,EAAKwf,SAAS/Z,WAAW1b,MAAOinE,EAAmBjoD,YAEhIplB,EAAI,EAAGA,EAAIqtE,EAAmB9qD,MAAMzkB,OAAQkC,IAgBjD,GAfAopE,EAAM7rC,KAAOs9B,EAAat9B,KAC1B6rC,EAAM93D,OAAS,IAAI6K,EAAW,IAAIF,EAAO3K,EAAO9B,EAAG8B,EAAO7B,GAAI,IAAIyM,EAAM5K,EAAOlL,MAAOkL,EAAOjL,SAC7FvJ,KAAKoW,KAAOm6D,EAAmB3oD,YAAY1kB,GAAGkT,KAC1C5B,EAAO7B,EAAI49D,EAAmBjoD,WAAay1C,EAAat9B,KAAK1B,SAAS/Z,WAAWzb,SACjF+iE,EACM7rC,KAAO6rC,EAAM7rC,KAAK1B,SAASozB,cAE7B39C,EADAg8D,EAAiB79D,EAAKorD,EAAat9B,KAAK1B,SAAS/Z,WAAWzb,OAASw0D,EAAavpD,OAAOjL,OAChF,IAAI8V,EAAW,EAAG0+C,EAAavpD,OAAOjL,OAAQw0D,EAAat9B,KAAK1B,SAAS/Z,WAAW1b,MAAOinE,EAAmBjoD,YAG9G,IAAIjJ,EAAW,EAAG,EAAG0+C,EAAat9B,KAAK1B,SAAS/Z,WAAW1b,MAAOinE,EAAmBjoD,YAElGgkD,EAAM93D,OAASA,GAEnBupD,EAAe/9D,KAAK4kB,OAAO0nD,GACvBppE,IAAOqtE,EAAmB9qD,MAAMzkB,OAAS,EACzCwT,EAAS,IAAI6K,EAAW,EAAG0+C,EAAavpD,OAAO7B,EAAI49D,EAAmBjoD,WAAYy1C,EAAat9B,KAAK1B,SAAS/Z,WAAW1b,MAAOinE,EAAmBjoD,gBAEjJ,CACD,IAAI7B,EAAYzmB,KAAK2I,KAAKghB,cAAc3pB,KAAKoW,KAAMpW,KAAKklB,QAAQ5b,MAChEy0D,EAAe/9D,KAAKywE,sBAAsB1S,EAAct3C,EAAWs3C,EAAat9B,KAAK1B,SAAS/Z,WAAW1b,MAAO,IAI5H,OAAOy0D,EAGP,IAAI2S,EAAW1wE,KAAK2I,KAAKghB,cAAc3pB,KAAKoW,KAAMpW,KAAKklB,QAKvD,OAJIonD,EAAM93D,OAAO7B,GAAK25D,EAAM7rC,KAAK1B,SAAS/Z,WAAWzb,SACjDw0D,EAAe/9D,KAAK4kB,OAAO0nD,GAC3BvO,EAAe/9D,KAAKywE,sBAAsB1S,EAAc2S,EAASpnE,MAAOy0D,EAAat9B,KAAK1B,SAAS/Z,WAAW1b,MAAO,IAElHy0D,EAIPA,EAAen5C,EAAOA,OAAO5kB,KAAKO,MAAOP,KAAK2I,KAAM3I,KAAKigC,aAAc,IAAI7gB,EAAMI,EAAKlW,MAAO,IAAI,EAAOiW,EAAKwf,SAAS/Z,YAA1H,IAEIsnD,EADArpE,OAAS,EAET6mB,EAAWtK,EACXyvC,EAAWxvC,EAIf,IANI6sD,EAAQ,IAAIY,IAGVzsC,KAAOlhB,EACb+sD,EAAM93D,OAASsV,EACfwiD,EAAMpnD,OAAsB,MAAZ+pC,EAAoBA,EAAW,IAAI2d,GAC/C7O,EAAat4C,MAAMzkB,OAAS,EAAG,CAE/B,GADAhB,KAAKoW,KAAO2nD,EAAan2C,YAAY,GAAGxR,KACpCk2D,EAAM93D,OAAO7B,GAAK25D,EAAM7rC,KAAK1B,SAAS/Z,WAAWzb,OAAQ,CACrDinE,EAAmB,IAAIrxD,EAAOmtD,EAAM93D,OAAO9B,EAAG45D,EAAM93D,OAAO7B,GAC/D1P,EAASjD,KAAK4kB,OAAO0nD,GAErB,IADI93D,EAAS,IAAI6K,EAAWyK,EAASpX,EAAGzP,EAAOuR,OAAO7B,EAAIorD,EAAaz1C,WAAYwB,EAASxgB,MAAOy0D,EAAaz1C,YAEvGplB,EAAI,EAAGA,EAAI66D,EAAat4C,MAAMzkB,OAAQkC,IAgB3C,GAfAopE,EAAM7rC,KAAOx9B,EAAOw9B,KACpB6rC,EAAM93D,OAAS,IAAI6K,EAAW7K,EAAO9B,EAAG8B,EAAO7B,EAAG6B,EAAOlL,MAAOkL,EAAOjL,QACvEvJ,KAAKoW,KAAO2nD,EAAan2C,YAAY1kB,GAAGkT,KACpC5B,EAAO7B,EAAIorD,EAAaz1C,WAAarlB,EAAOw9B,KAAK1B,SAAS/Z,WAAWzb,SACrE+iE,EACM7rC,KAAO6rC,EAAM7rC,KAAK1B,SAASozB,cAE7B39C,EADAg8D,EAAiB79D,EAAK1P,EAAOw9B,KAAK1B,SAAS/Z,WAAWzb,OAAStG,EAAOuR,OAAOjL,OACpE,IAAI8V,EAAWyK,EAASpX,EAAGqrD,EAAaz1C,WAAYwB,EAASxgB,MAAOy0D,EAAaz1C,YAGjF,IAAIjJ,EAAWyK,EAASpX,EAAG,EAAGoX,EAASxgB,MAAOy0D,EAAaz1C,YAExEgkD,EAAM93D,OAASA,GAEnBvR,EAASjD,KAAK4kB,OAAO0nD,GACjBppE,IAAO66D,EAAat4C,MAAMzkB,OAAS,EACnCwT,EAAS,IAAI6K,EAAWyK,EAASpX,EAAGzP,EAAOuR,OAAO7B,EAAIorD,EAAaz1C,WAAYwB,EAASxgB,MAAOy0D,EAAaz1C,gBAE3G,CACG7B,EAAYzmB,KAAK2I,KAAKghB,cAAc3pB,KAAKoW,KAAMpW,KAAKklB,QAAQ5b,MAChErG,EAASjD,KAAKywE,sBAAsBxtE,EAAQwjB,EAAWqD,EAASxgB,MAAOwgB,EAASpX,IAI5F,OAAOzP,EAGHytE,EAAW1wE,KAAK2I,KAAKghB,cAAc3pB,KAAKoW,KAAMpW,KAAKklB,QAKvD,OAJIonD,EAAM93D,OAAO7B,GAAK25D,EAAM7rC,KAAK1B,SAAS/Z,WAAWzb,SACjDtG,EAASjD,KAAK4kB,OAAO0nD,GACrBrpE,EAASjD,KAAKywE,sBAAsBxtE,EAAQytE,EAASpnE,MAAOwgB,EAASxgB,MAAOwgB,EAASpX,IAElFzP,GAKvBitE,EAAevwE,UAAU8wE,sBAAwB,SAAUxtE,EAAQwjB,EAAWkqD,EAAcC,GAkBxF,OAhByB,MAArB5wE,KAAKigC,mBAAqD,IAAtBjgC,KAAKigC,cAAgCjgC,KAAKigC,aAAamxB,YAAct1C,mBAAiBu1C,QAC1HpuD,EAAOuR,OAAO9B,EAAIk+D,GAAiBD,EAAelqD,GAAa,EAC/DxjB,EAAOuR,OAAOlL,MAAQmd,GAEI,MAArBzmB,KAAKigC,mBAAqD,IAAtBjgC,KAAKigC,cAAgCjgC,KAAKigC,aAAamxB,YAAct1C,mBAAiBw1C,OAC/HruD,EAAOuR,OAAO9B,EAAIk+D,GAAiBD,EAAelqD,GAClDxjB,EAAOuR,OAAOlL,MAAQmd,GAEI,MAArBzmB,KAAKigC,mBAAqD,IAAtBjgC,KAAKigC,cAAgCjgC,KAAKigC,aAAamxB,YAAct1C,mBAAiBu3C,SAC/HpwD,EAAOuR,OAAO9B,EAAIk+D,EAClB3tE,EAAOuR,OAAOlL,MAAQqnE,IAGtB1tE,EAAOuR,OAAOlL,MAAQsnE,EACtB3tE,EAAOuR,OAAOlL,MAAQmd,GAEnBxjB,GAEJitE,GACT1B,IC/ZE35D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GAoBxCw7D,GAAkC,SAAUp7D,GAE5C,SAASo7D,EAAiBxrD,EAAW9a,GACjC,IAAIoL,EAAQF,EAAO5V,KAAKG,KAAMqlB,IAAcrlB,KAI5C,YAHmB,IAARuK,IACPoL,EAAMpL,IAAMA,GAEToL,EA2DX,OAjEAd,GAAUg8D,EAAkBp7D,GAQ5B/V,OAAOuC,eAAe4uE,EAAiBlxE,UAAW,aAK9CuC,IAAK,WAID,YAHiC,IAAtBlC,KAAK8wE,eACZ9wE,KAAK8wE,aAAe,IAAIp1D,GAErB1b,KAAK8wE,cAEhBzuE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe4uE,EAAiBlxE,UAAW,OAM9CuC,IAAK,WACD,OAAOlC,KAAK+wE,UAAUxmE,KAE1BnI,IAAK,SAAU7B,GACPP,KAAK+wE,UAAUxmE,MAAQhK,IACvBP,KAAK+wE,UAAUxmE,IAAMhK,IAG7B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe4uE,EAAiBlxE,UAAW,UAK9CuC,IAAK,WACD,OAAOlC,KAAKgsE,gBAEhB5pE,IAAK,SAAU7B,GACXP,KAAKgsE,aAAazrE,GAClBP,KAAK+wE,UAAU/mE,KAAOzJ,GAE1B8B,YAAY,EACZC,cAAc,IAOlBuuE,EAAiBlxE,UAAUkb,WAAa,WACpCpF,EAAO9V,UAAUkb,WAAWhb,KAAKG,MACjCA,KAAK6O,WAAWU,MAAM/O,SAASR,KAAKsP,qBAAqBvG,QAAS,IAAIpH,EAAQ3B,KAAKsP,qBAAqBpF,OACpFlK,KAAK+wE,UAAUh9D,QACnC/T,KAAK6O,WAAWU,MAAM/O,SAASR,KAAKsP,qBAAqBnF,EAAGnK,KAAK+wE,UAAUh9D,UAExE88D,GACT/E,ICvFEj3D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GAiDxCw6D,GAAgC,SAAUp6D,GAO1C,SAASo6D,IACL,IAAIl6D,EAAQF,EAAO5V,KAAKG,OAASA,KAOjC2V,EAAMq7D,uBAAyB,GAM/Br7D,EAAMs7D,cAAgB,KAOtBt7D,EAAMu7D,mBAAoB,EAC1Bv7D,EAAMw7D,cAAgB,IAAIr+D,EAC1B,IAAK,IAAI5P,EAAI,EAAGA,EAAI,EAAGA,IACnByS,EAAMw7D,cAAcz9D,IAAI,IAAI5B,EAAU,IAE1C,OAAO6D,EAwLX,OAxNAd,GAAUg7D,EAAgBp6D,GAkC1B/V,OAAOuC,eAAe4tE,EAAelwE,UAAW,OA6B5CuC,IAAK,WACD,OAAOlC,KAAKgxE,wBAEhB5uE,IAAK,SAAU7B,GACX,GAAqB,IAAjBA,EAAMS,OACN,MAAM,IAAIqV,MAAM,qDAEpBrW,KAAKgxE,uBAAyBzwE,GAElC8B,YAAY,EACZC,cAAc,IAElButE,EAAelwE,UAAUugC,KAAO,SAAU5gB,EAAMC,GAC5C,GAAID,aAAgBosC,GAAS,CACzB,IAAI9mC,EAAS,IAAIF,EACb0sD,EAAoBpxE,KAAK2I,KAAKmgB,MAClC,GAAIvJ,aAAgBJ,EAAQ,CACxBnf,KAAKkxE,mBAAoB,EACzBlxE,KAAK2I,KAAKmgB,MAAQ/H,eAAayI,UAE/B,GAAkC,KAD9Bu0C,EAAen5C,EAAOA,OAAO5kB,KAAKO,MAAOP,KAAK2I,KAAM3I,KAAKigC,aAAc,IAAI7gB,EAAOE,EAAKyf,SAAS/Z,WAAW1b,MAAQiW,EAAK7M,EAAI,IAAI,EAAM4M,EAAKyf,SAAS/Z,aACvIS,MAAMzkB,OAAc,CACjC,IAAIkwD,EAAWlxD,KAAK2I,KAAKghB,cAAc3pB,KAAKO,OACxC+J,EAAO,IAAI+U,EAAWE,EAAM2xC,GAChC5mD,EAAOtK,KAAKqxE,gBAAgB/mE,EAAM4mD,EAAS5nD,MAAOgW,EAAKyf,SAAS/Z,WAAW1b,MAAOiW,EAAK7M,GACvF1S,KAAKixE,cAAgB,IAAIJ,GAAiBvmE,EAAMtK,KAAKsxE,KACrDtxE,KAAKixE,cAAcpiE,WAAWU,MAAM/O,SAAS,SAAUR,KAAKmxE,eAC5D7xD,EAAK++C,YAAY3qD,IAAI1T,KAAKixE,eAC1B,IAAIhuE,EAASjD,KAAKswE,SAAShxD,EAAMC,GAEjC,OADAvf,KAAK2I,KAAKmgB,MAAQsoD,EACXnuE,EAGHA,EAASjD,KAAKuxE,0BAA0BxT,EAAcz+C,EAAMC,GAEhE,OADAvf,KAAK2I,KAAKmgB,MAAQsoD,EACXnuE,EAIX,IAAI86D,EAAen5C,EAAOA,OAAO5kB,KAAKO,MAAOP,KAAK2I,KAAM3I,KAAKigC,aAAc,IAAI7gB,EAAMG,EAAKjW,MAAO,IAAI,EAAO,IAAI8V,EAAM,EAAG,IAEzH,GADApf,KAAK2I,KAAKmgB,MAAQ/H,eAAayI,UACG,IAA9Bu0C,EAAat4C,MAAMzkB,OAAc,CAC7BkwD,EAAWlxD,KAAK2I,KAAKghB,cAAc3pB,KAAKO,OACxC+J,EAAO,IAAI+U,EAAW,IAAIF,EAAOI,EAAK7M,EAAG6M,EAAK5M,GAAIu+C,GACtD5mD,EAAOtK,KAAKqxE,gBAAgB/mE,EAAM4mD,EAAS5nD,MAAOiW,EAAKjW,MAAOiW,EAAK7M,GACnE1S,KAAKixE,cAAgB,IAAIJ,GAAiBvmE,EAAMtK,KAAKsxE,KACrDtxE,KAAKixE,cAAcpiE,WAAWU,MAAM/O,SAAS,SAAUR,KAAKmxE,eAC5D7xD,EAAK++C,YAAY3qD,IAAI1T,KAAKixE,eAC1B,IAAI72C,EAAcp6B,KAAKswE,SAAShxD,EAAMC,GAEtC,OADAvf,KAAK2I,KAAKmgB,MAAQsoD,EACXh3C,EAGHA,EAAcp6B,KAAKwxE,2BAA2BzT,EAAcz+C,EAAMC,GAEtE,OADAvf,KAAK2I,KAAKmgB,MAAQsoD,EACXh3C,EAKf,IAAIqG,EAAO,IAAIirB,GAEf,OADAjrB,EAAOnhB,EAAKmhB,KACLzgC,KAAKkgC,KAAKO,EAAMlhB,IAS/BswD,EAAelwE,UAAU4xE,0BAA4B,SAAUtuE,EAAQw9B,EAAMZ,GAEzE,IAAK,IADDk+B,EACK76D,EAAI,EAAGA,EAAID,EAAO2kB,YAAY5mB,OAAQkC,IAAK,CAChD,IAAIxB,EAAO1B,KAAK2I,KAAKghB,cAAc1mB,EAAOwiB,MAAMviB,GAAGkT,MAC/C5B,EAAS,IAAI6K,EAAWwgB,EAAUn+B,GAKtC,GAJU,IAANwB,IACAsR,EAAO9B,EAAI,GAEf1S,KAAKoW,KAAOnT,EAAOwiB,MAAMviB,GAAGkT,KACxB5B,EAAO7B,EAAIjR,EAAK6H,OAASk3B,EAAK1B,SAAS/Z,WAAWzb,OAAQ,CAC1D,GAAU,IAANrG,EAMA,MALAu9B,EAAOA,EAAK1B,SAASozB,cACrB39C,EAAS,IAAI6K,EAAW,EAAG,EAAGohB,EAAK1B,SAAS/Z,WAAW1b,MAAO5H,EAAK6H,QACnEs2B,EAASltB,EAAI,EAMrB6B,EAASxU,KAAKqxE,gBAAgB78D,EAAQ9S,EAAK4H,MAAOm3B,EAAK1B,SAAS/Z,WAAW1b,MAAOkL,EAAO9B,GACzF1S,KAAKixE,cAAgB,IAAIJ,GAAiBr8D,EAAQxU,KAAKsxE,KACvDtxE,KAAKixE,cAAcpiE,WAAWU,MAAM/O,SAAS,SAAUR,KAAKmxE,eAC5D1wC,EAAK49B,YAAY3qD,IAAI1T,KAAKixE,eAEtBlT,EADM,IAAN76D,EACelD,KAAKswE,SAAS7vC,EAAM,IAAIthB,EAAO,EAAG3K,EAAO7B,IAGzC3S,KAAKswE,SAAS7vC,EAAMjsB,EAAO9B,EAAG8B,EAAO7B,GAExDktB,EAASltB,GAAKjR,EAAK6H,OAEvB,OAAOw0D,GAMX8R,EAAelwE,UAAU6xE,2BAA6B,SAAUvuE,EAAQw9B,EAAMjsB,GAE1E,IAAK,IADDupD,EACK76D,EAAI,EAAGA,EAAID,EAAO2kB,YAAY5mB,OAAQkC,IAAK,CAChD,IAAIxB,EAAO1B,KAAK2I,KAAKghB,cAAc1mB,EAAOwiB,MAAMviB,GAAGkT,MAC/CkpB,EAAiB,IAAIjgB,EAAW,IAAIF,EAAO3K,EAAO9B,EAAG8B,EAAO7B,GAAIjR,GAGpE,GAFA49B,EAAiBt/B,KAAKqxE,gBAAgB/xC,EAAgB59B,EAAK4H,MAAOkL,EAAOlL,MAAOkL,EAAO9B,GACvF1S,KAAKoW,KAAOnT,EAAOwiB,MAAMviB,GAAGkT,KACxB5B,EAAO7B,EAAIjR,EAAK6H,OAASk3B,EAAK1B,SAAS/Z,WAAWzb,OAAQ,CAC1D,GAAU,IAANrG,EAMA,MALAu9B,EAAOA,EAAK1B,SAASozB,cACrB39C,EAAS,IAAI6K,EAAW7K,EAAO9B,EAAG,EAAG8B,EAAOlL,MAAO5H,EAAK6H,QACxD+1B,EAAe3sB,EAAI,EAM3B3S,KAAKixE,cAAgB,IAAIJ,GAAiBvxC,EAAgBt/B,KAAKsxE,KAC/DtxE,KAAKixE,cAAcpiE,WAAWU,MAAM/O,SAAS,SAAUR,KAAKmxE,eAC5D1wC,EAAK49B,YAAY3qD,IAAI1T,KAAKixE,eAC1BlT,EAAe/9D,KAAKswE,SAAS7vC,EAAMjsB,GACnCA,EAAO7B,GAAKjR,EAAK6H,OAErB,OAAOw0D,GAGX8R,EAAelwE,UAAU0xE,gBAAkB,SAAUpC,EAAexoD,EAAWkqD,EAAcC,GAkBzF,OAhByB,MAArB5wE,KAAKigC,mBAAqD,IAAtBjgC,KAAKigC,cAAgCjgC,KAAKigC,aAAamxB,YAAct1C,mBAAiBu1C,QAC1H4d,EAAcv8D,EAAIk+D,GAAiBD,EAAelqD,GAAa,EAC/DwoD,EAAc3lE,MAAQmd,GAEI,MAArBzmB,KAAKigC,mBAAqD,IAAtBjgC,KAAKigC,cAAgCjgC,KAAKigC,aAAamxB,YAAct1C,mBAAiBw1C,OAC/H2d,EAAcv8D,EAAIk+D,GAAiBD,EAAelqD,GAClDwoD,EAAc3lE,MAAQmd,GAEI,MAArBzmB,KAAKigC,mBAAqD,IAAtBjgC,KAAKigC,cAAgCjgC,KAAKigC,aAAamxB,YAAct1C,mBAAiBu3C,SAC/H4b,EAAcv8D,EAAIk+D,EAClB3B,EAAc3lE,MAAQqnE,IAGtB1B,EAAc3lE,MAAQsnE,EACtB3B,EAAc3lE,MAAQmd,GAEnBwoD,GAEJY,GACTK,IClQEuB,GAAqC,WACrC,SAASA,KAoJT,OA7IAA,EAAoB7G,QAAU,SAAU8G,EAAWC,GAC/C,IAAI1uE,EAAS,GACb,OAAQ0uE,GACJ,KAAKh8C,iBAAejT,KAChBzf,EAAS,GACT,MACJ,KAAK0yB,iBAAei8C,QAChB3uE,EAASyuE,EAAU9xE,WACnB,MACJ,KAAK+1B,iBAAek8C,WAChB5uE,EAASjD,KAAK8xE,eAAeJ,GAAWK,cACxC,MACJ,KAAKp8C,iBAAeq8C,WAChB/uE,EAASjD,KAAKiyE,cAAcP,GAAWK,cACvC,MACJ,KAAKp8C,iBAAeu8C,WAChBjvE,EAASjD,KAAK8xE,eAAeJ,GAC7B,MACJ,KAAK/7C,iBAAew8C,WAChBlvE,EAASjD,KAAKiyE,cAAcP,GAGpC,OAAOzuE,GAMXwuE,EAAoBQ,cAAgB,SAAUP,GAC1C,IAAIU,EAAS,GACTC,EAAUryE,KAAKsyE,eAAeZ,EAAW,IAAM,KACnDU,GAAUC,EAAQj4C,YAClBs3C,EAAYW,EAAQX,UACpB,IAAIa,EAAWvyE,KAAKsyE,eAAeZ,EAAW,IAAK,MACnDU,GAAUG,EAASn4C,YACnBs3C,EAAYa,EAASb,UACrB,IAAIc,EAAUxyE,KAAKsyE,eAAeZ,EAAW,IAAK,KAClDU,GAAUI,EAAQp4C,YAClBs3C,EAAYc,EAAQd,UACpB,IAAIe,EAAWzyE,KAAKsyE,eAAeZ,EAAW,IAAK,MACnDU,GAAUK,EAASr4C,YACnBs3C,EAAYe,EAASf,UACrB,IAAIgB,EAAU1yE,KAAKsyE,eAAeZ,EAAW,IAAK,KAClDU,GAAUM,EAAQt4C,YAClBs3C,EAAYgB,EAAQhB,UACpB,IAAIiB,EAAW3yE,KAAKsyE,eAAeZ,EAAW,GAAI,MAClDU,GAAUO,EAASv4C,YACnBs3C,EAAYiB,EAASjB,UACrB,IAAIkB,EAAU5yE,KAAKsyE,eAAeZ,EAAW,GAAI,KACjDU,GAAUQ,EAAQx4C,YAClBs3C,EAAYkB,EAAQlB,UACpB,IAAImB,EAAW7yE,KAAKsyE,eAAeZ,EAAW,GAAI,MAClDU,GAAUS,EAASz4C,YACnBs3C,EAAYmB,EAASnB,UACrB,IAAIoB,EAAU9yE,KAAKsyE,eAAeZ,EAAW,GAAI,KACjDU,GAAUU,EAAQ14C,YAClBs3C,EAAYoB,EAAQpB,UACpB,IAAIqB,EAAW/yE,KAAKsyE,eAAeZ,EAAW,EAAG,MACjDU,GAAUW,EAAS34C,YACnBs3C,EAAYqB,EAASrB,UACrB,IAAIsB,EAAUhzE,KAAKsyE,eAAeZ,EAAW,EAAG,KAChDU,GAAUY,EAAQ54C,YAClBs3C,EAAYsB,EAAQtB,UACpB,IAAIuB,EAAWjzE,KAAKsyE,eAAeZ,EAAW,EAAG,MACjDU,GAAUa,EAAS74C,YACnBs3C,EAAYuB,EAASvB,UACrB,IAAIwB,EAAUlzE,KAAKsyE,eAAeZ,EAAW,EAAG,KAGhD,OAFAU,GAAUc,EAAQ94C,YAClBs3C,EAAYwB,EAAQxB,UACbU,EAAOxyE,YAMlB6xE,EAAoBK,eAAiB,SAAUqB,GAG3C,IAFA,IAAIC,EAAQpzE,KAAKqzE,gBAAgBF,GAC7BlwE,EAAS,GACNmwE,EAAMpyE,OAAS,GAAG,CACrB,IAAIkjB,EAAMkvD,EAAMjc,MAChBl0D,EAASjD,KAAKszE,WAAWrwE,EAAQihB,GAErC,OAAOjhB,EAAOrD,YAMlB6xE,EAAoBa,eAAiB,SAAU/xE,EAAOgzE,EAAW3/C,GAE7D,IADA,IAAI4/C,EAAe,GACZjzE,GAASgzE,GACZhzE,GAASgzE,EACTC,GAAgB5/C,EAEpB,OAASwG,YAAao5C,EAAa5zE,WAAY8xE,UAAWnxE,IAM9DkxE,EAAoB4B,gBAAkB,SAAUF,GAC5C,GAAIA,GAAU,EACV,MAAM98D,MAAM,+DAGhB,IADA,IAAI+8D,KACGD,EAASnzE,KAAKyzE,aAAa,CAC9B,IAAIrE,EAAY+D,EAASnzE,KAAKyzE,YACZ,IAAdrE,GACA+D,EAASA,EAASnzE,KAAKyzE,YAAc,EACrCrE,EAAYpvE,KAAKyzE,aAGjBN,GAAUnzE,KAAKyzE,YAEnBL,EAAMlyE,KAAKkuE,GAGf,OADAgE,EAAMlyE,KAAKiyE,GACJC,GAMX3B,EAAoB6B,WAAa,SAAUnvD,EAAS5jB,GAGhD,OADA4jB,GADa5N,OAAOC,aAAai7D,EAAoBiC,gBAAkBnzE,IAU3EkxE,EAAoBgC,YAAc,GAMlChC,EAAoBiC,mBACbjC,KC1JPkC,GAAsC,WACtC,SAASA,EAAqBllB,EAAUluD,GAOpCP,KAAK4zE,YAAc,KAKnB5zE,KAAK4oB,QAAU,QACS,IAAb6lC,IAIPzuD,KAAKyuD,SAAWA,EAChBzuD,KAAKO,MAAQA,GAgCrB,OA7BAb,OAAOuC,eAAe0xE,EAAqBh0E,UAAW,YAMlDuC,IAAK,WACD,OAAOlC,KAAK4zE,aAEhBxxE,IAAK,SAAU7B,GACXP,KAAK4zE,YAAcrzE,GAEvB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe0xE,EAAqBh0E,UAAW,SAKlDuC,IAAK,WACD,OAAOlC,KAAK4oB,SAEhBxmB,IAAK,SAAU7B,GACXP,KAAK4oB,QAAUroB,GAEnB8B,YAAY,EACZC,cAAc,IAEXqxE,KCvDP9+D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GAwBxCw+D,GAAuC,SAAUp+D,GAEjD,SAASo+D,IACL,IAAIl+D,EAAQF,EAAO5V,KAAKG,OAASA,KAOjC,OADA2V,EAAM4mD,KAAO,IAAIr+B,GACVvoB,EAeX,OAxBAd,GAAUg/D,EAAuBp+D,GAajCo+D,EAAsBl0E,UAAUiyD,YAAc,SAAU7yB,EAAUc,EAAUC,EAAUC,GAClFtqB,EAAO9V,UAAUigC,kBAAkB//B,KAAKG,KAAM++B,EAAUc,EAAUC,EAAUC,GAC5E,IAAIx/B,EAAQP,KAAKI,SAAS2+B,GACtB0vB,EAAW,IAAIrF,GAAYppD,KAAKqgC,WACpCrgC,KAAKu8D,KAAK/7D,SAASu+B,EAAU,IAAI40C,GAAqBllB,EAAUluD,IAChE,IACImB,EAAO1B,KAAKqgC,UAChBouB,EAAS1vB,SAAS+vB,WAAWvuD,EAAOP,KAAKggC,UAAWhgC,KAAK87B,IAAK97B,KAAKsgC,WAAY,EAAG,EAAG5+B,EAAK4H,MAAO5H,EAAK6H,OAAQvJ,KAAKigC,cACnH,IAAI6zC,EAAe,IAAI30D,EAAO0gB,EAASntB,EAAI1S,KAAK6/B,SAASntB,EAAGmtB,EAASltB,EAAI3S,KAAK6/B,SAASltB,GACvFosB,EAASyvB,gBAAgBC,EAAUqlB,EAAc,IAAI10D,EAAMqvC,EAASnlD,MAAQw2B,EAAU2uB,EAASllD,OAASw2B,KAErG8zC,GACTx0C,IClDExqB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GAqBxC0+D,GAAoC,SAAUt+D,GAE9C,SAASs+D,EAAmBprE,EAAM4W,GAC9B,IAAI5J,EAAQF,EAAO5V,KAAKG,OAASA,KAkBjC,OAZA2V,EAAMq+D,oBAAsBr+C,iBAAei8C,aACvB,IAATryD,EACP5J,EAAMhN,KAAOA,EAER4W,aAAgBW,GACrBvK,EAAMhN,KAAOA,EACbgN,EAAM4K,MAAQhB,IAGd5J,EAAMhN,KAAOA,EACbgN,EAAMnB,OAAS+K,GAEZ5J,EAoCX,OAxDAd,GAAUk/D,EAAoBt+D,GAsB9B/V,OAAOuC,eAAe8xE,EAAmBp0E,UAAW,eAMhDuC,IAAK,WACD,OAAOlC,KAAKg0E,qBAEhB5xE,IAAK,SAAU7B,GACXP,KAAKg0E,oBAAsBzzE,GAE/B8B,YAAY,EACZC,cAAc,IAMlByxE,EAAmBp0E,UAAUS,SAAW,SAAU2+B,GAC9C,IACI0B,EAAOzgC,KAAKwgC,oBAAoBzB,GAEpC,OADS/+B,KAAKi0E,iBAAiBxzC,IAOnCszC,EAAmBp0E,UAAUs0E,iBAAmB,SAAUxzC,GACtD,IACIwkC,EADWxkC,EAAKplB,SACKpT,MAAM3E,QAAQm9B,GAAQ,EAC/C,OAAOgxC,GAAoB7G,QAAQ3F,EAAWjlE,KAAK2xE,cAEhDoC,GACTF,IC/EEh/D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GAoBxC6+D,GAAmC,SAAUz+D,GAU7C,SAASy+D,EAAkBvrE,EAAM4X,EAAOnK,GAEpC,IAAK,IADDmmD,KACKxwC,EAAK,EAAGA,EAAKooD,UAAUnzE,OAAQ+qB,IACpCwwC,EAAKxwC,EAAK,GAAKooD,UAAUpoD,GAE7B,IAAIpW,EAAQF,EAAO5V,KAAKG,OAASA,KAgBjC,OAVA2V,EAAMg4C,wBAA0B,KAKhCh4C,EAAMy+D,aAAe,GACrBz+D,EAAMhN,KAAOA,EACbgN,EAAM4K,MAAQA,EACd5K,EAAMS,KAAOA,EACbT,EAAMipB,gBAAkB29B,EACjB5mD,EA+CX,OA7EAd,GAAUq/D,EAAmBz+D,GAgC7B/V,OAAOuC,eAAeiyE,EAAkBv0E,UAAW,QAM/CuC,IAAK,WACD,OAAOlC,KAAKo0E,cAEhBhyE,IAAK,SAAU7B,GACXP,KAAKo0E,aAAe7zE,GAExB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeiyE,EAAkBv0E,UAAW,mBAK/CuC,IAAK,WACD,OAAOlC,KAAK2tD,yBAEhBvrD,IAAK,SAAU7B,GACXP,KAAK2tD,wBAA0BptD,GAEnC8B,YAAY,EACZC,cAAc,IAOlB4xE,EAAkBv0E,UAAUS,SAAW,SAAU2+B,GAC7C,IACI3oB,EAAOpW,KAAKoW,KAAKxW,WACrB,QAAoC,IAAzBI,KAAK4+B,iBAA2D,MAAxB5+B,KAAK4+B,iBAA2B5+B,KAAK4+B,gBAAgB59B,OAAS,EAC7G,IAAK,IAAIkC,EAAI,EAAGA,EAAIlD,KAAK4+B,gBAAgB59B,OAAQkC,IAAK,CAClD,IAAImxE,EAAiBr0E,KAAK4+B,gBAAgB17B,GAC1CkT,EAAOA,EAAK6rB,QAAQ,IAAM/+B,EAAI,IAAKmxE,EAAej0E,SAAS2+B,IAGnE,OAAO3oB,GAEJ89D,GACTL,ICnGEh/D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GAwBxCi/D,GAAqC,SAAU7+D,GAG/C,SAAS6+D,IACL,IAAI3+D,EAAQF,EAAO5V,KAAKG,OAASA,KAMjC,OAHA2V,EAAM4mD,KAAO,IAAIr+B,GAEjBvoB,EAAM4+D,mBACC5+D,EAyBX,OAlCAd,GAAUy/D,EAAqB7+D,GAW/B6+D,EAAoB30E,UAAUiyD,YAAc,SAAU7yB,EAAUc,EAAUC,EAAUC,GAChFtqB,EAAO9V,UAAUigC,kBAAkB//B,KAAKG,KAAM++B,EAAUc,EAAUC,EAAUC,GAC5E,IACI1kB,EADOrb,KAAKwgC,oBAAoBzB,GAChB1jB,SAChB4H,EAAYjjB,KAAKI,SAAS2+B,GAE9B,GAAI/+B,KAAKu8D,KAAK/6D,YAAY6Z,GAAW,CACjC,IAAI/a,EAAON,KAAKu8D,KAAKn8D,SAASib,GAC1By4D,EAAe,IAAI30D,EAAO0gB,EAASntB,EAAI1S,KAAK6/B,SAASntB,EAAGmtB,EAASltB,EAAI3S,KAAK6/B,SAASltB,GACvFosB,EAASyvB,gBAAgBluD,EAAKmuD,SAAUqlB,EAAc,IAAI10D,EAAM9e,EAAKmuD,SAASnlD,MAAQw2B,EAAUx/B,EAAKmuD,SAASllD,OAASw2B,IACvH//B,KAAKu0E,gBAAgBrzE,KAAK69B,OAEzB,CACD,IAAIr9B,EAAO1B,KAAKqgC,UACZouB,EAAW,IAAIrF,GAAY1nD,GAC/B1B,KAAKu8D,KAAK/7D,SAAS6a,EAAU,IAAIs4D,GAAqBllB,EAAUxrC,IAChEwrC,EAAS1vB,SAAS+vB,WAAW7rC,EAAWjjB,KAAKggC,UAAWhgC,KAAK87B,IAAK97B,KAAKsgC,WAAY,EAAG,EAAG5+B,EAAK4H,MAAO5H,EAAK6H,OAAQvJ,KAAKigC,cACnH6zC,EAAe,IAAI30D,EAAO0gB,EAASntB,EAAI1S,KAAK6/B,SAASntB,EAAGmtB,EAASltB,EAAI3S,KAAK6/B,SAASltB,GACvFosB,EAASyvB,gBAAgBC,EAAUqlB,EAAc,IAAI10D,EAAMqvC,EAASnlD,MAAQw2B,EAAU2uB,EAASllD,OAASw2B,IACxG//B,KAAKu0E,gBAAgBrzE,KAAK69B,KAI3Bu1C,GACTj1C,IC5DExqB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GAuBxCm/D,GAAmC,SAAU/+D,GAE7C,SAAS++D,EAAkB7rE,EAAM4W,GAC7B,IAAI5J,EAAQF,EAAO5V,KAAKG,OAASA,KAkBjC,OAZA2V,EAAMq+D,oBAAsBr+C,iBAAei8C,aACvB,IAATryD,EACP5J,EAAMhN,KAAOA,EAER4W,aAAgBW,GACrBvK,EAAMhN,KAAOA,EACbgN,EAAM4K,MAAQhB,IAGd5J,EAAMhN,KAAOA,EACbgN,EAAMnB,OAAS+K,GAEZ5J,EA8BX,OAlDAd,GAAU2/D,EAAmB/+D,GAsB7B/V,OAAOuC,eAAeuyE,EAAkB70E,UAAW,eAM/CuC,IAAK,WACD,OAAOlC,KAAKg0E,qBAEhB5xE,IAAK,SAAU7B,GACXP,KAAKg0E,oBAAsBzzE,GAE/B8B,YAAY,EACZC,cAAc,IAOlBkyE,EAAkB70E,UAAUS,SAAW,SAAU2+B,GAC7C,IAGI52B,EAFOnI,KAAKwgC,oBAAoBzB,GAChBqzB,QAAQ7pD,OAAO8S,SACdpT,MAAME,MAE3B,OADSspE,GAAoB7G,QAAQziE,EAAOnI,KAAK2xE,cAG9C6C,GACTF,KCtEF,SAAWG,GAKPA,EAAmBA,EAA6B,SAAI,GAAK,WAKzDA,EAAmBA,EAA8B,UAAI,GAAK,YAK1DA,EAAmBA,EAAyB,KAAI,GAAK,OAfzD,CAgBGA,uBAAuBA,0BCT1B,ICRWC,GDQPC,GAAgC,WAChC,SAASA,EAAer1D,EAAMC,GAM1Bvf,KAAKsP,qBAAuB,IAAItH,EAKhChI,KAAK40E,gBAAkBH,qBAAmBI,SAM1C70E,KAAK80E,WAAa,EAMlB90E,KAAK+0E,oBAAsB,IAAI51D,EAAO,EAAG,GAMzCnf,KAAKwU,OAAS,IAAI6K,EAKlBrf,KAAK+S,MAAQ,IAAID,EACL4iB,qBAAmBqB,aAC/B/2B,KAAK+0E,oBAAsB,IAAI51D,EAAO,EAAGnf,KAAK+0E,oBAAoBpiE,GAClE3S,KAAKm7D,QAAU77C,EACXC,aAAgBJ,EAChBnf,KAAK+0E,oBAAsBx1D,EAG3Bvf,KAAKwU,OAAS+K,EA0GtB,OAvGA7f,OAAOuC,eAAe0yE,EAAeh1E,UAAW,QAM5CuC,IAAK,WACD,OAAOlC,KAAK80E,YAEhB1yE,IAAK,SAAU7B,GACXP,KAAK80E,WAAav0E,EAClBP,KAAKg1E,uBAET3yE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe0yE,EAAeh1E,UAAW,QAK5CuC,IAAK,WACD,OAAOlC,KAAKm7D,SAEhB/4D,IAAK,SAAU7B,GACXP,KAAKm7D,QAAU56D,EACfP,KAAKg1E,uBAET3yE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe0yE,EAAeh1E,UAAW,QAK5CuC,IAAK,WACD,OAAOlC,KAAK40E,iBAEhBxyE,IAAK,SAAU7B,GACXP,KAAK40E,gBAAkBr0E,EACvBP,KAAKg1E,uBAET3yE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe0yE,EAAeh1E,UAAW,YAK5CuC,IAAK,WACD,OAAOlC,KAAK+0E,qBAEhB3yE,IAAK,SAAU7B,GACXP,KAAK+0E,oBAAsBx0E,EAC3BP,KAAKg1E,uBAET3yE,YAAY,EACZC,cAAc,IAMlBqyE,EAAeh1E,UAAUmiE,iBAAmB,SAAUrhC,EAAMjD,GAExD,OADciD,EAAK2xB,QACJ0P,iBAAiBrhC,EAAMjD,IAM1Cm3C,EAAeh1E,UAAUq1E,oBAAsB,WAG3C,OAFAh1E,KAAK+S,MAAMtR,QACXzB,KAAK+S,MAAMW,IAAI,IAAI8D,EAAmBxX,KAAKm7D,UACnCn7D,KAAK40E,iBACT,KAAKH,qBAAmBI,SACpB,IAAII,EAAaj1E,KAAKm7D,QAClB39B,EAAQ,IAAIre,EAChBqe,EAAQx9B,KAAK8hE,iBAAiBmT,EAAYj1E,KAAK+0E,qBAC/C/0E,KAAK+S,MAAMW,IAAI,IAAI/R,EAAQ3B,KAAKsP,qBAAqB3E,MACrD3K,KAAK+S,MAAMW,IAAI,IAAI5B,EAAU0rB,EAAM9qB,IACnC1S,KAAK+S,MAAMW,IAAI,IAAI5B,EAAU0rB,EAAM7qB,IACnC3S,KAAK+S,MAAMW,IAAI,IAAI5B,EAAU9R,KAAK80E,aAClC,MACJ,KAAKL,qBAAmBS,UACpBl1E,KAAK+S,MAAMW,IAAI,IAAI/R,EAAQ3B,KAAKsP,qBAAqB1E,QAIjElL,OAAOuC,eAAe0yE,EAAeh1E,UAAW,WAK5CuC,IAAK,WAED,OADAlC,KAAKg1E,sBACEh1E,KAAK+S,OAEhB1Q,YAAY,EACZC,cAAc,IAEXqyE,KEhKPQ,GAA6B,WAM7B,SAASA,EAAYtmE,GAMjB7O,KAAKo1E,YAAc,KAKnBp1E,KAAKyrD,sBAAwB,IAAIzjD,EACjChI,KAAKo1E,YAAcvmE,EAsDvB,OApDAnP,OAAOuC,eAAekzE,EAAYx1E,UAAW,UAMzCuC,IAAK,WAED,OADalC,KAAKo1E,YAAY7lE,MAAMnP,SAASJ,KAAKyrD,sBAAsBj+C,SAG5EpL,IAAK,SAAU7B,GACXP,KAAKo1E,YAAY7lE,MAAM/O,SAASR,KAAKyrD,sBAAsBj+C,OAAQjN,IAEvE8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekzE,EAAYx1E,UAAW,SAKzCuC,IAAK,WAED,OADalC,KAAKo1E,YAAY7lE,MAAMnP,SAASJ,KAAKyrD,sBAAsBh+C,QAG5ErL,IAAK,SAAU7B,GACXP,KAAKo1E,YAAY7lE,MAAM/O,SAASR,KAAKyrD,sBAAsBh+C,MAAOlN,IAEtE8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekzE,EAAYx1E,UAAW,cAIzCuC,IAAK,WACD,OAAOlC,KAAKo1E,aAEhB/yE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekzE,EAAYx1E,UAAW,WAKzCuC,IAAK,WACD,OAAOlC,KAAKo1E,aAEhB/yE,YAAY,EACZC,cAAc,IAEX6yE,KCzEPtgE,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GAqBxCggE,GAAoC,SAAU5/D,GAM9C,SAAS4/D,EAAmB7nE,EAAQC,EAAO6nE,EAAOC,GAC9C,IAAI5/D,EAAQF,EAAO5V,KAAKG,KAAM,IAAIwV,IAAgBxV,KAUlD,YATsB,IAAXwN,EACPmI,EAAM9G,WAAWU,MAAM/O,SAASmV,EAAM81C,sBAAsB/9C,aAAc,IAAIoE,EAAU,KAGxF6D,EAAM9G,WAAWU,MAAM/O,SAASmV,EAAM81C,sBAAsB/9C,aAAc,IAAIoE,EAAU,IACxF6D,EAAM6/D,YAAYhoE,EAAQC,EAAO6nE,EAAOC,GACxC5/D,EAAM8/D,kBAAkBjoE,EAAQC,GAChCkI,EAAM+/D,iBAAiBJ,EAAOC,IAE3B5/D,EA6BX,OA7CAd,GAAUwgE,EAAoB5/D,GAsB9B4/D,EAAmB11E,UAAU61E,YAAc,SAAUhoE,EAAQC,EAAO6nE,EAAOC,GACzD9nE,EAAMzM,OACNwM,EAAOxM,OACPu0E,EAAQv0E,QAM1Bq0E,EAAmB11E,UAAU81E,kBAAoB,SAAUjoE,EAAQC,GAC/DzN,KAAKwN,OAAS,IAAIsF,EAAStF,GAC3BxN,KAAKyN,MAAQ,IAAIqF,EAASrF,IAK9B4nE,EAAmB11E,UAAU+1E,iBAAmB,SAAUJ,EAAOC,GAC7D,IAAI1rE,EAAK7J,KAAe,WACxB6J,EAAEuF,YAAa,EACfpP,KAAK6O,WAAWU,MAAM/O,SAASR,KAAKyrD,sBAAsB/pD,KAAM,IAAIoR,EAASwiE,IAC7Et1E,KAAK6O,WAAWU,MAAM/O,SAASR,KAAKyrD,sBAAsB99C,cAAe,IAAImE,EAAU,IACvFjI,EAAEyM,WAAWi/D,IAEVF,GACTF,KF/DF,SAAWT,GAIPA,EAAUA,EAAgB,KAAI,GAAK,OAInCA,EAAUA,EAAiB,MAAI,GAAK,QAIpCA,EAAUA,EAAe,IAAI,GAAK,MAIlCA,EAAUA,EAAgB,KAAI,GAAK,OAhBvC,CAiBGA,KAAcA,QAIjB,IAAWiB,IACX,SAAWA,GAIPA,EAAsBA,EAAwC,iBAAI,GAAK,mBAIvEA,EAAsBA,EAAuC,gBAAI,GAAK,kBAItEA,EAAsBA,EAAkC,WAAI,GAAK,aAIjEA,EAAsBA,EAAgC,SAAI,GAAK,WAhBnE,CAiBGA,KAA0BA,QAI7B,IAAWC,IACX,SAAWA,GAIPA,EAAYA,EAAsB,SAAI,GAAK,WAI3CA,EAAYA,EAAmB,MAAI,GAAK,QAIxCA,EAAYA,EAAoB,OAAI,GAAK,SAZ7C,CAaGA,KAAgBA,QACnB,IAAWC,IACX,SAAWA,GACPA,EAAWA,EAAyB,aAAI,GAAK,eAC7CA,EAAWA,EAA0B,cAAI,GAAK,gBAC9CA,EAAWA,EAA8B,kBAAI,GAAK,oBAClDA,EAAWA,EAAyB,aAAI,GAAK,eAC7CA,EAAWA,EAAoB,QAAI,GAAK,UACxCA,EAAWA,EAAwB,YAAI,GAAK,cAC5CA,EAAWA,EAA4B,gBAAI,GAAK,kBAChDA,EAAWA,EAAyB,aAAI,GAAK,eAC7CA,EAAWA,EAA8B,kBAAI,GAAK,oBAClDA,EAAWA,EAAwB,YAAI,IAAM,cAC7CA,EAAWA,EAAoB,QAAI,IAAM,UACzCA,EAAWA,EAAqB,SAAI,IAAM,WAC1CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAA0B,cAAI,IAAM,gBAC/CA,EAAWA,EAAqB,SAAI,IAAM,WAC1CA,EAAWA,EAA2B,eAAI,IAAM,iBAChDA,EAAWA,EAA4B,gBAAI,IAAM,kBACjDA,EAAWA,EAAgC,oBAAI,IAAM,sBACrDA,EAAWA,EAAiB,KAAI,IAAM,OACtCA,EAAWA,EAAqB,SAAI,IAAM,WAC1CA,EAAWA,EAAiB,KAAI,IAAM,OACtCA,EAAWA,EAAqB,SAAI,IAAM,WAC1CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAmB,OAAI,IAAM,SACxCA,EAAWA,EAAwB,YAAI,IAAM,cAC7CA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAwB,YAAI,IAAM,cAC7CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAyB,aAAI,IAAM,eAC9CA,EAAWA,EAAiB,KAAI,IAAM,OACtCA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAkB,MAAI,IAAM,QACvCA,EAAWA,EAAkB,MAAI,IAAM,QACvCA,EAAWA,EAAmB,OAAI,IAAM,SACxCA,EAAWA,EAAkB,MAAI,IAAM,QACvCA,EAAWA,EAA2B,eAAI,IAAM,iBAChDA,EAAWA,EAAiB,KAAI,IAAM,OACtCA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAkB,MAAI,IAAM,QACvCA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAkB,MAAI,IAAM,QACvCA,EAAWA,EAA2B,eAAI,IAAM,iBAChDA,EAAWA,EAAqB,SAAI,IAAM,WAC1CA,EAAWA,EAAoB,QAAI,IAAM,UACzCA,EAAWA,EAAiB,KAAI,IAAM,OACtCA,EAAWA,EAAqB,SAAI,IAAM,WAC1CA,EAAWA,EAAqB,SAAI,IAAM,WAC1CA,EAAWA,EAA0B,cAAI,IAAM,gBAC/CA,EAAWA,EAAqB,SAAI,IAAM,WAC1CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAwB,YAAI,IAAM,cAC7CA,EAAWA,EAA2B,eAAI,IAAM,iBAChDA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAoB,QAAI,IAAM,UACzCA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAyB,aAAI,IAAM,eAC9CA,EAAWA,EAA0B,cAAI,IAAM,gBAC/CA,EAAWA,EAA0B,cAAI,IAAM,gBAC/CA,EAAWA,EAA0B,cAAI,IAAM,gBAC/CA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAqB,SAAI,IAAM,WAC1CA,EAAWA,EAAwB,YAAI,IAAM,cAC7CA,EAAWA,EAAoB,QAAI,IAAM,UACzCA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAwB,YAAI,IAAM,cAC7CA,EAAWA,EAAwB,YAAI,IAAM,cAC7CA,EAAWA,EAAoB,QAAI,IAAM,UACzCA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAiB,KAAI,IAAM,OACtCA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAiB,KAAI,IAAM,OACtCA,EAAWA,EAAkB,MAAI,IAAM,QACvCA,EAAWA,EAAwB,YAAI,IAAM,cAC7CA,EAAWA,EAAqB,SAAI,IAAM,WAC1CA,EAAWA,EAAoB,QAAI,IAAM,UACzCA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAmB,OAAI,IAAM,SACxCA,EAAWA,EAAkB,MAAI,IAAM,QACvCA,EAAWA,EAAkB,MAAI,IAAM,QACvCA,EAAWA,EAAqB,SAAI,IAAM,WAC1CA,EAAWA,EAA0B,cAAI,IAAM,gBAC/CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAyB,aAAI,IAAM,eAC9CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAiC,qBAAI,IAAM,uBACtDA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAwB,YAAI,IAAM,cAC7CA,EAAWA,EAA0B,cAAI,IAAM,gBAC/CA,EAAWA,EAAyB,aAAI,KAAO,eAC/CA,EAAWA,EAA2B,eAAI,KAAO,iBACjDA,EAAWA,EAA2B,eAAI,KAAO,iBACjDA,EAAWA,EAAwB,YAAI,KAAO,cAC9CA,EAAWA,EAAiB,KAAI,KAAO,OACvCA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAkB,MAAI,KAAO,QACxCA,EAAWA,EAAoB,QAAI,KAAO,UAC1CA,EAAWA,EAAmB,OAAI,KAAO,SACzCA,EAAWA,EAA6B,iBAAI,KAAO,mBACnDA,EAAWA,EAAuB,WAAI,KAAO,aAC7CA,EAAWA,EAAyB,aAAI,KAAO,eAC/CA,EAAWA,EAAyB,aAAI,KAAO,eAC/CA,EAAWA,EAA2B,eAAI,KAAO,iBACjDA,EAAWA,EAA4B,gBAAI,KAAO,kBAClDA,EAAWA,EAA8B,kBAAI,KAAO,oBACpDA,EAAWA,EAA4B,gBAAI,KAAO,kBAClDA,EAAWA,EAA4B,gBAAI,KAAO,kBAClDA,EAAWA,EAAyB,aAAI,KAAO,eAC/CA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAqB,SAAI,KAAO,WAC3CA,EAAWA,EAAwB,YAAI,KAAO,cAC9CA,EAAWA,EAAiB,KAAI,KAAO,OACvCA,EAAWA,EAAoB,QAAI,KAAO,UAC1CA,EAAWA,EAAkB,MAAI,KAAO,QACxCA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAmB,OAAI,KAAO,SACzCA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAmB,OAAI,KAAO,SACzCA,EAAWA,EAA0B,cAAI,KAAO,gBAChDA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAA0B,cAAI,KAAO,gBAChDA,EAAWA,EAA0B,cAAI,KAAO,gBAChDA,EAAWA,EAAuB,WAAI,KAAO,aAC7CA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAiB,KAAI,KAAO,OACvCA,EAAWA,EAAiB,KAAI,KAAO,OACvCA,EAAWA,EAAiB,KAAI,KAAO,OACvCA,EAAWA,EAAuB,WAAI,KAAO,aAC7CA,EAAWA,EAAmB,OAAI,KAAO,SACzCA,EAAWA,EAAgB,IAAI,KAAO,MACtCA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAwB,YAAI,KAAO,cAC9CA,EAAWA,EAAmB,OAAI,KAAO,SACzCA,EAAWA,EAAuB,WAAI,KAAO,aAC7CA,EAAWA,EAAqB,SAAI,KAAO,WAC3CA,EAAWA,EAAqB,SAAI,KAAO,WAC3CA,EAAWA,EAAmB,OAAI,KAAO,SACzCA,EAAWA,EAAmB,OAAI,KAAO,SACzCA,EAAWA,EAAoB,QAAI,KAAO,UAC1CA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAiB,KAAI,KAAO,OACvCA,EAAWA,EAAwB,YAAI,KAAO,cAC9CA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAgB,IAAI,KAAO,MACtCA,EAAWA,EAAiB,KAAI,KAAO,OACvCA,EAAWA,EAAoB,QAAI,KAAO,UAC1CA,EAAWA,EAAmB,OAAI,KAAO,SACzCA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAmB,OAAI,KAAO,SACzCA,EAAWA,EAAkB,MAAI,KAAO,QACxCA,EAAWA,EAAkB,MAAI,KAAO,QACxCA,EAAWA,EAAuB,WAAI,KAAO,aAC7CA,EAAWA,EAAmB,OAAI,KAAO,SACzCA,EAAWA,EAAwB,YAAI,KAAO,cAC9CA,EAAWA,EAAuB,WAAI,KAAO,aAC7CA,EAAWA,EAA4B,gBAAI,KAAO,kBAClDA,EAAWA,EAAyB,aAAI,KAAO,eAC/CA,EAAWA,EAAkC,sBAAI,KAAO,wBACxDA,EAAWA,EAAoC,wBAAI,KAAO,0BAC1DA,EAAWA,EAAoB,QAAI,KAAO,UAC1CA,EAAWA,EAA0B,cAAI,KAAO,gBA9KpD,CA+KGA,KAAeA,QGnOlB,IAAIC,GAA4B,WAC5B,SAASA,KA66FT,OA36FAp2E,OAAOuC,eAAe6zE,EAAY,aAM9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWG,aACrCz1D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWG,YAEjC,MAATz1D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWG,YAE9Bz1D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,gBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWI,gBACrC11D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWI,eAEjC,MAAT11D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWI,eAE9B11D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,QAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWK,QACrC31D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWK,OAEjC,MAAT31D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWK,OAE9B31D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,cAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWM,cACrC51D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWM,aAEjC,MAAT51D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWM,aAE9B51D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,SAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWO,SACrC71D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWO,QAEjC,MAAT71D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWO,QAE9B71D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,SAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWQ,SACrC91D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWQ,QAEjC,MAAT91D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWQ,QAE9B91D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,UAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWS,UACrC/1D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWS,SAEjC,MAAT/1D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWS,SAE9B/1D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,SAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWU,SACrCh2D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWU,QAEjC,MAATh2D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWU,QAE9Bh2D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,kBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWW,kBACrCj2D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWW,iBAEjC,MAATj2D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWW,iBAE9Bj2D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,QAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWY,QACrCl2D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWY,OAEjC,MAATl2D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWY,OAE9Bl2D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,cAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWa,cACrCn2D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWa,aAEjC,MAATn2D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWa,aAE9Bn2D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,SAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWc,SACrCp2D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWc,QAEjC,MAATp2D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWc,QAE9Bp2D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWe,aACrCr2D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWe,YAEjC,MAATr2D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWe,YAE9Br2D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWgB,aACrCt2D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWgB,YAEjC,MAATt2D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWgB,YAE9Bt2D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,cAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWiB,cACrCv2D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWiB,aAEjC,MAATv2D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWiB,aAE9Bv2D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWkB,aACrCx2D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWkB,YAEjC,MAATx2D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWkB,YAE9Bx2D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,SAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWmB,SACrCz2D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWmB,QAEjC,MAATz2D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWmB,QAE9Bz2D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,kBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWoB,kBACrC12D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWoB,iBAEjC,MAAT12D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWoB,iBAE9B12D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,YAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWqB,YACrC32D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWqB,WAEjC,MAAT32D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWqB,WAE9B32D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,WAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWsB,WACrC52D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWsB,UAEjC,MAAT52D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWsB,UAE9B52D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,QAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWuB,QACrC72D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWuB,OAEjC,MAAT72D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWuB,OAE9B72D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,YAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWwB,YACrC92D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWwB,WAEjC,MAAT92D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWwB,WAE9B92D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,YAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWyB,YACrC/2D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWyB,WAEjC,MAAT/2D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWyB,WAE9B/2D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,iBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW0B,iBACrCh3D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW0B,gBAEjC,MAATh3D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW0B,gBAE9Bh3D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,YAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW2B,YACrCj3D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW2B,WAEjC,MAATj3D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW2B,WAE9Bj3D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW4B,aACrCl3D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW4B,YAEjC,MAATl3D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW4B,YAE9Bl3D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW6B,aACrCn3D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW6B,YAEjC,MAATn3D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW6B,YAE9Bn3D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,eAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW8B,eACrCp3D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW8B,cAEjC,MAATp3D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW8B,cAE9Bp3D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,kBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW+B,kBACrCr3D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW+B,iBAEjC,MAATr3D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW+B,iBAE9Br3D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,cAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWgC,cACrCt3D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWgC,aAEjC,MAATt3D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWgC,aAE9Bt3D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,cAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWiC,cACrCv3D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWiC,aAEjC,MAATv3D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWiC,aAE9Bv3D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,WAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWkC,WACrCx3D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWkC,UAEjC,MAATx3D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWkC,UAE9Bx3D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,cAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWmC,cACrCz3D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWmC,aAEjC,MAATz3D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWmC,aAE9Bz3D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,gBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWoC,gBACrC13D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWoC,eAEjC,MAAT13D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWoC,eAE9B13D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,iBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWqC,iBACrC33D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWqC,gBAEjC,MAAT33D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWqC,gBAE9B33D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,iBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWsC,iBACrC53D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWsC,gBAEjC,MAAT53D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWsC,gBAE9B53D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,iBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWuC,iBACrC73D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWuC,gBAEjC,MAAT73D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWuC,gBAE9B73D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,cAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWwC,cACrC93D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWwC,aAEjC,MAAT93D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWwC,aAE9B93D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,YAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWyC,YACrC/3D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWyC,WAEjC,MAAT/3D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWyC,WAE9B/3D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,eAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW0C,eACrCh4D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW0C,cAEjC,MAATh4D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW0C,cAE9Bh4D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,WAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW2C,WACrCj4D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW2C,UAEjC,MAATj4D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW2C,UAE9Bj4D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,cAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW4C,cACrCl4D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW4C,aAEjC,MAATl4D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW4C,aAE9Bl4D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW6C,aACrCn4D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW6C,YAEjC,MAATn4D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW6C,YAE9Bn4D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,eAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW8C,eACrCp4D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW8C,cAEjC,MAATp4D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW8C,cAE9Bp4D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,eAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW+C,eACrCr4D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW+C,cAEjC,MAATr4D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW+C,cAE9Br4D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,WAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWgD,WACrCt4D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWgD,UAEjC,MAATt4D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWgD,UAE9Bt4D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWiD,aACrCv4D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWiD,YAEjC,MAATv4D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWiD,YAE9Bv4D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,cAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWkD,cACrCx4D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWkD,aAEjC,MAATx4D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWkD,aAE9Bx4D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,QAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWmD,QACrCz4D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWmD,OAEjC,MAATz4D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWmD,OAE9Bz4D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWoD,aACrC14D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWoD,YAEjC,MAAT14D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWoD,YAE9B14D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,QAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWqD,QACrC34D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWqD,OAEjC,MAAT34D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWqD,OAE9B34D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,SAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWsD,SACrC54D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWsD,QAEjC,MAAT54D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWsD,QAE9B54D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,eAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWuD,eACrC74D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWuD,cAEjC,MAAT74D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWuD,cAE9B74D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,YAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWwD,YACrC94D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWwD,WAEjC,MAAT94D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWwD,WAE9B94D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,WAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWyD,WACrC/4D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWyD,UAEjC,MAAT/4D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWyD,UAE9B/4D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW0D,aACrCh5D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW0D,YAEjC,MAATh5D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW0D,YAE9Bh5D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,UAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW2D,UACrCj5D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW2D,SAEjC,MAATj5D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW2D,SAE9Bj5D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,SAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW4D,SACrCl5D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW4D,QAEjC,MAATl5D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW4D,QAE9Bl5D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,SAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW6D,SACrCn5D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW6D,QAEjC,MAATn5D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW6D,QAE9Bn5D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,YAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW8D,YACrCp5D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW8D,WAEjC,MAATp5D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW8D,WAE9Bp5D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,iBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW+D,iBACrCr5D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW+D,gBAEjC,MAATr5D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW+D,gBAE9Br5D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWgE,aACrCt5D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWgE,YAEjC,MAATt5D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWgE,YAE9Bt5D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,gBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWiE,gBACrCv5D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWiE,eAEjC,MAATv5D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWiE,eAE9Bv5D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWkE,aACrCx5D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWkE,YAEjC,MAATx5D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWkE,YAE9Bx5D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,cAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWmE,cACrCz5D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWmE,aAEjC,MAATz5D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWmE,aAE9Bz5D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWoE,aACrC15D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWoE,YAEjC,MAAT15D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWoE,YAE9B15D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,wBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWqE,wBACrC35D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWqE,uBAEjC,MAAT35D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWqE,uBAE9B35D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWsE,aACrC55D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWsE,YAEjC,MAAT55D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWsE,YAE9B55D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,cAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWuE,cACrC75D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWuE,aAEjC,MAAT75D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWuE,aAE9B75D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWwE,aACrC95D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWwE,YAEjC,MAAT95D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWwE,YAE9B95D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,eAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWyE,eACrC/5D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWyE,cAEjC,MAAT/5D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWyE,cAE9B/5D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,iBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW0E,iBACrCh6D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW0E,gBAEjC,MAATh6D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW0E,gBAE9Bh6D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,gBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW2E,gBACrCj6D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW2E,eAEjC,MAATj6D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW2E,eAE9Bj6D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,kBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW4E,kBACrCl6D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW4E,iBAEjC,MAATl6D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW4E,iBAE9Bl6D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,kBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW6E,kBACrCn6D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW6E,iBAEjC,MAATn6D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW6E,iBAE9Bn6D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,eAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW8E,eACrCp6D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW8E,cAEjC,MAATp6D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW8E,cAE9Bp6D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,QAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW+E,QACrCr6D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW+E,OAEjC,MAATr6D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW+E,OAE9Br6D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWgF,aACrCt6D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWgF,YAEjC,MAATt6D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWgF,YAE9Bt6D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,SAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWiF,SACrCv6D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWiF,QAEjC,MAATv6D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWiF,QAE9Bv6D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,WAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWkF,WACrCx6D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWkF,UAEjC,MAATx6D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWkF,UAE9Bx6D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,UAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWmF,UACrCz6D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWmF,SAEjC,MAATz6D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWmF,SAE9Bz6D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,oBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWoF,oBACrC16D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWoF,mBAEjC,MAAT16D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWoF,mBAE9B16D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,cAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWqF,cACrC36D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWqF,aAEjC,MAAT36D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWqF,aAE9B36D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,gBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWsF,gBACrC56D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWsF,eAEjC,MAAT56D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWsF,eAE9B56D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,gBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWuF,gBACrC76D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWuF,eAEjC,MAAT76D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWuF,eAE9B76D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,kBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWwF,kBACrC96D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWwF,iBAEjC,MAAT96D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWwF,iBAE9B96D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,mBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWyF,mBACrC/6D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWyF,kBAEjC,MAAT/6D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWyF,kBAE9B/6D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,qBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW0F,qBACrCh7D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW0F,oBAEjC,MAATh7D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW0F,oBAE9Bh7D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,mBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW2F,mBACrCj7D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW2F,kBAEjC,MAATj7D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW2F,kBAE9Bj7D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,mBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW4F,mBACrCl7D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW4F,kBAEjC,MAATl7D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW4F,kBAE9Bl7D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,gBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW6F,gBACrCn7D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW6F,eAEjC,MAATn7D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW6F,eAE9Bn7D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW8F,aACrCp7D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW8F,YAEjC,MAATp7D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW8F,YAE9Bp7D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW+F,aACrCr7D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW+F,YAEjC,MAATr7D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW+F,YAE9Br7D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,YAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWgG,YACrCt7D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWgG,WAEjC,MAATt7D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWgG,WAE9Bt7D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,eAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWiG,eACrCv7D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWiG,cAEjC,MAATv7D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWiG,cAE9Bv7D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,QAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWkG,QACrCx7D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWkG,OAEjC,MAATx7D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWkG,OAE9Bx7D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,WAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWmG,WACrCz7D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWmG,UAEjC,MAATz7D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWmG,UAE9Bz7D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,SAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWoG,SACrC17D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWoG,QAEjC,MAAT17D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWoG,QAE9B17D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWqG,aACrC37D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWqG,YAEjC,MAAT37D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWqG,YAE9B37D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,UAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWsG,UACrC57D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWsG,SAEjC,MAAT57D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWsG,SAE9B57D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWuG,aACrC77D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWuG,YAEjC,MAAT77D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWuG,YAE9B77D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,UAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWwG,UACrC97D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWwG,SAEjC,MAAT97D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWwG,SAE9B97D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,iBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWyG,iBACrC/7D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWyG,gBAEjC,MAAT/7D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWyG,gBAE9B/7D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW0G,aACrCh8D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW0G,YAEjC,MAATh8D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW0G,YAE9Bh8D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,iBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW2G,iBACrCj8D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW2G,gBAEjC,MAATj8D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW2G,gBAE9Bj8D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,iBAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW4G,iBACrCl8D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW4G,gBAEjC,MAATl8D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW4G,gBAE9Bl8D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,cAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW6G,cACrCn8D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW6G,aAEjC,MAATn8D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW6G,aAE9Bn8D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW8G,aACrCp8D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW8G,YAEjC,MAATp8D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW8G,YAE9Bp8D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,QAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW+G,QACrCr8D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW+G,OAEjC,MAATr8D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW+G,OAE9Br8D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,QAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWgH,QACrCt8D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWgH,OAEjC,MAATt8D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWgH,OAE9Bt8D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,QAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWiH,QACrCv8D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWiH,OAEjC,MAATv8D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWiH,OAE9Bv8D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,cAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWkH,cACrCx8D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWkH,aAEjC,MAATx8D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWkH,aAE9Bx8D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,UAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWmH,UACrCz8D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWmH,SAEjC,MAATz8D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWmH,SAE9Bz8D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,OAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWoH,OACrC18D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWoH,MAEjC,MAAT18D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWoH,MAE9B18D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWqH,aACrC38D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWqH,YAEjC,MAAT38D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWqH,YAE9B38D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWsH,aACrC58D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWsH,YAEjC,MAAT58D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWsH,YAE9B58D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,eAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWuH,eACrC78D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWuH,cAEjC,MAAT78D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWuH,cAE9B78D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,UAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWwH,UACrC98D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWwH,SAEjC,MAAT98D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWwH,SAE9B98D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,cAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWyH,cACrC/8D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWyH,aAEjC,MAAT/8D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWyH,aAE9B/8D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,YAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW0H,YACrCh9D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW0H,WAEjC,MAATh9D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW0H,WAE9Bh9D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,YAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW2H,YACrCj9D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW2H,WAEjC,MAATj9D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW2H,WAE9Bj9D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,UAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW4H,UACrCl9D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW4H,SAEjC,MAATl9D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW4H,SAE9Bl9D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,UAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW6H,UACrCn9D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW6H,SAEjC,MAATn9D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW6H,SAE9Bn9D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,WAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW8H,WACrCp9D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW8H,UAEjC,MAATp9D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW8H,UAE9Bp9D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW+H,aACrCr9D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW+H,YAEjC,MAATr9D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW+H,YAE9Br9D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWgI,aACrCt9D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWgI,YAEjC,MAATt9D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWgI,YAE9Bt9D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,QAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWiI,QACrCv9D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWiI,OAEjC,MAATv9D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWiI,OAE9Bv9D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,eAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWkI,eACrCx9D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWkI,cAEjC,MAATx9D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWkI,cAE9Bx9D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWmI,aACrCz9D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWmI,YAEjC,MAATz9D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWmI,YAE9Bz9D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,OAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWoI,OACrC19D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWoI,MAEjC,MAAT19D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWoI,MAE9B19D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,QAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWqI,QACrC39D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWqI,OAEjC,MAAT39D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWqI,OAE9B39D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,WAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWsI,WACrC59D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWsI,UAEjC,MAAT59D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWsI,UAE9B59D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,UAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWuI,UACrC79D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWuI,SAEjC,MAAT79D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWuI,SAE9B79D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,eAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWwI,eACrC99D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWwI,cAEjC,MAAT99D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWwI,cAE9B99D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,aAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAWyI,aACrC/9D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAWyI,YAEjC,MAAT/9D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAWyI,YAE9B/9D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,UAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW0I,UACrCh+D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW0I,SAEjC,MAATh+D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW0I,SAE9Bh+D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,SAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW2I,SACrCj+D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW2I,QAEjC,MAATj+D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW2I,QAE9Bj+D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,SAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW4I,SACrCl+D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW4I,QAEjC,MAATl+D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW4I,QAE9Bl+D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,cAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW6I,cACrCn+D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW6I,aAEjC,MAATn+D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW6I,aAE9Bn+D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,UAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW8I,UACrCp+D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW8I,SAEjC,MAATp+D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW8I,SAE9Bp+D,GAEXle,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6zE,EAAY,eAK9B5zE,IAAK,WACD,IAAIqe,EAAQ,KAOZ,OANIvgB,KAAK+1E,SAASv0E,YAAYq0E,GAAW+I,eACrCr+D,EAASvgB,KAAK+1E,SAAS31E,SAASy1E,GAAW+I,cAEjC,MAATr+D,IACDA,EAAQvgB,KAAKsgC,SAASu1C,GAAW+I,cAE9Br+D,GAEXle,YAAY,EACZC,cAAc,IAKlBwzE,EAAWx1C,SAAW,SAAUu+C,GAC5B,IAAIx+D,EAAWrgB,KAAK8+E,cAAcD,GAC9Bt+D,EAAQ,IAAIJ,EAAcE,GAE9B,OADArgB,KAAK+1E,SAASv1E,SAASq+E,EAAWt+D,GAC3BA,GAOXu1D,EAAWgJ,cAAgB,SAAUD,GACjC,IAAIz+D,EAAQ,IAAI3D,EAChB,OAAQoiE,GACJ,KAAKhJ,GAAWwI,YACZj+D,EAAQ,IAAI3D,EAAS,EAAG,IAAK,IAAK,KAClC,MACJ,KAAKo5D,GAAWG,UACZ51D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWI,aACZ71D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWK,KACZ91D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,IAAK,KAClC,MACJ,KAAKo5D,GAAWM,WACZ/1D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWO,MACZh2D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWQ,MACZj2D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWS,OACZl2D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWU,MACZn2D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,EAAG,GAChC,MACJ,KAAKo5D,GAAWW,eACZp2D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWY,KACZr2D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,EAAG,KAChC,MACJ,KAAKo5D,GAAWa,WACZt2D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,KACnC,MACJ,KAAKo5D,GAAWc,MACZv2D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,IACnC,MACJ,KAAKo5D,GAAWe,UACZx2D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWgB,UACZz2D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,KACnC,MACJ,KAAKo5D,GAAWiB,WACZ12D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,GACpC,MACJ,KAAKo5D,GAAWkB,UACZ32D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,IACpC,MACJ,KAAKo5D,GAAWmB,MACZ52D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,IACpC,MACJ,KAAKo5D,GAAWoB,eACZ72D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWqB,SACZ92D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWsB,QACZ/2D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,IACnC,MACJ,KAAKo5D,GAAWuB,KACZh3D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,IAAK,KAClC,MACJ,KAAKo5D,GAAWwB,SACZj3D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,EAAG,KAChC,MACJ,KAAKo5D,GAAWyB,SACZl3D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,IAAK,KAClC,MACJ,KAAKo5D,GAAW0B,cACZn3D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,IACpC,MACJ,KAAKo5D,GAAW2B,SACZp3D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW4B,UACZr3D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,IAAK,GAClC,MACJ,KAAKo5D,GAAW6B,UACZt3D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW8B,YACZv3D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,EAAG,KAClC,MACJ,KAAKo5D,GAAW+B,eACZx3D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,IACnC,MACJ,KAAKo5D,GAAWgC,WACZz3D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,GACpC,MACJ,KAAKo5D,GAAWiC,WACZ13D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,KACnC,MACJ,KAAKo5D,GAAWkC,QACZ33D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,EAAG,GAClC,MACJ,KAAKo5D,GAAWmC,WACZ53D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWoC,aACZ73D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWqC,cACZ93D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,GAAI,KAClC,MACJ,KAAKo5D,GAAWsC,cACZ/3D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,GAAI,IAClC,MACJ,KAAKo5D,GAAWuC,cACZh4D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,IAAK,KAClC,MACJ,KAAKo5D,GAAWwC,WACZj4D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,EAAG,KAClC,MACJ,KAAKo5D,GAAWyC,SACZl4D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,KACnC,MACJ,KAAKo5D,GAAW0C,YACZn4D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,IAAK,KAClC,MACJ,KAAKo5D,GAAW2C,QACZp4D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW4C,WACZr4D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,KACnC,MACJ,KAAKo5D,GAAW6C,UACZt4D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,IACnC,MACJ,KAAKo5D,GAAW8C,YACZv4D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW+C,YACZx4D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,IACnC,MACJ,KAAKo5D,GAAWgD,QACZz4D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,EAAG,KAClC,MACJ,KAAKo5D,GAAWiD,UACZ14D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWkD,WACZ34D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWmD,KACZ54D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,GACpC,MACJ,KAAKo5D,GAAWoD,UACZ74D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,IACpC,MACJ,KAAKo5D,GAAWqD,KACZ94D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWsD,MACZ/4D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,IAAK,GAClC,MACJ,KAAKo5D,GAAWuD,YACZh5D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,IACpC,MACJ,KAAKo5D,GAAWwD,SACZj5D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWyD,QACZl5D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW0D,UACZn5D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,IACnC,MACJ,KAAKo5D,GAAW2D,OACZp5D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,EAAG,KACjC,MACJ,KAAKo5D,GAAW4D,MACZr5D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW6D,MACZt5D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW8D,SACZv5D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW+D,cACZx5D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWgE,UACZz5D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,GACpC,MACJ,KAAKo5D,GAAWiE,aACZ15D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWkE,UACZ35D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWmE,WACZ55D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWoE,UACZ75D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWqE,qBACZ95D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWuE,WACZh6D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWsE,UACZ/5D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWwE,UACZj6D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWyE,YACZl6D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW0E,cACZn6D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,KACnC,MACJ,KAAKo5D,GAAW2E,aACZp6D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW4E,eACZr6D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW6E,eACZt6D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW8E,YACZv6D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW+E,KACZx6D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,IAAK,GAClC,MACJ,KAAKo5D,GAAWgF,UACZz6D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,IACnC,MACJ,KAAKo5D,GAAWiF,MACZ16D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWkF,QACZ36D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,EAAG,KAClC,MACJ,KAAKo5D,GAAWmF,OACZ56D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,EAAG,GAClC,MACJ,KAAKo5D,GAAWoF,iBACZ76D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWqF,WACZ96D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,EAAG,KAChC,MACJ,KAAKo5D,GAAWsF,aACZ/6D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,KACnC,MACJ,KAAKo5D,GAAWuF,aACZh7D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWwF,eACZj7D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,KACnC,MACJ,KAAKo5D,GAAWyF,gBACZl7D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW0F,kBACZn7D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,IAAK,KAClC,MACJ,KAAKo5D,GAAW2F,gBACZp7D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,KACnC,MACJ,KAAKo5D,GAAW4F,gBACZr7D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,KACnC,MACJ,KAAKo5D,GAAW6F,aACZt7D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,GAAI,KAClC,MACJ,KAAKo5D,GAAW8F,UACZv7D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW+F,UACZx7D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWgG,SACZz7D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWiG,YACZ17D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWkG,KACZ37D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,EAAG,KAChC,MACJ,KAAKo5D,GAAWmG,QACZ57D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWoG,MACZ77D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,GACpC,MACJ,KAAKo5D,GAAWqG,UACZ97D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,IACpC,MACJ,KAAKo5D,GAAWsG,OACZ/7D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,GACpC,MACJ,KAAKo5D,GAAWuG,UACZh8D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,GACnC,MACJ,KAAKo5D,GAAWwG,OACZj8D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWyG,cACZl8D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW0G,UACZn8D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW2G,cACZp8D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW4G,cACZr8D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW6G,WACZt8D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW8G,UACZv8D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW+G,KACZx8D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,IACpC,MACJ,KAAKo5D,GAAWgH,KACZz8D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWiH,KACZ18D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWkH,WACZ38D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWmH,OACZ58D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,EAAG,KAClC,MACJ,KAAKo5D,GAAWoH,IACZ78D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,EAAG,GAClC,MACJ,KAAKo5D,GAAWqH,UACZ98D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWsH,UACZ/8D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,KACnC,MACJ,KAAKo5D,GAAWuH,YACZh9D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,IACnC,MACJ,KAAKo5D,GAAWwH,OACZj9D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWyH,WACZl9D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,IACpC,MACJ,KAAKo5D,GAAW0H,SACZn9D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,IACnC,MACJ,KAAKo5D,GAAW2H,SACZp9D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW4H,OACZr9D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,IACnC,MACJ,KAAKo5D,GAAW6H,OACZt9D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW8H,QACZv9D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW+H,UACZx9D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,KACnC,MACJ,KAAKo5D,GAAWgI,UACZz9D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWiI,KACZ19D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWkI,YACZ39D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,IAAK,KAClC,MACJ,KAAKo5D,GAAWmI,UACZ59D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,KACnC,MACJ,KAAKo5D,GAAWoI,IACZ79D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWqI,KACZ99D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,IAAK,KAClC,MACJ,KAAKo5D,GAAWsI,QACZ/9D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAWuI,OACZh+D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,IACnC,MACJ,KAAKo5D,GAAWyI,UACZl+D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,KACnC,MACJ,KAAKo5D,GAAW0I,OACZn+D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW2I,MACZp+D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW4I,MACZr+D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW6I,WACZt+D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKo5D,GAAW8I,OACZv+D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,GACpC,MACJ,KAAKo5D,GAAW+I,YACZx+D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,IAG5C,OAAO2D,GAMX01D,EAAWC,SAAW,IAAIj2E,EACnBg2E,KCh7FPiJ,GAA0B,WAC1B,SAASA,EAAS52E,GAMdnI,KAAKg/E,UAAY,IAwOrB,OArOAt/E,OAAOuC,eAAe88E,EAASp/E,UAAW,WAMtCuC,IAAK,WACD,OAAOlC,KAAKi/E,UAEhB78E,IAAK,SAAU7B,GACX,GAAc,MAATA,EACD,MAAM,IAAI8V,MAAM,mCAEpBrW,KAAKi/E,SAAW1+E,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe88E,EAASp/E,UAAW,aAKtCuC,IAAK,WACD,OAAOlC,KAAKk/E,YAEhB98E,IAAK,SAAU7B,GAEX,IAAK,IADD4+E,EAAgB5+E,EACX2C,EAAI,EAAGA,EAAIi8E,EAAcn+E,OAAQkC,KAChCi8E,EAAcj8E,GAAK,GAAOi8E,EAAcj8E,GAAK,KAC/Ci8E,EAAcj8E,GAAK,GAG3BlD,KAAKk/E,WAAaC,EAClBn/E,KAAKk/E,WAAa3+E,GAEtB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe88E,EAASp/E,UAAW,SAKtCuC,IAAK,WACD,OAAOlC,KAAKo/E,QAEhB/8E,YAAY,EACZC,cAAc,IAQlBy8E,EAASp/E,UAAU0/E,mBAAqB,SAAU9kD,EAASrxB,GACvD,GAAgB,MAAXqxB,EACD,MAAM,IAAIlkB,MAAM,mCAEG,MAAlBrW,KAAKs/E,YACNt/E,KAAKs/E,WAAa,IAEtB,IAAIC,EAAS,IAAIC,GAAcx/E,KAAKmI,OAChCm3E,EAAYt/E,KAAKs/E,UACjBG,EAAO,KACX,GAA0B,IAArBH,EAAUt+E,QACXs+E,GAAa,IACH,GAAK,EACfA,EAAU,GAAKt/E,KAAKs/E,UAAU,GAC9BA,EAAU,GAAK,GAEfG,EAAO,IAAItqE,MAAM,IACZ,GAAKolB,EAAQ,GAClBklD,EAAK,GAAKllD,EAAQ,GAClBklD,EAAK,GAAKllD,EAAQ,OAEjB,CACD,IAAImlD,EAAKnlD,EAAQ,GACbolD,EAAKplD,EAAQ,GAEjBklD,EAAO,IAAItqE,MAAMnV,KAAKmI,OACtB,IAAIjF,EAAI,EACJiF,EAAQnI,KAAKmI,MACjB,IAAKjF,EAAI,EAAGA,EAAIiF,IAASjF,EACrBu8E,EAAKv8E,GAAKlD,KAAK4/E,YAAY5/E,KAAKi/E,SAAS/7E,GAAIw8E,EAAIC,EAAIz2E,GAK7D,OAFAq2E,EAAOD,UAAYA,EACnBC,EAAOM,OAASJ,EACTF,GAMXR,EAASp/E,UAAUmgF,cAAgB,WAQ/B,OANsB,MAAjB9/E,KAAKi/E,WADEj/E,KAEF+/E,QAAW//E,KAAa,UAEX,MAAlBA,KAAKs/E,YAJEt/E,KAKFs/E,UAAat/E,KAAc,WALzBA,MAShB++E,EAASp/E,UAAUqgF,IAAM,SAAUC,EAAGC,GAClC,GAAiB,iBAAND,GAA+B,iBAANC,QAA+B,IAANA,EAAmB,CAC5E,GAAMD,EAAI,GAAOA,EAAI,EACjB,MAAM,IAAI5pE,MAAM,mCAEpB,GAAM6pE,EAAI,GAAOA,EAAI,EACjB,MAAM,IAAI7pE,MAAM,mCAEpB,IAAI8pE,EAAMttE,KAAKoV,IAAI,EAAIg4D,EAAIjgF,KAAKg/E,WAC5BoB,EAAMvtE,KAAKoV,IAAI,EAAIi4D,EAAIlgF,KAAKg/E,WAGhC,OAFch/E,KAAKqgF,OAAOF,EAAIC,GACJpgF,KAAKg/E,UAI/B,IAAI79E,EAAS8+E,EACb,GAAe,MAAV9+E,EACD,MAAM,IAAIkV,MAAM,kCAEpB,GAAKlV,EAAOH,OAAS,EACjB,MAAM,IAAIqV,MAAM,gEAEpB,IAAI2pE,EAAM7+E,EAAO,GACjB,GAAKA,EAAOH,OAAS,EAEjB,IAAK,IADDmH,EAAQhH,EAAOH,OACVkC,EAAI,EAAGA,EAAIiF,IAChB63E,EAAMhgF,KAAKggF,IAAI7+E,EAAO+B,GAAI88E,MACZ,EAAIhgF,KAAKg/E,YAFE97E,GAOjC,OAAO88E,GAQfjB,EAASp/E,UAAU0gF,OAAS,SAAUJ,EAAGC,GACrC,GAAKD,GAAK,EACN,MAAM,IAAI5pE,MAAM,8BAAgC4pE,EAAI,kDAExD,GAAKC,GAAK,EACN,MAAM,IAAI7pE,MAAM,8BAAgC6pE,EAAI,kDAExD,GAAY,IAAND,GAAmB,IAANC,EACf,OAAO,EAGX,IADA,IAAIx0C,EAAQ,EACL1rC,KAAKigE,OAAOggB,EAAGC,MAChBx0C,EACFu0C,IAAM,EACNC,IAAM,EAEV,MAAa,EAAJD,IAAU,GACfA,IAAM,EAEV,EAAG,CACC,MAAY,EAAJC,IAAU,GACdA,IAAM,EAEV,GAAID,EAAIC,EAAG,CACP,IAAI35B,EAAI25B,EACRA,EAAID,EACJA,EAAI15B,EAER25B,GAAQD,QACG,IAANC,GACT,OAAQD,GAAKv0C,GAEjBqzC,EAASp/E,UAAUsgE,OAAS,SAAU3gD,EAAMC,GACxC,GAAoB,iBAATA,QAAqC,IAATA,EAAsB,CACzD,IAAItc,GAAS,EAGb,OAFAA,EAAUA,IAAmB,EAAPqc,IAAa,EACnCrc,EAAUA,IAAmB,EAAPsc,IAAa,EAInC,OAAgB,EAAPD,IAAa,GAG9By/D,EAASp/E,UAAUigF,YAAc,SAAUr5B,EAAG7pC,EAAQC,EAAQzT,GAC1D,GAAIwT,aAAkBD,EAAU,CAC5B,IAAI2D,EAAQ,IAAI3D,EAChB,OAAQvT,GACJ,KAAKkT,gBAAckC,IACf,IAAIT,EAAO7d,KAAK4/E,YAAYr5B,EAAG7pC,EAAOmB,IAAKlB,EAAOkB,KAC9CC,EAAS9d,KAAK4/E,YAAYr5B,EAAG7pC,EAAOoB,MAAOnB,EAAOmB,OAClDC,EAAQ/d,KAAK4/E,YAAYr5B,EAAG7pC,EAAOqB,KAAMpB,EAAOoB,MACpDqC,EAAQ,IAAI3D,EAASoB,EAAKC,EAAOC,GACjC,MACJ,KAAK3B,gBAAcoC,UACf,IAAInB,EAAQrd,KAAK4/E,YAAYr5B,EAAG7pC,EAAOW,KAAMV,EAAOU,MACpD+C,EAAQ,IAAI3D,EAASY,GACrB,MACJ,KAAKjB,gBAAcsC,KACf,IAAIT,EAAQje,KAAK4/E,YAAYr5B,EAAG7pC,EAAOnZ,EAAGoZ,EAAOpZ,GAC7C2a,EAAWle,KAAK4/E,YAAYr5B,EAAG7pC,EAAOuC,EAAGtC,EAAOsC,GAChDd,EAAUne,KAAK4/E,YAAYr5B,EAAG7pC,EAAO/J,EAAGgK,EAAOhK,GAC/CqL,EAAShe,KAAK4/E,YAAYr5B,EAAG7pC,EAAOjc,EAAGkc,EAAOlc,GAClD2f,EAAQ,IAAI3D,EAASwB,EAAMC,EAASC,EAAQH,GAGpD,OAAOoC,EAeP,OAZS,IAGJmmC,EACQ7pC,EAHJ,IAKC6pC,EACG5pC,EAGCD,GAAuBC,EAASD,MAArB6pC,EAVhB,IAeVw4B,KCzPPlqE,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GAwBxCmqE,GAA+B,SAAU/pE,GAEzC,SAAS+pE,EAAcr3E,GACnB,IAAIwN,EAAQF,EAAO5V,KAAKG,OAASA,KAIjC,MAHqB,iBAAVmI,IACPwN,EAAQF,EAAO5V,KAAKG,KAAMmI,IAAUnI,MAEjC2V,EAqQX,OA3QAd,GAAU2qE,EAAe/pE,GAQzB/V,OAAOuC,eAAeu9E,EAAc7/E,UAAW,UAM3CuC,IAAK,WACD,OAAOlC,KAAKsgF,SAEhBl+E,IAAK,SAAU7B,GACX,GAAc,MAATA,EACD,MAAM,IAAI8V,MAAM,kCAEpBrW,KAAKsgF,QAAU//E,GAEnB8B,YAAY,EACZC,cAAc,IAQlBk9E,EAAc7/E,UAAU4gF,YAAc,SAAUr3E,GAC5C,IACIs3E,EAAmBxgF,KAAKygF,wBAAwBv3E,GAChDw3E,EAAoB1gF,KAAK2gF,qBAAqBz3E,GAC9CuE,EAAQzN,KAAK4gF,SAASJ,EAAkBE,GACxCG,EAAO,KACX,GAAoB,MAAf7gF,KAAK8gF,aAAyC,IAAhB9gF,KAAK8gF,OAAyB,CAC7D,IAAIxL,GAAS,GACTyL,OAAe,EACfC,EAAO,EACX,GAA8B,IAA1BhhF,KAAKs/E,UAAUt+E,OACf+/E,EAAe,MAEd,CACD,IAAIzB,EAAYt/E,KAAKs/E,UACjB2B,EAAYjhF,KAAKkhF,aAAa5B,GAC9BU,EAAMhgF,KAAKggF,IAAIiB,GACnBD,EAAOhB,EACPe,EAAkB,EAAIf,EAAQ,EAElC1K,EAAM,GAAKyL,EACX,IAAIxL,EAAUv1E,KAAKmhF,iBAAiBj4E,EAAY63E,EAAcL,EAAmBM,GAEjF,OADAH,EAAO,IAAIxL,IArBD,EAAG,GAqByB5nE,EAAO6nE,EAAOC,GAGxD,OAAOsL,GAMXrB,EAAc7/E,UAAUyhF,gBAAkB,WAQtC,OANqB,MAAhBphF,KAAKsgF,cAA2C,IAAjBtgF,KAAKsgF,UAD5BtgF,KAEF6/E,OAAU7/E,KAAY,SAEV,MAAlBA,KAAKs/E,gBAA+C,IAAnBt/E,KAAKs/E,YAJ9Bt/E,KAKFs/E,UAAat/E,KAAc,WALzBA,MAcjBw/E,EAAc7/E,UAAUihF,SAAW,SAAUJ,EAAkBa,GAE3D,IAAK,IADD5zE,GAA6B,EAAnB+yE,GACLt9E,EAAI,EAAIA,EAAIs9E,IAAqBt9E,EACtCuK,EAAW,EAAJvK,GAAU,EACjBuK,EAAY,EAAJvK,EAAS,GAAM,EAE3B,OAAOuK,GAMX+xE,EAAc7/E,UAAU8gF,wBAA0B,SAAUv3E,GACxD,IAAIf,EAAQ,EACZ,OAAQe,GACJ,KAAKkT,gBAAckC,IACfnW,EAAQ,EACR,MACJ,KAAKiU,gBAAcsC,KACfvW,EAAQ,EACR,MACJ,KAAKiU,gBAAcoC,UACfrW,EAAQ,EACR,MACJ,QACI,MAAM,IAAIkO,MAAM,gDAAkDnN,EAAa,eAEvF,OAAOf,GASXq3E,EAAc7/E,UAAUwhF,iBAAmB,SAAUj4E,EAAYo4E,EAAaZ,EAAmBM,GAC7F,IAAI7/E,EACJ,OAAQ+H,GACJ,KAAKkT,gBAAcoC,UACfrd,EAASnB,KAAKuhF,oBAAoBD,EAAaZ,EAAmBM,GAClE,MACJ,KAAK5kE,gBAAcsC,KACfvd,EAASnB,KAAKwhF,eAAeF,EAAaZ,EAAmBM,GAC7D,MACJ,KAAK5kE,gBAAckC,IACfnd,EAASnB,KAAKyhF,cAAcH,EAAaZ,EAAmBM,GAC5D,MACJ,QACI,MAAM,IAAI3qE,MAAM,gDAAkDnN,EAAa,eAEvF,OAAO/H,GAQXq+E,EAAc7/E,UAAU4hF,oBAAsB,SAAUD,EAAaZ,EAAmBM,GAEpF,IAAK,IADD7/E,GAAyB,EAAdmgF,GACNp+E,EAAI,EAAIA,EAAIo+E,IAAgBp+E,EACrBlD,KAAK0hF,aAAax+E,EAAG89E,EAAM5kE,gBAAcoC,WAGzD,OAAOrd,GAQXq+E,EAAc7/E,UAAU8hF,cAAgB,SAAUH,EAAaZ,EAAmBM,GAE9E,IAAK,IADD7/E,GAAyB,EAAdmgF,GACNp+E,EAAI,EAAIA,EAAIo+E,IAAgBp+E,EAAG,CACpC,IAAIkd,EAAQpgB,KAAK0hF,aAAax+E,EAAG89E,EAAM5kE,gBAAckC,KACjD9O,EAAa,EAAJtM,EACb/B,EAAOqO,GAAS4Q,EAAMvc,EACtB1C,EAAQqO,EAAQ,GAAM4Q,EAAMlD,EAC5B/b,EAAQqO,EAAQ,GAAM4Q,EAAMpL,EAEhC,OAAO7T,GAQXq+E,EAAc7/E,UAAU6hF,eAAiB,SAAUF,EAAaZ,EAAmBM,GAE/E,IAAK,IADD7/E,GAAyB,EAAdmgF,GACNp+E,EAAI,EAAIA,EAAIo+E,EAAcp+E,IAAK,CACpC,IAAIkd,EAAQpgB,KAAK0hF,aAAax+E,EAAG89E,EAAM5kE,gBAAcsC,MACjDlP,EAAa,EAAJtM,EACb/B,EAAOqO,GAAW4Q,EAAM7c,EAAIm9E,EAC5Bv/E,EAAQqO,EAAQ,GAAQ4Q,EAAMnB,EAAIyhE,EAClCv/E,EAAQqO,EAAQ,GAAQ4Q,EAAMzN,EAAI+tE,EAClCv/E,EAAQqO,EAAQ,GAAQ4Q,EAAM3f,EAAIigF,EAEtC,OAAOv/E,GAQXq+E,EAAc7/E,UAAU+hF,aAAe,SAAUlyE,EAAOwxE,EAAM93E,GAC1D,IACIy4E,EACAC,EAIAxhE,EANAjF,EAAY6lE,EAAOxxE,EAGnBvM,EAASjD,KAAK6hF,WAAW1mE,EAAUymE,EAAUD,GAIjD,IAHAC,EAAW3+E,EAAO2+E,aAClBD,EAAU1+E,EAAO0+E,SAGbvhE,EAAQpgB,KAAKsgF,QAAQsB,OAEpB,CACD,IAAIE,EAAc9hF,KAAKs/E,UAAUsC,GAC7BG,EAAa/hF,KAAKs/E,UAAUqC,GAC5BK,EAAWhiF,KAAKsgF,QAAQsB,GACxBK,EAAUjiF,KAAKsgF,QAAQqB,GACvBp7B,GAAMprC,EAAW2mE,IAAgBC,EAAaD,GAClD1hE,EAAQpgB,KAAK4/E,YAAYr5B,EAAGy7B,EAAUC,EAAS/4E,GAEnD,OAAOkX,GAQXo/D,EAAc7/E,UAAUkiF,WAAa,SAAU1mE,EAAUymE,EAAUD,GAC/D,IAAIrC,EAAYt/E,KAAKs/E,UACrBsC,EAAW,EACXD,EAAU,EACV,IAAK,IAAIz+E,EAAI,EAAIA,EAAIlD,KAAKsgF,QAAQt/E,SAAWkC,EAAG,CAC5C,IAAIg/E,EAAU5C,EAAUp8E,GACxB,GAAKg/E,IAAY/mE,EAAW,CACxBwmE,EAAUz+E,EACV0+E,EAAW1+E,EACX,MAEC,GAAKg/E,EAAU/mE,EAAW,CAC3BwmE,EAAUz+E,EACV,MAEJ0+E,EAAW1+E,EACXy+E,EAAUz+E,EAEd,OAAS0+E,SAAUA,EAAUD,QAASA,IAM1CnC,EAAc7/E,UAAUghF,qBAAuB,SAAUz3E,GACrD,IAAIjG,EAAS,EACb,OAAQiG,GACJ,KAAKkT,gBAAcsC,KACnB,KAAKtC,gBAAckC,IACfrb,EAAS,IACT,MACJ,KAAKmZ,gBAAcoC,UACfvb,EAAS,MACT,MACJ,QACI,MAAM,IAAIoT,MAAM,gDAAkDnN,EAAa,cAEvF,OAAOjG,GAMXu8E,EAAc7/E,UAAUuhF,aAAe,SAAU5B,GAI7C,IAAK,IAHDn3E,EAAQm3E,EAAUt+E,OAClBigF,GAAc94E,EAAQ,GACtBg6E,EAAO7C,EAAU,GACZp8E,EAAI,EAAIA,EAAIiF,IAAUjF,EAAG,CAC9B,IAAIg9E,EAAIZ,EAAUp8E,GAClB+9E,EAAW/9E,EAAI,GAAOg9E,EAAIiC,EAC1BA,EAAOjC,EAEX,OAAOe,GAEJzB,GACTT,ICrSElqE,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GA+BxC+sE,GAAwC,SAAU3sE,GAOlD,SAAS2sE,EAAuB9iE,EAAMC,EAAMC,EAAMC,GAC9C,IAAI9J,EAAQF,EAAO5V,KAAKG,KAAM,IAAI4O,IAAoB5O,KAMtD,GADA2V,EAAM81C,sBAAwB,IAAIzjD,EAC9BsX,aAAgBH,GAAUI,aAAgBJ,GAAUK,aAAgB/C,GAAYgD,aAAgBhD,EAChG9G,EAAMkF,WAAW2E,EAAMC,GACvB9J,EAAM0sE,YAAc/iE,EACpB3J,EAAM2sE,UAAY/iE,EAClB5J,EAAM4sE,UAAU5sE,EAAM0sE,YAAa1sE,EAAM2sE,gBAExC,GAAIhjE,aAAgBM,EAGrB,GAFAjK,EAAMkF,WAAW0E,EAAMC,GAElBC,IAASk2D,GAAsB6M,kBAAoB/iE,IAASk2D,GAAsB8M,iBAAmBhjE,IAASk2D,GAAsB+M,YAAcjjE,IAASk2D,GAAsBgN,SAAW,CAE7L,OADAhtE,EAAMitE,YAActjE,EACZG,GACJ,KAAKk2D,GAAsB6M,iBACvB7sE,EAAM0sE,YAAc,IAAIljE,EAAOG,EAAKS,MAAOT,EAAKQ,KAChDnK,EAAM2sE,UAAY,IAAInjE,EAAOG,EAAKO,KAAMP,EAAKU,QAC7C,MACJ,KAAK21D,GAAsB8M,gBACvB9sE,EAAM0sE,YAAc,IAAIljE,EAAOG,EAAKO,KAAMP,EAAKQ,KAC/CnK,EAAM2sE,UAAY,IAAInjE,EAAOG,EAAKS,MAAOT,EAAKU,QAC9C,MACJ,KAAK21D,GAAsB+M,WACvB/sE,EAAM0sE,YAAc,IAAIljE,EAAOG,EAAKO,KAAMP,EAAKQ,KAC/CnK,EAAM2sE,UAAY,IAAInjE,EAAOG,EAAKS,MAAOT,EAAKQ,KAC9C,MACJ,KAAK61D,GAAsBgN,SACvBhtE,EAAM0sE,YAAc,IAAIljE,EAAOG,EAAKO,KAAMP,EAAKQ,KAC/CnK,EAAM2sE,UAAY,IAAInjE,EAAOG,EAAKO,KAAMP,EAAKU,QAC7C,MACJ,QACI,MAAM,IAAI3J,MAAM,0DAA4DoJ,EAAO,SAE3F9J,EAAM4sE,UAAU5sE,EAAM0sE,YAAa1sE,EAAM2sE,gBAExC,GAAoB,iBAAT7iE,QAAqC,IAATA,EAAsB,CAG9D,GAFA9J,EAAMitE,YAActjE,EAEN,KADdG,GAAc,KAEV9J,EAAM0sE,YAAc,IAAIljE,EAAOG,EAAKO,KAAMP,EAAKQ,KAC/CnK,EAAM2sE,UAAY,IAAInjE,EAAOG,EAAKS,MAAOT,EAAKQ,UAE7C,GAAc,KAATL,EACN9J,EAAM0sE,YAAc,IAAIljE,EAAOG,EAAKO,KAAMP,EAAKQ,KAC/CnK,EAAM2sE,UAAY,IAAInjE,EAAOG,EAAKO,KAAMP,EAAKU,aAE5C,GAAc,MAATP,EACN9J,EAAM2sE,UAAY,IAAInjE,EAAOG,EAAKO,KAAMP,EAAKQ,KAC7CnK,EAAM0sE,YAAc,IAAIljE,EAAOG,EAAKS,MAAOT,EAAKQ,UAE/C,GAAc,MAATL,EACN9J,EAAM2sE,UAAY,IAAInjE,EAAOG,EAAKO,KAAMP,EAAKQ,KAC7CnK,EAAM0sE,YAAc,IAAIljE,EAAOG,EAAKO,KAAMP,EAAKU,YAE9C,CACD,IACI6iE,EAAYpjE,GADL5M,KAAKupB,GAAK,KAEjB37B,EAAIoS,KAAKiwE,IAAID,GACbnwE,EAAKiD,EAAMitE,YAAY/iE,MACnBlK,EAAMitE,YAAY7iE,MAAQpK,EAAMitE,YAAY/iE,MAAQ,EACxDlN,EAAKgD,EAAMitE,YAAY9iE,KACnBnK,EAAMitE,YAAY5iE,OAASrK,EAAMitE,YAAY9iE,KAAO,EACxDijE,EAAS,IAAI5jE,EAAOzM,EAAGC,GAE3BA,EAAMlS,GADNiS,EAAKiD,EAAMitE,YAAYt5E,OAAS,EAAKuJ,KAAKiqB,IAAI+lD,KAE9CnwE,GAASqwE,EAAOrwE,EAChBC,GAASowE,EAAOpwE,EAChB,IAAIqwE,EAAK,IAAI7jE,EAAOzM,EAAGC,GACnBswE,EAAMttE,EAAMutE,UAAUF,EAAID,GAE1B14E,EAAIsL,EAAMwtE,YAAY1jE,GACtB2jE,EAAQztE,EAAM0tE,UAAU1tE,EAAMutE,UAAU74E,EAAG04E,GAASE,GAClDttE,EAAM0tE,UAAUJ,EAAKA,GAC3BttE,EAAM2sE,UAAY3sE,EAAM2tE,UAAUP,EAAQptE,EAAM4tE,SAASN,EAAKG,IAE9DztE,EAAM0sE,YAAc1sE,EAAM2tE,UAAUP,EAAQptE,EAAM4tE,SAASN,GAAc,EAARG,IAErEztE,EAAM4sE,UAAU5sE,EAAM2sE,UAAW3sE,EAAM0sE,aAG/C,OAAO1sE,EA8RX,OAzXAd,GAAUutE,EAAwB3sE,GAkGlC2sE,EAAuBziF,UAAUkb,WAAa,SAAU6B,EAAQC,GAC5D3c,KAAKwjF,UAAY9mE,EAAQC,GACzB3c,KAAKyjF,aAAe,IAAIjE,GAAc,GACtCx/E,KAAKyjF,aAAanE,WAAa,EAAG,GAClCt/E,KAAKyjF,aAAa5D,OAAS7/E,KAAKwjF,SAChCxjF,KAAK0jF,eAEThkF,OAAOuC,eAAemgF,EAAuBziF,UAAW,SAOpDuC,IAAK,WACD,OAAOlC,KAAK2jF,QAEhBvhF,IAAK,SAAU7B,GACX,GAAc,MAATA,EACD,MAAM,IAAI8V,MAAM,iCAEpB,GAAsB,MAAjBrW,KAAKwjF,SACN,MAAM,IAAIntE,MAAM,8EAEpBrW,KAAK2jF,OAASpjF,EAEdP,KAAKyjF,aAAezjF,KAAK2jF,OAAOtE,mBAAmBr/E,KAAKwjF,SAAUxjF,KAAKkJ,YACvElJ,KAAK8oD,iBAETzmD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAemgF,EAAuBziF,UAAW,uBAKpDuC,IAAK,WACD,OAAOlC,KAAKyjF,cAEhBrhF,IAAK,SAAU7B,GACX,GAAc,MAATA,EACD,MAAM,IAAI8V,MAAM,+CAEpBrW,KAAK2jF,OAAS,KACd3jF,KAAKwjF,SAAW,KAChBxjF,KAAKyjF,aAAeljF,EACpBP,KAAK8oD,iBAETzmD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAemgF,EAAuBziF,UAAW,gBAKpDuC,IAAK,WACD,OAAOlC,KAAKwjF,UAEhBphF,IAAK,SAAU7B,GACX,GAAc,MAATA,EACD,MAAM,IAAI8V,MAAM,wCAEpB,GAAK9V,EAAMS,OAAS,EAChB,MAAM,IAAIqV,MAAM,6DAEE,MAAjBrW,KAAKwjF,eAA6C,IAAlBxjF,KAAKwjF,SACtCxjF,KAAKwjF,UAAYjjF,EAAM,GAAIA,EAAM,KAGjCP,KAAKwjF,SAAS,GAAKjjF,EAAM,GACzBP,KAAKwjF,SAAS,GAAKjjF,EAAM,IAET,MAAfP,KAAK2jF,aAAyC,IAAhB3jF,KAAK2jF,QAEpC3jF,KAAKyjF,aAAe,IAAIjE,GAAc,GACtCx/E,KAAKyjF,aAAa5D,OAAS7/E,KAAKwjF,SAChCxjF,KAAKyjF,aAAanE,WAAa,EAAG,IAGlCt/E,KAAKyjF,aAAezjF,KAAK2jF,OAAOtE,mBAAmBr/E,KAAKwjF,SAAUxjF,KAAKkJ,YAE3ElJ,KAAK8oD,iBAETzmD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAemgF,EAAuBziF,UAAW,aAKpDuC,IAAK,WACD,OAAOlC,KAAK4iF,aAEhBvgF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAemgF,EAAuBziF,UAAW,UAKpDuC,IAAK,WACD,IAAIe,EAASyxE,GAAUhyD,KACnBrV,EAAUrN,KAAKiN,QAAQsC,MAAMnP,SAASJ,KAAKyrD,sBAAsBp+C,QACrE,GAAe,MAAVA,EAAiB,CAClB,IAAIu2E,EAAYv2E,EAAOkC,MAAM,GACzBs0E,EAAUx2E,EAAOkC,MAAM,GACvBq0E,EAASrjF,QACT0C,GAAmByxE,GAAU5c,OAE7B+rB,EAAOtjF,QACP0C,GAAmByxE,GAAUoP,KAGrC,OAAO7gF,GAEXb,IAAK,SAAU7B,GACX,IACIqjF,EACAC,EAFAx2E,EAAUrN,KAAKiN,QAAQsC,MAAMnP,SAASJ,KAAKyrD,sBAAsBp+C,QAGtD,MAAVA,GACDu2E,EAAW,IAAIl2D,GAAW,GAC1Bm2D,EAAS,IAAIn2D,GAAW,IACxBrgB,EAAS,IAAIyF,GACNY,IAAIkwE,GACXv2E,EAAOqG,IAAImwE,GACX7jF,KAAKiN,QAAQsC,MAAM/O,SAASR,KAAKyrD,sBAAsBp+C,OAAQA,KAG/Du2E,EAAYv2E,EAAOkC,MAAM,GACzBs0E,EAAUx2E,EAAOkC,MAAM,KAK/BlN,YAAY,EACZC,cAAc,IAQlB8/E,EAAuBziF,UAAU2jF,UAAY,SAAUS,EAAQC,GAC3D,IAAItxE,EAAKqxE,EAAOrxE,EAAIsxE,EAAOtxE,EACvBC,EAAKoxE,EAAOpxE,EAAIqxE,EAAOrxE,EAE3B,OADa,IAAIwM,EAAOzM,EAAGC,IAQ/ByvE,EAAuBziF,UAAUujF,UAAY,SAAUa,EAAQC,GAC3D,IAAItxE,EAAKqxE,EAAOrxE,EAAIsxE,EAAOtxE,EACvBC,EAAKoxE,EAAOpxE,EAAIqxE,EAAOrxE,EAE3B,OADa,IAAIwM,EAAOzM,EAAGC,IAQ/ByvE,EAAuBziF,UAAU0jF,UAAY,SAAUU,EAAQC,GAE3D,OADeD,EAAOrxE,EAAIsxE,EAAOtxE,EAAMqxE,EAAOpxE,EAAIqxE,EAAOrxE,GAQ7DyvE,EAAuBziF,UAAU4jF,SAAW,SAAU/lD,EAAOj9B,GAGzD,OAFAi9B,EAAM9qB,EAAK8qB,EAAM9qB,EAAInS,EACrBi9B,EAAM7qB,EAAK6qB,EAAM7qB,EAAIpS,EACdi9B,GAMX4kD,EAAuBziF,UAAUwjF,YAAc,SAAUtmD,GACrD,IAAIW,EAAQ,IAAIre,EAAO,EAAG,GAE1B,GAAK0d,EAAQ,IAAQA,EAAQ,EACzBW,EAAQ,IAAIre,EAAOnf,KAAK4iF,YAAY7iE,MAAO/f,KAAK4iF,YAAY5iE,aAE3D,GAAK6c,EAAQ,KAASA,EAAQ,GAC/BW,EAAQ,IAAIre,EAAOnf,KAAK4iF,YAAY/iE,KAAM7f,KAAK4iF,YAAY5iE,aAE1D,GAAK6c,EAAQ,KAASA,EAAQ,IAC/BW,EAAQ,IAAIre,EAAOnf,KAAK4iF,YAAY/iE,KAAM7f,KAAK4iF,YAAY9iE,SAE1D,CAAA,KAAI+c,EAAQ,KAIb,MAAM,IAAIxmB,MAAM,kCAHhBmnB,EAAQ,IAAIre,EAAOnf,KAAK4iF,YAAY7iE,MAAO/f,KAAK4iF,YAAY9iE,KAKhE,OAAO0d,GAOX4kD,EAAuBziF,UAAU4iF,UAAY,SAAUwB,EAAQC,GAC3D,IAAI3rB,EAAS,IAAIvlD,EACjBulD,EAAO3kD,IAAI,IAAI5B,EAAUiyE,EAAOrxE,IAChC2lD,EAAO3kD,IAAI,IAAI5B,EAAU9R,KAAKs5B,QAAQyqD,EAAOpxE,KAC7C0lD,EAAO3kD,IAAI,IAAI5B,EAAUkyE,EAAOtxE,IAChC2lD,EAAO3kD,IAAI,IAAI5B,EAAU9R,KAAKs5B,QAAQ0qD,EAAOrxE,KAC7C3S,KAAKiN,QAAQsC,MAAM/O,SAASR,KAAKyrD,sBAAsBl+C,OAAQ8qD,IAMnE+pB,EAAuBziF,UAAU25B,QAAU,SAAU3mB,GACjD,OAAU,IAANA,GACQA,EAGDA,GAQfyvE,EAAuBziF,UAAU+jF,YAAc,WAC3C1jF,KAAKkJ,WAAakT,gBAAckC,IAChCte,KAAKoN,SAAWpN,KAAKyjF,aAAalD,YAAYvgF,KAAKkJ,YACnDlJ,KAAKiN,QAAQsC,MAAM/O,SAASR,KAAKyrD,sBAAsBn+C,YAAa,IAAIwE,EAAW8jE,GAAiB,SAOxGwM,EAAuBziF,UAAUkD,MAAQ,WAuBrC,OAtBY7C,KACNipD,uBAAuB,IAAIr6C,EAAc5O,KAAK4oD,oBADxC5oD,KAENiN,QAAU,IAAI2B,EAFR5O,KAGN0jF,cAHM1jF,KAINuiF,UAJMviF,KAIUqiF,YAJVriF,KAI6BsiF,WAC3B,OALFtiF,MAAAA,gBAK2BoiF,GACf,MAAfpiF,KAAKkN,aAAyC,IAAhBlN,KAAKkN,SANhClN,KAOEkN,OAASlN,KAAKkN,OAAOrK,SAGb,MAAjB7C,KAAKwjF,eAA6C,IAAlBxjF,KAAKwjF,WAV9BxjF,KAWFwjF,SAAYxjF,KAAa,UAEhB,MAAdA,KAAKikF,YAAuC,IAAfjkF,KAAKikF,MAb3BjkF,KAcFikF,MAAQjkF,KAAKikF,MAAMnE,gBAES,MAA5B9/E,KAAKkkF,0BAAmE,IAA7BlkF,KAAKkkF,sBAhB9ClkF,KAiBFkkF,oBAAsBlkF,KAAKkkF,oBAAoB9C,mBAjB7CphF,KAmBNqN,OAASrN,KAAKqN,OACpBrN,KAAKmpD,qBApBOnpD,MAqBZA,KAAKkpD,uBArBOlpD,MAAAA,MA4BhBoiF,EAAuBziF,UAAUmpD,cAAgB,WAC7C9oD,KAAKoN,SAAWpN,KAAKyjF,aAAalD,YAAYvgF,KAAKkJ,aAEhDk5E,GACTn6B,IC1ZEpzC,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GA6BxC8uE,GAAwC,SAAU1uE,GAQlD,SAAS0uE,EAAuBC,EAAaC,EAAaC,EAAWC,EAAWC,EAAYC,GACxF,IAAI9uE,EAAQF,EAAO5V,KAAKG,KAAM,IAAI4O,IAAoB5O,KAMtD,GAFA2V,EAAM81C,sBAAwB,IAAIzjD,EAClC2N,EAAMkF,WAAW2pE,EAAYC,GACzBJ,EAAc,EACd,MAAM,IAAIhuE,MAAM,oFAEpB,GAAIkuE,EAAY,EACZ,MAAM,IAAIluE,MAAM,kFAOpB,OALAV,EAAM2sE,UAAYgC,EAClB3uE,EAAM0sE,YAAc+B,EACpBzuE,EAAM+uE,aAAeL,EACrB1uE,EAAMgvE,WAAaJ,EACnB5uE,EAAM4sE,UAAU5sE,EAAM0sE,YAAa1sE,EAAM2sE,UAAW3sE,EAAM+uE,aAAc/uE,EAAMgvE,YACvEhvE,EAsOX,OA/PAd,GAAUsvE,EAAwB1uE,GAgClC0uE,EAAuBxkF,UAAUkb,WAAa,SAAU6B,EAAQC,GAC5D3c,KAAK4kF,SAAWloE,EAAQC,GACxB3c,KAAK6kF,cAAgB,IAAIrF,GAAc,GACvCx/E,KAAK6kF,cAAcvF,WAAa,EAAG,GACnCt/E,KAAK6kF,cAAchF,OAAS7/E,KAAK4kF,QACjC5kF,KAAK0jF,eAEThkF,OAAOuC,eAAekiF,EAAuBxkF,UAAW,SAMpDuC,IAAK,WACD,OAAOlC,KAAK2jF,QAEhBvhF,IAAK,SAAU7B,GACX,GAAc,MAATA,EACD,MAAM,IAAI8V,MAAM,iCAEpB,GAAqB,MAAhBrW,KAAK4kF,cAA2C,IAAjB5kF,KAAK4kF,QACrC,MAAM,IAAIvuE,MAAM,8EAEpBrW,KAAK2jF,OAASpjF,EACdP,KAAK6kF,cAAgB7kF,KAAK2jF,OAAOtE,mBAAmBr/E,KAAK4kF,QAAS5kF,KAAKkJ,YACvElJ,KAAK8oD,iBAETzmD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekiF,EAAuBxkF,UAAW,uBAKpDuC,IAAK,WACD,OAAOlC,KAAK6kF,eAEhBziF,IAAK,SAAU7B,GACX,GAAa,MAATA,EACA,MAAM,IAAI8V,MAAM,+CAEpBrW,KAAK2jF,OAAS,KACd3jF,KAAK4kF,QAAU,KACf5kF,KAAK6kF,cAAgBtkF,EACrBP,KAAK8oD,iBAETzmD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekiF,EAAuBxkF,UAAW,gBAKpDuC,IAAK,WACD,OAAOlC,KAAK4kF,SAEhBxiF,IAAK,SAAU7B,GACX,GAAc,MAATA,EACD,MAAM,IAAI8V,MAAM,+CAEpB,GAAK9V,EAAMS,OAAS,EAChB,MAAM,IAAIqV,MAAM,2DAEC,MAAhBrW,KAAK4kF,cAA2C,IAAjB5kF,KAAK4kF,QACrC5kF,KAAK4kF,SAAWrkF,EAAM,GAAIA,EAAM,KAGhCP,KAAK4kF,QAAQ,GAAKrkF,EAAM,GACxBP,KAAK4kF,QAAQ,GAAKrkF,EAAM,IAER,MAAfP,KAAK2jF,aAAyC,IAAhB3jF,KAAK2jF,QAEpC3jF,KAAK6kF,cAAgB,IAAIrF,GAAc,GACvCx/E,KAAK6kF,cAAchF,OAAS7/E,KAAK4kF,QACjC5kF,KAAK6kF,cAAcvF,WAAa,EAAG,IAGnCt/E,KAAK6kF,cAAgB7kF,KAAK2jF,OAAOtE,mBAAmBr/E,KAAK4kF,QAAS5kF,KAAKkJ,YAE3ElJ,KAAK8oD,iBAETzmD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekiF,EAAuBxkF,UAAW,aAKpDuC,IAAK,WACD,OAAOlC,KAAK4iF,aAEhBxgF,IAAK,SAAU7B,GACXP,KAAK4iF,YAAcriF,EACnBP,KAAKiL,KAAO6H,EAASyB,cAAchU,IAEvC8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekiF,EAAuBxkF,UAAW,UAMpDuC,IAAK,WACD,IAAI03C,EAAU86B,GAAUhyD,KACpBoiE,EAAW9kF,KAAKiN,QAAQsC,MAAMnP,SAASJ,KAAKyrD,sBAAsBp+C,QACtE,GAAgB,OAAZy3E,QAAuC,IAAZA,EAAyB,CACpD,IAAIlB,EAAYkB,EAAQv1E,MAAM,GAC1Bs0E,EAAUiB,EAAQv1E,MAAM,GACxBq0E,EAASrjF,QACTq5C,GAAqB86B,GAAU5c,OAE/B+rB,EAAOtjF,QACPq5C,GAAqB86B,GAAUoP,KAGvC,OAAOlqC,GAEXx3C,IAAK,SAAU7B,GACX,IACIqjF,EACAmB,EAFA13E,EAAUrN,KAAKiN,QAAQsC,MAAMnP,SAASJ,KAAKyrD,sBAAsBp+C,QAGvD,MAAVA,QAAoC,IAAXA,GACzBu2E,EAAW,IAAIl2D,GAAW,GAC1Bq3D,EAAU,IAAIr3D,GAAW,IACzBrgB,EAAS,IAAIyF,GACNY,IAAIkwE,GACXv2E,EAAOqG,IAAIqxE,GACX/kF,KAAKiN,QAAQsC,MAAM/O,SAASR,KAAKyrD,sBAAsBp+C,OAAQA,KAG/Du2E,EAAYv2E,EAAOkC,MAAM,GACzBw1E,EAAW13E,EAAOkC,MAAM,KAGhClN,YAAY,EACZC,cAAc,IAUlB6hF,EAAuBxkF,UAAU4iF,UAAY,SAAUyC,EAAYC,EAAUZ,EAAaE,GACtF,IAAIlsB,EAAS,IAAIvlD,EACjBulD,EAAO3kD,IAAI,IAAI5B,EAAUkzE,EAAWtyE,IACpC2lD,EAAO3kD,IAAI,IAAI5B,EAAU9R,KAAKs5B,QAAQ0rD,EAAWryE,KACjD0lD,EAAO3kD,IAAI,IAAI5B,EAAUuyE,IACzBhsB,EAAO3kD,IAAI,IAAI5B,EAAUmzE,EAASvyE,IAClC2lD,EAAO3kD,IAAI,IAAI5B,EAAU9R,KAAKs5B,QAAQ2rD,EAAStyE,KAC1C0xE,IAAgBE,EACjBlsB,EAAO3kD,IAAI,IAAI5B,EAAUyyE,IAGzBlsB,EAAO3kD,IAAI,IAAI5B,EAAU,IAE7B9R,KAAKiN,QAAQsC,MAAM/O,SAASR,KAAKyrD,sBAAsBl+C,OAAQ8qD,IAMnE8rB,EAAuBxkF,UAAU25B,QAAU,SAAU3mB,GACjD,OAAU,IAANA,GACQA,EAGDA,GAOfwxE,EAAuBxkF,UAAU+jF,YAAc,WAC3C1jF,KAAKkJ,WAAakT,gBAAckC,IAChCte,KAAKoN,SAAWpN,KAAK6kF,cAActE,YAAYvgF,KAAKkJ,YACpDlJ,KAAKiN,QAAQsC,MAAM/O,SAASR,KAAKyrD,sBAAsBn+C,YAAa,IAAIwE,EAAW8jE,GAAkB,UAOzGuO,EAAuBxkF,UAAUkD,MAAQ,WAuBrC,OAtBa7C,KACNipD,uBAAuB,IAAIr6C,EAAc5O,KAAK4oD,oBADxC5oD,KAENiN,QAAU,IAAI2B,EAFR5O,KAGN0jF,cAHM1jF,KAINuiF,UAAUviF,KAAKqiF,YAAariF,KAAKsiF,UAAWtiF,KAAK0kF,aAAc1kF,KAAK2kF,YAJ9D3kF,gBAKSmkF,GACG,OAAhBnkF,KAAKkN,aAA0C,IAAhBlN,KAAKkN,SANhClN,KAOEkN,OAASlN,KAAKkN,OAAOrK,SAGd,OAAjB7C,KAAK4kF,cAA4C,IAAjB5kF,KAAK4kF,UAV7B5kF,KAWF4kF,QAAW5kF,KAAY,SAEd,OAAfA,KAAKikF,YAAwC,IAAfjkF,KAAKikF,MAb3BjkF,KAcFikF,MAAQjkF,KAAKikF,MAAMnE,gBAES,OAA7B9/E,KAAKkkF,0BAAoE,IAA7BlkF,KAAKkkF,sBAhB9ClkF,KAiBFkkF,oBAAsBlkF,KAAKkkF,oBAAoB9C,mBAjB7CphF,KAmBNqN,OAASrN,KAAKqN,OACrBrN,KAAKmpD,qBApBQnpD,MAqBbA,KAAKkpD,uBArBQlpD,MAAAA,MA4BjBmkF,EAAuBxkF,UAAUmpD,cAAgB,WAC7C9oD,KAAKoN,SAAWpN,KAAK6kF,cAActE,YAAYvgF,KAAKkJ,aAEjDi7E,GACTl8B,KCzRF,SAAWi9B,GAKPA,EAAsBA,EAA+B,QAAI,GAAK,UAK9DA,EAAsBA,EAA8B,OAAI,GAAK,SAVjE,CAWGA,0BAA0BA,6BChB7B,IAAIrwE,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GAkBxC8vE,GAAkC,WAClC,SAASA,KAyET,OAvEAzlF,OAAOuC,eAAekjF,EAAiBxlF,UAAW,mBAM9CuC,IAAK,WACD,OAAOlC,KAAKolF,qBAEhBhjF,IAAK,SAAU7B,GACXP,KAAKolF,oBAAsB7kF,GAE/B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekjF,EAAiBxlF,UAAW,aAK9CuC,IAAK,WACD,OAAOlC,KAAKqlF,eAEhBjjF,IAAK,SAAU7B,GACXP,KAAKqlF,cAAgB9kF,GAEzB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekjF,EAAiBxlF,UAAW,WAK9CuC,IAAK,WACD,OAAOlC,KAAKslF,aAEhBljF,IAAK,SAAU7B,GACXP,KAAKslF,YAAc/kF,GAEvB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekjF,EAAiBxlF,UAAW,QAK9CuC,IAAK,WACD,OAAOlC,KAAKulF,UAEhBnjF,IAAK,SAAU7B,GACXP,KAAKulF,SAAWhlF,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekjF,EAAiBxlF,UAAW,mBAK9CuC,IAAK,WACD,OAAOlC,KAAKwlF,qBAEhBpjF,IAAK,SAAU7B,GACXP,KAAKwlF,oBAAsBjlF,GAE/B8B,YAAY,EACZC,cAAc,IAEX6iF,KAMPM,GAA8B,SAAUhwE,GAOxC,SAASgwE,IACL,IAAI9vE,EAAQF,EAAO5V,KAAKG,OAASA,KAIjC,OAHA2V,EAAM+vE,uBAAyBR,wBAAsBS,QACrDhwE,EAAMiwE,0BAA2B,EACjCjwE,EAAMkwE,2BAA6BC,4BAA0BC,SACtDpwE,EAqFX,OAhGAd,GAAU4wE,EAAchwE,GAaxB/V,OAAOuC,eAAewjF,EAAa9lF,UAAW,eAM1CuC,IAAK,WAID,YAHoC,IAAzBlC,KAAKgmF,kBACZhmF,KAAKgmF,gBAAkB,GAEpBhmF,KAAKgmF,iBAEhB5jF,IAAK,SAAU7B,GACXP,KAAKgmF,gBAAkBzlF,GAE3B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAewjF,EAAa9lF,UAAW,0BAK1CuC,IAAK,WACD,OAAOlC,KAAK6lF,4BAEhBzjF,IAAK,SAAU7B,GACXP,KAAK6lF,2BAA6BtlF,GAEtC8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAewjF,EAAa9lF,UAAW,2BAK1CuC,IAAK,WACD,OAAOlC,KAAK4lF,0BAEhBxjF,IAAK,SAAU7B,GACXP,KAAK4lF,yBAA2BrlF,GAEpC8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAewjF,EAAa9lF,UAAW,eAK1CuC,IAAK,WAID,YAHoC,IAAzBlC,KAAKimF,kBACZjmF,KAAKimF,gBAAkB,IAAIlY,IAExB/tE,KAAKimF,iBAEhB7jF,IAAK,SAAU7B,QACyB,IAAzBP,KAAKimF,iBACZjmF,KAAKimF,gBAAkB,IAAIlY,GAC3B/tE,KAAKimF,gBAAkB1lF,GAGvBP,KAAKimF,gBAAkB1lF,GAG/B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAewjF,EAAa9lF,UAAW,sBAK1CuC,IAAK,WACD,OAAOlC,KAAK0lF,wBAEhBtjF,IAAK,SAAU7B,GACXP,KAAK0lF,uBAAyBnlF,GAElC8B,YAAY,EACZC,cAAc,IAEXmjF,GACTN,IAKEe,GAAkC,SAAUzwE,GAM5C,SAASywE,IACL,IAAIvwE,EAAQF,EAAO5V,KAAKG,OAASA,KAMjC,OADA2V,EAAMwwE,gBAAkB9Y,GAAWyB,QAC5Bn5D,EAgDX,OA5DAd,GAAUqxE,EAAkBzwE,GAc5B/V,OAAOuC,eAAeikF,EAAiBvmF,UAAW,gBAM9CuC,IAAK,WACD,OAAOlC,KAAKklB,QAEhB9iB,IAAK,SAAU7B,GACXP,KAAKklB,OAAS3kB,GAElB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeikF,EAAiBvmF,UAAW,WAK9CuC,IAAK,WACD,OAAOlC,KAAKmmF,iBAEhB/jF,IAAK,SAAU7B,GACXP,KAAKmmF,gBAAkB5lF,GAE3B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeikF,EAAiBvmF,UAAW,eAK9CuC,IAAK,WACD,OAAOlC,KAAKimF,iBAEhB7jF,IAAK,SAAU7B,GACiB,MAAxBP,KAAKimF,sBAA2D,IAAzBjmF,KAAKimF,kBAC5CjmF,KAAKimF,gBAAkB,IAAIlY,IAE/B/tE,KAAKimF,gBAAkB1lF,GAE3B8B,YAAY,EACZC,cAAc,IAEX4jF,GACTf,IAKEiB,GAAiC,WAMjC,SAASA,KA+HT,OA5HA1mF,OAAOuC,eAAemkF,EAAgBzmF,UAAW,mBAM7CuC,IAAK,WACD,OAAOlC,KAAKqmF,wBAEhBhkF,YAAY,EACZC,cAAc,IAElB8jF,EAAgBzmF,UAAU2mF,mBAAqB,SAAU/lF,GAErD,GADAP,KAAKqmF,uBAAyB9lF,OACH,IAAhBP,KAAKuI,OACZ,IAAK,IAAIrF,EAAI,EAAGA,EAAIlD,KAAKuI,OAAOg+E,MAAMp+E,MAAOjF,IACzClD,KAAKuI,OAAOg+E,MAAMC,QAAQtjF,GAAG4lB,MAAM29D,gBAAkBlmF,GAIjEb,OAAOuC,eAAemkF,EAAgBzmF,UAAW,aAK7CuC,IAAK,WACD,OAAOlC,KAAK0mF,kBAEhBrkF,YAAY,EACZC,cAAc,IAElB8jF,EAAgBzmF,UAAUgnF,aAAe,SAAUpmF,GAE/C,GADAP,KAAK0mF,iBAAmBnmF,OACG,IAAhBP,KAAKuI,OACZ,IAAK,IAAIrF,EAAI,EAAGA,EAAIlD,KAAKuI,OAAOg+E,MAAMp+E,MAAOjF,IACzClD,KAAKuI,OAAOg+E,MAAMC,QAAQtjF,GAAG4lB,MAAMwiD,UAAY/qE,GAI3Db,OAAOuC,eAAemkF,EAAgBzmF,UAAW,WAK7CuC,IAAK,WACD,OAAOlC,KAAK4mF,gBAEhBvkF,YAAY,EACZC,cAAc,IAElB8jF,EAAgBzmF,UAAUknF,WAAa,SAAUtmF,GAE7C,GADAP,KAAK4mF,eAAiBrmF,OACK,IAAhBP,KAAKuI,OACZ,IAAK,IAAIrF,EAAI,EAAGA,EAAIlD,KAAKuI,OAAOg+E,MAAMp+E,MAAOjF,IACzClD,KAAKuI,OAAOg+E,MAAMC,QAAQtjF,GAAG4lB,MAAMg+D,QAAUvmF,GAIzDb,OAAOuC,eAAemkF,EAAgBzmF,UAAW,QAK7CuC,IAAK,WACD,OAAOlC,KAAK+mF,aAEhB1kF,YAAY,EACZC,cAAc,IAElB8jF,EAAgBzmF,UAAU2G,QAAU,SAAU/F,GAE1C,GADAP,KAAK+mF,YAAcxmF,OACQ,IAAhBP,KAAKuI,OACZ,IAAK,IAAIrF,EAAI,EAAGA,EAAIlD,KAAKuI,OAAOg+E,MAAMp+E,MAAOjF,IACzClD,KAAKuI,OAAOg+E,MAAMC,QAAQtjF,GAAG4lB,MAAMngB,KAAOpI,GAItDb,OAAOuC,eAAemkF,EAAgBzmF,UAAW,UAK7CuC,IAAK,WAID,YAHkC,IAAvBlC,KAAKgnF,eACZhnF,KAAKinF,UAAU,IAAI5Z,IAEhBrtE,KAAKgnF,eAEhB3kF,YAAY,EACZC,cAAc,IAElB8jF,EAAgBzmF,UAAUsnF,UAAY,SAAU1mF,GAE5C,GADAP,KAAKgnF,cAAgBzmF,OACM,IAAhBP,KAAKuI,OACZ,IAAK,IAAIrF,EAAI,EAAGA,EAAIlD,KAAKuI,OAAOg+E,MAAMp+E,MAAOjF,IACzClD,KAAKuI,OAAOg+E,MAAMC,QAAQtjF,GAAG4lB,MAAMo+D,QAAU3mF,GAQzD6lF,EAAgBzmF,UAAUwnF,UAAY,SAAU5+E,GAC5CvI,KAAKuI,OAASA,GAElB7I,OAAOuC,eAAemkF,EAAgBzmF,UAAW,mBAK7CuC,IAAK,WACD,OAAOlC,KAAKonF,wBAEhB/kF,YAAY,EACZC,cAAc,IAMlB8jF,EAAgBzmF,UAAU0nF,mBAAqB,SAAU9mF,GACrDP,KAAKonF,uBAAyB7mF,GAE3B6lF,MAQX,SAAWN,GAKPA,EAA0BA,EAAoC,SAAI,GAAK,WAKvEA,EAA0BA,EAAoC,SAAI,GAAK,WAV3E,CAWGA,8BAA8BA,iCCjZjC,IAAIwB,GAA6B,WAC7B,SAASA,EAAYC,GAMjBvnF,KAAKwnF,UAAY,EAMjBxnF,KAAKynF,WAAa,EAMlBznF,KAAK0nF,QAAU,EACf1nF,KAAK2nF,WAAY,EAMjB3nF,KAAK4nF,OAAQ,EAMb5nF,KAAK6nF,uBAAyB,EAC9B7nF,KAAK8nF,YAAa,EAClB9nF,KAAK+nF,YAAa,EAIlB/nF,KAAKgoF,UAAW,EAMhBhoF,KAAKihD,SAAU,EACfjhD,KAAKioF,YAAc,EACnBjoF,KAAKkoF,QAAU,OACI,IAARX,IACPvnF,KAAKmoF,QAAUZ,GAmiCvB,OAhiCA7nF,OAAOuC,eAAeqlF,EAAY3nF,UAAW,uBAEzCuC,IAAK,WACD,OAAOlC,KAAKooF,6BAEhBhmF,IAAK,SAAU7B,GACXP,KAAKooF,4BAA8B7nF,GAEvC8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqlF,EAAY3nF,UAAW,sBACzCuC,IAAK,WACD,OAAOlC,KAAKqoF,4BAEhBjmF,IAAK,SAAU7B,GACXP,KAAKqoF,2BAA6B9nF,GAEtC8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqlF,EAAY3nF,UAAW,oBACzCuC,IAAK,WACD,OAAOlC,KAAKsoF,0BAEhBlmF,IAAK,SAAU7B,GACXP,KAAKsoF,yBAA2B/nF,GAEpC8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqlF,EAAY3nF,UAAW,mBACzCuC,IAAK,WACD,OAAOlC,KAAKuoF,yBAEhBnmF,IAAK,SAAU7B,GACXP,KAAKuoF,wBAA0BhoF,GAEnC8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqlF,EAAY3nF,UAAW,mBAKzCuC,IAAK,WACD,OAAOlC,KAAKwoF,WAEhBpmF,IAAK,SAAU7B,GACXP,KAAKwoF,UAAYjoF,GAErB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqlF,EAAY3nF,UAAW,uBAKzCuC,IAAK,WACD,OAAOlC,KAAKgoF,UAEhB5lF,IAAK,SAAU7B,GACXP,KAAKgoF,SAAWznF,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqlF,EAAY3nF,UAAW,gBAKzCuC,IAAK,WAID,OAHmB,MAAflC,KAAKklB,SACLllB,KAAKklB,OAAS,IAAItD,GAEf5hB,KAAKklB,QAEhB9iB,IAAK,SAAU7B,GACXP,KAAKklB,OAAS3kB,GAElB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqlF,EAAY3nF,UAAW,OAKzCuC,IAAK,WACD,OAAOlC,KAAKmoF,SAEhB/lF,IAAK,SAAU7B,GACXP,KAAKmoF,QAAU5nF,GAEnB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqlF,EAAY3nF,UAAW,SAKzCuC,IAAK,WACD,OAAOlC,KAAKyoF,aAEhBrmF,IAAK,SAAU7B,GAEX,GADAP,KAAKyoF,YAAcloF,EACfP,KAAKyoF,uBAAuBC,GAAS,CACrC1oF,KAAKunF,IAAIoB,KAAKC,cAAe,EAClB5oF,KAAKyoF,YACXI,WAAa7oF,KAClBA,KAAKyoF,YAAYK,aAAc,EAE/B,IAAK,IADDC,EAAW/oF,KAAKunF,IAAIoB,KAAKK,KAAK7gF,MACzBjF,EAAI,EAAGA,EAAI6lF,EAAU7lF,IAG1B,IAAK,IAFDqkF,EAAMvnF,KAAKunF,IAAIoB,KAAKK,KAAKC,OAAO/lF,GAChCgmF,EAAW3B,EAAIhB,MAAMp+E,MAChBwrC,EAAI,EAAGA,EAAIu1C,EAAUv1C,IAAK,CACpB4zC,EAAIhB,MAAMC,QAAQ7yC,GACxBprC,OAASvI,QAK9BqC,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqlF,EAAY3nF,UAAW,WAKzCuC,IAAK,WACD,OAAOlC,KAAKioF,aAEhB7lF,IAAK,SAAU7B,GACX,GAAIA,EAAQ,EACR,MAAM,IAAI8V,MAAM,kFAGhBrW,KAAKioF,YAAc1nF,EACnBP,KAAKunF,IAAI4B,eAAgB,EACzBnpF,KAAKunF,IAAIoB,KAAKS,gBAAiB,GAGvC/mF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqlF,EAAY3nF,UAAW,SAKzCuC,IAAK,WAID,OAHsB,MAAlBlC,KAAKqpF,YACLrpF,KAAKqpF,UAAY,IAAInD,IAElBlmF,KAAKqpF,WAEhBjnF,IAAK,SAAU7B,GACXP,KAAKqpF,UAAY9oF,GAErB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqlF,EAAY3nF,UAAW,UAKzCuC,IAAK,WAID,OAHwB,IAApBlC,KAAKynF,aACLznF,KAAKynF,WAAaznF,KAAKspF,iBAEpBtpF,KAAKynF,YAEhBrlF,IAAK,SAAU7B,GACXP,KAAKynF,WAAalnF,GAEtB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqlF,EAAY3nF,UAAW,cAKzCuC,IAAK,WACD,OAAOlC,KAAKkoF,SAEhB9lF,IAAK,SAAU7B,GACX,GAAIA,EAAQ,EACR,MAAM8V,MAAM,8DAGZrW,KAAKkoF,QAAU3nF,EACfP,KAAKunF,IAAIgC,kBAAmB,GAGpClnF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqlF,EAAY3nF,UAAW,SAKzCuC,IAAK,WAID,OAHuB,IAAnBlC,KAAKwnF,WAAmBxnF,KAAKunF,IAAIoB,KAAKa,cACtCxpF,KAAKwnF,UAAYxnF,KAAKypF,gBAEnB52E,KAAKgU,MAAM7mB,KAAKwnF,YAE3BplF,IAAK,SAAU7B,GACXP,KAAKwnF,UAAYjnF,GAErB8B,YAAY,EACZC,cAAc,IAOlBglF,EAAY3nF,UAAU8pF,aAAe,WAGjC,IAAIngF,EAAQ,EACRogF,EAAW,IAAIhlE,EACnB,GAAgC,iBAArB1kB,KAAKyoF,YAA0B,CAGtCn/E,GADUogF,EAAS9kE,OAAO5kB,KAAKyoF,YAAazoF,KAAK2pF,cAAe3pF,KAAKigC,aAAc,IAAI7gB,EAAM/E,OAAOmxB,UAAWnxB,OAAOmxB,YAAY,EAAO,IAAIpsB,EAAM,EAAG,IACzI4I,WAAW1e,MACxBA,GAA4E,GAAlEtJ,KAAK8oB,MAAMo+D,QAAQrnE,KAAKvW,MAAQtJ,KAAK8oB,MAAMo+D,QAAQnnE,MAAMzW,YAElE,GAAItJ,KAAKyoF,uBAAuBC,GACjCp/E,EAAQtJ,KAAKyoF,YAAY/mF,KAAK4H,WAG7B,GAAItJ,KAAKyoF,uBAAuBpiD,IAAYrmC,KAAKyoF,uBAAuBvhD,GACzE59B,GAAStJ,KAAKyoF,YAAYn/E,WAEzB,GAAItJ,KAAKyoF,uBAAuB5Y,GAAgB,CACjD,IAAI+Z,EAAU5pF,KAAKyoF,YAGnBn/E,GAFaogF,EAAS9kE,OAAOglE,EAAQxzE,KAAMwzE,EAAQjhF,KAAMihF,EAAQ3pD,aAAc,IAAI7gB,EAAM,EAAG,IAAI,EAAO,IAAIA,EAAM,EAAG,IAEpG4I,WAAW1e,MAC3BA,GAA4E,GAAlEtJ,KAAK8oB,MAAMo+D,QAAQrnE,KAAKvW,MAAQtJ,KAAK8oB,MAAMo+D,QAAQnnE,MAAMzW,OA6BvE,OA3BMtJ,KAAKyoF,uBAAuBC,GASA,MAA1B1oF,KAAK8oB,MAAM+gE,kBAAyD,IAA3B7pF,KAAK8oB,MAAM+gE,kBACT,IAAhC7pF,KAAK8oB,MAAM+gE,YAAYhqE,MAAwB7f,KAAK8oB,MAAM+gE,YAAY7b,aAC7E1kE,GAAStJ,KAAK8oB,MAAM+gE,YAAYhqE,WAEQ,IAAjC7f,KAAK8oB,MAAM+gE,YAAY9pE,OAAyB/f,KAAK8oB,MAAM+gE,YAAY5b,cAC9E3kE,GAAStJ,KAAK8oB,MAAM+gE,YAAY9pE,cAIgB,IAAzC/f,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAYhqE,MAAwB7f,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY7b,aAC/F1kE,GAAStJ,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAYhqE,WAEQ,IAA1C7f,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY9pE,OAAyB/f,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY5b,cAChG3kE,GAAStJ,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY9pE,QArBnB,MAA1B/f,KAAK8oB,MAAM+gE,YACXvgF,GAAUtJ,KAAK8oB,MAAM+gE,YAAYhqE,KAAO7f,KAAK8oB,MAAM+gE,YAAY9pE,MAG/DzW,GAAUtJ,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAYhqE,KAAO7f,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY9pE,MAqBzFzW,GAAStJ,KAAKunF,IAAIoB,KAAK7/D,MAAMghE,aAOjCxC,EAAY3nF,UAAUoqF,mBAAqB,SAAUhrD,EAAUvqB,GAC3D,IAAIiyE,EAAkBzmF,KAAKgqF,qBAO3B,GALuB,MAAnBvD,IACA1nD,EAASt8B,OACTs8B,EAAS4wB,cAAc82B,EAAiBjyE,EAAO9B,EAAG8B,EAAO7B,EAAG6B,EAAOlL,MAAOkL,EAAOjL,QACjFw1B,EAASK,WAEqB,MAA9Bp/B,KAAK8oB,MAAMmhE,gBAAyB,CACxBjqF,KAAKkqF,qBACjBnrD,EAASsxB,UAAUrwD,KAAK8oB,MAAMmhE,gBAAiBz1E,EAAO9B,EAAG8B,EAAO7B,EAAG6B,EAAOlL,MAAOkL,EAAOjL,UAQhG+9E,EAAY3nF,UAAUwqF,wBAA0B,SAAU31E,GAEtD,IAAI41E,EAAe,IAAI/qE,EAAW7K,EAAO9B,EAAG8B,EAAO7B,EAAG6B,EAAOlL,MAAOkL,EAAOjL,QAyD3E,OAxDMvJ,KAAKyoF,uBAAuBC,IAqBA,MAA1B1oF,KAAK8oB,MAAM+gE,kBAAyD,IAA3B7pF,KAAK8oB,MAAM+gE,kBACI,IAA7C7pF,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAYhqE,MAAwB7f,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAY7b,aACvGoc,EAAa13E,GAAK1S,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAYhqE,KAAO7f,KAAKqpF,UAAUnC,QAAQrnE,KAAKvW,MACzF8gF,EAAa9gF,OAAStJ,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAYhqE,WAEP,IAA5C7f,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAY/pE,KAAuB9f,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAY3b,YACtGkc,EAAaz3E,GAAK3S,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAY/pE,IAAM9f,KAAKqpF,UAAUnC,QAAQpnE,IAAIxW,MACvF8gF,EAAa7gF,QAAUvJ,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAY/pE,UAEN,IAA9C9f,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAY9pE,OAAyB/f,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAY5b,cACxGmc,EAAa9gF,OAAStJ,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAY9pE,YAEJ,IAA/C/f,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAY7pE,QAA0BhgB,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAY1b,eACzGic,EAAa7gF,QAAUvJ,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAY7pE,eAIpB,IAAhChgB,KAAK8oB,MAAM+gE,YAAYhqE,MAAwB7f,KAAK8oB,MAAM+gE,YAAY7b,aAC7Eoc,EAAa13E,GAAK1S,KAAK8oB,MAAM+gE,YAAYhqE,KAAO7f,KAAKqpF,UAAUnC,QAAQrnE,KAAKvW,MAC5E8gF,EAAa9gF,OAAStJ,KAAK8oB,MAAM+gE,YAAYhqE,WAEP,IAA/B7f,KAAK8oB,MAAM+gE,YAAY/pE,KAAuB9f,KAAK8oB,MAAM+gE,YAAY3b,YAC5Ekc,EAAaz3E,GAAK3S,KAAK8oB,MAAM+gE,YAAY/pE,IAAM9f,KAAKqpF,UAAUnC,QAAQpnE,IAAIxW,MAC1E8gF,EAAa7gF,QAAUvJ,KAAK8oB,MAAM+gE,YAAY/pE,UAEN,IAAjC9f,KAAK8oB,MAAM+gE,YAAY9pE,OAAyB/f,KAAK8oB,MAAM+gE,YAAY5b,cAC9Emc,EAAa9gF,OAAStJ,KAAK8oB,MAAM+gE,YAAY9pE,YAEJ,IAAlC/f,KAAK8oB,MAAM+gE,YAAY7pE,QAA0BhgB,KAAK8oB,MAAM+gE,YAAY1b,eAC/Eic,EAAa7gF,QAAUvJ,KAAK8oB,MAAM+gE,YAAY7pE,SAGtDoqE,EAAa9gF,OAAUtJ,KAAKqpF,UAAUnC,QAAQrnE,KAAKvW,MAAQtJ,KAAKqpF,UAAUnC,QAAQnnE,MAAMzW,MACxF8gF,EAAa7gF,QAAWvJ,KAAKqpF,UAAUnC,QAAQpnE,IAAIxW,MAAQtJ,KAAKqpF,UAAUnC,QAAQlnE,OAAO1W,YArDnD,IAA3BtJ,KAAK8oB,MAAM+gE,aAAyD,MAA1B7pF,KAAK8oB,MAAM+gE,aAC5DO,EAAa13E,GAAK1S,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAYhqE,KAAO7f,KAAKqpF,UAAUnC,QAAQrnE,KAAKvW,MACzF8gF,EAAaz3E,GAAK3S,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAY/pE,IAAM9f,KAAKqpF,UAAUnC,QAAQpnE,IAAIxW,MACvF8gF,EAAa9gF,OAAUtJ,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAY9pE,MAAQ/f,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAYhqE,KACvGuqE,EAAa7gF,QAAWvJ,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAY7pE,OAAShgB,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAY/pE,IACzGsqE,EAAa7gF,QAAWvJ,KAAKqpF,UAAUnC,QAAQpnE,IAAIxW,MAAQtJ,KAAKqpF,UAAUnC,QAAQlnE,OAAO1W,QAGzF8gF,EAAa13E,GAAK1S,KAAK8oB,MAAM+gE,YAAYhqE,KAAO7f,KAAKqpF,UAAUnC,QAAQrnE,KAAKvW,MAC5E8gF,EAAaz3E,GAAK3S,KAAK8oB,MAAM+gE,YAAY/pE,IAAM9f,KAAKqpF,UAAUnC,QAAQpnE,IAAIxW,MAC1E8gF,EAAa9gF,OAAUtJ,KAAK8oB,MAAM+gE,YAAY9pE,MAAQ/f,KAAK8oB,MAAM+gE,YAAYhqE,KAC7EuqE,EAAa9gF,OAAUtJ,KAAKqpF,UAAUnC,QAAQrnE,KAAKvW,MAAQtJ,KAAKqpF,UAAUnC,QAAQnnE,MAAMzW,MACxF8gF,EAAa7gF,QAAWvJ,KAAK8oB,MAAM+gE,YAAY7pE,OAAShgB,KAAK8oB,MAAM+gE,YAAY/pE,IAC/EsqE,EAAa7gF,QAAWvJ,KAAKqpF,UAAUnC,QAAQpnE,IAAIxW,MAAQtJ,KAAKqpF,UAAUnC,QAAQlnE,OAAO1W,MACpE,IAAjBtJ,KAAKqqF,UACLD,EAAa9gF,OAAUtJ,KAAK8oB,MAAMo+D,QAAQrnE,KAAU,QAwCzDuqE,GAMX9C,EAAY3nF,UAAUugC,KAAO,SAAUnB,EAAUvqB,EAAQ81E,GACrD,IAsBIrnF,EAAS,KAab,GAAIjD,KAAKooF,6BAA+BpoF,KAAKqoF,2BAA4B,CACrE,IAAIroF,KAAKooF,8BAA+BpoF,KAAKunF,IAAIoB,KAAK7/D,MAAMyhE,wBAMxD,OAAOtnF,EALP,GAAKjD,KAAKunF,IAAIiD,iBAAmB,GAAMxqF,KAAKunF,IAAIhB,MAAMjjF,QAAQtD,OAASA,KAAKunF,IAAIiD,iBAAmB,GAAqC,GAA7BxqF,KAAKunF,IAAIiD,kBAAyBxqF,KAAKooF,4BAC9I,OAAOnlF,EAQnBuR,EAASxU,KAAKyqF,sBAAsBj2E,EAAQuqB,GAC5C/+B,KAAK+pF,mBAAmBhrD,EAAUvqB,GAClC,IAAIsyE,EAAU9mF,KAAK0qF,aACfpf,EAAYtrE,KAAK2qF,oBACE,IAAZ7D,QAAgD,IAAdxb,IACzCA,EAAY,IAAInrD,EAAc,IAAI1D,EAAS,EAAG,EAAG,KAErD,IAAI9T,EAAO3I,KAAK2pF,cACZiB,EAAY5qF,KAAK6qF,kBACjBC,EAAkBt2E,EAsBtB,GArBIs2E,EAAgBvhF,QAAUw1B,EAAS/Z,WAAWzb,QAE1CvJ,KAAKunF,IAAIoB,KAAKoC,2BACdD,EAAgBvhF,QAAUuhF,EAAgBn4E,OACX,IAApB3S,KAAKgrF,YAAkD,OAApBhrF,KAAKgrF,YAAuBF,EAAgBvhF,OAASvJ,KAAKgrF,aACpGF,EAAgBvhF,OAASvJ,KAAKgrF,aAe1CF,EAAkB9qF,KAAKmqF,wBAAwBW,GACf,iBAArB9qF,KAAKyoF,aAAsD,iBAAnBzoF,KAAKwoF,UAAwB,CAC5E,IAAIrjD,OAAO,EACPyrB,OAAkB,EAKtB,GAHIA,EADAk6B,EAAgBvhF,OAASZ,EAAKY,OACZ,IAAI8V,EAAWyrE,EAAgBp4E,EAAGo4E,EAAgBn4E,EAAGm4E,EAAgBxhF,MAAOX,EAAKY,QAEjFuhF,EAClBA,EAAgBvhF,OAASZ,EAAKY,QAAUvJ,KAAKunF,IAAIoB,KAAKG,aAA2C,MAA5B9oF,KAAKunF,IAAIoB,KAAKE,WAAoB,CACvG,IAAIt/E,EAASqnD,EAAgBrnD,OAASvJ,KAAKunF,IAAIoB,KAAKE,WAAWtB,IAAIoB,KAAK7/D,MAAM+gE,YAAY7pE,OAAShgB,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY7pE,QAC1F,GAArChgB,KAAKunF,IAAIoB,KAAKsC,qBACdjrF,KAAK2nF,WAAY,EACjB3nF,KAAKunF,IAAI2D,cAAe,GAExB3hF,EAAS,GAAKA,EAASZ,EAAKY,SAC5BqnD,EAAgBrnD,OAASA,GAQU,GAAvCvJ,KAAKmoF,QAAQQ,KAAK7/D,MAAMghE,cACxBl5B,EAAgBtnD,OAAStJ,KAAKmoF,QAAQQ,KAAK7/D,MAAMghE,YACjDt1E,EAAOlL,OAAStJ,KAAKmoF,QAAQQ,KAAK7/D,MAAMghE,aAExC9pF,KAAKgoF,UAKL7iD,EAA0B,KAAnBnlC,KAAKwoF,UAAmBxoF,KAAKwoF,UAAYxoF,KAAKyoF,YACrD1pD,EAAS+vB,WAAW3pB,EAAMx8B,EAAMm+E,EAASxb,EAAW1a,EAAgBl+C,EAAGk+C,EAAgBj+C,EAAGi+C,EAAgBtnD,MAAOsnD,EAAgBrnD,OAAQqhF,IAChG,GAArC5qF,KAAKunF,IAAIoB,KAAKsC,oBAA6BjrF,KAAKunF,IAAIoB,KAAKG,kBAAyC,IAAnB9oF,KAAKwoF,YACpFxoF,KAAKwoF,UAAY,WAKQ,IAAlBxoF,KAAKwoF,WAA+C,OAAnBxoF,KAAKwoF,YAC7CxoF,KAAKwoF,UAAY,IAEjBxoF,KAAKunF,IAAI4D,YACTpsD,EAAS+vB,WAAW9uD,KAAKwoF,UAAW7/E,EAAMm+E,EAASxb,EAAW1a,EAAgBl+C,EAAGk+C,EAAgBj+C,EAAGi+C,EAAgBtnD,MAAOsnD,EAAgBrnD,OAAQqhF,GAWvJ5qF,KAAKgoF,UAAW,GAGpB/kF,EAAS87B,EAASwxC,wBAKjB,GAAIvwE,KAAKyoF,uBAAuBC,GAAS,CAC1C,IAAI0C,EAAYprF,KAAKyoF,YACrB2C,EAAUtC,aAAc,EACxBsC,EAAUvC,WAAa7oF,KACvB,IAAIqrF,OAAa,EACjBA,EAAaP,EAC8B,GAAvC9qF,KAAKmoF,QAAQQ,KAAK7/D,MAAMghE,cACxBt1E,EAAOlL,OAAStJ,KAAKmoF,QAAQQ,KAAK7/D,MAAMghE,aAa5C,IAAIJ,EAAW,IAAI4B,GAAgBF,GAC/BlmE,EAAS,IAAIqmE,GACiB,MAA9BvrF,KAAKunF,IAAIoB,KAAK6C,aACdtmE,EAASllB,KAAKunF,IAAIoB,KAAK6C,aAEvBtmE,EAAON,OAASkjC,gBAAc2jC,SAClC,IAAInf,EAAQ,IAAIY,GAChB,GAAsB,MAAlBnuC,EAAS+wB,MAAe,CAExBwc,EAAM7rC,KAAO1B,EAAS0B,KACtB6rC,EAAM93D,OAAS62E,EACf/e,EAAMpnD,OAASA,EAEfkmE,EAAUM,UACVN,EAAUO,YAEV,IAAIC,EAAkBlC,EAASld,SAASF,GAExCtsE,KAAKO,MAAQ6qF,GAC6B,IAAtCprF,KAAKunF,IAAIoB,KAAKsC,qBACdjrF,KAAKuJ,OAASvJ,KAAKunF,IAAIsE,qBAEvBvf,EAAM7rC,MAAQmrD,EAAgBnrD,OAE9BmrD,EAAgBp3E,OAAOjL,OAASvJ,KAAKunF,IAAIsE,oBACV,GAA3B7rF,KAAKunF,IAAIuE,eACT9rF,KAAKunF,IAAIwE,uBAAyBH,EAElC5rF,KAAKunF,IAAIuE,eAAiB9rF,KAAKunF,IAAIsE,2BAO9C,GAAI7rF,KAAKyoF,uBAAuBpiD,IAAYrmC,KAAKyoF,uBAAuBvhD,GAAW,CACpF,IAAI8kD,OAAc,EAEdA,EADAhsF,KAAKyoF,YAAYn/E,OAASwhF,EAAgBxhF,MAC5B,IAAI+V,EAAWyrE,EAAgBp4E,EAAGo4E,EAAgBn4E,EAAG3S,KAAKyoF,YAAYn/E,MAAOwhF,EAAgBvhF,QAG7FuhF,EAElB/rD,EAASsxB,UAAUrwD,KAAKyoF,YAAauD,EAAYt5E,EAAGs5E,EAAYr5E,EAAGq5E,EAAY1iF,MAAO0iF,EAAYziF,aAE7FvJ,KAAKyoF,uBAAuB5Y,GACjC7vE,KAAKyoF,YAAYvoD,KAAKnB,EAAS2B,YAAaoqD,QAEX,IAArB9qF,KAAKyoF,cACjBzoF,KAAKyoF,YAAc,GACnB1pD,EAAS+vB,WAAW9uD,KAAKyoF,YAAa9/E,EAAMm+E,EAASxb,EAAWwf,EAAgBp4E,EAAGo4E,EAAgBn4E,EAAGm4E,EAAgBxhF,MAAOwhF,EAAgBvhF,OAAQqhF,GACvH,MAA1B5qF,KAAK8oB,MAAM+gE,aAAwD,GAAjC7pF,KAAK8oB,MAAM+gE,YAAY7pE,QAA8C,GAA/BhgB,KAAK8oB,MAAM+gE,YAAYhqE,MAA6C,GAAhC7f,KAAK8oB,MAAM+gE,YAAY9pE,OAA4C,GAA9B/f,KAAK8oB,MAAM+gE,YAAY/pE,MACxKtL,EAAOlL,OAAUtJ,KAAK8oB,MAAMo+D,QAAQrnE,KAAKvW,MAAQtJ,KAAK8oB,MAAMo+D,QAAQnnE,MAAMzW,OAEnC,GAAvCtJ,KAAKmoF,QAAQQ,KAAK7/D,MAAMghE,cACxBt1E,EAAOlL,OAAStJ,KAAKmoF,QAAQQ,KAAK7/D,MAAMghE,cAahD,OAV0B,MAAtB9pF,KAAK8oB,MAAMo+D,UACNlnF,KAAK2nF,WAGuD,GAAzD3nF,KAAKunF,IAAIoB,KAAKE,WAAWtB,IAAIoB,KAAKsC,qBAClCjrF,KAAKunF,IAAI2D,cAAe,EACxBlrF,KAAKisF,gBAAgBltD,EAAUvqB,IAJnCxU,KAAKisF,gBAAgBltD,EAAUvqB,IAQhCvR,GAOXqkF,EAAY3nF,UAAUssF,gBAAkB,SAAUltD,EAAUvqB,GACpDxU,KAAKunF,IAAIoB,KAAK7/D,MAAMojE,qBAAuBhH,wBAAsBiH,SACjE33E,EAAO9B,GAAK1S,KAAK8oB,MAAMo+D,QAAQrnE,KAAKvW,MACpCkL,EAAO7B,GAAK3S,KAAK8oB,MAAMo+D,QAAQpnE,IAAIxW,MACnCkL,EAAOlL,OAAStJ,KAAK8oB,MAAMo+D,QAAQnnE,MAAMzW,MACzCkL,EAAOjL,QAAUvJ,KAAK8oB,MAAMo+D,QAAQlnE,OAAO1W,OAE/C,IAAI05E,EAAK,IAAI7jE,EAAO3K,EAAO9B,EAAG8B,EAAO7B,EAAI6B,EAAOjL,QAC5CyuD,EAAK,IAAI74C,EAAO3K,EAAO9B,EAAG8B,EAAO7B,GACjCmpB,EAAM97B,KAAKqpF,UAAUnC,QAAQrnE,KAC7B7f,KAAKqpF,UAAUnC,QAAQrnE,KAAK0tD,YAAcrxD,eAAa2e,QACvDiB,EAAID,QAAU5f,aAAWmwE,QAGX,IAAdtwD,EAAIxyB,OACJy1B,EAAS0wB,SAAS3zB,EAAKknD,EAAIhrB,GAE/BgrB,EAAK,IAAI7jE,EAAO3K,EAAO9B,EAAI8B,EAAOlL,MAAOkL,EAAO7B,GAChDqlD,EAAK,IAAI74C,EAAO3K,EAAO9B,EAAI8B,EAAOlL,MAAOkL,EAAO7B,EAAI6B,EAAOjL,QAC3DuyB,EAAM97B,KAAKqpF,UAAUnC,QAAQnnE,MACxBvL,EAAO9B,EAAI8B,EAAOlL,MAAUy1B,EAAS/Z,WAAW1b,MAASwyB,EAAIxyB,MAAQ,IACtE05E,EAAK,IAAI7jE,EAAO4f,EAAS/Z,WAAW1b,MAASwyB,EAAIxyB,MAAQ,EAAIkL,EAAO7B,GACpEqlD,EAAK,IAAI74C,EAAO4f,EAAS/Z,WAAW1b,MAASwyB,EAAIxyB,MAAQ,EAAIkL,EAAO7B,EAAI6B,EAAOjL,SAE/EvJ,KAAKqpF,UAAUnC,QAAQnnE,MAAMwtD,YAAcrxD,eAAa2e,QACxDiB,EAAID,QAAU5f,aAAWmwE,QAEX,IAAdtwD,EAAIxyB,OACJy1B,EAAS0wB,SAAS3zB,EAAKknD,EAAIhrB,GAE/BgrB,EAAK,IAAI7jE,EAAO3K,EAAO9B,EAAG8B,EAAO7B,GACjCqlD,EAAK,IAAI74C,EAAO3K,EAAO9B,EAAI8B,EAAOlL,MAAOkL,EAAO7B,GAChDmpB,EAAM97B,KAAKqpF,UAAUnC,QAAQpnE,IACzB9f,KAAKqpF,UAAUnC,QAAQpnE,IAAIytD,YAAcrxD,eAAa2e,QACtDiB,EAAID,QAAU5f,aAAWmwE,QAEX,IAAdtwD,EAAIxyB,OACJy1B,EAAS0wB,SAAS3zB,EAAKknD,EAAIhrB,GAE/BgrB,EAAK,IAAI7jE,EAAO3K,EAAO9B,EAAI8B,EAAOlL,MAAOkL,EAAO7B,EAAI6B,EAAOjL,QAC3DyuD,EAAK,IAAI74C,EAAO3K,EAAO9B,EAAG8B,EAAO7B,EAAI6B,EAAOjL,QAC5CuyB,EAAM97B,KAAKqpF,UAAUnC,QAAQlnE,OACxBxL,EAAO7B,EAAI6B,EAAOjL,OAAWw1B,EAAS/Z,WAAWzb,OAAUuyB,EAAIxyB,MAAQ,IACxE05E,EAAK,IAAI7jE,EAAQ3K,EAAO9B,EAAI8B,EAAOlL,MAASy1B,EAAS/Z,WAAWzb,OAAUuyB,EAAIxyB,MAAQ,GACtF0uD,EAAK,IAAI74C,EAAO3K,EAAO9B,EAAIqsB,EAAS/Z,WAAWzb,OAAUuyB,EAAIxyB,MAAQ,IAErEtJ,KAAKqpF,UAAUnC,QAAQlnE,OAAOutD,YAAcrxD,eAAa2e,QACzDiB,EAAID,QAAU5f,aAAWmwE,QAEX,IAAdtwD,EAAIxyB,OACJy1B,EAAS0wB,SAAS3zB,EAAKknD,EAAIhrB,IAanCsvB,EAAY3nF,UAAU8qF,sBAAwB,SAAUj2E,EAAQ0I,GAC5D,IAAImvE,GAAW,EACXvC,EAAc9pF,KAAKunF,IAAIoB,KAAK7/D,MAAMghE,YAClCA,EAAc,IACdt1E,EAAS,IAAI6K,EAAW7K,EAAO9B,EAAIo3E,EAAat1E,EAAO7B,EAAIm3E,EAAat1E,EAAOlL,MAAQwgF,EAAat1E,EAAOjL,OAASugF,IAExH,IAAIwC,EAAkBtsF,KAAKunF,IAAIhB,MAAMjjF,QAAQtD,MAC7C,GAAIA,KAAKusF,WAAa,GAAMvsF,KAAKunF,IAAIiD,iBAAmB,GAAM8B,GAAmBtsF,KAAKunF,IAAIiD,iBAAmB,GAAMxqF,KAAKwsF,oBAAsB,CAE1I,GAAY,IADRC,EAAOzsF,KAAKusF,aACCvsF,KAAKwsF,oBAClB,IAAK,IAAI74C,EAAI24C,EAAkB,EAAG34C,EAAI3zC,KAAKunF,IAAIoB,KAAKh/E,QAAQxB,OACpDnI,KAAKunF,IAAIhB,MAAMC,QAAQ7yC,GAAG64C,oBADiC74C,IAE3D84C,IAMZ,IAAK,IADDC,EAAa,EACRxpF,EAAIopF,EAAiBppF,EAAIopF,EAAkBG,EAAMvpF,IAAK,CAC3D,GAAIlD,KAAKunF,IAAIoB,KAAK7/D,MAAMyhE,wBAAyB,CAC7C,IACIoC,EAAY3sF,KAAKunF,IAAIoB,KAAKjnF,KAAK4H,MAAQ4T,EAAE8H,WAAW1b,MAAQtJ,KAAKunF,IAAIoB,KAAKjnF,KAAK4H,MAAQ4T,EAAE8H,WAAW1b,MAOxG,IANItJ,KAAKunF,IAAIoB,KAAKjnF,KAAK4H,MAAQ4T,EAAE8H,WAAW1b,MAChCkL,EAAO9B,EAAIg6E,EAAa1sF,KAAKunF,IAAIoB,KAAKh/E,QAAQijF,UAAU1pF,GAAGoG,MAG3DojF,EAAa1sF,KAAKunF,IAAIoB,KAAKh/E,QAAQijF,UAAU1pF,GAAGoG,OAEhDqjF,EACR,MAGRD,GAAc1sF,KAAKunF,IAAIoB,KAAKh/E,QAAQijF,UAAU1pF,GAAGoG,MAErDojF,GAAc1sF,KAAKunF,IAAIoB,KAAK7/D,MAAMghE,YAClCt1E,EAAOlL,MAAQojF,EAEnB,GAAI1sF,KAAKqqF,QAAU,GAAKrqF,KAAKunF,IAAI4B,cAAe,CAC5C,IAAIsD,EAAOzsF,KAAKqqF,QACZwC,EAAkB7sF,KAAKunF,IAAIoB,KAAKK,KAAK8D,cAAcxpF,QAAQtD,KAAKunF,MAC5C,GAApBsF,IAEwB,IADxBA,EAAkB7sF,KAAKunF,IAAIoB,KAAKoE,QAAQzpF,QAAQtD,KAAKunF,QAEjD8E,GAAW,GAed,IAFDW,EAAc,EAClB,IACS9pF,EAAI2pF,EAAiB3pF,EAAI2pF,EAAkBJ,EAAMvpF,IAAK,CAC3D8pF,GAAgBX,EAAWrsF,KAAKunF,IAAIoB,KAAKoE,QAAQE,UAAU/pF,GAAGqG,OAASvJ,KAAKunF,IAAIoB,KAAKK,KAAKC,OAAO/lF,GAAGqG,OACpG,IAAIg+E,EAAMvnF,KAAKunF,IAAIoB,KAAKK,KAAKC,OAAO/lF,GACrBlD,KAAKunF,IAAIoB,KAAKK,KAAK8D,cAAcxpF,QAAQikF,GAuC5CvnF,KAAKunF,IAAIhB,MAAMjjF,QAAQtD,MACvCgtF,GAAehtF,KAAKunF,IAAIoB,KAAK7/D,MAAMghE,YAMnCt1E,EAAOjL,OAASyjF,EAEXhtF,KAAKunF,IAAI2F,mBACV14E,EAAOjL,OAASyjF,GAGxB,OAAOx4E,GAOX8yE,EAAY3nF,UAAUgqF,YAAc,WAChC,YAA+B,IAApB3pF,KAAK8oB,MAAMngB,MAA2C,MAAnB3I,KAAK8oB,MAAMngB,KAC9C3I,KAAK8oB,MAAMngB,UAEkB,IAAxB3I,KAAKunF,IAAIz+D,MAAMngB,MAA+C,MAAvB3I,KAAKunF,IAAIz+D,MAAMngB,KAC3D3I,KAAKunF,IAAIz+D,MAAMngB,UAEmB,IAA7B3I,KAAKunF,IAAIoB,KAAK7/D,MAAMngB,MAAoD,MAA5B3I,KAAKunF,IAAIoB,KAAK7/D,MAAMngB,KACrE3I,KAAKunF,IAAIoB,KAAK7/D,MAAMngB,KAGpB0jB,GAAYkU,aAO3B+mD,EAAY3nF,UAAUgrF,aAAe,WACjC,YAAoC,IAAzB3qF,KAAK8oB,MAAMwiD,WAAqD,MAAxBtrE,KAAK8oB,MAAMwiD,UACnDtrE,KAAK8oB,MAAMwiD,eAEuB,IAA7BtrE,KAAKunF,IAAIz+D,MAAMwiD,WAAyD,MAA5BtrE,KAAKunF,IAAIz+D,MAAMwiD,UAChEtrE,KAAKunF,IAAIz+D,MAAMwiD,UAGftrE,KAAKunF,IAAIoB,KAAK7/D,MAAMwiD,WAOnCgc,EAAY3nF,UAAU+qF,WAAa,WAC/B,YAAkC,IAAvB1qF,KAAK8oB,MAAMg+D,SAAiD,MAAtB9mF,KAAK8oB,MAAMg+D,QACjD9mF,KAAK8oB,MAAMg+D,aAEqB,IAA3B9mF,KAAKunF,IAAIz+D,MAAMg+D,SAAqD,MAA1B9mF,KAAKunF,IAAIz+D,MAAMg+D,QAC9D9mF,KAAKunF,IAAIz+D,MAAMg+D,QAGf9mF,KAAKunF,IAAIoB,KAAK7/D,MAAMg+D,SAOnCQ,EAAY3nF,UAAUqqF,mBAAqB,WACvC,YAA0C,IAA/BhqF,KAAK8oB,MAAM29D,iBAAiE,MAA9BzmF,KAAK8oB,MAAM29D,gBACzDzmF,KAAK8oB,MAAM29D,qBAE6B,IAAnCzmF,KAAKunF,IAAIz+D,MAAM29D,iBAAqE,MAAlCzmF,KAAKunF,IAAIz+D,MAAM29D,gBACtEzmF,KAAKunF,IAAIz+D,MAAM29D,gBAGfzmF,KAAKunF,IAAIoB,KAAK7/D,MAAM29D,iBAOnCa,EAAY3nF,UAAUuqF,mBAAqB,WACvC,YAA0C,IAA/BlqF,KAAK8oB,MAAMmhE,iBAAiE,MAA9BjqF,KAAK8oB,MAAMmhE,gBACzDjqF,KAAK8oB,MAAMmhE,qBAE6B,IAAnCjqF,KAAKunF,IAAIz+D,MAAMmhE,iBAAqE,MAAlCjqF,KAAKunF,IAAIz+D,MAAMmhE,gBACtEjqF,KAAKunF,IAAIz+D,MAAMmhE,gBAGfjqF,KAAKunF,IAAIoB,KAAK7/D,MAAMmhE,iBAOnC3C,EAAY3nF,UAAUkrF,gBAAkB,WACpC,YAAuC,IAA5B7qF,KAAK8oB,MAAMmX,cAA2D,MAA3BjgC,KAAK8oB,MAAMmX,aACtDjgC,KAAK8oB,MAAMmX,aAGXjgC,KAAKigC,cAOpBqnD,EAAY3nF,UAAU2pF,cAAgB,WAGlC,IAAIhgF,EAAQtJ,KAAKmtF,iBAEa,MAA1BntF,KAAK8oB,MAAM+gE,kBAAyD,IAA3B7pF,KAAK8oB,MAAM+gE,YACpDvgF,GAAUtJ,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAY9pE,MAAQ/f,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAYhqE,MAI1FvW,GAAUtJ,KAAK8oB,MAAM+gE,YAAY9pE,MAAQ/f,KAAK8oB,MAAM+gE,YAAYhqE,KAChEvW,GAAUtJ,KAAK8oB,MAAMo+D,QAAQrnE,KAAKvW,MAAQtJ,KAAK8oB,MAAMo+D,QAAQnnE,MAAMzW,OAEvE,IAAIC,EAAS,EACTmgF,EAAW,IAAIhlE,EACnB,GAAgC,iBAArB1kB,KAAKyoF,aAAsD,iBAAnBzoF,KAAKwoF,UAAwB,CAC5E,IAAI4E,EAAeptF,KAAKyoF,YAEnBzoF,KAAKgoF,WACNoF,EAAoC,OAAnBptF,KAAKwoF,WAAyC,KAAnBxoF,KAAKwoF,gBACnB,IAAnBxoF,KAAKwoF,UAA6BxoF,KAAKwoF,UAAYxoF,KAAKyoF,aACvE,IACI4E,EAAYrtF,KAAKunF,IAAIhB,MAAMjjF,QAAQtD,MACI,GAAvCA,KAAKmoF,QAAQQ,KAAK7/D,MAAMghE,cACxBxgF,GAA+C,EAAtCtJ,KAAKmoF,QAAQQ,KAAK7/D,MAAMghE,aAEhC9pF,KAAKunF,IAAIhB,MAAMC,QAAQ6G,GAAWtF,YAAe/nF,KAAKunF,IAAIhB,MAAMC,QAAQ6G,GAAWvF,aAChF9nF,KAAKmoF,QAAQQ,KAAKG,aACdx/E,EAAQ,GACRtJ,KAAK0nF,QAAUp+E,EACe,MAA1BtJ,KAAK8oB,MAAM+gE,kBAAyD,IAA3B7pF,KAAK8oB,MAAM+gE,YACpD7pF,KAAK0nF,SAAY1nF,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAY9pE,MAAQ/f,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAYhqE,MAGjG7f,KAAK0nF,SAAY1nF,KAAK8oB,MAAM+gE,YAAY9pE,MAAQ/f,KAAK8oB,MAAM+gE,YAAYhqE,KACvE7f,KAAK0nF,SAAY1nF,KAAK8oB,MAAMo+D,QAAQrnE,KAAKvW,MAAQtJ,KAAK8oB,MAAMo+D,QAAQnnE,MAAMzW,QAI9EtJ,KAAK0nF,QAAUp+E,EAGnBC,GADMmgF,EAAS9kE,OAAOwoE,EAAcptF,KAAK2pF,cAAe3pF,KAAKigC,aAAc,IAAI7gB,EAAMpf,KAAK0nF,QAAS,IAAI,EAAO,IAAItoE,EAAM,EAAG,IAC7G4I,WAAWze,QAIzBA,GADMmgF,EAAS9kE,OAAOwoE,EAAcptF,KAAK2pF,cAAe3pF,KAAKigC,aAAc,IAAI7gB,EAAM9V,EAAO,IAAI,EAAO,IAAI8V,EAAM,EAAG,IACtG4I,WAAWze,QAIjCA,GAA6E,GAAlEvJ,KAAK8oB,MAAMo+D,QAAQpnE,IAAIxW,MAAQtJ,KAAK8oB,MAAMo+D,QAAQlnE,OAAO1W,YAEnE,GAAItJ,KAAKyoF,uBAAuBC,GAAS,CACtC2E,EAAYrtF,KAAKunF,IAAIhB,MAAMjjF,QAAQtD,MAAvC,IACIstF,EAAgB,EACW,MAA1BttF,KAAK8oB,MAAM+gE,kBAAyD,IAA3B7pF,KAAK8oB,MAAM+gE,aACrDyD,EAAgBttF,KAAKmtF,sBACsB,IAAhCntF,KAAK8oB,MAAM+gE,YAAYhqE,MAAwB7f,KAAK8oB,MAAM+gE,YAAY7b,aAC7Esf,GAAiBttF,KAAK8oB,MAAM+gE,YAAYhqE,WAEA,IAAjC7f,KAAK8oB,MAAM+gE,YAAY9pE,OAAyB/f,KAAK8oB,MAAM+gE,YAAY5b,cAC9Eqf,GAAiBttF,KAAK8oB,MAAM+gE,YAAY9pE,QAGH,MAAnC/f,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,kBAAkE,IAApC7pF,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,aAC5EyD,EAAgBttF,KAAKmtF,sBAC+B,IAAzCntF,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAYhqE,MAAwB7f,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY7b,aAC/Fsf,GAAiBttF,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAYhqE,WAEA,IAA1C7f,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY9pE,OAAyB/f,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY5b,cAChGqf,GAAiBttF,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY9pE,QAIrDutE,EAAgBttF,KAAKmtF,iBAEzBntF,KAAKyoF,YAAY8E,UAAYD,EACxBttF,KAAKunF,IAAIhB,MAAMC,QAAQ6G,GAAWtF,YAAe/nF,KAAKunF,IAAIhB,MAAMC,QAAQ6G,GAAWvF,WAIpFv+E,GAA6E,GAAlEvJ,KAAK8oB,MAAMo+D,QAAQpnE,IAAIxW,MAAQtJ,KAAK8oB,MAAMo+D,QAAQlnE,OAAO1W,OAHpEC,EAASvJ,KAAKyoF,YAAY/mF,KAAK6H,OAKS,IAAxCvJ,KAAKmoF,QAAQQ,KAAK7/D,MAAMghE,cACxBxgF,GAA+C,EAAtCtJ,KAAKmoF,QAAQQ,KAAK7/D,MAAMghE,aAGP,MAA1B9pF,KAAK8oB,MAAM+gE,kBAAyD,IAA3B7pF,KAAK8oB,MAAM+gE,mBACD,IAAxC7pF,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY/pE,KAAuB9f,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY3b,YAC9F3kE,GAAUvJ,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY/pE,KAE1C9f,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY1b,mBAAkE,IAA3CnuE,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY7pE,SACvFzW,GAAUvJ,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY7pE,SAGlDzW,GAAUvJ,KAAKyoF,YAAY3/D,MAAMghE,iBAEhC,GAAI9pF,KAAKyoF,uBAAuBpiD,IAAYrmC,KAAKyoF,uBAAuBvhD,GACzE39B,GAAUvJ,KAAKyoF,YAAYl/E,YAE1B,GAAIvJ,KAAKyoF,uBAAuB5Y,GAAgB,CACjD,IAAI+Z,EAAU5pF,KAAKyoF,YAInBl/E,GAFUmgF,EAAS9kE,OAAOglE,EAAQxzE,KAAMwzE,EAAQjhF,KAAMihF,EAAQ3pD,aAAc,IAAI7gB,EAAM9V,EAAO,IAAI,EAAO,IAAI8V,EAAM,EAAG,IAEvG4I,WAAWze,OACzBA,GAA6E,GAAlEvJ,KAAK8oB,MAAMo+D,QAAQpnE,IAAIxW,MAAQtJ,KAAK8oB,MAAMo+D,QAAQlnE,OAAO1W,iBAEnC,IAArBtJ,KAAKyoF,cACa,MAA1BzoF,KAAK8oB,MAAM+gE,kBAAyD,IAA3B7pF,KAAK8oB,MAAM+gE,YACpDvgF,GAAUtJ,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAY9pE,MAAQ/f,KAAKmoF,QAAQQ,KAAK7/D,MAAM+gE,YAAYhqE,MAG1FvW,GAAUtJ,KAAK8oB,MAAM+gE,YAAY9pE,MAAQ/f,KAAK8oB,MAAM+gE,YAAYhqE,KAChEvW,GAAUtJ,KAAK8oB,MAAMo+D,QAAQrnE,KAAKvW,MAAQtJ,KAAK8oB,MAAMo+D,QAAQnnE,MAAMzW,OAEvEC,GAA6E,GAAlEvJ,KAAK8oB,MAAMo+D,QAAQpnE,IAAIxW,MAAQtJ,KAAK8oB,MAAMo+D,QAAQlnE,OAAO1W,QA8BxE,OA3BMtJ,KAAKyoF,uBAAuBC,GASA,MAA1B1oF,KAAK8oB,MAAM+gE,kBAAyD,IAA3B7pF,KAAK8oB,MAAM+gE,kBACD,IAAxC7pF,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY/pE,KAAuB9f,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY3b,YAC9F3kE,GAAUvJ,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY/pE,UAEQ,IAA3C9f,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY7pE,QAA0BhgB,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY1b,eACjG5kE,GAAUvJ,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY7pE,eAIJ,IAA/BhgB,KAAK8oB,MAAM+gE,YAAY/pE,KAAuB9f,KAAK8oB,MAAM+gE,YAAY3b,YAC5E3kE,GAAUvJ,KAAK8oB,MAAM+gE,YAAY/pE,UAEQ,IAAlC9f,KAAK8oB,MAAM+gE,YAAY7pE,QAA0BhgB,KAAK8oB,MAAM+gE,YAAY1b,eAC/E5kE,GAAUvJ,KAAK8oB,MAAM+gE,YAAY7pE,SArBX,MAA1BhgB,KAAK8oB,MAAM+gE,kBAAyD,IAA3B7pF,KAAK8oB,MAAM+gE,YACpDtgF,GAAWvJ,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY/pE,IAAM9f,KAAKunF,IAAIoB,KAAK7/D,MAAM+gE,YAAY7pE,OAGjFzW,GAAWvJ,KAAK8oB,MAAM+gE,YAAY/pE,IAAM9f,KAAK8oB,MAAM+gE,YAAY7pE,OAqBvEzW,GAAUvJ,KAAKunF,IAAIoB,KAAK7/D,MAAMghE,aAOlCxC,EAAY3nF,UAAUwtF,eAAiB,WACnC,IAAIE,EAAYrtF,KAAKunF,IAAIhB,MAAMjjF,QAAQtD,MAEnCusF,GADWvsF,KAAKunF,IAAIoB,KAAKK,KAAK8D,cAAcxpF,QAAQtD,KAAKunF,KAC5CvnF,KAAKusF,YAClBjjF,EAAQ,EACZ,GAAmB,IAAfijF,EACA,IAAK,IAAIrpF,EAAI,EAAGA,EAAIqpF,EAAYrpF,IAC5BoG,GAAStJ,KAAKunF,IAAIoB,KAAKh/E,QAAQijF,UAAUS,EAAYnqF,GAAGoG,WAG3D,GAAIijF,EAAa,EAClB,IAASrpF,EAAI,EAAGA,EAAIqpF,EAAYrpF,IAC5BoG,GAAStJ,KAAKunF,IAAIoB,KAAKh/E,QAAQijF,UAAUS,EAAYnqF,GAAGoG,MACnDpG,EAAI,EAAKqpF,IACVvsF,KAAKunF,IAAIhB,MAAMC,QAAQ6G,EAAYnqF,EAAI,GAAG6kF,YAAa,GAInE,GAAmB,MAAf/nF,KAAKuI,QAAkBvI,KAAKuI,OAAOg/E,IAAIj+E,MAAQ,GAC1CtJ,KAAKunF,IAAIoB,KAAgB,aAAoB,MAAf3oF,KAAKuI,QAAmBvI,KAAKunF,IAAIj+E,MAAQtJ,KAAKuI,OAAOg/E,IAAIj+E,MAAQ,CAChGA,EAAQ,EACR,IAAK,IAAIqqC,EAAI,EAAGA,EAAI3zC,KAAKuI,OAAOgkF,WAAY54C,IACxCrqC,GAAStJ,KAAKuI,OAAOg/E,IAAIoB,KAAKh/E,QAAQijF,UAAUj5C,GAAGrqC,MAEvDA,GAAgBtJ,KAAKunF,IAAIhB,MAAMp+E,MAGvC,OAAOmB,GAEJg+E,KAQPkG,GAAuC,WAMvC,SAASA,EAAsBjG,GAK3BvnF,KAAKumF,SACLvmF,KAAKmoF,QAAUZ,EA0CnB,OAnCAiG,EAAsB7tF,UAAU6mF,QAAU,SAAUh3E,GAChD,GAAIA,EAAQ,GAAKA,GAASxP,KAAKmI,MAC3B,MAAM,IAAIkO,MAAM,4BAEpB,OAAOrW,KAAKumF,MAAM/2E,IAEtB9P,OAAOuC,eAAeurF,EAAsB7tF,UAAW,SAKnDuC,IAAK,WACD,OAAOlC,KAAKumF,MAAMvlF,QAEtBqB,YAAY,EACZC,cAAc,IAElBkrF,EAAsB7tF,UAAU+T,IAAM,SAAU+5E,GAC5C,QAAoB,IAATA,EAAsB,CAC7B,IAAIC,EAAW,IAAIpG,GAEnB,OADAtnF,KAAK0T,IAAIg6E,GACFD,EAGPA,EAAKlG,IAAMvnF,KAAKmoF,QAChBnoF,KAAKumF,MAAMrlF,KAAKusF,IAOxBD,EAAsB7tF,UAAU2D,QAAU,SAAUmqF,GAChD,OAAOztF,KAAKumF,MAAMjjF,QAAQmqF,IAEvBD,KC/pCPG,GAA+B,WAM/B,SAASA,EAAchF,GAMnB3oF,KAAK4tF,YAAc,EACnB5tF,KAAK2oF,KAAOA,EAkChB,OAhCAjpF,OAAOuC,eAAe0rF,EAAchuF,UAAW,SAK3CuC,IAAK,WACD,OAAOlC,KAAK4tF,aAEhBxrF,IAAK,SAAU7B,GACXP,KAAK6tF,eAAgB,EACrB7tF,KAAK4tF,YAAcrtF,GAEvB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe0rF,EAAchuF,UAAW,UAK3CuC,IAAK,WAID,OAHyB,MAArBlC,KAAKigC,eACLjgC,KAAKigC,aAAe,IAAIre,GAErB5hB,KAAKigC,cAEhB79B,IAAK,SAAU7B,GACXP,KAAKigC,aAAe1/B,GAExB8B,YAAY,EACZC,cAAc,IAEXqrF,KAQPG,GAAyC,WAOzC,SAASA,EAAwBnF,GAK7B3oF,KAAK+tF,mBAKL/tF,KAAK4tF,YAAc,EACnB5tF,KAAK2oF,KAAOA,EACZ3oF,KAAK+tF,mBA0HT,OAnHAD,EAAwBnuF,UAAU+T,IAAM,SAAUvL,GAI9C,IAAK,IAAIjF,EAAI,EAAGA,EAAIiF,EAAOjF,IAAK,CAC5BlD,KAAK+tF,gBAAgB7sF,KAAK,IAAIysF,GAAc3tF,KAAK2oF,OACjD,IAAK,IAAIn5E,EAAQ,EAAGA,EAAQxP,KAAK2oF,KAAKK,KAAK7gF,MAAOqH,IAAS,CACvD,IAAI+3E,EAAMvnF,KAAK2oF,KAAKK,KAAKC,OAAOz5E,GAC5Bi+E,EAAO,IAAInG,GACfmG,EAAKltF,MAAQ,GACbgnF,EAAIhB,MAAM7yE,IAAI+5E,MAS1B/tF,OAAOuC,eAAe6rF,EAAwBnuF,UAAW,SAKrDuC,IAAK,WACD,OAAOlC,KAAK+tF,gBAAgB/sF,QAEhCqB,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6rF,EAAwBnuF,UAAW,SAKrDuC,IAAK,WAQD,OAPyB,IAArBlC,KAAK4tF,cACL5tF,KAAK4tF,YAAc5tF,KAAKguF,uBAEG,IAA3BhuF,KAAK2oF,KAAKsF,cAAsBjuF,KAAK4tF,cAAgB5tF,KAAK2oF,KAAKsF,cAAiBjuF,KAAK2oF,KAAK7/D,MAAMyhE,0BAChGvqF,KAAK4tF,YAAc5tF,KAAK2oF,KAAKsF,aAC7BjuF,KAAK2oF,KAAKuF,aAAc,GAErBluF,KAAK4tF,aAEhBvrF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6rF,EAAwBnuF,UAAW,WAKrDuC,IAAK,WACD,OAAOlC,KAAK+tF,iBAEhB1rF,YAAY,EACZC,cAAc,IAMlBwrF,EAAwBnuF,UAAUitF,UAAY,SAAUp9E,GACpD,GAAIA,GAAS,GAAKA,GAASxP,KAAK2J,QAAQ3I,OACpC,OAAOhB,KAAK2J,QAAQ6F,GAGpB,MAAM6G,MAAM,0CAA4C7G,IAQhEs+E,EAAwBnuF,UAAUquF,oBAAsB,WACpD,IAAItB,EAAa,EACjB1sF,KAAK2oF,KAAKqF,sBACV,IAAK,IAAI9qF,EAAI,EAAGiF,EAAQnI,KAAK+tF,gBAAgB/sF,OAAQkC,EAAIiF,EAAOjF,IAC5DwpF,GAAc1sF,KAAK+tF,gBAAgB7qF,GAAGoG,MAE1C,OAAOojF,GAMXoB,EAAwBnuF,UAAUwuF,iBAAmB,SAAUzB,GAI3D,IAAK,IAHDvxC,KAEAizC,EAAYpuF,KAAKmI,MACZjF,EAAI,EAAGA,EAAIlD,KAAKmI,MAAOjF,IACxBlD,KAAK2oF,KAAKuF,aAAexB,GAAc,IAAM1sF,KAAK+tF,gBAAgB7qF,GAAG2qF,cACrE7tF,KAAK+tF,gBAAgB7qF,GAAGoG,MAAQ,GAGhC6xC,EAAOj4C,GAAKlD,KAAK+tF,gBAAgB7qF,GAAGoG,MAChCtJ,KAAK+tF,gBAAgB7qF,GAAGoG,MAAQ,GAAKtJ,KAAK+tF,gBAAgB7qF,GAAG2qF,eAC7DnB,GAAc1sF,KAAK+tF,gBAAgB7qF,GAAGoG,MACtC8kF,KAGAjzC,EAAOj4C,GAAK,GAIxB,IAASA,EAAI,EAAGA,EAAIlD,KAAKmI,MAAOjF,IAAK,CACjC,IAAIoG,EAAQojF,EAAa0B,EACrBjzC,EAAOj4C,IAAM,IACbi4C,EAAOj4C,GAAKoG,GAGpB,OAAO6xC,GAEJ2yC,KCpMPO,GAA4B,WAM5B,SAASA,EAAW1F,GAKhB3oF,KAAKsuF,qBAAuB,EAK5BtuF,KAAKuuF,UAAY,EAKjBvuF,KAAKwuF,SAAW,EAKhBxuF,KAAKyuF,aAAc,EAMnBzuF,KAAK0uF,uBAAwB,EAK7B1uF,KAAK2uF,cAAgB,EAMrB3uF,KAAK4uF,gBAAiB,EACtB5uF,KAAK6uF,2BAA4B,EAMjC7uF,KAAK8uF,oBAAqB,EAC1B9uF,KAAKmrF,YAAa,EAClBnrF,KAAKkrF,cAAe,EACpBlrF,KAAK+uF,aAAc,EACnB/uF,KAAKgvF,QAAUrG,EAoQnB,OAlQAjpF,OAAOuC,eAAeosF,EAAW1uF,UAAW,iBAMxCuC,IAAK,WACD,OAAOlC,KAAKivF,gBAEhB7sF,IAAK,SAAU7B,GACXP,KAAKivF,eAAiB1uF,GAE1B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeosF,EAAW1uF,UAAW,SAKxCuC,IAAK,WAID,OAHsB,MAAlBlC,KAAKkvF,YACLlvF,KAAKkvF,UAAY,IAAI1B,GAAsBxtF,OAExCA,KAAKkvF,WAEhB7sF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeosF,EAAW1uF,UAAW,QAKxCuC,IAAK,WACD,OAAOlC,KAAKgvF,SAEhB5sF,IAAK,SAAU7B,GACXP,KAAKgvF,QAAUzuF,GAEnB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeosF,EAAW1uF,UAAW,SAKxCuC,IAAK,WAKD,YAJ6B,IAAlBlC,KAAKmvF,WACZnvF,KAAKmvF,SAAW,IAAI/I,GACpBpmF,KAAKmvF,SAAShI,UAAUnnF,OAErBA,KAAKmvF,UAEhB/sF,IAAK,SAAU7B,GACXP,KAAKmvF,SAAW5uF,EAChB,IAAK,IAAI2C,EAAI,EAAGA,EAAIlD,KAAKumF,MAAMp+E,MAAOjF,IAClClD,KAAKumF,MAAMC,QAAQtjF,GAAG4lB,MAAMo+D,QAAU3mF,EAAM6uF,YAClB,IAAf7uF,EAAMoI,OACb3I,KAAKumF,MAAMC,QAAQtjF,GAAG4lB,MAAMngB,KAAOpI,EAAMoI,WAER,IAA1BpI,EAAMkmF,kBACbzmF,KAAKumF,MAAMC,QAAQtjF,GAAG4lB,MAAM29D,gBAAkBlmF,EAAMkmF,sBAEnB,IAA1BlmF,EAAM0pF,kBACbjqF,KAAKumF,MAAMC,QAAQtjF,GAAG4lB,MAAMmhE,gBAAkB1pF,EAAM0pF,sBAEzB,IAApB1pF,EAAM+qE,YACbtrE,KAAKumF,MAAMC,QAAQtjF,GAAG4lB,MAAMwiD,UAAY/qE,EAAM+qE,gBAErB,IAAlB/qE,EAAMumF,UACb9mF,KAAKumF,MAAMC,QAAQtjF,GAAG4lB,MAAMg+D,QAAUvmF,EAAMumF,UAIxDzkF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeosF,EAAW1uF,UAAW,kBAKxCuC,IAAK,WAID,YAHuC,IAA5BlC,KAAKqvF,qBACZrvF,KAAKqvF,mBAAqB,GAEvBrvF,KAAKqvF,oBAEhBjtF,IAAK,SAAU7B,GACXP,KAAKqvF,mBAAqB9uF,GAE9B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeosF,EAAW1uF,UAAW,oBAKxCuC,IAAK,WACD,OAAOlC,KAAKsuF,sBAEhBlsF,IAAK,SAAU7B,GACXP,KAAKsuF,qBAAuB/tF,GAEhC8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeosF,EAAW1uF,UAAW,UAKxCuC,IAAK,WAID,OAHKlC,KAAK4uF,iBACN5uF,KAAKuuF,UAAYvuF,KAAKspF,iBAEnBtpF,KAAKuuF,WAEhBnsF,IAAK,SAAU7B,GACXP,KAAKuuF,UAAYhuF,EACjBP,KAAK4uF,gBAAiB,GAE1BvsF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeosF,EAAW1uF,UAAW,SAKxCuC,IAAK,WAID,OAHsB,IAAlBlC,KAAKwuF,eAA2C,IAAlBxuF,KAAKwuF,WACnCxuF,KAAKwuF,SAAWxuF,KAAKypF,gBAElBzpF,KAAKwuF,UAEhBnsF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeosF,EAAW1uF,UAAW,0BAKxCuC,IAAK,WACD,OAAOlC,KAAKsvF,YAEhBltF,IAAK,SAAU7B,GACXP,KAAKsvF,WAAa/uF,GAEtB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeosF,EAAW1uF,UAAW,oBAKxCuC,IAAK,WACD,OAAOlC,KAAKuvF,mBAEhBntF,IAAK,SAAU7B,GACXP,KAAKuvF,kBAAoBhvF,GAE7B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeosF,EAAW1uF,UAAW,oBAKxCuC,IAAK,WACD,OAAOlC,KAAK8uF,oBAEhB1sF,IAAK,SAAU7B,GACXP,KAAK8uF,mBAAqBvuF,GAE9B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeosF,EAAW1uF,UAAW,YAKxCuC,IAAK,WACD,OAAOlC,KAAK2oF,KAAKK,KAAK8D,cAAcxpF,QAAQtD,OAEhDqC,YAAY,EACZC,cAAc,IAOlB+rF,EAAW1uF,UAAU2pF,cAAgB,WACjC,IACIiF,EADA1G,EAAyB,EAEzBz/D,EAAY,EAEZmmE,EADAvuF,KAAKumF,MAAMC,QAAQ,GAAG6D,QAAU,EACpB,EAGArqF,KAAKumF,MAAMC,QAAQ,GAAGj9E,OAEtC,IAAK,IAAIrG,EAAI,EAAGA,EAAIlD,KAAKumF,MAAMp+E,MAAOjF,IAAK,CACvC,IAAIuqF,EAAOztF,KAAKumF,MAAMC,QAAQtjF,GAa9B,GAXIuqF,EAAK5F,uBAAyBA,IAC9BA,EAAyB4F,EAAK5F,wBASlC7nF,KAAKktF,kBAAmB,EACpBO,EAAKpD,QAAU,EAAnB,CAGI,IAAK,IAFDmF,EAAStsF,EACTusF,EAAQzvF,KAAK+uF,YAAc/uF,KAAK2oF,KAAKoE,QAAQzpF,QAAQtD,MAAQA,KAAK2oF,KAAKK,KAAK8D,cAAcxpF,QAAQtD,MAC7F2zC,EAAI,EAAGA,EAAI85C,EAAKpD,QAAS12C,IACzBA,EAAI,EAAK85C,EAAKpD,WACdrqF,KAAK+uF,YAAc/uF,KAAK2oF,KAAKoE,QAAQE,UAAUwC,EAAQ97C,EAAI,GAAK3zC,KAAK2oF,KAAKK,KAAKC,OAAOwG,EAAQ97C,EAAI,IAAI4yC,MAAMC,QAAQgJ,GAAQ1H,YAAa,GAG9I1/D,EAAYqlE,EAAKlkF,SACjB6e,EAAYqlE,EAAKlkF,aAIzBglF,EAAY17E,KAAKoV,IAAIsmE,EAAWd,EAAKlkF,QAWzC,OATI6e,EAAYmmE,IACZA,EAAYnmE,GAEE,IAAdmmE,EACAA,EAAYnmE,EAEPy/D,EAAyB,IAC9B0G,GAAa1G,GAEV0G,GAEXF,EAAW1uF,UAAU8pF,aAAe,WAEhC,IAAK,IADDiG,EAAS,EACJxsF,EAAI,EAAGA,EAAIlD,KAAK2oF,KAAKh/E,QAAQxB,MAAOjF,IAAK,CAE9CwsF,GADa1vF,KAAK2oF,KAAKh/E,QAAQijF,UAAU1pF,GACxBoG,MAErB,OAAOomF,GAEJrB,KAOPsB,GAAsC,WAMtC,SAASA,EAAqBhH,GAC1B3oF,KAAKgpF,QACLhpF,KAAK2oF,KAAOA,EAoDhB,OAlDAjpF,OAAOuC,eAAe0tF,EAAqBhwF,UAAW,SAMlDuC,IAAK,WACD,OAAOlC,KAAKgpF,KAAKhoF,QAErBqB,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe0tF,EAAqBhwF,UAAW,iBAMlDuC,IAAK,WACD,OAAOlC,KAAKgpF,MAEhB3mF,YAAY,EACZC,cAAc,IAElBqtF,EAAqBhwF,UAAUiwF,OAAS,SAAUr2D,GAC9C,QAAmB,IAARA,EAAqB,CAC5B,IAAIs2D,EAAU,IAAIxB,GAAWruF,KAAK2oF,MAElC,OADA3oF,KAAK4vF,OAAOC,GACLA,EAOP,GAJAt2D,EAAIzQ,MAAMw9D,mBAAmBtmF,KAAK2oF,KAAK7/D,MAAM29D,iBAC7CltD,EAAIzQ,MAAMxiB,QAAQtG,KAAK2oF,KAAK7/D,MAAMngB,MAClC4wB,EAAIzQ,MAAM69D,aAAa3mF,KAAK2oF,KAAK7/D,MAAMwiD,WACvC/xC,EAAIzQ,MAAM+9D,WAAW7mF,KAAK2oF,KAAK7/D,MAAMg+D,SACb,IAApBvtD,EAAIgtD,MAAMp+E,MACV,IAAK,IAAIjF,EAAI,EAAGA,EAAIlD,KAAK2oF,KAAKh/E,QAAQxB,MAAOjF,IACzCq2B,EAAIgtD,MAAM7yE,IAAI,IAAI4zE,IAG1BtnF,KAAKgpF,KAAK9nF,KAAKq4B,IAOvBo2D,EAAqBhwF,UAAUspF,OAAS,SAAUz5E,GAC9C,OAAOxP,KAAKgpF,KAAKx5E,IAEdmgF,KAOPG,GAAyC,WAMzC,SAASA,EAAwBnH,GAK7B3oF,KAAKgpF,QACLhpF,KAAK2oF,KAAOA,EACZ3oF,KAAKgpF,QA4CT,OArCA8G,EAAwBnwF,UAAUstF,UAAY,SAAUz9E,GAIpD,OAAQxP,KAAKgpF,KAAKx5E,IAEtB9P,OAAOuC,eAAe6tF,EAAwBnwF,UAAW,SAKrDuC,IAAK,WACD,OAAOlC,KAAKgpF,KAAKhoF,QAErBqB,YAAY,EACZC,cAAc,IAElBwtF,EAAwBnwF,UAAU+T,IAAM,SAAU6lB,GAC9C,GAAmB,iBAARA,EAAkB,CAEzB,IAAK,IADDguD,OAAM,EACDrkF,EAAI,EAAGA,EAAIq2B,EAAKr2B,IAAK,EAC1BqkF,EAAM,IAAI8G,GAAWruF,KAAK2oF,OACtBoG,aAAc,EAClB,IAAK,IAAIp7C,EAAI,EAAGA,EAAI3zC,KAAK2oF,KAAKh/E,QAAQxB,MAAOwrC,IACzC4zC,EAAIhB,MAAM7yE,IAAI,IAAI4zE,IAEtBtnF,KAAKgpF,KAAK9nF,KAAKqmF,GAEnB,OAAOvnF,KAAKgpF,KAGZhpF,KAAKgpF,KAAK9nF,KAAKq4B,IAGvBu2D,EAAwBnwF,UAAU2D,QAAU,SAAUikF,GAClD,OAAOvnF,KAAKgpF,KAAK1lF,QAAQikF,IAEtBuI,KClcPj7E,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GAwBxCqzE,GAAyB,SAAUjzE,GAOnC,SAASizE,IACL,IAAI/yE,EAAQF,EAAO5V,KAAKG,OAASA,KAoDjC,OA/CA2V,EAAMo6E,SAAW,IAAI3wE,EAAM,EAAG,GAI9BzJ,EAAMq6E,aAAc,EAKpBr6E,EAAMs6E,cAAe,EAKrBt6E,EAAMu6E,WAAa,IAAI7wE,EAKvB1J,EAAMw6E,uBAKNx6E,EAAMy6E,gBAAkB,EACxBz6E,EAAM43E,UAAY,EAKlB53E,EAAM06E,UAAW,EACjB16E,EAAMs1E,oBAAsB,EAa5Bt1E,EAAMyzE,gBAAiB,EACvBzzE,EAAM26E,eAAgB,EACtB36E,EAAMizE,cAAe,EACdjzE,EAupBX,OAltBAd,GAAU6zE,EAASjzE,GA6DnB/V,OAAOuC,eAAeymF,EAAQ/oF,UAAW,sBAMrCuC,IAAK,WACD,YAAsC,IAAvBlC,KAAKuwF,eAA+D,cAAvBvwF,KAAKuwF,eAErEluF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeymF,EAAQ/oF,UAAW,oBAKrCuC,IAAK,WACD,YAAoC,IAArBlC,KAAKwwF,aAA2D,cAArBxwF,KAAKwwF,aAEnEnuF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeymF,EAAQ/oF,UAAW,gBAKrCuC,IAAK,WAID,OAH0B,MAAtBlC,KAAKywF,oBAAuD,IAAvBzwF,KAAKywF,gBAC1CzwF,KAAKywF,eAAgB,GAElBzwF,KAAKywF,eAEhBruF,IAAK,SAAU7B,GACXP,KAAKywF,cAAgBlwF,GAEzB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeymF,EAAQ/oF,UAAW,4BAKrCuC,IAAK,WACD,OAAOlC,KAAKqwF,UAEhBjuF,IAAK,SAAU7B,GACXP,KAAKqwF,SAAW9vF,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeymF,EAAQ/oF,UAAW,WAKrCuC,IAAK,WAID,OAHwB,MAApBlC,KAAK0wF,kBAAmD,IAArB1wF,KAAK0wF,cACxC1wF,KAAK0wF,YAAc,IAAI5C,GAAwB9tF,OAE5CA,KAAK0wF,aAEhBruF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeymF,EAAQ/oF,UAAW,QAKrCuC,IAAK,WAID,OAHqB,MAAjBlC,KAAK2wF,WACL3wF,KAAK2wF,SAAW,IAAIhB,GAAqB3vF,OAEtCA,KAAK2wF,UAEhBtuF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeymF,EAAQ/oF,UAAW,WAKrCuC,IAAK,WAID,OAHwB,MAApBlC,KAAK4wF,kBAAmD,IAArB5wF,KAAK4wF,cACxC5wF,KAAK4wF,YAAc,IAAId,GAAwB9vF,OAE5CA,KAAK4wF,aAEhBvuF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeymF,EAAQ/oF,UAAW,gBAKrCuC,IAAK,WACD,OAAOlC,KAAK6wF,kBAEhBzuF,IAAK,SAAU7B,GACXP,KAAK6wF,iBAAmBtwF,GAE5B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeymF,EAAQ/oF,UAAW,SAKrCuC,IAAK,WAID,OAHsB,MAAlBlC,KAAK8wF,YACL9wF,KAAK8wF,UAAY,IAAIrL,IAElBzlF,KAAK8wF,WAEhB1uF,IAAK,SAAU7B,GACW,MAAlBP,KAAK8wF,YACL9wF,KAAK8wF,UAAYvwF,IAGzB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeymF,EAAQ/oF,UAAW,eAKrCuC,IAAK,WACD,OAAOlC,KAAK+wF,aAEhB3uF,IAAK,SAAU7B,GACXP,KAAK+wF,YAAcxwF,GAEvB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeymF,EAAQ/oF,UAAW,eAKrCuC,IAAK,WACD,OAAOlC,KAAKgxF,aAEhB5uF,IAAK,SAAU7B,GACXP,KAAKgxF,YAAczwF,GAEvB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeymF,EAAQ/oF,UAAW,QAoBrCuC,IAAK,WAID,OAH6B,IAAxBlC,KAAK+vF,SAASzmF,YAA8C,IAAxBtJ,KAAK+vF,SAASzmF,OAAmD,IAAzBtJ,KAAK+vF,SAASxmF,SAC3FvJ,KAAK+vF,SAAW/vF,KAAKixF,WAElBjxF,KAAK+vF,UAKhB3tF,IAAK,SAAU7B,GACXP,KAAK+vF,SAAWxvF,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeymF,EAAQ/oF,UAAW,cACrCuC,IAAK,WACD,OAAOlC,KAAKkxF,YAEhB9uF,IAAK,SAAU7B,GACXP,KAAKkxF,WAAa3wF,GAEtB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeymF,EAAQ/oF,UAAW,gBACrCuC,IAAK,WACD,OAAOlC,KAAKmtE,cAEhB9qE,YAAY,EACZC,cAAc,IAElBomF,EAAQ/oF,UAAUugC,KAAO,SAAU5gB,EAAMC,EAAMC,EAAMC,GACjD,GAAIF,aAAgBJ,QAAgC,IAAfI,EAAKjW,YAAyC,IAATkW,EACtE,OAAOxf,KAAK8+B,WAAWxf,EAAMC,EAAK7M,EAAG6M,EAAK5M,GAEzC,GAAoB,iBAAT4M,GAAqC,iBAATC,QAAqC,IAATC,EACpE,OAAOzf,KAAK8+B,WAAWxf,EAAMC,EAAMC,EAAM,MAExC,GAAID,aAAgBF,QAAoC,IAAfE,EAAKjW,YAAyC,IAATkW,EAC/E,OAAOxf,KAAK8+B,WAAWxf,EAAMC,EAAM,MAElC,GAAIA,aAAgBJ,QAAgC,IAAfI,EAAKjW,OAAyBkW,aAAgBotD,GACpF,OAAO5sE,KAAK8+B,WAAWxf,EAAMC,EAAK7M,EAAG6M,EAAK5M,EAAG6M,GAE5C,GAAoB,iBAATD,GAAqC,iBAATC,IAAsBC,aAAgBmtD,IAA2B,MAARntD,GAAe,CAChH,IAAInW,EAASgW,EAAKyf,SAAS/Z,WAAW1b,MAAQiW,EAC1CqxC,EAAkB,IAAIvxC,EAAWE,EAAMC,EAAMlW,EAAO,GACxD,OAAOtJ,KAAK8+B,WAAWxf,EAAMsxC,EAAiBnxC,GAE7C,OAAIF,aAAgBF,QAAoC,IAAfE,EAAKjW,OAAyC,kBAATkW,EACxExf,KAAK8+B,WAAWxf,EAAMC,EAAM,MAG5Bvf,KAAK8+B,WAAWxf,EAAMC,EAAMC,IAO3CkpE,EAAQ/oF,UAAUsxF,QAAU,WAGxB,IAAK,IAFD1nF,EAAS,EACTD,EAAQtJ,KAAK2J,QAAQL,MAChBpG,EAAI,EAAGA,EAAIlD,KAAK+sF,QAAQ5kF,MAAOjF,IAAK,CAEzCqG,GADUvJ,KAAK+sF,QAAQE,UAAU/pF,GACnBqG,OAElB,IAASrG,EAAI,EAAGA,EAAIlD,KAAKgpF,KAAK7gF,MAAOjF,IAAK,CAEtCqG,GADUvJ,KAAKgpF,KAAKC,OAAO/lF,GACbqG,OAElB,OAAO,IAAI6V,EAAM9V,EAAOC,IAE5Bm/E,EAAQ/oF,UAAUwxF,gBAAkB,SAAUnuB,GACtChjE,KAAKoxF,oBACLpxF,KAAKuwF,cAAcvwF,KAAMgjE,IAGjC0lB,EAAQ/oF,UAAU0xF,cAAgB,SAAUruB,GACpChjE,KAAKsxF,kBACLtxF,KAAKwwF,YAAYxwF,KAAMgjE,IAO/B0lB,EAAQ/oF,UAAUilB,OAAS,SAAU0nD,GACjC,IAAIhjE,EAAQgjE,EAAM93D,OAAOlL,MACrBC,EAAS+iE,EAAM93D,OAAOjL,OACtBgoF,GAAa,EAYjB,QAXkC,IAAvBjlB,EAAM93D,OAAOlL,OAAgD,IAAvBgjE,EAAM93D,OAAOlL,QAC1DA,EAAQgjE,EAAM7rC,KAAKg+B,gBAAgBn1D,MAAQgjE,EAAM93D,OAAO9B,EACxD6+E,GAAa,QAEkB,IAAxBjlB,EAAM93D,OAAOjL,QAAkD,IAAxB+iE,EAAM93D,OAAOjL,SAC3DA,EAAS+iE,EAAM7rC,KAAKg+B,gBAAgBl1D,OAAS+iE,EAAM93D,OAAO7B,EAC1D4+E,GAAa,GAEbA,IACAjlB,EAAM93D,OAAS,IAAI6K,EAAWitD,EAAM93D,OAAO9B,EAAG45D,EAAM93D,OAAO7B,EAAGrJ,EAAOC,IAEjD,IAApBvJ,KAAKgpF,KAAK7gF,MAAa,CACvB,IAAIqpF,EAAaxxF,KAAKgpF,KAAKC,OAAO,GAAG1C,MAAMC,QAAQ,GAAG19D,MACtD,GAA0B,MAAtB0oE,EAAWtK,UAAgD,MAA3BsK,EAAWtK,QAAQrnE,MAAkD,IAAlC2xE,EAAWtK,QAAQrnE,KAAKvW,OAChE,MAA1BkoF,EAAWtK,QAAQpnE,KAAgD,IAAjC0xE,EAAWtK,QAAQpnE,IAAIxW,OAAe,CACzE,IAAIoJ,EAAI8+E,EAAWtK,QAAQrnE,KAAKvW,MAAQ,EACpCqJ,EAAI6+E,EAAWtK,QAAQpnE,IAAIxW,MAAQ,EACvC,GAAIgjE,EAAM93D,OAAO9B,IAAM26D,GAAWyB,QAAQ/uD,MAAMzW,MAAQ,GAAKgjE,EAAM93D,OAAO7B,IAAM06D,GAAWyB,QAAQ/uD,MAAMzW,MAAQ,EAAG,CAChH,IAAIylE,EAAW,IAAI1vD,EAAW3M,EAAGC,EAAG3S,KAAK+vF,SAASzmF,MAAOtJ,KAAK+vF,SAASxmF,QACvE+iE,EAAM93D,OAASu6D,IAI3B/uE,KAAK0rF,UACL1rF,KAAK2rF,YACL3rF,KAAKmtE,aAAeb,EAAMpnD,OAC1BllB,KAAKyxF,aAAenlB,EAAM93D,OAG1B,OAFe,IAAI82E,GAAgBtrF,MACZwsE,SAASF,IAGpCoc,EAAQ/oF,UAAU+rF,QAAU,WAOxB,IAAK,IANDxD,EAAU,EACVmC,EAAU,EACVqH,EAAmB,EACnB7E,EAAkB,EAClB8E,EAAU,EACV5I,EAAW/oF,KAAK+sF,QAAQ5kF,MACnBjF,EAAI,EAAGA,EAAI6lF,EAAU7lF,IAAK,CAC/B,IAAIqkF,EAAMvnF,KAAK+sF,QAAQE,UAAU/pF,GACjCyuF,EAAU,EAEV,IAAK,IADDzI,EAAW3B,EAAIhB,MAAMp+E,MAChBwrC,EAAI,EAAGA,EAAIu1C,EAAUv1C,IAAK,CAC/B,IAAI85C,EAAOlG,EAAIhB,MAAMC,QAAQ7yC,GAG7B,GAFAg+C,EAAU9+E,KAAKoV,IAAI0pE,EAASlE,EAAKpD,UAE5BoD,EAAKjB,sBAAwBiB,EAAKmE,qBAAuBnE,EAAKlB,WAAa,GAAKkB,EAAKpD,QAAU,GAAI,CACpG,GAAIoD,EAAKlB,WAAa54C,EAAI4zC,EAAIhB,MAAMp+E,MAChC,MAAM,IAAIkO,MAAM,iCAAmCs9B,EAAE/zC,WAAa,WAAasD,EAAEtD,YAErF,GAAI6tF,EAAKpD,QAAUnnF,EAAIlD,KAAK+sF,QAAQ5kF,MAChC,MAAM,IAAIkO,MAAM,oCAAsCs9B,EAAE/zC,WAAa,WAAasD,EAAEtD,YAKxF,GAAI6tF,EAAKlB,WAAa,GAAKkB,EAAKpD,QAAU,EAAG,CAQzC,IAPAnC,EAAUuF,EAAKlB,WACflC,EAAUoD,EAAKpD,QACfqH,EAAmB/9C,EACnBk5C,EAAkB3pF,EAClBuqF,EAAKoE,kBAAmB,EACxBpE,EAAKqE,iBAAkB,EAEhB5J,EAAU,GACbwJ,IACAnK,EAAIhB,MAAMC,QAAQkL,GAAkBlF,qBAAsB,EAC1DjF,EAAIhB,MAAMC,QAAQkL,GAAkBE,oBAAqB,EACzDrK,EAAIhB,MAAMC,QAAQkL,GAAkBrH,QAAUA,EAC9CnC,IAKJ,IAHAwJ,EAAmB/9C,EACnBu0C,EAAUuF,EAAKlB,WAERlC,EAAU,GAAG,CAKhB,IAJAwC,IACA7sF,KAAK+sF,QAAQE,UAAUJ,GAAiBtG,MAAMC,QAAQ7yC,GAAGi+C,oBAAqB,EAC9E5xF,KAAK+sF,QAAQE,UAAUJ,GAAiBtG,MAAMC,QAAQkL,GAAkBE,oBAAqB,EAC7FvH,IACOnC,EAAU,GACbwJ,IACA1xF,KAAK+sF,QAAQE,UAAUJ,GAAiBtG,MAAMC,QAAQkL,GAAkBlF,qBAAsB,EAC9FxsF,KAAK+sF,QAAQE,UAAUJ,GAAiBtG,MAAMC,QAAQkL,GAAkBE,oBAAqB,EAC7F1J,IAEJA,EAAUuF,EAAKlB,WACfmF,EAAmB/9C,QAGtB,GAAI85C,EAAKlB,WAAa,GAAsB,IAAjBkB,EAAKpD,QAKjC,IAJAnC,EAAUuF,EAAKlB,WACfmF,EAAmB/9C,EACnB85C,EAAKoE,kBAAmB,EAEjB3J,EAAU,GACbwJ,IACAnK,EAAIhB,MAAMC,QAAQkL,GAAkBlF,qBAAsB,EAC1DtE,SAGH,GAAwB,IAApBuF,EAAKlB,YAAoBkB,EAAKpD,QAAU,EAI7C,IAHAA,EAAUoD,EAAKpD,QACfwC,EAAkB3pF,EAEXmnF,EAAU,GACbwC,IACA7sF,KAAK+sF,QAAQE,UAAUJ,GAAiBtG,MAAMC,QAAQ7yC,GAAGi+C,oBAAqB,EAC9EvH,KAKhB9C,EAAIwK,eAAiBJ,IAG7BjJ,EAAQ/oF,UAAUgsF,UAAY,WAC1B,IAAIqG,EAGAN,EAFAO,EAAc,EACdC,EAAc,EAEdrF,EAAkB,EAGtB,GAFAmF,EAAcC,EAAc,EAC5BP,EAAmB7E,EAAkB,EACjC7sF,KAAKopF,gBAAkBppF,KAAKswF,cAE5B,IAAK,IADDvH,EAAW/oF,KAAKgpF,KAAK7gF,MAChBjF,EAAI,EAAGA,EAAI6lF,EAAU7lF,IAAK,CAC/B,IAAIqkF,EAAMvnF,KAAKgpF,KAAKC,OAAO/lF,GAC3BgvF,EAAc,EAEd,IAAK,IADDhJ,EAAW3B,EAAIhB,MAAMp+E,MAChBwrC,EAAI,EAAGA,EAAIu1C,EAAUv1C,IAAK,CAC/B,IAAI85C,EAAOlG,EAAIhB,MAAMC,QAAQ7yC,GAG7B,GAFAu+C,EAAcr/E,KAAKoV,IAAIiqE,EAAazE,EAAKpD,UAEpCoD,EAAKjB,sBAAwBiB,EAAKmE,qBAC/BnE,EAAKlB,WAAa,GAAKkB,EAAKpD,QAAU,GAAI,CAC9C,GAAIoD,EAAKlB,WAAa54C,EAAI4zC,EAAIhB,MAAMp+E,MAChC,MAAM,IAAIkO,MAAM,kCAAoCs9B,EAAE/zC,WAAa,WAAasD,EAAEtD,YAEtF,GAAI6tF,EAAKpD,QAAUnnF,EAAIlD,KAAKgpF,KAAK7gF,MAC7B,MAAM,IAAIkO,MAAM,kCAAoCs9B,EAAE/zC,WAAa,WAAasD,EAAEtD,YAEtF,GAAI6tF,EAAKlB,WAAa,GAAKkB,EAAKpD,QAAU,EAAG,CAQzC,IAPA2H,EAAcvE,EAAKlB,WACnB0F,EAAcxE,EAAKpD,QACnBqH,EAAmB/9C,EACnBk5C,EAAkB3pF,EAClBuqF,EAAKoE,kBAAmB,EACxBpE,EAAKqE,iBAAkB,EAEhBE,EAAc,GACjBN,IACAnK,EAAIhB,MAAMC,QAAQkL,GAAkBlF,qBAAsB,EAC1DjF,EAAIhB,MAAMC,QAAQkL,GAAkBE,oBAAqB,EACzDI,IAKJ,IAHAN,EAAmB/9C,EACnBq+C,EAAcvE,EAAKlB,WAEZ0F,EAAc,GAAG,CAKpB,IAJApF,IACA7sF,KAAKgpF,KAAKC,OAAO4D,GAAiBtG,MAAMC,QAAQ7yC,GAAGi+C,oBAAqB,EACxE5xF,KAAKgpF,KAAKC,OAAO4D,GAAiBtG,MAAMC,QAAQkL,GAAkBE,oBAAqB,EACvFK,IACOD,EAAc,GACjBN,IACA1xF,KAAKgpF,KAAKC,OAAO4D,GAAiBtG,MAAMC,QAAQkL,GAAkBlF,qBAAsB,EACxFxsF,KAAKgpF,KAAKC,OAAO4D,GAAiBtG,MAAMC,QAAQkL,GAAkBE,oBAAqB,EACvFI,IAEJA,EAAcvE,EAAKlB,WACnBmF,EAAmB/9C,QAGtB,GAAI85C,EAAKlB,WAAa,GAAsB,IAAjBkB,EAAKpD,QAKjC,IAJA2H,EAAcvE,EAAKlB,WACnBmF,EAAmB/9C,EACnB85C,EAAKoE,kBAAmB,EAEjBG,EAAc,GACjBN,IACAnK,EAAIhB,MAAMC,QAAQkL,GAAkBlF,qBAAsB,EAC1DwF,SAGH,GAAwB,IAApBvE,EAAKlB,YAAoBkB,EAAKpD,QAAU,EAI7C,IAHA4H,EAAcxE,EAAKpD,QACnBwC,EAAkB3pF,EAEX+uF,EAAc,GACjBpF,IACA7sF,KAAKgpF,KAAKC,OAAO4D,GAAiBtG,MAAMC,QAAQ7yC,GAAGi+C,oBAAqB,EACxEK,KAKhB1K,EAAIwK,eAAiBG,IAIjCxJ,EAAQ/oF,UAAUquF,oBAAsB,SAAUx5E,GAC9C,QAAsB,IAAXA,EAAwB,CAC/BxU,KAAKkuF,aAAc,EAGnB,IAAK,IAFD/yC,EAASn7C,KAAK2J,QAAQwkF,iBAAiB35E,EAAOlL,MAAQkL,EAAO9B,GAExDxP,EAAI,EAAGiF,EAAQnI,KAAK2J,QAAQxB,MAAOjF,EAAIiF,EAAOjF,IAInDlD,KAAK2J,QAAQijF,UAAU1pF,GAAG0qF,YAAczyC,EAAOj4C,GAC/ClD,KAAKutF,UAAYpyC,EAAOj4C,GAE5B,GAAuB,MAAnBlD,KAAK6oF,YAA4D,GAAtC7oF,KAAK8oB,MAAMyhE,yBAA8F,GAA1DvqF,KAAK6oF,WAAWtB,IAAIoB,KAAK7/D,MAAMyhE,wBAAkC,CAC3I,IAAI4H,EAAU,EACVvE,EAAc,EACdwE,EAAcpyF,KAAK2J,QAAQxB,MAC3BkqF,EAAuB,EACc,MAArCryF,KAAK6oF,WAAW//D,MAAM+gE,kBAAoE,IAAtC7pF,KAAK6oF,WAAW//D,MAAM+gE,mBACrB,IAA1C7pF,KAAK6oF,WAAW//D,MAAM+gE,YAAYhqE,MAAuB7f,KAAK6oF,WAAW//D,MAAM+gE,YAAY7b,aAClGmkB,GAAWnyF,KAAK6oF,WAAW//D,MAAM+gE,YAAYhqE,WAEK,IAA3C7f,KAAK6oF,WAAW//D,MAAM+gE,YAAY9pE,OAAwB/f,KAAK6oF,WAAW//D,MAAM+gE,YAAY5b,cACnGkkB,GAAWnyF,KAAK6oF,WAAW//D,MAAM+gE,YAAY9pE,QAGrD,IAAS7c,EAAI,EAAGA,EAAIlD,KAAK6oF,WAAW0D,WAAYrpF,IAC5C0qF,GAAe5tF,KAAK6oF,WAAWtB,IAAIoB,KAAKh/E,QAAQijF,UAAU5sF,KAAKowF,gBAAkBltF,GAAGoG,MAExF,IAAK,IAAIqqC,EAAI,EAAGA,EAAI3zC,KAAK2J,QAAQxB,MAAOwrC,IAChC3zC,KAAK0wF,YAAY9D,UAAUj5C,GAAGrqC,MAAQ,GAAKtJ,KAAK0wF,YAAY9D,UAAUj5C,GAAGk6C,gBACzED,GAAe5tF,KAAK0wF,YAAY9D,UAAUj5C,GAAGrqC,MAC7C8oF,KAcR,GAXmD,MAA9CpyF,KAAK6oF,WAAWtB,IAAIoB,KAAK7/D,MAAM+gE,kBAA4E,IAA9C7pF,KAAK6oF,WAAWtB,IAAIoB,KAAK7/D,MAAM+gE,mBAChC,IAAlD7pF,KAAK6oF,WAAWtB,IAAIoB,KAAK7/D,MAAM+gE,YAAY/pE,KAAsB9f,KAAK6oF,WAAWtB,IAAIoB,KAAK7/D,MAAM+gE,YAAY3b,YACnHikB,GAAWnyF,KAAK6oF,WAAWtB,IAAIoB,KAAK7/D,MAAM+gE,YAAY/pE,UAEM,IAArD9f,KAAK6oF,WAAWtB,IAAIoB,KAAK7/D,MAAM+gE,YAAY7pE,QAAyBhgB,KAAK6oF,WAAWtB,IAAIoB,KAAK7/D,MAAM+gE,YAAY1b,eACtHgkB,GAAWnyF,KAAK6oF,WAAWtB,IAAIoB,KAAK7/D,MAAM+gE,YAAY7pE,SAGZ,GAA9ChgB,KAAK6oF,WAAWtB,IAAIoB,KAAK7/D,MAAMghE,cAC/B8D,GAA4D,EAA7C5tF,KAAK6oF,WAAWtB,IAAIoB,KAAK7/D,MAAMghE,aAE9C8D,EAAcuE,IACdE,GAAwBzE,EAAcuE,GAAWC,EACjDpyF,KAAKutF,UAAY8E,EACM,MAAnBryF,KAAK6oF,YACL,IAASl1C,EAAI,EAAGA,EAAI3zC,KAAK2J,QAAQxB,MAAOwrC,IAC/B3zC,KAAK2J,QAAQijF,UAAUj5C,GAAGk6C,gBAC3B7tF,KAAK2J,QAAQijF,UAAUj5C,GAAGi6C,YAAcyE,QAiB3D,CACGl3C,GAAUn7C,KAAK2J,QAAQxB,OAC3B,IAAK,IAAI9D,EAAI,EAAGA,EAAIrE,KAAK2J,QAAQxB,MAAO9D,IACpC82C,EAAO92C,GAAK,EAEhB,IAAImjF,EAAY,EAKhB,SAHiC,IAArBxnF,KAAK8oF,kBAA4D,IAAtB9oF,KAAKyxF,cAAuD,OAArBzxF,KAAK8oF,kBAAqD,IAAtB9oF,KAAKyxF,gBACnIzxF,KAAKiuF,aAAejuF,KAAKyxF,aAAanoF,OAEtCtJ,KAAK+sF,QAAQ5kF,MAAQ,EAGhB,CAAA,IAFDmqF,EAAatyF,KAAK+sF,QAAQE,UAAU,GAAG1G,MAAMp+E,MAC7C4gF,EAAW/oF,KAAK+sF,QAAQ5kF,MAC5B,IAASjF,EAAI,EAAGA,EAAIovF,EAAYpvF,IAAK,CACjCskF,EAAY,EACZ,IAAS7zC,EAAI,EAAGA,EAAIo1C,EAAUp1C,IAAK,CAC/B,IAAI66C,EAAW37E,KAAKJ,IAAIzS,KAAKiuF,aAAcjuF,KAAK+sF,QAAQE,UAAUt5C,GAAG4yC,MAAMC,QAAQtjF,GAAGoG,OACtFk+E,EAAY30E,KAAKoV,IAAIu/D,EAAWgH,GAEpCrzC,EAAOj4C,GAAKskF,GAepBA,EAAY,EACHtkF,EAAI,EAAb,IAAK,IAAWqvF,EAAavyF,KAAK2J,QAAQxB,MAAOjF,EAAIqvF,EAAYrvF,IAAK,CAClE,IAASywC,EAAI,EAAGo1C,EAAW/oF,KAAKgpF,KAAK7gF,MAAOwrC,EAAIo1C,EAAUp1C,IACtD,GAAwD,GAAnD3zC,KAAKgpF,KAAKC,OAAOt1C,GAAG4yC,MAAMC,QAAQtjF,GAAGqpF,aAAoBvsF,KAAKgpF,KAAKC,OAAOt1C,GAAG4yC,MAAMC,QAAQtjF,GAAGspF,qBAAsE,MAA9CxsF,KAAKgpF,KAAKC,OAAOt1C,GAAG4yC,MAAMC,QAAQtjF,GAAG3C,MAAe,CAC3K,GAAkD,MAA9CP,KAAKgpF,KAAKC,OAAOt1C,GAAG4yC,MAAMC,QAAQtjF,GAAG3C,QAAkBP,KAAKgpF,KAAKC,OAAOt1C,GAAGg1C,KAAK7/D,MAAMyhE,wBAC1EvqF,KAAKgpF,KAAKC,OAAOt1C,GAAGg1C,KAAK7/D,MAAM+gE,YAAY9pE,MACnD/f,KAAKgpF,KAAKC,OAAOt1C,GAAGg1C,KAAK7/D,MAAM+gE,YAAYhqE,KACzC7f,KAAKgpF,KAAKC,OAAOt1C,GAAG4yC,MAAMC,QAAQtjF,GAAG4lB,MAAMo+D,QAAQrnE,KAAKvW,MAI9DklF,EAAW,EACfA,EAAWxuF,KAAKiuF,aAAe,EAAMp7E,KAAKJ,IAAIzS,KAAKiuF,aAAcjuF,KAAKgpF,KAAKC,OAAOt1C,GAAG4yC,MAAMC,QAAQtjF,GAAGoG,OAAStJ,KAAKgpF,KAAKC,OAAOt1C,GAAG4yC,MAAMC,QAAQtjF,GAAGoG,MAapJk+E,EAAY30E,KAAKoV,IAAIkzB,EAAOj4C,GAAI2P,KAAKoV,IAAIu/D,EAAWgH,IACpDhH,EAAY30E,KAAKoV,IAAIjoB,KAAK2J,QAAQijF,UAAU1pF,GAAGoG,MAAOk+E,GAGvC,GAAnBxnF,KAAKgpF,KAAK7gF,QACVgzC,EAAOj4C,GAAKskF,GAChBA,EAAY,EAEPtkF,EAAI,EAAb,IAAK,IAAWsvF,EAAWxyF,KAAKgpF,KAAK7gF,MAAOjF,EAAIsvF,EAAUtvF,IACjD,CAAIywC,EAAI,EAAb,IAAK,IAAW8+C,EAAWzyF,KAAK2J,QAAQxB,MAAOwrC,EAAI8+C,EAAU9+C,IACzD,GAAI3zC,KAAKgpF,KAAKC,OAAO/lF,GAAGqjF,MAAMC,QAAQ7yC,GAAG44C,WAAa,EAE7C,CADOpxC,EAAOxH,GACnB,IAAK,IAAIlzC,EAAI,EAAGA,EAAIT,KAAKgpF,KAAKC,OAAO/lF,GAAGqjF,MAAMC,QAAQ7yC,GAAG44C,WAAY9rF,IACxD06C,EAAOxH,EAAIlzC,IAgBpC,IAASyC,EAAI,EAAGiF,EAAQnI,KAAK2J,QAAQxB,MAAOjF,EAAIiF,EAAOjF,IAC/ClD,KAAK2J,QAAQijF,UAAU1pF,GAAGoG,OAAS,EACnCtJ,KAAK2J,QAAQijF,UAAU1pF,GAAG0qF,YAAczyC,EAAOj4C,GAC1ClD,KAAK2J,QAAQijF,UAAU1pF,GAAGoG,MAAQ,IAAMtJ,KAAK2J,QAAQijF,UAAU1pF,GAAG2qF,gBACvE7tF,KAAK2J,QAAQijF,UAAU1pF,GAAG0qF,YAAczyC,EAAOj4C,IAEnDivF,EAAU,EAAd,IACIO,EAAW,EACXxJ,EAAWlpF,KAAK2J,QAAQxB,MACxBwqF,EAAoB,EACxBD,EAAW1yF,KAAKutF,UAChB,IAAS55C,EAAI,EAAGA,EAAI3zC,KAAK2J,QAAQxB,MAAOwrC,IAChC3zC,KAAK0wF,YAAY9D,UAAUj5C,GAAGrqC,MAAQ,GAAKtJ,KAAK0wF,YAAY9D,UAAUj5C,GAAGk6C,gBACzE6E,GAAY1yF,KAAK0wF,YAAY9D,UAAUj5C,GAAGrqC,MAC1C4/E,KAWR,GALIwJ,EAAW,GACuC,GAA9C1yF,KAAK6oF,WAAWtB,IAAIoB,KAAK7/D,MAAMghE,cAC/B4I,GAAyD,EAA7C1yF,KAAK6oF,WAAWtB,IAAIoB,KAAK7/D,MAAMghE,aAG/C4I,EAAWP,IACXQ,EAAoB,EAAazJ,EACV,MAAnBlpF,KAAK6oF,YACL,IAASl1C,EAAI,EAAGA,EAAI3zC,KAAK2J,QAAQxB,MAAOwrC,IAC/B3zC,KAAK2J,QAAQijF,UAAUj5C,GAAGk6C,gBAC3B7tF,KAAK2J,QAAQijF,UAAUj5C,GAAGi6C,YAAc+E,KAMzDjK,GACTla,IC5uBE35D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GA2BxCi2E,GAAiC,SAAU71E,GAO3C,SAAS61E,EAAgBze,GACrB,IAAIl3D,EAAQF,EAAO5V,KAAKG,KAAM6sE,IAAe7sE,KAoE7C,OA/DA2V,EAAMk7E,iBAAmB,EAKzBl7E,EAAMo6E,SAAW,IAAI3wE,EAAM,EAAG,GAC9BzJ,EAAMy6E,gBAAkB,EACxBz6E,EAAM43E,UAAY,EAClB53E,EAAMi9E,YAAc,EAKpBj9E,EAAMmzE,aAAc,EAKpBnzE,EAAMyzE,gBAAiB,EAKvBzzE,EAAMs6E,cAAe,EAKrBt6E,EAAMu6E,WAAa,IAAI7wE,EAKvB1J,EAAMw6E,uBAKNx6E,EAAMk9E,MAAO,EAKbl9E,EAAMm9E,gBAKNn9E,EAAMo9E,gBAAkB,IAAI5zE,EAAO,EAAG,GAKtCxJ,EAAM06E,UAAW,EACjB16E,EAAMq9E,IAAM,KACZr9E,EAAMq6D,cAAgB,KACtBr6D,EAAMs9E,YAAa,EAMnBt9E,EAAMgP,wBAAyB,EACxBhP,EAo0CX,OA/4CAd,GAAUy2E,EAAiB71E,GA6E3B/V,OAAOuC,eAAeqpF,EAAgB3rF,UAAW,QAE7CuC,IAAK,WACD,OAAOlC,KAAKuT,UAEhBlR,YAAY,EACZC,cAAc,IAwDlBgpF,EAAgB3rF,UAAUuzF,UAAY,SAAUhuE,GAE5C,OADQA,GAOZomE,EAAgB3rF,UAAU4sE,eAAiB,SAAUD,GACjD,IAAIpnD,EAASllB,KAAKkzF,UAAU5mB,EAAMpnD,QAGlC,GAFAllB,KAAKmzF,iBAAmBnzF,KAAKkzF,UAAU5mB,EAAMpnD,QAC7CllB,KAAK0gC,YAAc4rC,EAAM7rC,KACA,OAArBzgC,KAAK0gC,YAML,MAAMrqB,MAAM,4BALKrW,KAAK0gC,YAAY+9B,gBAAgBl1D,OAClCvJ,KAAK0gC,YAAY+9B,gBAAgBn1D,MACjDtJ,KAAKozF,kBAAoBpzF,KAAK0gC,YAAY+9B,gBAM9Cz+D,KAAKqzF,gBAAkBrzF,KAAK0gC,YAAY3B,SAWxC,IAAIvvB,EAAQ,EAUZ,GATAA,EAAQxP,KAAKqzF,gBAAgB5yD,KAAK2xB,QAAQ9uD,QAAQtD,KAAKqzF,gBAAgB5yD,MACvEzgC,KAAKmwF,oBAAoBjvF,KAAKsO,GAChB,MAAV0V,GAAkBA,EAAO4nD,QAAU/kB,qBAAmBurC,iBACtDtzF,KAAKivE,cAAgB,IAAI5vD,EAAW,IAAIF,EAAOmtD,EAAM93D,OAAO9B,EAAG45D,EAAM93D,OAAO7B,GAAI,IAAIyM,EAAMpf,KAAKuzF,KAAK5pF,QAAQL,MAAOtJ,KAAKqzF,gBAAgBruE,WAAWzb,SAGnJvJ,KAAKivE,cAAgB,IAAI5vD,EAAW,IAAIF,EAAOmtD,EAAM93D,OAAO9B,EAAG45D,EAAM93D,OAAO7B,GAAI3S,KAAKqzF,gBAAgBruE,YAG5E,IAAzBhlB,KAAKuzF,KAAKvK,KAAK7gF,MACfnI,KAAKivE,cAAc3lE,MAASgjE,EAAM93D,OAAOlL,MAAQ,EAAKgjE,EAAM93D,OAAOlL,MAC9DtJ,KAAKivE,cAAc3lE,MAAQtJ,KAAKuzF,KAAKvK,KAAKC,OAAO,GAAG1C,MAAMC,QAAQ,GAAG19D,MAAMo+D,QAAQrnE,KAAKvW,MAAQ,MAEpG,CAAA,GAAgC,IAA5BtJ,KAAKuzF,KAAKxG,QAAQ5kF,MAMvB,MAAMkO,MAAM,sCAHZrW,KAAKivE,cAAc3lE,MAAQgjE,EAAM93D,OAAOlL,MAsC5C,GAjCAtJ,KAAKwzF,cAAgB,IAAIr0E,EAAOmtD,EAAM93D,OAAO9B,EAAG45D,EAAM93D,OAAO7B,GAazD25D,EAAM93D,OAAOjL,OAAS,IAAMvJ,KAAKuzF,KAAKzK,cACtC9oF,KAAKivE,cAAc1lE,OAAS+iE,EAAM93D,OAAOjL,QAExCvJ,KAAKuzF,KAAKzK,cACX9oF,KAAKyzF,MAAQzzF,KAAKuzF,KAAKzqE,MAAM4qE,wBAE5B1zF,KAAKuzF,KAAKzqE,MAAMyhE,yBAWjBvqF,KAAKuzF,KAAKvF,sBACVhuF,KAAK2zF,8BAXL3zF,KAAK8yF,qBACgC,IAA1B9yF,KAAKuzF,KAAKzK,cAAsC9oF,KAAKuzF,KAAKzK,YAAjB,GAChD9oF,KAAKuzF,KAAKvF,oBAAoBhuF,KAAKivE,eAGnCjvE,KAAKuzF,KAAKvF,oBAAoB,IAAI3uE,EAAWrf,KAAKivE,cAAcv8D,EAAG1S,KAAKivE,cAAct8D,EAAG3S,KAAKivE,cAAcv8D,EAAI1S,KAAKivE,cAAc3lE,MAAOtJ,KAAKivE,cAAc1lE,SAEjKvJ,KAAK8yF,aAAa5xF,MAAM,EAAGlB,KAAKuzF,KAAK5pF,QAAQxB,MAAQ,KAMrDnI,KAAKuzF,KAAKnK,eACV,IAAK,IAAIlmF,EAAI,EAAGA,EAAIlD,KAAKuzF,KAAKvK,KAAK7gF,MAAOjF,KACG,IAArClD,KAAKuzF,KAAKvK,KAAKC,OAAO/lF,GAAGqG,QAAkBvJ,KAAKuzF,KAAKvK,KAAKC,OAAO/lF,GAAG0rF,iBACpE5uF,KAAKuzF,KAAKvK,KAAKC,OAAO/lF,GAAG0rF,gBAAiB,GAKtD,OADa5uF,KAAKqvE,aAAa/C,IAQnCgf,EAAgB3rF,UAAUg0F,0BAA4B,WAKlD,IAAK,IAJDC,EAAc,EACdC,EAAY,EACZC,EAAa,EACbC,EAAiB/zF,KAAKqzF,gBAAgBruE,WAAW1b,MAAQtJ,KAAKivE,cAAcv8D,EACvExP,EAAI,EAAGA,EAAIlD,KAAKuzF,KAAK5pF,QAAQxB,MAAOjF,IAEzC,IADA4wF,GAAc9zF,KAAKuzF,KAAK5pF,QAAQijF,UAAU1pF,GAAGoG,QAC3ByqF,EAAgB,CAE9B,IAAK,IADDC,EAAY,EACPrgD,EAAIigD,EAAajgD,GAAKzwC,MAC3B8wF,GAAah0F,KAAKuzF,KAAK5pF,QAAQijF,UAAUj5C,GAAGrqC,OAC5ByqF,GAFcpgD,IAK9BkgD,EAAYlgD,EAEhB3zC,KAAK8yF,aAAa5xF,MAAM0yF,EAAaC,IAGrCC,GADAD,EADAD,EAAcC,EAAY,IAEC3wF,EAAKlD,KAAKuzF,KAAK5pF,QAAQijF,UAAU1pF,GAAGoG,MAAQ,EAI/EtJ,KAAK8yF,aAAa5xF,MAAM0yF,EAAa5zF,KAAKuzF,KAAK5pF,QAAQxB,MAAQ,KAOnEmjF,EAAgB3rF,UAAU0vE,aAAe,SAAU/C,GAE/CtsE,KAAKkwF,WAAWx9E,EAAI45D,EAAM93D,OAAO9B,EACjC1S,KAAKkwF,WAAWv9E,EAAI25D,EAAM93D,OAAO7B,EACjC3S,KAAKkwF,WAAW3mF,OAAS+iE,EAAM93D,OAAOjL,OAQtC,IAAK,IAPD2b,EAASllB,KAAKkzF,UAAU5mB,EAAMpnD,QAE9BjiB,EAAS,KACTgxF,EAAgB,IAAI/1D,GACpBg2D,EAAY5nB,EAAM7rC,KAElB0zD,KACK3kF,EAAQ,EAAGA,EAAQxP,KAAK8yF,aAAa9xF,OAAQwO,IAAS,CAC3D,IAAI/B,EAAQzN,KAAK8yF,aAAatjF,GAC9BxP,KAAKo0F,eAAiB3mF,EAAM,GAC5BzN,KAAKq0F,aAAe5mF,EAAM,GAC1B,IAAI6mF,EAAet0F,KAAKu0F,sBAAsBv0F,KAAK0gC,YAAa1gC,KAAKivE,cAAejvE,KAAK6sF,iBACzF7sF,KAAKivE,cAAgBqlB,EAAarlB,cAClCjvE,KAAK6sF,gBAAkByH,EAAazH,gBAOpC,IAAK,IADD2H,OAAa,EACRv7C,EAAM,EAAGA,EAAMj5C,KAAKuzF,KAAKxG,QAAQ5kF,MAAO8wC,IAAO,CACpD,IAAIsuC,EAAMvnF,KAAKuzF,KAAKxG,QAAQE,UAAUh0C,GAClCw7C,EAAez0F,KAAKivE,cAAct8D,EAEtC,GADA3S,KAAKqsF,UAAW,EACZ6H,GAAal0F,KAAK0gC,YAClB,IAAK,IAAIjgC,EAAIT,KAAKo0F,eAAgB3zF,GAAKT,KAAKq0F,aAAc5zF,IAClD8mF,EAAIhB,MAAMC,QAAQ/lF,GAAG+rF,sBACrBjF,EAAIhB,MAAMC,QAAQ/lF,GAAG+rF,qBAAsB,EAC3CjF,EAAIhB,MAAMC,QAAQ/lF,GAAGF,MAAQ,IAKzC,IAAIm0F,EAAe10F,KAAK20F,QAAQpN,GAC5BkN,IAAiBz0F,KAAKivE,cAAct8D,GACpC6hF,GAAa,GAC2B,IAApClJ,EAAgBsJ,iBAChBtJ,EAAgBsJ,eAAiB37C,IAIrCu7C,GAAa,GAEZE,EAAa1M,UAA0B,OAAdkM,GACvBhvE,EAAON,SAAWkjC,gBAAc+sC,SAAWL,IAC9Cx0F,KAAKwzF,cAAc9gF,EAAI1S,KAAKivE,cAAcv8D,EAC1C1S,KAAK0gC,YAAc1gC,KAAK80F,kBAAkB5vE,GAC1CllB,KAAKwzF,cAAc7gF,EAAI3S,KAAKivE,cAAct8D,OACL,IAA1BuS,EAAOynD,gBAA8D,IAA5BznD,EAAOynD,eAAej6D,GAAuC,IAA5BwS,EAAOynD,eAAeh6D,GAA2C,IAAhCuS,EAAOynD,eAAerjE,OAAgD,IAAjC4b,EAAOynD,eAAepjE,SAC7KvJ,KAAKivE,cAAcv8D,GAAK1S,KAAKwzF,cAAc9gF,GAC/C1S,KAAK20F,QAAQpN,IAEjBvnF,KAAKqsF,UAAW,EAEpB,IAAInpF,EAAI,EAEJ6xF,GADW/0F,KAAKuzF,KAAKvK,KAAK7gF,WACd,GAEZ0qF,GAAO,EAEXsB,KAEA,IAAK,IAAIxgD,EAAI,EAAGA,EAAI3zC,KAAKuzF,KAAKvK,KAAK7gF,MAAOwrC,IAAK,CACvC4zC,EAAMvnF,KAAKuzF,KAAKvK,KAAKC,OAAOt1C,GAChCzwC,IACAlD,KAAK6sF,gBAAkB3pF,EAAI,EAC3B,IAAI8xF,EAAiBh1F,KAAKivE,cAAct8D,EACxCuhF,EAAYl0F,KAAK0gC,YACjB4qD,EAAgBsJ,gBAAkB,EAC9B/B,GAAQtL,EAAIoB,KAAKG,cACjB+J,GACO,GAEX,IAAIoC,EAAY,KA0BhB,IAAqC,GAAjCj1F,KAAKuzF,KAAKtI,mBACVgK,EAAYj1F,KAAK20F,QAAQpN,GACzBA,EAAIkH,aAAc,MAEjB,CACD,KAAIlH,EAAIoB,KAAKE,WAAWtB,IAAIoB,KAAKqH,aAAehwF,KAAKuzF,KAAKtI,oBAAsB1D,EAAI2N,UAI/E,CAAA,GAAI3N,EAAIkH,YACT,SAGA,MAPAwG,EAAYj1F,KAAK20F,QAAQpN,GACzBA,EAAIkH,aAAc,EAwE1B,IA9DA0F,EAAWjzF,KAAK+zF,EAAUzgF,OAAOlL,OAsD7B0rF,IAAmBh1F,KAAKivE,cAAct8D,GACtCoiF,GAAY,EACZzJ,EAAgBsJ,eAAiB50F,KAAKuzF,KAAKvK,KAAK8D,cAAcxpF,QAAQikF,KAGtEwN,GAAY,EACZzJ,EAAgBsJ,gBAAkB,IAE9BK,EAAUjN,UAAyB,MAAbkM,GAAmB,CAC7C,IAAIiB,EAAan1F,KAAKsvE,kBAoCtB,GADUtvE,KAAKo1F,kBAAkBD,GACrBE,QAAUN,EAClB,MACC,GAAI/0F,KAAKuzF,KAAKxI,yBAA0B,CAEzC/qF,KAAK0gC,YAAc1gC,KAAK80F,kBAAkB5vE,GAC1C8vE,EAAiBh1F,KAAKivE,cAAct8D,EACpC,IAAIwtB,EAAa,IAAIhhB,EAAOkuD,GAAWyB,QAAQ/uD,MAAMzW,MAAQ,EAAG+jE,GAAWyB,QAAQhvD,IAAIxW,MAAQ,GAiB/F,GAhBiC,IAA5B4b,EAAOynD,eAAej6D,GAAuC,IAA5BwS,EAAOynD,eAAeh6D,GAA2C,IAAhCuS,EAAOynD,eAAerjE,OACxD,IAAjC4b,EAAOynD,eAAepjE,QAAkBvJ,KAAKwzF,cAAc9gF,IAAMytB,EAAWztB,GAAK1S,KAAKwzF,cAAc7gF,IAAMwtB,EAAWxtB,IACrH3S,KAAKivE,cAAcv8D,GAAK1S,KAAKwzF,cAAc9gF,EAC3C1S,KAAKivE,cAAct8D,GAAK3S,KAAKwzF,cAAc7gF,GAE3C3S,KAAKizF,aACLjzF,KAAKwzF,cAAc7gF,EAAI3S,KAAKivE,cAAct8D,EAC1C3S,KAAKizF,YAAa,GAElBjzF,KAAKuzF,KAAKzK,aAAsC,MAAvBvB,EAAIoB,KAAKE,YACqB,MAAnD7oF,KAAKuzF,KAAK1K,WAAWtB,IAAIoB,KAAK7/D,MAAM+gE,aAChCtC,EAAIuE,eAAiB9rF,KAAKuzF,KAAK1K,WAAWtB,IAAIoB,KAAK7/D,MAAM+gE,YAAY/pE,IAAM9f,KAAKivE,cAAc1lE,SAC9FvJ,KAAKivE,cAAct8D,EAAI3S,KAAKuzF,KAAK1K,WAAWtB,IAAIoB,KAAK7/D,MAAM+gE,YAAY/pE,KAIxD,MAAvBynE,EAAIoB,KAAKE,WAAoB,CAC7BtB,EAAIoB,KAAKE,WAAWtB,IAAI+N,qBAAsB,EAC9C/N,EAAIoB,KAAKE,WAAWtB,IAAIsE,oBAAsBtE,EAAIuE,eAAiB9rF,KAAKuzF,KAAK1K,WAAWtB,IAAIoB,KAAK7/D,MAAM+gE,YAAY/pE,IAAM9f,KAAKuzF,KAAK1K,WAAWtB,IAAIoB,KAAK7/D,MAAM+gE,YAAY7pE,OACzK,IAAK,IAAIu1E,EAAMhO,EAAI2N,SAAW,EAAGK,EAAMhO,EAAIoB,KAAKK,KAAK7gF,MAAOotF,IACxDhO,EAAIoB,KAAKE,WAAWtB,IAAIsE,qBAAuBtE,EAAIoB,KAAKK,KAAKC,OAAOsM,GAAKhsF,OA6BjF,GAAIg+E,EAAIoB,KAAKG,YAAa,CAEtBvB,EAAIkH,aAAc,EAElBlH,EAAIoB,KAAKsC,mBAAqB1D,EAAI2N,SAClC3N,EAAIoB,KAAKE,WAAWtB,IAAIoB,KAAKsC,mBAAqB1D,EAAIoB,KAAKE,WAAWtB,IAAI2N,SACtE3N,EAAIoB,KAAKE,WAAWtB,IAAIoB,KAAKqH,cAC7BzI,EAAIoB,KAAKE,WAAWtB,IAAIoH,eAAiB,EACzCpH,EAAIoB,KAAKE,WAAWtB,IAAIoB,KAAKqH,aAAc,GAE/C,MAEJ,GAAIzI,EAAIoH,cAAgB,EAAG,CAIvB,IAHoC,GAAhCpH,EAAIoB,KAAKsC,qBACT1D,EAAIoB,KAAKqH,aAAc,GAEH,MAApBzI,EAAIz+D,MAAMsmE,SAA6C,MAAzB7H,EAAIz+D,MAAMsmE,OAAOvvE,MAAgD,IAAhC0nE,EAAIz+D,MAAMsmE,OAAOvvE,KAAKvW,OACzD,MAAxBi+E,EAAIz+D,MAAMsmE,OAAOtvE,KAA8C,IAA/BynE,EAAIz+D,MAAMsmE,OAAOtvE,IAAIxW,OAAe,CACxE,IAAIoJ,EAAI60E,EAAIz+D,MAAMsmE,OAAOvvE,KAAKvW,MAAQ,EAClCqJ,EAAI40E,EAAIz+D,MAAMsmE,OAAOtvE,IAAIxW,MAAQ,EACrC,GAAItJ,KAAKivE,cAAcv8D,IAAM26D,GAAWyB,QAAQ/uD,MAAMzW,MAAQ,GAAKtJ,KAAKivE,cAAct8D,IAAM06D,GAAWyB,QAAQ/uD,MAAMzW,MAAQ,EAAG,CAC5H,IAAIylE,EAAW,IAAI1vD,EAAW3M,EAAGC,EAAG3S,KAAKivE,cAAc3lE,MAAOtJ,KAAKivE,cAAc1lE,QACjFvJ,KAAKivE,cAAgBF,GAG7B,GAAI/uE,KAAKuzF,KAAKiC,aACV,IAAK,IAAIC,EAAM,EAAGA,EAAMz1F,KAAKuzF,KAAKxG,QAAQ5kF,MAAOstF,IAAO,CACpD,IAAIC,EAAe11F,KAAKuzF,KAAKxG,QAAQE,UAAUwI,GAC/Cz1F,KAAK20F,QAAQe,GAIrB,GADAT,EAAYj1F,KAAK20F,QAAQpN,GACrBA,EAAIoH,eAAiB,EAEhB,CADMpH,EAAIsE,oBACf,IAAK,IAAI8J,EAAM,EAAGA,EAAMpO,EAAIoH,cAAegH,IAAO,CAE9C,IAAIC,EAAc51F,KAAKsvE,kBASvB,GARUtvE,KAAKo1F,kBAAkBQ,GACjC51F,KAAK0gC,YAAc1gC,KAAK80F,kBAAkB5vE,GAC1C8vE,EAAiBh1F,KAAKivE,cAAct8D,GAEA,GAAhC40E,EAAIoB,KAAKsC,qBACT1D,EAAIoB,KAAKqH,aAAc,GAE3BhwF,KAAKivE,cAAct8D,EAAI,GACnB3S,KAAKuzF,KAAKiC,aACV,IAAK,IAAIK,EAAM,EAAGA,EAAM71F,KAAKuzF,KAAKxG,QAAQ5kF,MAAO0tF,IAAO,CACpD,IAAIpxF,EAASzE,KAAKuzF,KAAKxG,QAAQE,UAAU4I,GACzC71F,KAAK20F,QAAQlwF,GAIrBzE,KAAK20F,QAAQpN,IAMrBA,EAAIoB,KAAKsC,oBAAsB,EAC/B1D,EAAIoB,KAAKqH,aAAc,EACvBiF,EAAUjN,SAAWhoF,KAAK81F,gBAAgBvO,GAG1C,IAAK,IAAIwO,EAAM,EAAGA,EAAMxO,EAAIhB,MAAMp+E,MAAO4tF,IACjCxO,EAAIhB,MAAMC,QAAQuP,GAAKx1F,iBAAiBmoF,KACxCnB,EAAIhB,MAAMC,QAAQuP,GAAKx1F,MAAM0qF,oBAAsB,KAavE,IAAKgK,EAAUjN,UAA0B,OAAdkM,GAAsBhvE,EAAON,SAAWkjC,gBAAc+sC,SAAWE,EAAW,CA2CnG,GAzCA/0F,KAAKwzF,cAAc9gF,EAAI1S,KAAKivE,cAAcv8D,EAC1C1S,KACK0gC,YAAc1gC,KAAK80F,kBAAkB5vE,GAuCtCllB,KAAKu0F,sBAAsBv0F,KAAK0gC,YAAa1gC,KAAKivE,cAAejvE,KAAK6sF,iBAAiBzyD,YACvF,MA8BJ,GA5BsB,OAAjBkyC,EAAMpnD,SAAqBonD,EAAMpnD,OAAOwnD,mBAAsC,OAAjBJ,EAAM93D,QACpE83D,EAAM93D,OAAOjL,OAAS,IAAMvJ,KAAKuzF,KAAKzK,cACtC9oF,KAAKivE,cAAc1lE,OAAS+iE,EAAM93D,OAAOjL,aAEjB,IAAjB+iE,EAAMpnD,QAA0C,MAAhBonD,EAAMpnD,aAA4D,IAAnConD,EAAMpnD,OAAOwnD,mBAAsCJ,EAAMpnD,OAAOwnD,mBAAyD,IAAlCJ,EAAMpnD,OAAOynD,eAAej6D,GAA6C,IAAlC45D,EAAMpnD,OAAOynD,eAAeh6D,GAAiD,IAAtC25D,EAAMpnD,OAAOynD,eAAerjE,OAAsD,IAAvCgjE,EAAMpnD,OAAOynD,eAAepjE,QAAmD,IAAlC+iE,EAAMpnD,OAAOynD,eAAeh6D,GAI/V3S,KAAKivE,cAAct8D,EAAc,MAAVuS,EAAiB,EAAIA,EAAOynD,eAAeh6D,EACpD,MAAVuS,GAA+C,IAA5BA,EAAOynD,eAAej6D,GAAuC,IAA5BwS,EAAOynD,eAAeh6D,GAA4C,IAAjCuS,EAAOynD,eAAepjE,QAAgD,IAAhC2b,EAAOynD,eAAerjE,QACjJtJ,KAAKivE,cAAcv8D,EAAIwS,EAAOynD,eAAej6D,EAC7C1S,KAAKivE,cAAc3lE,MAAQ4b,EAAOynD,eAAerjE,MACjDtJ,KAAKivE,cAAc1lE,OAAS2b,EAAOynD,eAAepjE,SAPtDvJ,KAAKivE,cAAct8D,EAAI06D,GAAWyB,QAAQhvD,IAAIxW,MAAQ,OAU9B,IAAjBgjE,EAAMpnD,QAA4C,OAAjBonD,EAAMpnD,aAA8D,IAAnConD,EAAMpnD,OAAOwnD,oBAAsCJ,EAAMpnD,OAAOwnD,mBAAsC,OAAjBJ,EAAM93D,QACpK83D,EAAM93D,OAAO7B,EAAI,IAAM3S,KAAKuzF,KAAKzK,cACjC9oF,KAAKivE,cAAct8D,EAAI25D,EAAM93D,OAAO7B,GAExC3S,KAAKwzF,cAAc7gF,EAAI3S,KAAKivE,cAAct8D,EACrCuS,EAAOynD,eAAej6D,IAAMwS,EAAOynD,eAAeh6D,GAClDuS,EAAOynD,eAAeh6D,IAAMuS,EAAOynD,eAAepjE,QAClD2b,EAAOynD,eAAepjE,SAAW2b,EAAOynD,eAAerjE,OAA2C,IAAhC4b,EAAOynD,eAAerjE,QACzFtJ,KAAKivE,cAAcv8D,GAAK1S,KAAKwzF,cAAc9gF,GAE3C1S,KAAKivE,cAAcv8D,IAAM26D,GAAWyB,QAAQjvD,KAAKvW,MAAQ,IACzDtJ,KAAKivE,cAAct8D,GAAK3S,KAAKwzF,cAAc9gF,GAE3C1S,KAAKuzF,KAAKiC,aACV,IAAK,IAAIQ,EAAM,EAAGA,EAAMh2F,KAAKuzF,KAAKxG,QAAQ5kF,MAAO6tF,IAAO,CAChDvxF,EAASzE,KAAKuzF,KAAKxG,QAAQE,UAAU+I,GACzCh2F,KAAK20F,QAAQlwF,GAGrBzE,KAAK20F,QAAQpN,GACY,OAArBvnF,KAAK0gC,aAAyBuzD,EAAczyF,YAAYxB,KAAK0gC,cAC7DuzD,EAAcvgF,IAAI1T,KAAK0gC,YAAajzB,GAG5C,GAAkC,MAA9B85E,EAAIwE,uBAAgC,CAEpC/rF,KAAK0gC,YAAc6mD,EAAIwE,uBAAuBtrD,KAC9CzgC,KAAKqzF,gBAAkBrzF,KAAK0gC,YAAY3B,SACxC/+B,KAAKwzF,cAAgB,IAAIr0E,EAAOooE,EAAIwE,uBAAuBv3E,OAAO9B,EAAG60E,EAAIwE,uBAAuBv3E,OAAO7B,GACvG,IAAIsjF,EAAcj2F,KAAKk2F,kBAAkB3O,EAAKA,EAAIwE,uBAAuBv3E,OAAOjL,QAGhF,GAFAvJ,KAAKivE,cAAct8D,EAAIsjF,EAEnB/B,GAAal0F,KAAK0gC,YAAa,CAI/B,IAAK,IAHDy1D,EAASn2F,KAAK0gC,YAAY0xB,QAC1BgkC,EAAaD,EAAO7yF,QAAQ4wF,GAAa,EACzCmC,EAAWF,EAAO7yF,QAAQtD,KAAK0gC,aAC1BD,EAAO21D,EAAY31D,EAAO41D,EAAW,EAAG51D,IAAQ,CACrD,IAAI61D,EAAet2F,KAAK0gC,YAAY3B,SAChCw3D,EAAa,IAAIp3E,EAAO+F,EAAOynD,eAAej6D,EAAGwS,EAAOynD,eAAeh6D,GACvEpJ,EAASk3B,GAAQ41D,EAAY9O,EAAIwE,uBAAuBv3E,OAAOjL,OAAS+iE,EAAM93D,OAAO7B,EACpF3S,KAAKivE,cAAc1lE,OAASgtF,EAAW5jF,EACxCpJ,GAAU+sF,EAAatxE,WAAWzb,SAClCA,GAAU+iE,EAAM93D,OAAO7B,GAG3B4jF,EAAW5jF,EAAc,MAAVuS,EAAiB,GAAMA,EAAOynD,eAAeh6D,EAE5D,IAAK,IAAIpP,EAAI,EAAGA,EAAIgkF,EAAIhB,MAAMp+E,MAAO5E,IAAK,CACtC,IAAIkqF,EAAOlG,EAAIhB,MAAMC,QAAQjjF,GACzBikF,EAAY,EACZgP,EAAa,EACjB,GAAI/I,EAAKltF,iBAAiBmoF,GACtB,IAAK,IAAI+N,EAAM,EAAGA,EAAMhJ,EAAKltF,MAAMoJ,QAAQxB,MAAOsuF,IAC9CD,GAAc/I,EAAKltF,MAAMoJ,QAAQijF,UAAU6J,GAAK7I,iBAIpD4I,EAAa/I,EAAKnkF,MAQtBk+E,EAAY30E,KAAKoV,IAAIuuE,EAAYjP,EAAIoB,KAAKh/E,QAAQijF,UAAUrpF,GAAG+F,OAC/DmkF,EAAKxB,gBAAgBqK,EAAc,IAAIj3E,EAAWk3E,EAAY,IAAIn3E,EAAMooE,EAAWj+E,KACnFgtF,EAAW7jF,GAAK80E,EAChBjkF,GAAMkqF,EAAKlB,WAAa,GAKhC2H,EAAYl0F,KAAK0gC,cAI7B,IAAIg2D,GAAY,EACZC,GAAyB,EACzBxC,EAAWnzF,OAAS,IACpB21F,GAAyBxC,EAAW,IAGnC,IADDyC,KAAsB,EAAG,IAC7B,IAASrzF,EAAI,EAAGA,EAAIvD,KAAKuzF,KAAKvK,KAAK7gF,MAAO5E,IACtC,IAA0B,GAAtBvD,KAAKq0F,cAAsBr0F,KAAKuzF,KAAKvK,KAAKC,OAAO1lF,GAAGgjF,MAAMC,QAAQxmF,KAAKq0F,cAAc9zF,iBAAiBmoF,GAAS,CAC/G,IAAIC,GAAO3oF,KAAKuzF,KAAKvK,KAAKC,OAAO1lF,GAAGgjF,MAAMC,QAAQxmF,KAAKq0F,cAAc9zF,MACrEP,KAAK62F,qBAAuBlO,GAAKkO,qBACjCH,GAAY,EAYpB,IAAKA,GAAavC,EAAWnzF,OAAS,EAAG,CACrC,IAASuC,EAAI,EAAGA,EAAIL,EAAI,EAAGK,IACnBozF,GAAyBxC,EAAW5wF,KACpCozF,GAAyBxC,EAAW5wF,IAG5CvD,KAAK62F,qBAAuBF,QAG5B32F,KAAK62F,qBAAuBD,GAAkB,GAAG,GAErD,GAAI52F,KAAK8yF,aAAaxvF,QAAQmK,GAASzN,KAAK8yF,aAAa9xF,OAAS,GAC9C,MAAbkzF,GAAqBhvE,EAAON,QAAUkjC,gBAAc+sC,QAEvD,GADe70F,KAAKuzF,KAAKzK,YACM,GAA3B8N,GAAkB,GAAG,GAAS,CAChB52F,KAAK0gC,YAAY0xB,QACP9uD,QAAQtD,KAAK0gC,aACrC1gC,KAAKqzF,gBAAkBrzF,KAAK0gC,YAAY3B,SACxC/+B,KAAKivE,cAAgB,IAAI5vD,EAAW,IAAIF,EAAO,EAAG,GAAInf,KAAK0gC,YAAY+9B,iBACvDz+D,KAAKqzF,gBAAgB5yD,KAAK2xB,QAAQ9uD,QAAQtD,KAAKqzF,gBAAgB5yD,WAG/EzgC,KAAK0gC,YAAc1gC,KAAK80F,kBAAkB5vE,GAS9CllB,KAAK8yF,aAAa9xF,OAAS,IAAMwO,GAASxP,KAAK8yF,aAAa9xF,OAAS,GAAKkkB,EAAON,SAAWkjC,gBAAc+sC,UAC1G70F,KAAK0gC,YAAc1gC,KAAK80F,kBAAkB5vE,GACrCA,EAAOynD,eAAej6D,IAAMwS,EAAOynD,eAAeh6D,GAAOuS,EAAOynD,eAAeh6D,IAAMuS,EAAOynD,eAAepjE,QACxG2b,EAAOynD,eAAepjE,SAAW2b,EAAOynD,eAAerjE,OAA2C,IAAhC4b,EAAOynD,eAAerjE,QAC5FtJ,KAAKivE,cAAcv8D,GAAK1S,KAAKwzF,cAAc9gF,EAC3C1S,KAAKivE,cAAct8D,GAAK3S,KAAKwzF,cAAc7gF,IAUvD,OALA1P,EAASjD,KAAKsvE,kBACVtvE,KAAKuzF,KAAKzqE,MAAMyhE,yBAA2BvqF,KAAKuzF,KAAKzqE,MAAM4qE,wBAA0B5N,4BAA0BgR,UAC/G92F,KAAK+2F,eAAe9C,GAExBj0F,KAAKo1F,kBAAkBnyF,GAChBA,GAEXqoF,EAAgB3rF,UAAUm2F,gBAAkB,SAAUvO,GAElD,IAAK,IADDtkF,GAAS,EACJC,EAAI,EAAGA,EAAIqkF,EAAIhB,MAAMp+E,MAAOjF,IAC5BqkF,EAAIhB,MAAMC,QAAQtjF,GAAG8zF,sBACtB/zF,GAAS,GAGjB,OAAOA,GAOXqoF,EAAgB3rF,UAAUm1F,kBAAoB,SAAU5vE,GACpD,IAAIktC,EAAUpyD,KAAK0gC,YAAY0xB,QAC3B6kC,EAAW,KACXznF,EAAQ4iD,EAAQ9uD,QAAQtD,KAAK0gC,aACjC1gC,KAAK6yF,MAAO,EAERoE,EADAznF,IAAU4iD,EAAQjqD,MAAQ,EACfiqD,EAAQ1+C,MAGR0+C,EAAQC,WAAW7iD,EAAQ,GAE1CxP,KAAKqzF,gBAAkB4D,EAASl4D,SAChC,IAAIm4D,EAAYl3F,KAAKqzF,gBAAgB5yD,KAAK2xB,QAAQ9uD,QAAQtD,KAAKqzF,gBAAgB5yD,MAW/E,OAVuD,IAAjDzgC,KAAKmwF,oBAAoB7sF,QAAQ4zF,IACnCl3F,KAAKmwF,oBAAoBjvF,KAAKg2F,GAElCl3F,KAAKivE,cAAgB,IAAI5vD,EAAW,IAAIF,EAAO,EAAG,GAAI83E,EAASx4B,sBACxC,IAAXv5C,GAAqC,MAAVA,GAAkBA,EAAOwnD,wBAAuD,IAA1BxnD,EAAOynD,gBAA4D,MAAzBznD,EAAOynD,gBAA2BznD,EAAOynD,eAAej6D,IAAMwS,EAAOynD,eAAeh6D,GAAOuS,EAAOynD,eAAeh6D,IAAMuS,EAAOynD,eAAepjE,QAC5Q2b,EAAOynD,eAAepjE,SAAW2b,EAAOynD,eAAerjE,OAA2C,IAAhC4b,EAAOynD,eAAerjE,QAC5FtJ,KAAKivE,cAAcv8D,EAAIwS,EAAOynD,eAAej6D,EAC7C1S,KAAKivE,cAAct8D,EAAIuS,EAAOynD,eAAeh6D,EAC7C3S,KAAKivE,cAAc1lE,OAAS2b,EAAOynD,eAAepjE,QAE/C0tF,GAEX3L,EAAgB3rF,UAAUw3F,qBAAuB,SAAUjyE,GACvD,IAAIkyE,EAAgB,IAAIx1E,EACxB,OAAQsD,EAAOksC,YAAcgmC,EAAchmC,WAAalsC,EAAOoF,mBAAqB8sE,EAAc9sE,kBAC9FpF,EAAO3d,WAAa6vF,EAAc7vF,UAAY2d,EAAOtC,kBAAoBw0E,EAAcx0E,iBACvFsC,EAAO4sC,0BAA4BslC,EAActlC,yBACjD5sC,EAAOqsC,gBAAkB6lC,EAAc7lC,eACpCrsC,EAAOiD,YAAcivE,EAAcjvE,WAAajD,EAAOoB,cAAgB8wE,EAAc9wE,aACxFpB,EAAOmyE,wBAA0BD,EAAcC,uBAAyBnyE,EAAOoyE,SAAWF,EAAcE,QACxGpyE,EAAOkB,kBAAoBgxE,EAAchxE,iBAAmBlB,EAAOuD,cAAgB2uE,EAAc3uE,aACjGvD,EAAO21B,iBAAmBu8C,EAAcv8C,gBAAkB31B,EAAOqF,cAAgB6sE,EAAc7sE,aAC/FrF,EAAOqC,WAAa6vE,EAAc7vE,UAM1C+jE,EAAgB3rF,UAAU43F,oBAAsB,SAAUx4D,EAAUm2D,EAAU7H,EAAW74E,EAAQjU,EAAOuoB,GACpG,IAAIk6C,EAAO,KAMX,OALIhjE,KAAKuzF,KAAKnC,qBACVpuB,EAAO,IAAIw0B,GAA8Bz4D,EAAUm2D,EAAU7H,EAAW74E,EAAQjU,EAAOuoB,GACvF9oB,KAAKuzF,KAAKpC,gBAAgBnuB,GAC1Bl6C,EAAQk6C,EAAKl6C,OAEVA,GAMXwiE,EAAgB3rF,UAAU83F,mBAAqB,SAAU14D,EAAUm2D,EAAU7H,EAAW74E,EAAQjU,EAAOm3F,GACnG,IAAI10B,EAAO,KACPhjE,KAAKuzF,KAAKjC,mBACVtuB,EAAO,IAAI20B,GAA4B54D,EAAUm2D,EAAU7H,EAAW74E,EAAQjU,EAAOm3F,GACrF13F,KAAKuzF,KAAKlC,cAAcruB,KAGhCsoB,EAAgB3rF,UAAUo3F,eAAiB,SAAU9C,GAKjD,IAAK,IAJD54E,EAAWrb,KAAK0gC,YAAYrlB,SAC5BpT,KACArH,EAAOqzF,EAAcrzF,OAEhBsC,GADI+wF,EAAc9yF,SACd,GAAG+B,EAAItC,EAAKI,OAAQkC,IAAK,EAC9Bu9B,EAAO7/B,EAAKsC,IACXkvD,QAAU,KACfnqD,EAAM/G,KAAKu/B,GACXplB,EAASpT,MAAMvH,OAAO+/B,GAG1B,IAASv9B,EAAI,EAAGA,EAAI+wF,EAAcvyF,OAAQwB,IACtC,IACK,IAAIywC,EAAIzwC,EAAG00F,EAAW3D,EAAcvyF,OAAS1B,KAAK8yF,aAAa9xF,OAAS2yC,EAAIsgD,EAAcvyF,OAAQiyC,GAAKikD,EAAS,CACjH,IAAIn3D,OACgB,KADhBA,EAAOx4B,EAAM0rC,MACoD,IAAlCt4B,EAASpT,MAAM3E,QAAQm9B,IACtDplB,EAASpT,MAAMyL,IAAI+sB,KAUnC6qD,EAAgB3rF,UAAU2vE,gBAAkB,WACxC,GAAItvE,KAAKuzF,KAAKzK,aAAe9oF,KAAKuzF,KAAKxI,yBACnC,IAAK,IAAI7nF,EAAI,EAAGA,EAAIlD,KAAKuzF,KAAKvK,KAAK7gF,MAAOjF,IAAK,CAC3C,IAAIqkF,EAAMvnF,KAAKuzF,KAAKvK,KAAKC,OAAO/lF,GAC5BqkF,EAAIuE,eAAiB,GAAKvE,EAAI4D,aAC9BnrF,KAAKwzF,cAAc7gF,EAAI3S,KAAK0gC,YAAYm7B,OAAOlpD,GAI3D,IAAI6B,EAUJ,OATKxU,KAAK63F,YACNrjF,EAAS,IAAI6K,EAAWrf,KAAKwzF,cAAe,IAAIp0E,EAAMpf,KAAKivE,cAAc3lE,MAAOtJ,KAAKivE,cAAct8D,EAC/F3S,KAAKwzF,cAAc7gF,KAOpB,IAAImlF,GAAoB93F,KAAK0gC,YAAalsB,IAMrD82E,EAAgB3rF,UAAUu2F,kBAAoB,SAAU3O,EAAKh+E,GAEzD,IAAK,IADDwuF,EAAY,EACP70F,EAAIlD,KAAKo0F,eAAgBlxF,GAAKlD,KAAKq0F,aAAcnxF,IACP,OAAzCqkF,EAAIhB,MAAMC,QAAQtjF,GAAG8uD,iBAAqE,KAAzCu1B,EAAIhB,MAAMC,QAAQtjF,GAAG8uD,sBACxB,IAAzCu1B,EAAIhB,MAAMC,QAAQtjF,GAAG8uD,kBAC5B+lC,EAAYllF,KAAKoV,IAAI8vE,EAAWxQ,EAAIhB,MAAMC,QAAQtjF,GAAGomF,kBAG7D,OAAOz2E,KAAKoV,IAAI1e,EAAQwuF,IAM5BzM,EAAgB3rF,UAAU40F,sBAAwB,SAAU7zD,EAAauuC,EAAeuiB,GACpF,IAAI6D,GAAS,EACb,GAAIr1F,KAAKuzF,KAAKyE,qBAAsB,CAChC,IAAIh1B,EAAO,IAAIi1B,GAAgChpB,EAAevuC,EAAa8wD,GAC3ExxF,KAAKuzF,KAAK5kB,kBAAkB3L,GAQ5BqyB,OAAiC,IAAhBryB,EAAKqyB,QAAiCryB,EAAKqyB,OAC5DpmB,EAAgBjM,EAAKxuD,OACrBg9E,EAAaxuB,EAAKk1B,cAEtB,OAAS99D,YAAai7D,EAAQpmB,cAAeA,EAAe4d,gBAAiB2E,IAMjFlG,EAAgB3rF,UAAUy1F,kBAAoB,SAAUnyF,GACpD,IAAI+/D,EAAO,IAAIm1B,GAA8Bl1F,GAI7C,OAHIjD,KAAKuzF,KAAK6E,oBACVp4F,KAAKuzF,KAAK3kB,gBAAgB5L,GAEvBA,GAEXsoB,EAAgB3rF,UAAUg1F,QAAU,SAAUpN,EAAKtkF,EAAQsG,GACvD,QAAsB,IAAXtG,EAAwB,CAG/B,IAAIo1F,EAAW,IAAIC,GACfC,EAAoB,EAEpB72F,EAAO,IAAI0d,EAAM,EAAG,GACpBitE,GAAW,EACf,GAAI9E,EAAI4B,cAAe,CACnB,IAAIwI,EAAU,EACV6G,EAAex4F,KAAKuzF,KAAKvK,KAAK8D,cAAcxpF,QAAQikF,IAClC,IAAlBiR,IAEsB,KADtBA,EAAex4F,KAAKuzF,KAAKxG,QAAQzpF,QAAQikF,MAErC8E,GAAW,GAGnB,IAAK,IAAInpF,EAAI,EAAGA,EAAIqkF,EAAIhB,MAAMp+E,MAAOjF,IAAK,CACtC,IAAIuqF,EAAOlG,EAAIhB,MAAMC,QAAQtjF,GAC7ByuF,EAAU9+E,KAAKoV,IAAI0pE,EAASlE,EAAKpD,SAErC,IAASnnF,EAAIs1F,EAAct1F,EAAIs1F,EAAe7G,EAASzuF,IACnDq1F,GAAsBlM,EAAWrsF,KAAKuzF,KAAKxG,QAAQE,UAAU/pF,GAAGqG,OAASvJ,KAAKuzF,KAAKvK,KAAKC,OAAO/lF,GAAGqG,OAkB1G,IAAIkvF,EAAmBlR,EAAIuE,eAAiB,EAAMvE,EAAIuE,eAAiBvE,EAAIh+E,OAC3E,QAAqC,IAA1BvJ,KAAKuzF,KAAKzK,aAA+B9oF,KAAKuzF,KAAKzK,kBAA+C,IAAzB9oF,KAAKuzF,KAAK1K,YAAsD,MAAxB7oF,KAAKuzF,KAAK1K,WAyB9H7oF,KAAKivE,cAAct8D,EAAI3S,KAAKuzF,KAAK1K,WAAWtB,IAAIoB,KAAK7/D,MAAM+gE,YAAY7pE,OAASy4E,EAChFz4F,KAAKozF,kBAAkB7pF,QAAUvJ,KAAKivE,cAAct8D,EAAI3S,KAAKuzF,KAAK1K,WAAWtB,IAAIoB,KAAK7/D,MAAM+gE,YAAY7pE,OACtGy4E,EAAmBz4F,KAAKivE,cAAc1lE,QAAUvJ,KAAKivE,cAAct8D,EACrE3S,KAAKuzF,KAAK1K,WAAWtB,IAAIoB,KAAK7/D,MAAM+gE,YAAY7pE,OAASu4E,EAAoBv4F,KAAKozF,kBAAkB7pF,aAE1C,IAA/CvJ,KAAKuzF,KAAK1K,WAAWtB,IAAIoB,KAAK6C,cAAgCxrF,KAAKuzF,KAAK1K,WAAWtB,IAAIoB,KAAK6C,aAAa1e,QAAU/kB,qBAAmB2wC,UAC7IpN,EAAgBsJ,eAAiB50F,KAAKuzF,KAAKvK,KAAK8D,cAAcxpF,QAAQikF,GACtEvnF,KAAKuzF,KAAKtI,mBAAqBjrF,KAAKuzF,KAAKvK,KAAK8D,cAAcxpF,QAAQikF,IAEpE+D,EAAgBsJ,gBAAkB,GAAKtJ,EAAgBsJ,iBAAmBrN,EAAI2N,UAC1El1F,KAAKuzF,KAAKxI,2BACVsN,EAASrQ,UAAW,EAOpBqQ,EAAS7jF,OAASxU,KAAKivE,cACvBjvE,KAAK24F,iBAAiBN,EAAU9Q,EAAKkR,GACrClR,EAAI4D,YAAa,EACjB5D,EAAIqR,gBAAkBtN,EAAgBsJ,kBAa9CyD,EAASrQ,UAAW,EAChBT,EAAIoB,KAAKE,WAAWtB,IAAIsE,oBAAsB,EAC9CtE,EAAI4D,YAAa,GAGjB5D,EAAI4D,YAAa,EACjBsN,EAAmBlR,EAAIh+E,QAEvBvJ,KAAKuzF,KAAKzK,aAAevB,EAAIuE,eAAiB,GACS,MAAnD9rF,KAAKuzF,KAAK1K,WAAWtB,IAAIoB,KAAK7/D,MAAM+gE,cACpC4O,GAAoBz4F,KAAKuzF,KAAK1K,WAAWtB,IAAIoB,KAAK7/D,MAAM+gE,YAAY7pE,QAG5EhgB,KAAK20F,QAAQpN,EAAK8Q,EAAUI,SAKhC,GAAIA,EAAmBz4F,KAAKozF,kBAAkB7pF,OACtCvJ,KAAKuzF,KAAKxI,2BACVsN,EAASrQ,UAAW,EAEpBhoF,KAAK24F,iBAAiBN,EAAU9Q,EAAKkR,GACrClR,EAAIkH,aAAc,EAClBlH,EAAI4D,YAAa,GACoB,IAAjC5D,EAAIoB,KAAKsC,qBACToN,EAASrQ,UAAW,SAS3B,GAAIhoF,KAAKivE,cAAct8D,EAAI8lF,EAAmBz4F,KAAKozF,kBAAkB7pF,QACtEvJ,KAAKivE,cAAct8D,EAAI8lF,EAAoBz4F,KAAKivE,cAAc1lE,OAASvJ,KAAKwzF,cAAc7gF,GAC1F3S,KAAKivE,cAAct8D,EAAI4lF,EAAoBv4F,KAAKozF,kBAAkB7pF,OAAQ,CAE1E,IAAIsvF,GAAQ,GACP74F,KAAKuzF,KAAKxI,0BAA6B/qF,KAAKuzF,KAAKiC,cAAiBjO,EAAIqH,gBAAmBrH,EAAI2F,iBAUzFltF,KAAKuzF,KAAKxI,0BAAsD,MAA1B/qF,KAAKuzF,KAAK/H,cAAwBxrF,KAAKuzF,KAAK/H,aAAa5mE,QAAUkjC,gBAAc2jC,UAAYzrF,KAAKuzF,KAAK/H,aAAa1e,OAAS/kB,qBAAmB6nB,YAAc2X,EAAIqH,gBAAkB5uF,KAAKivE,cAAct8D,EAAIpJ,EAASvJ,KAAKozF,kBAAkB7pF,UACtRsvF,EAAQ74F,KAAK84F,YAAY94F,KAAKozF,kBAAkB7pF,OAASvJ,KAAKivE,cAAct8D,EAAG3S,KAAKuzF,KAAMhM,MAEtFsR,IAAuB,OAAb74F,KAAKgzF,KAA8C,GAA9BhzF,KAAKgzF,IAAIhrE,WAAWze,QAAqC,MAAtBvJ,KAAKgzF,IAAI5jB,WAAqBpvE,KAAKgzF,IAAI5jB,UAAUpuE,OAAS,GAAKhB,KAAKgwE,eAAiBhwE,KAAKgzF,IAAI5jB,YAChKypB,GAAqB,MAAZ74F,KAAKgzF,KAAehzF,KAAKgzF,IAAIniC,UAAY,IAElDgoC,GAAQ,GAEZ74F,KAAKgwE,cAAgB,OAhBjB6oB,EAD2B,OAA3B74F,KAAKuzF,KAAK/H,cAAyBxrF,KAAKuzF,KAAK/H,aAAa7e,eAAepjE,OAAS,EAC1EvJ,KAAK84F,YAAa94F,KAAKivE,cAAc1lE,OAASvJ,KAAKwzF,cAAc7gF,EAAK3S,KAAKivE,cAAct8D,EAAG3S,KAAKuzF,KAAMhM,GAGvGvnF,KAAK84F,YAAY94F,KAAKozF,kBAAkB7pF,OAASvJ,KAAKivE,cAAct8D,EAAG3S,KAAKuzF,KAAMhM,MAE1FvnF,KAAKizF,YAAa,GAatB3H,EAAgBsJ,gBAAkB,GAAKtJ,EAAgBsJ,iBAAmBrN,EAAI2N,UAAY2D,EACtF74F,KAAKuzF,KAAKxI,0BACVsN,EAASrQ,UAAW,EACpBhoF,KAAK24F,iBAAiBN,EAAU9Q,EAAKkR,GACrClR,EAAI4D,YAAa,EACjB5D,EAAIqR,gBAAkBtN,EAAgBsJ,gBACD,IAAjCrN,EAAIoB,KAAKsC,qBACToN,EAASrQ,UAAW,KAIxBqQ,EAASrQ,UAAW,EACpBhoF,KAAK20F,QAAQpN,EAAK8Q,EAAUI,IAIhCJ,EAASrQ,UAAW,OAIxBqQ,EAASrQ,UAAW,EACpBhoF,KAAK20F,QAAQpN,EAAK8Q,EAAUI,GAC5BlR,EAAI4D,YAAa,EAGzB,OAAOkN,EAGP,IACIU,EAAa,IAAI55E,EAAOnf,KAAKivE,cAAcv8D,EAAG1S,KAAKivE,cAAct8D,GAKrE1P,EAAOuR,OAAS,IAAI6K,EAAW05E,EAAY,IAAI35E,EAAM,EAAG,IACxD7V,EAASvJ,KAAKk2F,kBAAkB3O,EAAKh+E,GACrC,IAASrG,EAAIlD,KAAKo0F,eAAgBlxF,GAAKlD,KAAKq0F,aAAcnxF,IAAK,CAC3D,IAAI81F,EAAgB91F,EAAIlD,KAAKq0F,aAAe,GAAO9M,EAAIhB,MAAMC,QAAQtjF,GAAGqpF,WAAa,EAErF,IAAKyM,EACD,IAAK,IAAIrlD,EAAI,EAAGA,EAAI4zC,EAAIhB,MAAMC,QAAQtjF,GAAGqpF,WAAY54C,IACjD4zC,EAAIhB,MAAMC,QAAQtjF,EAAIywC,GAAG64C,qBAAsB,EAGnD9qF,EAAO,IAAI0d,EAAMpf,KAAKuzF,KAAK5pF,QAAQijF,UAAU1pF,GAAGoG,MAAOC,IAUtDvJ,KAAKm3F,qBAAqBn3F,KAAKuzF,KAAK5pF,QAAQijF,UAAU1pF,GAAGgiB,SAC1DllB,KAAKm3F,qBAAqB5P,EAAIhB,MAAMC,QAAQtjF,GAAG+8B,gBAC/CsnD,EAAIhB,MAAMC,QAAQtjF,GAAG+8B,aAAejgC,KAAKuzF,KAAK5pF,QAAQijF,UAAU1pF,GAAGgiB,QAEvE,IAAIwyE,EAAYnQ,EAAIhB,MAAMC,QAAQtjF,GAAG4lB,MACjCmwE,EAAoD,iBAA/B1R,EAAIhB,MAAMC,QAAQtjF,GAAG3C,OACX,OAA/BgnF,EAAIhB,MAAMC,QAAQtjF,GAAG3C,MAAkBgnF,EAAIhB,MAAMC,QAAQtjF,GAAG3C,MAAQ,GAIpE,GAHJgnF,EAAIhB,MAAMC,QAAQtjF,GAAG4lB,MAAQ9oB,KAAKu3F,oBAAoBv3F,KAAKqzF,gBAAiBrzF,KAAK6sF,gBAAiB3pF,EAAG,IAAImc,EAAW05E,EAAYr3F,GAAOu3F,EAAWvB,GAG1InQ,EAAIhB,MAAMC,QAAQtjF,GAAG3C,iBAAiBmoF,GAAS,EAC3CC,EAAOpB,EAAIhB,MAAMC,QAAQtjF,GAAG3C,OAC3B6vF,gBAAkBltF,EAE3B,IAAIwsE,EAAe6X,EAAIhB,MAAMC,QAAQtjF,GAAGg9B,KAAKlgC,KAAKqzF,gBAAiB,IAAIh0E,EAAW05E,EAAYr3F,GAAOs3F,GAqBzG,GApBQzR,EAAIoB,KAAK7/D,MAAMyhE,0BAA4BhD,EAAIhB,MAAMC,QAAQtjF,GAAGqpF,WAAavsF,KAAKq0F,cAClFnxF,EAAIqkF,EAAIhB,MAAMC,QAAQtjF,GAAGqpF,WAAavsF,KAAKq0F,aAAe,IAAMr0F,KAAKq0F,aAAe9M,EAAIhB,MAAMp+E,MAAQ,IACtGo/E,EAAIiD,iBAAmBxqF,KAAKq0F,cAE5B9M,EAAIoB,KAAK7/D,MAAMyhE,yBAA4BhD,EAAIiD,iBAAmB,IAAMjD,EAAIhB,MAAMC,QAAQtjF,GAAGqpF,WAC7FvsF,KAAKq0F,cAAgBnxF,EAAIqkF,EAAIhB,MAAMC,QAAQtjF,GAAGqpF,WAAavsF,KAAKq0F,aAAe,IAC/E9M,EAAIhB,MAAMC,QAAQtjF,GAAGqpF,WAAavsF,KAAKq0F,aAAenxF,EAAI,EAAI,IAC9DqkF,EAAIhB,MAAMC,QAAQe,EAAIiD,iBAAmB,GAAGjqF,MAAyB,OAAjBmvE,QAAoDz2D,IAA3By2D,EAAaN,UACtFM,EAAaN,UAAiB,GAClCmY,EAAIhB,MAAMC,QAAQe,EAAIiD,iBAAmB,GAAGvqD,aAAesnD,EAAIhB,MAAMC,QAAQtjF,GAAG+8B,aAChFsnD,EAAIhB,MAAMC,QAAQe,EAAIiD,iBAAmB,GAAG1hE,MAAQy+D,EAAIhB,MAAMC,QAAQtjF,GAAG4lB,MACzEy+D,EAAIhB,MAAMC,QAAQe,EAAIiD,iBAAmB,GAAG+B,WAAahF,EAAIhB,MAAMC,QAAQtjF,GAAGqpF,WAAavsF,KAAKq0F,aAAenxF,EAAI,GAI3H+1F,EAAoD,iBAA/B1R,EAAIhB,MAAMC,QAAQtjF,GAAG3C,OACP,OAA/BgnF,EAAIhB,MAAMC,QAAQtjF,GAAG3C,MAAkBgnF,EAAIhB,MAAMC,QAAQtjF,GAAG3C,MAAQ,GACnEy4F,GACDh5F,KAAKy3F,mBAAmBz3F,KAAKqzF,gBAAiBrzF,KAAK6sF,gBAAiB3pF,EAAG,IAAImc,EAAW05E,EAAYr3F,GAAOu3F,EAAW1R,EAAIhB,MAAMC,QAAQtjF,GAAG4lB,OAEzIy+D,EAAIhB,MAAMC,QAAQtjF,GAAG3C,iBAAiBmoF,GAAS,CAC/C,IAAIC,EAAOpB,EAAIhB,MAAMC,QAAQtjF,GAAG3C,MAC5BP,KAAKuzF,KAAK5pF,QAAQijF,UAAU1pF,GAAGoG,OAAStJ,KAAKqzF,gBAAgBruE,WAAW1b,OACxEyvF,EAAWrmF,EAAIi2E,EAAKkO,qBACpBkC,EAAWrmF,GAAKi2E,EAAK7/D,MAAMghE,aAG3BiP,EAAWrmF,GAAK1S,KAAKuzF,KAAK5pF,QAAQijF,UAAU1pF,GAAGoG,WAInDyvF,EAAWrmF,GAAK1S,KAAKuzF,KAAK5pF,QAAQijF,UAAU1pF,GAAGoG,MAGlDi+E,EAAI2F,mBAAoB3F,EAAIqH,iBAC7B5uF,KAAKivE,cAAct8D,GAAKpJ,GAE5BtG,EAAOuR,OAAS,IAAI6K,EAAW,IAAIF,EAAOlc,EAAOuR,OAAO9B,EAAGzP,EAAOuR,OAAO7B,GAAI,IAAIyM,EAAM25E,EAAWrmF,EAAGqmF,EAAWpmF,KAGxH24E,EAAgB3rF,UAAUm5F,YAAc,SAAUI,EAAevQ,EAAMR,GAGnE,IAAK,IAFD0Q,GAAQ,EACRnP,EAAW,IAAIhlE,EACVxhB,EAAI,EAAGA,EAAIilF,EAAQ5B,MAAMp+E,MAAOjF,IAAK,CAC1C,IAAIuqF,EAAOtF,EAAQ5B,MAAMC,QAAQtjF,GACjC,QAA0B,IAAfuqF,EAAKltF,OAAwC,OAAfktF,EAAKltF,OAAwC,iBAAfktF,EAAKltF,MAAoB,CAC5F,IAAIoI,EAAO,KAEPA,OAD2B,IAApB8kF,EAAK3kE,MAAMngB,MAA2C,MAAnB8kF,EAAK3kE,MAAMngB,KAC9C8kF,EAAK3kE,MAAMngB,UAEkB,IAAxB8kF,EAAKlG,IAAIz+D,MAAMngB,MAA+C,MAAvB8kF,EAAKlG,IAAIz+D,MAAMngB,KAC3D8kF,EAAKlG,IAAIz+D,MAAMngB,UAEmB,IAA7B8kF,EAAKlG,IAAIoB,KAAK7/D,MAAMngB,MAAoD,MAA5B8kF,EAAKlG,IAAIoB,KAAK7/D,MAAMngB,KACrE8kF,EAAKlG,IAAIoB,KAAK7/D,MAAMngB,KAGpB0jB,GAAYkU,YAEvBvgC,KAAKgwE,cAAgByd,EAAKltF,MAC1B,IAAI+I,EAAQmkF,EAAKnkF,MACb6vF,EAASxQ,EAAKh/E,QAAQijF,UAAU1pF,GAChCi2F,EAAOtL,eAAiBJ,EAAKnkF,MAAQ6vF,EAAO7vF,QAC5CA,EAAQ6vF,EAAO7vF,OAEnBtJ,KAAKgzF,IAAMtJ,EAAS9kE,OAAO6oE,EAAKltF,MAAOoI,EAAM8kF,EAAKxtD,aAAc,IAAI7gB,EAAM9V,EAAO4vF,IAAgB,EAAOl5F,KAAKozF,mBAC7G,IAAI7pF,EAASvJ,KAAKgzF,IAAIhrE,WAAWze,OACjC,GAAmB,KAAfkkF,EAAKltF,OAA2B,IAAXgJ,EAAc,CACnCsvF,GAAQ,EACR,MAeJ,GAbmB,OAAfpL,EAAK3kE,OAAyC,OAAvB2kE,EAAK3kE,MAAMo+D,SAA+C,OAA3BuG,EAAK3kE,MAAMo+D,QAAQpnE,KAA8C,OAA9B2tE,EAAK3kE,MAAMo+D,QAAQlnE,SAC5GzW,GAA6E,GAAlEkkF,EAAK3kE,MAAMo+D,QAAQpnE,IAAIxW,MAAQmkF,EAAK3kE,MAAMo+D,QAAQlnE,OAAO1W,QAEpEtJ,KAAKgzF,IAAIniC,UAAY,GAA0B,MAArB48B,EAAKxtD,cAAyD,GAAjCwtD,EAAKxtD,aAAa3Z,cACzE/c,IAAWvJ,KAAKgzF,IAAIniC,UAAY,GAAM48B,EAAK3kE,MAAMmX,aAAwB,aAEzEwtD,EAAK3kE,MAAM+gE,YACXtgF,GAAWo/E,EAAK7/D,MAAM+gE,YAAY/pE,IAAM6oE,EAAK7/D,MAAM+gE,YAAY7pE,OAKnEzW,GAAUo/E,EAAK7/D,MAAMghE,YACjBoP,EAAgB3vF,QAAyC,IAAvBvJ,KAAKgzF,IAAI5jB,WAAoD,OAAvBpvE,KAAKgzF,IAAI5jB,UAAqB,CACtGypB,GAAQ,EACR,QAIZ,OAAOA,GAEXvN,EAAgB3rF,UAAUg5F,iBAAmB,SAAU11F,EAAQskF,EAAK6R,GAChE,IAAIv5D,EAAW,IAAI1gB,EAAOnf,KAAKivE,cAAcv8D,EAAG1S,KAAKivE,cAAct8D,GAC/D40E,EAAIoB,KAAKG,aAAevB,EAAIoB,KAAKoC,0BAA4B/qF,KAAKwzF,cAAc9gF,IAAM1S,KAAKivE,cAAcv8D,IACzGmtB,EAASntB,EAAI1S,KAAKwzF,cAAc9gF,GAEpCzP,EAAOuR,OAAS,IAAI6K,EAAWwgB,EAAU,IAAIzgB,EAAM,EAAG,IACtDpf,KAAKq5F,WAAa9R,EAAIuE,eAAiB,EAAI9rF,KAAKozF,kBAAkB7pF,OAAS,EAEvEg+E,EAAIoB,KAAK7/D,MAAM+gE,YAAY/pE,IAAM9f,KAAKivE,cAAct8D,EAAI40E,EAAIoB,KAAK7/D,MAAM+gE,YAAY7pE,OAAShgB,KAAKozF,kBAAkB7pF,SACnHg+E,EAAIuE,eAAiB9rF,KAAKivE,cAAct8D,EAAIymF,EAAkBp5F,KAAKozF,kBAAkB7pF,QAQzF,IAAK,IAAIrG,EAAI,EAAGA,EAAIqkF,EAAIhB,MAAMp+E,MAAOjF,IAAK,CACtC,IAAIuqF,EAAOlG,EAAIhB,MAAMC,QAAQtjF,GACZuqF,EAAKnE,kBACH8P,GAAmB3L,EAAKltF,iBAAiBmoF,KACxDnB,EAAIuE,eAAiB,GAM7B,IAAS5oF,EAAIlD,KAAKo0F,eAAgBlxF,GAAKlD,KAAKq0F,aAAcnxF,IAAK,CAC3D,IAAI81F,EAAgBzR,EAAIhB,MAAMC,QAAQtjF,GAAGqpF,WAAarpF,EAAIlD,KAAKq0F,aAAe,GACzE9M,EAAIhB,MAAMC,QAAQtjF,GAAGqpF,WAAa,EAMnC7qF,EAAO,IAAI0d,EAAMpf,KAAKuzF,KAAK5pF,QAAQijF,UAAU1pF,GAAGoG,MAAOtJ,KAAKq5F,WAAa,EAAMr5F,KAAKq5F,WACpFr5F,KAAKozF,kBAAkB7pF,QAQvB+vF,EAAa/R,EAAIhB,MAAMC,QAAQtjF,GAAG4lB,MACtCy+D,EAAIhB,MAAMC,QAAQtjF,GAAG4lB,MAAQwwE,EAC7B,IACI5pB,EAAe,KAuBnB,GArBI6X,EAAIhB,MAAMC,QAAQtjF,GAAG8nF,WAAazD,EAAIh+E,OACtCmmE,EAAe6X,EAAIhB,MAAMC,QAAQtjF,GAAGg9B,KAAKlgC,KAAKqzF,gBAAiB,IAAIh0E,EAAWwgB,EAAUn+B,GAAOs3F,GAG/FzR,EAAIuE,eAAiB,GACD,MAAhBpc,QAA0D,IAA3BA,EAAaN,YAC5CmY,EAAIhB,MAAMC,QAAQtjF,GAAG8zF,qBAAsB,EAC3CzP,EAAIhB,MAAMC,QAAQtjF,GAAG8uD,gBAA4C,MAA1B0d,EAAaN,UAAoB,IAAMM,EAAaN,UAC3FmY,EAAIuE,eAAiBsN,EAAkB1pB,EAAa1nD,WAAWze,QAGvEtG,EAAO+kF,SAAa/kF,EAAO+kF,SAA8BT,EAAIhB,MAAMC,QAAQtjF,GAAG8zF,oBAAvC/zF,EAAO+kF,SAU1CT,EAAIhB,MAAMC,QAAQtjF,GAAG3C,iBAAiBmoF,GAAS,CAC/C,IAAIC,EAAOpB,EAAIhB,MAAMC,QAAQtjF,GAAG3C,MAChCP,KAAKu5F,4BAA8Br2F,EAM/BlD,KAAKuzF,KAAK5pF,QAAQijF,UAAU1pF,GAAGoG,OAAStJ,KAAKqzF,gBAAgBruE,WAAW1b,OACxEu2B,EAASntB,EAAI1S,KAAK62F,qBAClBh3D,EAASntB,GAAKi2E,EAAK7/D,MAAMghE,aAGzBjqD,EAASntB,GAAK1S,KAAKuzF,KAAK5pF,QAAQijF,UAAU1pF,GAAGoG,WAIjDu2B,EAASntB,GAAK1S,KAAKuzF,KAAK5pF,QAAQijF,UAAU1pF,GAAGoG,MAGrDtJ,KAAKivE,cAAct8D,GAAK3S,KAAKq5F,WAAa,EAAMr5F,KAAKq5F,WAAaD,EAClEn2F,EAAOuR,OAAS,IAAI6K,EAAW,IAAIF,EAAOlc,EAAOuR,OAAO9B,EAAGzP,EAAOuR,OAAO7B,GAAI,IAAIyM,EAAMygB,EAASntB,EAAGmtB,EAASltB,KAMhH24E,EAAgBsJ,gBAAkB,EAC3BtJ,GACTnf,IASE2rB,GAAqC,SAAUriF,GAM/C,SAASqiF,EAAoBr3D,EAAMjsB,GAC/B,OAAOiB,EAAO5V,KAAKG,KAAMygC,EAAMjsB,IAAWxU,KAE9C,OARA6U,GAAUijF,EAAqBriF,GAQxBqiF,GACT1qB,IAKEme,GAAqC,SAAU91E,GAM/C,SAAS81E,EAAoB1e,GACzB,OAAOp3D,EAAO5V,KAAKG,KAAM6sE,IAAe7sE,KAE5C,OARA6U,GAAU02E,EAAqB91E,GAQxB81E,GACT3e,IAEE4sB,GAAmC,WAMnC,SAASA,EAAkBz6D,EAAUm2D,EAAU7H,EAAW74E,EAAQjU,GAC9DP,KAAKy5F,aAAevE,EACpBl1F,KAAK05F,cAAgBrM,EACrBrtF,KAAK6B,cAAgBtB,EACrBP,KAAK25F,WAAanlF,EAClBxU,KAAKwpD,YAAczqB,EA0DvB,OAxDAr/B,OAAOuC,eAAeu3F,EAAkB75F,UAAW,YAM/CuC,IAAK,WACD,OAAOlC,KAAKy5F,cAEhBp3F,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeu3F,EAAkB75F,UAAW,aAK/CuC,IAAK,WACD,OAAOlC,KAAK05F,eAEhBr3F,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeu3F,EAAkB75F,UAAW,SAK/CuC,IAAK,WACD,OAAOlC,KAAK6B,eAEhBQ,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeu3F,EAAkB75F,UAAW,UAK/CuC,IAAK,WACD,OAAOlC,KAAK25F,YAEhBt3F,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeu3F,EAAkB75F,UAAW,YAK/CuC,IAAK,WACD,OAAOlC,KAAKwpD,aAEhBnnD,YAAY,EACZC,cAAc,IAEXk3F,KAGPhC,GAA+C,SAAU/hF,GAOzD,SAAS+hF,EAA8Bz4D,EAAUm2D,EAAU7H,EAAW74E,EAAQjU,EAAOuoB,GACjF,IAAInT,EAAQF,EAAO5V,KAAKG,KAAM++B,EAAUm2D,EAAU7H,EAAW74E,EAAQjU,IAAUP,KAE/E,OADA2V,EAAMmT,MAAQA,EACPnT,EA+BX,OAxCAd,GAAU2iF,EAA+B/hF,GAWzC/V,OAAOuC,eAAeu1F,EAA8B73F,UAAW,QAM3DuC,IAAK,WACD,OAAOlC,KAAK45F,OAEhBx3F,IAAK,SAAU7B,GACXP,KAAK45F,MAAQr5F,GAEjB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeu1F,EAA8B73F,UAAW,SAK3DuC,IAAK,WACD,OAAOlC,KAAKqpF,WAEhBjnF,IAAK,SAAU7B,GACXP,KAAKqpF,UAAY9oF,GAErB8B,YAAY,EACZC,cAAc,IAEXk1F,GACTgC,IAEE7B,GAA6C,SAAUliF,GAOvD,SAASkiF,EAA4B54D,EAAUm2D,EAAU7H,EAAW74E,EAAQjU,EAAOuoB,GAC/E,IAAInT,EAAQF,EAAO5V,KAAKG,KAAM++B,EAAUm2D,EAAU7H,EAAW74E,EAAQjU,IAAUP,KAE/E,OADA2V,EAAM0zE,UAAYvgE,EACXnT,EAcX,OAvBAd,GAAU8iF,EAA6BliF,GAWvC/V,OAAOuC,eAAe01F,EAA4Bh4F,UAAW,SAMzDuC,IAAK,WACD,OAAOlC,KAAKqpF,WAEhBhnF,YAAY,EACZC,cAAc,IAEXq1F,GACT6B,IAEEK,GAAoC,WACpC,SAASA,KAiBT,OAfAn6F,OAAOuC,eAAe43F,EAAmBl6F,UAAW,UAMhDuC,IAAK,WACD,OAAOlC,KAAK85F,UAEhB13F,IAAK,SAAU7B,GACXP,KAAK85F,SAAWv5F,GAEpB8B,YAAY,EACZC,cAAc,IAEXu3F,KAGPE,GAA0C,SAAUtkF,GAOpD,SAASskF,EAAyBvlF,EAAQisB,GACtC,IAAI9qB,EAAQF,EAAO5V,KAAKG,OAASA,KAGjC,OAFA2V,EAAMnB,OAASA,EACfmB,EAAMwlD,QAAU16B,EACT9qB,EA4BX,OAtCAd,GAAUklF,EAA0BtkF,GAYpC/V,OAAOuC,eAAe83F,EAAyBp6F,UAAW,UAMtDuC,IAAK,WACD,OAAOlC,KAAKm0F,YAEhB/xF,IAAK,SAAU7B,GACXP,KAAKm0F,WAAa5zF,GAEtB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe83F,EAAyBp6F,UAAW,QAKtDuC,IAAK,WACD,OAAOlC,KAAKm7D,SAEhB94D,YAAY,EACZC,cAAc,IAEXy3F,GACTF,IAKEG,GAAwC,SAAUvkF,GAOlD,SAASukF,EAAuB/2F,GAC5B,IAAI0S,EAAQF,EAAO5V,KAAKG,OAASA,KAEjC,OADA2V,EAAMooD,aAAe96D,EACd0S,EA4BX,OArCAd,GAAUmlF,EAAwBvkF,GAWlC/V,OAAOuC,eAAe+3F,EAAuBr6F,UAAW,UAMpDuC,IAAK,WACD,OAAOlC,KAAK+9D,cAEhB17D,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe+3F,EAAuBr6F,UAAW,YAKpDuC,IAAK,WACD,OAAOlC,KAAKi6F,aAEhB73F,IAAK,SAAU7B,GACXP,KAAKi6F,YAAc15F,GAEvB8B,YAAY,EACZC,cAAc,IAEX03F,GACTH,IAKE5B,GAAiD,SAAUxiF,GAO3D,SAASwiF,EAAgCzjF,EAAQisB,EAAMy5D,GACnD,IAAIvkF,EAAQF,EAAO5V,KAAKG,KAAMwU,EAAQisB,IAASzgC,KAE/C,OADA2V,EAAMukF,SAAWA,EACVvkF,EAcX,OAvBAd,GAAUojF,EAAiCxiF,GAW3C/V,OAAOuC,eAAeg2F,EAAgCt4F,UAAW,iBAM7DuC,IAAK,WACD,OAAOlC,KAAKk6F,UAEhB73F,YAAY,EACZC,cAAc,IAEX21F,GACT8B,IAKE5B,GAA+C,SAAU1iF,GAOzD,SAAS0iF,EAA8Bl1F,GACnC,OAAOwS,EAAO5V,KAAKG,KAAMiD,IAAWjD,KAExC,OATA6U,GAAUsjF,EAA+B1iF,GASlC0iF,GACT6B,IAEE1B,GAAiC,WAMjC,SAASA,IACLt4F,KAAKm6F,eAAiB,IAAI96E,EAAW,EAAG,EAAG,EAAG,GA8BlD,OA5BA3f,OAAOuC,eAAeq2F,EAAgB34F,UAAW,YAK7CuC,IAAK,WACD,OAAOlC,KAAKo6F,aAEhBh4F,IAAK,SAAU7B,GACXP,KAAKo6F,YAAc75F,GAEvB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq2F,EAAgB34F,UAAW,UAK7CuC,IAAK,WACD,OAAOlC,KAAKm6F,gBAEhB/3F,IAAK,SAAU7B,GACXP,KAAKm6F,eAAiB55F,GAE1B8B,YAAY,EACZC,cAAc,IAEXg2F,KC7xDPzjF,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GAyBxCglF,GAA+B,SAAU5kF,GAOzC,SAAS4kF,EAActmF,GACnB,IAAI4B,EAAQF,EAAO5V,KAAKG,KAAM+T,IAAY/T,KAoB1C,OAbA2V,EAAM2kF,aAAe,EAMrB3kF,EAAM4kF,YAAc,IAAIl7E,EAMxB1J,EAAM6kF,cAAgB,EACf7kF,EA+MX,OA1OAd,GAAUwlF,EAAe5kF,GA6BzB/V,OAAOuC,eAAeo4F,EAAc16F,UAAW,WAM3CuC,IAAK,WACD,OAAOlC,KAAKuT,UAEhBlR,YAAY,EACZC,cAAc,IAOlB+3F,EAAc16F,UAAU4sE,eAAiB,SAAUD,GAC/C,IAAI5rC,EAAc4rC,EAAM7rC,KACpBwuC,EAAgB3C,EAAM93D,OACtBimF,EAAoBz6F,KAAK+T,QAAQ2mF,YACrCD,EAAkB/nF,EAAI,EACtB+nF,EAAkB9nF,EAAI,EAEtB,IAAIyL,EAAWpe,KAAKu6F,YAAY7nF,IAAM1S,KAAKu6F,YAAY5nF,GAAK3S,KAAKu6F,YAAY5nF,IAAM3S,KAAKu6F,YAAYjxF,OAAStJ,KAAKu6F,YAAYjxF,QAAUtJ,KAAKu6F,YAAYhxF,QAAsC,IAA5BvJ,KAAKu6F,YAAYhxF,OAE/KvJ,KAAc,gBACfy6F,EAAoBz6F,KAAKu6F,aAE7B,IAAIt3F,EAAS,KACTisE,EAAa,IAAIyrB,GAGrB,IAFAzrB,EAAWzuC,KAAOC,IAEL,CAET,IAAIkZ,EAAU55C,KAAKu0F,sBAAsB7zD,EAAauuC,GACtDA,EAAgBr1B,EAAQq1B,cACxB,IAAI2rB,EAAU,KAOd,GANKhhD,EAAQy7C,SACTnmB,EAAalvE,KAAKqvE,aAAa3uC,EAAauuC,EAAewrB,EAAmBnuB,GAE9EsuB,EAAU56F,KAAKo4F,mBAAmBlpB,GAClCt1B,EAAQy7C,OAAsB,OAAZuF,GAA4BA,EAAQvF,QAErDnmB,EAAWjrD,KAAQ21B,EAAQy7C,OAU3B,CACDpyF,EAASjD,KAAKsvE,gBAAgBJ,GAC9B,MAPA,GAJAD,EAAgBjvE,KAAKysE,kBAAkBH,GACvCmuB,EAAoBz6F,KAAK66F,mBAAmBJ,EAAmBvrB,GAC/DxuC,EAA2B,OAAZk6D,GAAyC,OAArBA,EAAQ3D,SACvCj3F,KAAKmyD,YAAYzxB,GAAek6D,EAAQ3D,SACxCj3F,KAAK02F,UAAW,CAChBzzF,EAASjD,KAAKsvE,gBAAgBJ,GAC9B,OAQZ,OAAOjsE,GAMXo3F,EAAc16F,UAAU40F,sBAAwB,SAAU7zD,EAAauuC,GACnE,IAAIomB,GAAS,EACb,GAAIr1F,KAAK+T,QAAQikF,qBAAsB,CACnC,IAAIh1B,EAAO,IAAI+2B,GAAyB9qB,EAAevuC,GACvD1gC,KAAK+T,QAAQ46D,kBAAkB3L,GAC/BqyB,EAASryB,EAAKqyB,OACdpmB,EAAgBjM,EAAKxuD,OAEzB,OAASy6D,cAAeA,EAAeomB,OAAQA,IAMnDgF,EAAc16F,UAAUy4F,mBAAqB,SAAUlpB,GACnD,IAAIlM,EAAO,KACX,GAAIhjE,KAAK+T,QAAQqkF,mBAAoB,CACjC,IAAI/1C,EAAMriD,KAAKsvE,gBAAgBJ,GAC/BlM,EAAO,IAAIg3B,GAAuB33C,GAClCriD,KAAK+T,QAAQ66D,gBAAgB5L,GAEjC,OAAOA,GAMXq3B,EAAc16F,UAAU2vE,gBAAkB,SAAUJ,GAEhD,OADa,IAAI9B,GAAgB8B,EAAWzuC,KAAMyuC,EAAW16D,SAOjE6lF,EAAc16F,UAAUk7F,mBAAqB,SAAUJ,EAAmBvrB,GACtE,IAAIirB,EAAiBjrB,EAAW16D,OAGhC,OAFAimF,EAAkB9nF,EAAK8nF,EAAkB9nF,EAAIwnF,EAAe5wF,OAC5DkxF,EAAkBlxF,OAAUkxF,EAAkBlxF,OAAS4wF,EAAe5wF,OAC/DkxF,GAMXJ,EAAc16F,UAAU0vE,aAAe,SAAU3uC,EAAao6D,EAAWC,EAASzuB,GAC9E,IAAIrpE,EAAS,IAAI03F,GACjBG,EAAY96F,KAAKg7F,0BAA0Bt6D,EAAao6D,EAAWxuB,GACnE,IAAI2uB,EAAYj7F,KAAKk7F,aAAaJ,EAAWC,GAGzCI,GAAgB,EACpB,KAHiB7uB,EAAMpnD,OAAO4nD,QAAU/kB,qBAAmB6nB,aAClDqrB,GAAcv6D,IAAgB4rC,EAAM7rC,MAEhC,CACT,IAAIkvB,EAAgB3vD,KAAKo7F,cAAcN,EAAWC,GAClD/6F,KAAKq7F,UAAU36D,EAAY3B,SAAU+7D,EAAWnrC,GAChD1sD,EAAOuR,OAASxU,KAAKs7F,oBAAoBR,EAAWC,GACpDI,EAAkBL,EAAgB,QAAMC,EAAc,OAI1D,OAFA93F,EAAOghB,IAAOk3E,GAAkB7uB,EAAMpnD,OAAON,SAAWkjC,gBAAc+sC,QACtE5xF,EAAOw9B,KAAOC,EACPz9B,GAMXo3F,EAAc16F,UAAUy7F,cAAgB,SAAUnsB,EAAewrB,GAC7D,IAAIx3F,EAASgsE,EAGb,OAFAhsE,EAAO0P,EAAK1P,EAAO0P,EAAI8nF,EAAkB9nF,EACzC1P,EAAOsG,OAAUtG,EAAOsG,OAASkxF,EAAkB9nF,EAC5C1P,GAMXo3F,EAAc16F,UAAU07F,UAAY,SAAUn+E,EAAG+xD,EAAetf,GAC5D,IAAI1wB,EAAS/hB,EAAEza,OACf,IACIya,EAAEo1C,QAAQ2c,GACVjvE,KAAK+T,QAAQwnF,mBAAmBr+E,EAAG,IAAIiC,EAAOwwC,EAAcj9C,EAAGi9C,EAAch9C,YAG7EuK,EAAEkiB,QAAQH,KAOlBo7D,EAAc16F,UAAUq7F,0BAA4B,SAAUt6D,EAAao6D,EAAWxuB,GAClF,IAAIz1C,EAAW6J,EAAY3B,SAAS/Z,WAMpC,OALA81E,EAAUxxF,MAASwxF,EAAUxxF,MAAQ,EAAKwxF,EAAUxxF,MAASutB,EAASvtB,MAAQwxF,EAAUpoF,EACxFooF,EAAUvxF,OAAUuxF,EAAUvxF,OAAS,EAAKuxF,EAAUvxF,OAAUstB,EAASttB,OAASuxF,EAAUnoF,EACxF3S,KAAK02F,YACLoE,EAAUvxF,OAAUuxF,EAAUvxF,OAASvJ,KAAKw7F,mBAEzCV,GAMXT,EAAc16F,UAAU27F,oBAAsB,SAAUrsB,EAAewrB,GACnE,IAAIx3F,EAASgsE,EAEb,OADAhsE,EAAOsG,OAASsJ,KAAKJ,IAAIxP,EAAOsG,OAAQkxF,EAAkBlxF,QACnDtG,GAMXo3F,EAAc16F,UAAUu7F,aAAe,SAAUjsB,EAAewrB,GAE5D,OADYA,EAAkBlxF,QAAU0lE,EAAc1lE,QAQ1D8wF,EAAc7qF,MAAQ,EAMtB6qF,EAAcoB,UAAY,EAM1BpB,EAAcp8C,MAAO,EAMrBo8C,EAAcqB,YAAc,EACrBrB,GACTluB,IAMEwuB,GAAmC,WAGnC,OAFA,gBC5QA9lF,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GAmBxCsmF,GAAiC,SAAUlmF,GAE3C,SAASkmF,IACL,OAAkB,OAAXlmF,GAAmBA,EAAOmmF,MAAM57F,KAAMm0E,YAAcn0E,KAiD/D,OAnDA6U,GAAU8mF,EAAiBlmF,GAS3BkmF,EAAgBh8F,UAAU+6F,UAAY,WAElC,OADW16F,KAAK67F,qBAOpBF,EAAgBh8F,UAAU47F,mBAAqB,SAAUx8D,EAAUc,GAC/D,GAAiB,MAAZd,EACD,MAAM,IAAI1oB,MAAM,mCAEpBrW,KAAK87F,gBAAgB/8D,EAAUc,EAASntB,EAAGmtB,EAASltB,IAMxDgpF,EAAgBh8F,UAAUm8F,gBAAkB,SAAU/8D,EAAUrsB,EAAGC,GAC/D,IAAIqsB,EAAmB,KAANtsB,GAAmB,KAANC,EAC1BssB,EAAS,KAETD,IAEAC,EAASF,EAASt8B,OAClBs8B,EAASG,mBAAmBxsB,EAAGC,IAEnC3S,KAAKm/B,aAAaJ,GACdC,GAEAD,EAASK,QAAQH,IAOzB08D,EAAgBh8F,UAAUilB,OAAS,SAAU0nD,GAGzC,OAFe,IAAI+tB,GAAcr6F,MACX4kB,OAAO0nD,IAG1BqvB,GACTntB,ICxEE35D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GAoBxC0mF,GAAgC,SAAUtmF,GAM1C,SAASsmF,EAAejgE,GACpB,IAAInmB,EAAQF,EAAO5V,KAAKG,OAASA,KAIjC,YAHmB,IAAR87B,IACPnmB,EAAMqmF,KAAOlgE,GAEVnmB,EAiBX,OA3BAd,GAAUknF,EAAgBtmF,GAY1B/V,OAAOuC,eAAe85F,EAAep8F,UAAW,OAM5CuC,IAAK,WACD,OAAOlC,KAAKg8F,MAEhB55F,IAAK,SAAU7B,GACXP,KAAKg8F,KAAOz7F,GAEhB8B,YAAY,EACZC,cAAc,IAEXy5F,GACTJ,ICjDE9mF,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GAsBxC4mF,GAAgC,SAAUxmF,GAM1C,SAASwmF,EAAe38E,EAAMC,GAC1B,IAAI5J,EAAQF,EAAO5V,KAAKG,OAASA,KAgBjC,OAVA2V,EAAMmrE,OAAS,UACK,IAATxhE,IAGFA,aAAgBmb,GACrB9kB,EAAQF,EAAO5V,KAAKG,KAAMsf,IAAStf,KAGnC2V,EAAMmrE,OAASvhE,GAEZ5J,EAyBX,OA/CAd,GAAUonF,EAAgBxmF,GAwB1B/V,OAAOuC,eAAeg6F,EAAet8F,UAAW,SAM5CuC,IAAK,WACD,OAAOlC,KAAK8gF,QAEhB1+E,IAAK,SAAU7B,GACXP,KAAK8gF,OAASvgF,GAElB8B,YAAY,EACZC,cAAc,IAOlB25F,EAAet8F,UAAUu8F,UAAY,WACjC,OAAwB,MAAfl8F,KAAK8gF,QAAgC,MAAZ9gF,KAAK87B,IAAgB,IAAIrB,GAAO,IAAIhe,EAAS,EAAG,EAAG,IAAMzc,KAAK87B,KAE7FmgE,GACTF,ICvEElnF,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GA2BxC8mF,GAAyB,SAAU1mF,GAOnC,SAAS0mF,EAAQ78E,EAAMC,EAAMC,EAAMC,GAC/B,IAAI9J,EAAQF,EAAO5V,KAAKG,OAASA,KAyDjC,OAnDA2V,EAAMymF,QAAU,KAKhBzmF,EAAM0mF,WAAa,KAKnB1mF,EAAM2mF,cAAe,EAKrB3mF,EAAM4mF,UAAYpgF,cAAYi0C,UAK9Bz6C,EAAM6mF,YAAa,EAKnB7mF,EAAM8mF,OAAQ,OACM,IAATn9E,IAGFA,aAAgBmb,IACrB9kB,EAAQF,EAAO5V,KAAKG,KAAMsf,IAAStf,KAC/Buf,aAAgBW,GAChBvK,EAAQF,EAAO5V,KAAKG,KAAMsf,EAAMC,IAASvf,MACnCy3D,SAAWj4C,EAEH,OAATD,QAAiC,IAATA,GAAiC,OAATC,QAAiC,IAATA,GAC7E7J,EAAM+mF,QAAQn9E,EAAMC,IAGnBF,aAAgBY,GACrBvK,EAAQF,EAAO5V,KAAKG,KAAMsf,IAAStf,KACtB,OAATuf,QAAiC,IAATA,IACxB5J,EAAM8hD,SAAWl4C,GAER,OAATC,QAAiC,IAATA,GAAiC,OAATC,QAAiC,IAATA,GACxE9J,EAAM+mF,QAAQl9E,EAAMC,IAIxB9J,EAAM+mF,QAAQp9E,EAAMC,IAEjB5J,EA4ZX,OA5dAd,GAAUsnF,EAAS1mF,GAkEnB/V,OAAOuC,eAAek6F,EAAQx8F,UAAW,YAMrCuC,IAAK,WACD,OAAOlC,KAAKu8F,WAEhBn6F,IAAK,SAAU7B,GACXP,KAAKu8F,UAAYh8F,GAErB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAek6F,EAAQx8F,UAAW,cAKrCuC,IAAK,WACD,OAAOlC,KAAKq4D,QAEhBh2D,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAek6F,EAAQx8F,UAAW,aAKrCuC,IAAK,WACD,OAAOlC,KAAKsjD,OAEhBjhD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAek6F,EAAQx8F,UAAW,cAKrCuC,IAAK,WACD,IAAIiG,EAAQ,EAIZ,OAHqB,MAAhBnI,KAAKo8F,UACNj0F,EAAQnI,KAAKo8F,QAAQp7F,QAElBmH,GAEX9F,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAek6F,EAAQx8F,UAAW,aAKrCuC,IAAK,WACD,OAAOlC,KAAK28F,gBAEhBt6F,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAek6F,EAAQx8F,UAAW,UAKrCuC,IAAK,WAID,OAHqB,MAAhBlC,KAAKo8F,UACNp8F,KAAKo8F,YAEFp8F,KAAKo8F,SAEhB/5F,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAek6F,EAAQx8F,UAAW,SAKrCuC,IAAK,WAID,OAHwB,MAAnBlC,KAAKq8F,aACNr8F,KAAKq8F,eAEFr8F,KAAKq8F,YAEhBh6F,YAAY,EACZC,cAAc,IAElB65F,EAAQx8F,UAAUugC,KAAO,SAAU5gB,EAAMC,EAAMC,EAAMC,GACjD,GAAIF,aAAgBJ,QAAgC,IAAfI,EAAKjW,YAAyC,IAATkW,EACtE,OAAOxf,KAAK8+B,WAAWxf,EAAMC,EAAK7M,EAAG6M,EAAK5M,GAEzC,GAAI4M,aAAgBF,QAAoC,IAAfE,EAAKjW,YAAyC,IAATkW,EAC/E,OAAOxf,KAAK8+B,WAAWxf,EAAMC,EAAM,MAElC,GAAoB,iBAATA,GAAqC,iBAATC,QAAqC,IAATC,EACpE,OAAOzf,KAAK8+B,WAAWxf,EAAMC,EAAMC,EAAM,MAExC,GAAID,aAAgBJ,GAAUK,aAAgBotD,GAC/C,OAAO5sE,KAAK8+B,WAAWxf,EAAMC,EAAK7M,EAAG6M,EAAK5M,EAAG6M,GAE5C,GAAoB,iBAATD,IAAsBE,aAAgBmtD,IAA2B,MAARntD,IAAiC,iBAATD,EAAmB,CAChH,IAAIo9E,EAAct9E,EAAKyf,SAAS/Z,WAAW1b,MAAQiW,EAC/C8rE,EAAa,IAAIhsE,EAAWE,EAAMC,EAAMo9E,EAAY,GACxD,OAAO58F,KAAK8+B,WAAWxf,EAAM+rE,EAAY5rE,GAExC,OACMzf,KAAK8+B,WAAWxf,EAAMC,EAAMC,IAM3C28E,EAAQx8F,UAAUk9F,OAAS,SAAUv9E,EAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,GAC/D,GAAIxF,aAAgBD,EAChBrf,KAAK68F,OAAOv9E,EAAK5M,EAAG4M,EAAK3M,EAAG2M,EAAKhW,MAAOgW,EAAK/V,OAAQgW,EAAMC,QAI3D,IAAK,IADD64C,EAASr4D,KAAK88F,mBAAmBx9E,EAAMC,EAAOA,EAAOC,EAAQD,EAAOE,EAAOoF,EAAMC,GAC5E5hB,EAAI,EAAGA,EAAIm1D,EAAOr3D,OAAQkC,GAAQ,EAAG,CAE1C,IAAIs6B,GAAS66B,EAAOn1D,GAAIm1D,EAAOn1D,EAAI,GAAIm1D,EAAOn1D,EAAI,GAAIm1D,EAAOn1D,EAAI,GAAIm1D,EAAOn1D,EAAI,GAAIm1D,EAAOn1D,EAAI,GAAIm1D,EAAOn1D,EAAI,GAAIm1D,EAAOn1D,EAAI,IAC7HlD,KAAKsjF,UAAU9lD,EAAOwqB,gBAAc+P,WAKhDokC,EAAQx8F,UAAUo9F,UAAY,SAAUz9E,EAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,EAAMC,EAAMgqC,GAC9E,GAAIzvC,aAAgBH,GAAUI,aAAgBJ,GAAUK,aAAgBL,GAAUM,aAAgBN,EAC9Fnf,KAAK+8F,UAAUz9E,EAAK5M,EAAG4M,EAAK3M,EAAG4M,EAAK7M,EAAG6M,EAAK5M,EAAG6M,EAAK9M,EAAG8M,EAAK7M,EAAG8M,EAAK/M,EAAG+M,EAAK9M,OAE3E,CACD,IAAI0lD,KACJA,EAAOn3D,KAAKoe,GACZ+4C,EAAOn3D,KAAKqe,GACZ84C,EAAOn3D,KAAKse,GACZ64C,EAAOn3D,KAAKue,GACZ44C,EAAOn3D,KAAK2jB,GACZwzC,EAAOn3D,KAAK4jB,GACZuzC,EAAOn3D,KAAK6jB,GACZszC,EAAOn3D,KAAK6tD,GACZ/uD,KAAKsjF,UAAUjrB,EAAQrQ,gBAAc+P,WAG7CokC,EAAQx8F,UAAUq9F,WAAa,SAAU19E,EAAMC,EAAMC,EAAMC,GACnDH,aAAgBD,EAChBrf,KAAKg9F,WAAW19E,EAAK5M,EAAG4M,EAAK3M,EAAG2M,EAAKhW,MAAOgW,EAAK/V,SAGjDvJ,KAAKi9F,cACLj9F,KAAK68F,OAAOv9E,EAAMC,EAAMC,EAAMC,EAAM,EAAG,KACvCzf,KAAKk9F,gBAGbf,EAAQx8F,UAAUw9F,QAAU,SAAU79E,EAAMC,EAAMC,EAAMC,GACpD,GAAIH,aAAgBH,GAAUI,aAAgBJ,EAC1Cnf,KAAKm9F,QAAQ79E,EAAK5M,EAAG4M,EAAK3M,EAAG4M,EAAK7M,EAAG6M,EAAK5M,OAEzC,CACD,IAAI0lD,KACJA,EAAOn3D,KAAKoe,GACZ+4C,EAAOn3D,KAAKqe,GACZ84C,EAAOn3D,KAAKse,GACZ64C,EAAOn3D,KAAKue,GACZzf,KAAKsjF,UAAUjrB,EAAQrQ,gBAAcmQ,QAG7CgkC,EAAQx8F,UAAU+8F,QAAU,SAAUp9E,EAAMC,GACxC,GAAID,aAAgB68E,EAChBn8F,KAAK08F,QAAQp9E,EAAKi4C,WAAYj4C,EAAKk4C,eAElC,CACD,GAAa,MAARl4C,EACD,MAAM,IAAIjJ,MAAM,oCAEpB,GAAa,MAARkJ,EACD,MAAM,IAAIlJ,MAAM,mCAGpB,GADYiJ,EAAKte,SACFue,EAAKve,OAChB,MAAM,IAAIqV,MAAM,oDAI5B8lF,EAAQx8F,UAAUy9F,OAAS,SAAU99E,EAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,GAC3DxF,aAAgBD,EAChBrf,KAAKo9F,OAAO99E,EAAK5M,EAAG4M,EAAK3M,EAAG2M,EAAKhW,MAAOgW,EAAK/V,OAAQgW,EAAMC,IAG3Dxf,KAAKi9F,cACLj9F,KAAK68F,OAAOv9E,EAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,GAC1C9kB,KAAKq9F,SAAS,IAAIl+E,EAAQG,EAAQE,EAAO,EAAMD,EAAQE,EAAO,GAAMuoC,gBAAcmQ,MAClFn4D,KAAKk9F,gBAObf,EAAQx8F,UAAU29F,WAAa,SAAUjlC,GACxBA,EAAOr3D,OAApB,IACIqJ,KACJrK,KAAKi9F,cACL,IAAK,IAAI/5F,EAAI,EAAGA,EAAIm1D,EAAOr3D,OAAQkC,IAC/BmH,EAAEnJ,KAAKm3D,EAAOn1D,GAAGwP,GACjBrI,EAAEnJ,KAAKm3D,EAAOn1D,GAAGyP,GAErB3S,KAAKsjF,UAAUj5E,EAAG29C,gBAAcmQ,MAChCn4D,KAAKk9F,eAETf,EAAQx8F,UAAU49F,aAAe,SAAUj+E,EAAM3M,EAAGrJ,EAAOC,GACvD,GAAI+V,aAAgBD,EAChBrf,KAAKu9F,aAAaj+E,EAAK5M,EAAG4M,EAAK3M,EAAG2M,EAAKhW,MAAOgW,EAAK/V,YAElD,CACD,IAAI8uD,KACJr4D,KAAKi9F,cACL5kC,EAAOn3D,KAAKoe,GACZ+4C,EAAOn3D,KAAKyR,GACZ0lD,EAAOn3D,KAAMoe,EAAOhW,GACpB+uD,EAAOn3D,KAAKyR,GACZ0lD,EAAOn3D,KAAMoe,EAAOhW,GACpB+uD,EAAOn3D,KAAMyR,EAAIpJ,GACjB8uD,EAAOn3D,KAAKoe,GACZ+4C,EAAOn3D,KAAMyR,EAAIpJ,GACjBvJ,KAAKsjF,UAAUjrB,EAAQrQ,gBAAcmQ,MACrCn4D,KAAKk9F,gBAObf,EAAQx8F,UAAUs9F,YAAc,WAC5Bj9F,KAAKs8F,cAAe,GAMxBH,EAAQx8F,UAAU69F,gBAAkB,WAEhC,IAAK,IADDC,EAAYz9F,KAAKu3D,WAAW,GACvBr0D,EAAI,EAAGA,EAAIlD,KAAKq8F,WAAWr7F,OAAQkC,IAAK,CAC7C,IAAI01D,EAAO54D,KAAKsjD,MAAMpgD,GAClB2vF,GAAO,EACC,IAAN3vF,GAAa01D,IAAO5Q,gBAAc8P,OACpC93D,KAAKk9F,YAAah6F,EAAI,GACtB2vF,GAAO,GAEA3vF,IAAOlD,KAAKq8F,WAAWr7F,OAAS,IAAS6xF,GAAQ7yF,KAAKy8F,OACxDgB,EAAU/qF,IAAM1S,KAAKu3D,WAAWr0D,GAAGyP,GACpC3S,KAAKk9F,YAAYh6F,KASjCi5F,EAAQx8F,UAAUg9F,aAAe,WAC7B,IAAIe,EAAY,IAAIv+E,EAAO,EAAG,GAC1BhX,EAAQnI,KAAK29F,WAKjB,OAJMx1F,EAAQ,GAAuB,MAAhBnI,KAAKo8F,UACtBsB,EAAUhrF,EAAI1S,KAAKo8F,QAASj0F,EAAQ,GAAIuK,EACxCgrF,EAAU/qF,EAAI3S,KAAKo8F,QAASj0F,EAAQ,GAAIwK,GAErC+qF,GAMXvB,EAAQx8F,UAAUm9F,mBAAqB,SAAU5nC,EAAIsD,EAAI/6B,EAAIC,EAAIu7B,EAAIC,GACjE,GAAKhE,EAAKz3B,EAAK,CACX,IAAI07B,OAAM,EACVA,EAAMjE,EACNA,EAAKz3B,EACLA,EAAK07B,EAET,GAAKz7B,EAAK86B,EAAK,CACPW,OAAM,EACVA,EAAMX,EACNA,EAAK96B,EACLA,EAAKy7B,EAET,IAAIykC,EACAvkC,EACCxmD,KAAK6rC,IAAIwa,IAAO,IACjB0kC,EAAY1kC,EACZG,EAAe,GAIfukC,EAAa1kC,GADbG,EAAgBxmD,KAAKsiC,KAAMtiC,KAAK6rC,IAAIwa,GAAM,KAU9C,IAAK,IAPDI,GAASpE,EAAKz3B,GAAM,EACpB87B,GAASf,EAAK96B,GAAM,EACpB87B,GAAO/7B,EAAKy3B,GAAM,EAClBuE,GAAO/7B,EAAK86B,GAAM,EAClBkB,EAAYkkC,GAAa/qF,KAAKupB,GAAK,KACnCu9B,EAAS9mD,KAAK6rC,IAAI,EAAM,GAAO,EAAM7rC,KAAKiqB,IAAI48B,IAAY7mD,KAAKkqB,IAAI28B,IACnEmkC,KACK36F,EAAI,EAAIA,EAAIm2D,EAAen2D,IAAK,CACrC,IAAI46F,GAAY7kC,EAAM/1D,EAAI06F,IAAe/qF,KAAKupB,GAAK,KAC/C2hE,GAAY9kC,GAAO/1D,EAAI,GAAK06F,IAAe/qF,KAAKupB,GAAK,KACrD29B,EAAQlnD,KAAKiqB,IAAIghE,GACjB9jC,EAAQnnD,KAAKiqB,IAAIihE,GACjB9jC,EAAQpnD,KAAKkqB,IAAI+gE,GACjB5jC,EAAQrnD,KAAKkqB,IAAIghE,GAChBH,EAAY,EAEbC,EAAU38F,KAAMo4D,EAAQE,EAAKO,EAASR,EAAQE,EAAKQ,EAASX,EAAQE,GAAMO,EAAQJ,EAAQM,GAAWV,EAAQE,GAAMQ,EAAQN,EAAQI,GAAWT,EAAQE,GAAMQ,EAAQL,EAAQO,GAAWX,EAAQE,GAAMS,EAAQP,EAAQK,GAAWV,EAAQE,EAAKQ,EAAST,EAAQE,EAAKS,GAInQ2jC,EAAU38F,KAAMo4D,EAAQE,EAAKO,EAASR,EAAQE,EAAKQ,EAASX,EAAQE,GAAMO,EAAQJ,EAAQM,GAAWV,EAAQE,GAAMQ,EAAQN,EAAQI,GAAWT,EAAQE,GAAMQ,EAAQL,EAAQO,GAAWX,EAAQE,GAAMS,EAAQP,EAAQK,GAAWV,EAAQE,EAAKQ,EAAST,EAAQE,EAAKS,GAG3Q,OAAO2jC,GAMX1B,EAAQx8F,UAAUk8F,kBAAoB,WAClC,IAAIxjC,EAASr4D,KAAKu3D,WACd/iD,EAAS,IAAI6K,EAAW,EAAG,EAAG,EAAG,GACrC,GAAKg5C,EAAOr3D,OAAS,EAAI,CAKrB,IAAK,IAJDg9F,EAAO3lC,EAAO,GAAG3lD,EACjBurF,EAAO5lC,EAAO,GAAG3lD,EACjBwrF,EAAO7lC,EAAO,GAAG1lD,EACjBwrF,EAAO9lC,EAAO,GAAG1lD,EACZzP,EAAI,EAAGA,EAAIm1D,EAAOr3D,OAAQkC,IAAK,CACpC,IAAIs6B,EAAQ66B,EAAOn1D,GACnB86F,EAAOnrF,KAAKJ,IAAI+qB,EAAM9qB,EAAGsrF,GACzBC,EAAOprF,KAAKoV,IAAIuV,EAAM9qB,EAAGurF,GACzBC,EAAOrrF,KAAKJ,IAAI+qB,EAAM7qB,EAAGurF,GACzBC,EAAOtrF,KAAKoV,IAAIuV,EAAM7qB,EAAGwrF,GAE7B3pF,EAAS,IAAI6K,EAAW2+E,EAAME,EAAOD,EAAOD,EAAQG,EAAOD,GAE/D,OAAO1pF,GAOX2nF,EAAQx8F,UAAUw/B,aAAe,SAAUJ,GACvC,GAAiB,MAAZA,EACD,MAAM,IAAI1oB,MAAM,mCAEpB0oB,EAASq4B,SAASp3D,KAAKk8F,YAAal8F,KAAKugB,MAAOvgB,OAEpDm8F,EAAQx8F,UAAU2jF,UAAY,SAAUjrB,EAAQ+lC,EAAWhI,EAAYC,GACnE,QAA0B,IAAfD,QAAkD,IAAbC,EAC5Cr2F,KAAKsjF,UAAUjrB,EAAQ+lC,EAAW,EAAG/lC,EAAOr3D,aAG5C,IAAK,IAAIkC,EAAIkzF,EAAYlzF,EAAImzF,EAAUnzF,IAAK,CACxC,IAAIs6B,EAAQ,IAAIre,EAAOk5C,EAAOn1D,GAAIm1D,EAAQn1D,EAAI,IACzCA,IAAMkzF,EACDp2F,KAAK29F,YAAc,GAAM39F,KAAKs8F,cAChCt8F,KAAKq9F,SAAS7/D,EAAOwqB,gBAAc8P,OACnC93D,KAAKs8F,cAAe,GAEb9+D,EAAM9qB,IAAM1S,KAAK09F,UAAUhrF,GAAO8qB,EAAM7qB,IAAM3S,KAAK09F,UAAU/qF,GAAO3S,KAAKw8F,WAG1Eh/D,EAAM9qB,IAAM1S,KAAK09F,UAAUhrF,GAAO8qB,EAAM7qB,IAAM3S,KAAK09F,UAAU/qF,GACnE3S,KAAKq9F,SAAS7/D,EAAOwqB,gBAAc+P,SAHnC/3D,KAAKq9F,SAAS7/D,EAAOwqB,gBAAcmQ,MAOvCn4D,KAAKq9F,SAAS7/D,EAAO4gE,GAEzBl7F,MAUZi5F,EAAQx8F,UAAU09F,SAAW,SAAU7/D,EAAO4gE,GAC1Cp+F,KAAKq4D,OAAOn3D,KAAKs8B,GACjBx9B,KAAKsjD,MAAMpiD,SAEfi7F,EAAQx8F,UAAUu9F,YAAc,SAAU1tF,GACtC,QAAqB,IAAVA,EACFxP,KAAK29F,WAAa,GACnB39F,KAAKk9F,YAAYl9F,KAAK29F,WAAa,GAEvC39F,KAAKi9F,kBAEJ,CACD,GAAKztF,EAAQ,EACT,MAAM,IAAI6G,MAAM,8BAEpB,IAAIuiD,EAAO54D,KAAKsjD,MAAM9zC,GACtBopD,GAAW5Q,gBAAcuQ,aACzBv4D,KAAKsjD,MAAM9zC,OAGZ2sF,GACTF,ICzfEpnF,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GAoBxCgpF,GAAkC,SAAU5oF,GAG5C,SAAS4oF,EAAiB/+E,EAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,GACpD,IAAInP,EAAQF,EAAO5V,KAAKG,OAASA,KAyBjC,OAnBA2V,EAAMnB,OAAS,IAAI6K,EAAW,EAAG,EAAG,EAAG,QACnB,IAATC,IAGFA,aAAgBmb,IACrB9kB,EAAQF,EAAO5V,KAAKG,KAAMsf,EAAMC,IAASvf,MAE/BwU,OADNgL,aAAgBH,EACDG,EAGA,IAAIH,EAAWG,EAAMC,EAAMoF,EAAMC,GAIpDnP,EAAMnB,OADD8K,aAAgBD,EACNC,EAGA,IAAID,EAAWC,EAAMC,EAAMC,EAAMC,IAE7C9J,EA+DX,OA3FAd,GAAUwpF,EAAkB5oF,GA8B5B/V,OAAOuC,eAAeo8F,EAAiB1+F,UAAW,KAM9CuC,IAAK,WACD,OAAOlC,KAAKwU,OAAO9B,GAEvBtQ,IAAK,SAAU7B,GACXP,KAAKwU,OAAO9B,EAAInS,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeo8F,EAAiB1+F,UAAW,KAK9CuC,IAAK,WACD,OAAOlC,KAAKwU,OAAO7B,GAEvBvQ,IAAK,SAAU7B,GACXP,KAAKwU,OAAO7B,EAAIpS,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeo8F,EAAiB1+F,UAAW,SAK9CuC,IAAK,WACD,OAAOlC,KAAKwU,OAAOlL,OAEvBlH,IAAK,SAAU7B,GACXP,KAAKwU,OAAOlL,MAAQ/I,GAExB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeo8F,EAAiB1+F,UAAW,UAK9CuC,IAAK,WACD,OAAOlC,KAAKwU,OAAOjL,QAEvBnH,IAAK,SAAU7B,GACXP,KAAKwU,OAAOjL,OAAShJ,GAEzB8B,YAAY,EACZC,cAAc,IAGlB+7F,EAAiB1+F,UAAUk8F,kBAAoB,WAC3C,OAAO77F,KAAKwU,QAET6pF,GACTpC,ICjHEpnF,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GAoBxCipF,GAAgC,SAAU7oF,GAG1C,SAAS6oF,EAAeh/E,EAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,EAAMC,EAAMgqC,GAC9D,IAAIp5C,EAAQF,EAAO5V,KAAKG,OAASA,KAqCjC,OA/BA2V,EAAM4oF,WAAa,EAKnB5oF,EAAM+iD,WAAa,OACC,IAATp5C,IAGFA,aAAgBD,QAA8B,IAATE,QAAwC,IAATC,IACzE7J,EAAQF,EAAO5V,KAAKG,KAAMsf,IAAStf,MAC7Bu+F,WAAah/E,EACnB5J,EAAM+iD,WAAal5C,GAEdF,aAAgBmb,GACjBjb,aAAgBH,IAChB1J,EAAQF,EAAO5V,KAAKG,KAAMsf,EAAMC,EAAMC,IAASxf,MACzCu+F,WAAa9+E,EACnB9J,EAAM+iD,WAAa7zC,KAGnBlP,EAAQF,EAAO5V,KAAKG,KAAMsf,EAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,IAAS9kB,MAC3Du+F,WAAax5E,EACnBpP,EAAM+iD,WAAa3J,KAIvBp5C,EAAQF,EAAO5V,KAAKG,KAAMsf,EAAMC,EAAMC,EAAMC,IAASzf,MAC/Cu+F,WAAa15E,EACnBlP,EAAM+iD,WAAa5zC,IAEhBnP,EAEX,OA1CAd,GAAUypF,EAAgB7oF,GA0CnB6oF,GACTD,IChEExpF,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GAwBxCmpF,GAAwB,SAAU/oF,GAGlC,SAAS+oF,EAAOl/E,EAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,EAAMC,GAChD,IAAIpP,EAAQ3V,KAwBZ,YAvBoB,IAATsf,EACP3J,EAAQF,EAAO5V,KAAKG,OAASA,KAExBsf,aAAgBD,EACrB1J,EAAQF,EAAO5V,KAAKG,KAAMsf,EAAMC,EAAMC,IAASxf,KAE1Csf,aAAgBmb,GACjBlb,aAAgBF,EAChB1J,EAAQF,EAAO5V,KAAKG,KAAMsf,EAAM,KAAMC,EAAMC,EAAMC,IAASzf,UAEtC,IAAT8kB,QAAwC,IAATC,EAC3CpP,EAAQF,EAAO5V,KAAKG,KAAMsf,EAAM,KAAM,EAAG,EAAGC,EAAMC,EAAMC,EAAMoF,IAAS7kB,UAElD,IAAT8kB,QAAwC,IAATC,IAC3CpP,EAAQF,EAAO5V,KAAKG,KAAMsf,EAAM,KAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,EAAMC,IAAS/kB,WAG5D,IAATsf,QAAwC,IAATuF,QAAwC,IAATC,EAC1EnP,EAAQF,EAAO5V,KAAKG,KAAM,EAAG,EAAGsf,EAAMC,EAAMC,EAAMC,IAASzf,UAEtC,IAATsf,QAAwC,IAATuF,QAAwC,IAATC,IAC1EnP,EAAQF,EAAO5V,KAAKG,KAAMsf,EAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,IAAS9kB,MAE9D2V,EAoCX,OA/DAd,GAAU2pF,EAAQ/oF,GA6BlB+oF,EAAO7+F,UAAUugC,KAAO,SAAUu+D,EAAOl/E,EAAMC,EAAMC,GACjD,GAAIF,aAAgBJ,QAAgC,IAAfI,EAAKjW,YAAyC,IAATkW,EACtE,OAAOxf,KAAK8+B,WAAW2/D,EAAOl/E,EAAK7M,EAAG6M,EAAK5M,GAE1C,GAAI4M,aAAgBF,QAAoC,IAAfE,EAAKjW,YAAyC,IAATkW,EAC/E,OAAOxf,KAAK8+B,WAAW2/D,EAAOl/E,EAAM,MAEnC,GAAoB,iBAATA,GAAqC,iBAATC,QAAqC,IAATC,EACpE,OAAOzf,KAAK8+B,WAAW2/D,EAAOl/E,EAAMC,EAAM,MAEzC,GAAID,aAAgBJ,GAAUK,aAAgBotD,GAC/C,OAAO5sE,KAAK8+B,WAAW2/D,EAAOl/E,EAAK7M,EAAG6M,EAAK5M,EAAG6M,GAE7C,GAAoB,iBAATD,IAAsBE,aAAgBmtD,IAA2B,MAARntD,IAAiC,iBAATD,EAAmB,CAChH,IAAIo9E,EAAc6B,EAAM1/D,SAAS/Z,WAAW1b,MAAQiW,EAChD8rE,EAAa,IAAIhsE,EAAWE,EAAMC,EAAMo9E,EAAY,GACxD,OAAO58F,KAAK8+B,WAAW2/D,EAAOpT,EAAY5rE,GAG1C,OAAOzf,KAAK8+B,WAAW2/D,EAAOl/E,EAAMC,IAS5Cg/E,EAAO7+F,UAAUw/B,aAAe,SAAUJ,GACtC,GAAiB,MAAZA,EACD,MAAM,IAAI1oB,MAAM,oCAEpB0oB,EAAS24B,QAAQ13D,KAAKk8F,YAAal8F,KAAKwU,OAAQxU,KAAKu+F,WAAYv+F,KAAK04D,aAEnE8lC,GACTF,ICzFEzpF,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpV,OAAOuV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI3K,KAAK2K,EAAOA,EAAEI,eAAe/K,KAAI0K,EAAE1K,GAAK2K,EAAE3K,MACpD0K,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOrV,KAAKsV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEpV,UAAkB,OAANqV,EAAatV,OAAO6V,OAAOP,IAAMK,EAAG1V,UAAYqV,EAAErV,UAAW,IAAI0V,IAV3C,GAuBxCqpF,GAAiC,SAAUjpF,GAE3C,SAASipF,EAAgBrjD,EAAc35C,EAAMonB,GACzC,IAAInT,EAAQF,EAAO5V,KAAKG,KAAM0B,IAAS1B,KAiBvC,OAZA2V,EAAM6lC,aAAc,EAKpB7lC,EAAMqkC,WAAY,OACJ/gC,IAAV6P,EACAnT,EAAMgpF,mBAAmBtjD,EAAcvyB,GAGvCnT,EAAMgpF,mBAAmBtjD,EAAct6B,eAAaiI,SAEjDrT,EA2HX,OA9IAd,GAAU6pF,EAAiBjpF,GAqB3BipF,EAAgB/+F,UAAUqqB,aAAe,SAAUrhB,GAG/C,OAFa,GAIjB+1F,EAAgB/+F,UAAU4mB,aAAe,SAAU3C,EAAMsB,GACrD,IAAI5b,EAAQ,EACZ,GAAe,OAAX4b,QAAqC,IAAXA,GAA0BA,EAAOuiC,gBAAkBjrC,mBAAiBkG,KAAM,CAEpGpZ,EADkBtJ,KAAK4+F,oBAAoBh7E,EAActa,EAAO4b,GAC5C5b,WAGpBA,EAAQtJ,KAAKunD,aAAahhC,aAAa3C,GAE3C,IAAIliB,EAAO1B,KAAKmpB,QAAQkX,QAAQnb,GAGhC,OAFA5b,GAAUuf,EAAQ2B,mBAAqB9oB,EACvC4H,EAAQtJ,KAAKoqB,oBAAoBxG,EAAMsB,EAAQ5b,IAMnDo1F,EAAgB/+F,UAAUo6C,aAAe,SAAU1R,EAAUnjB,GACzD,IAAI25E,EAAY7+F,KAAKunD,aAAaxN,aAAa1R,GAG/C,OADAw2D,GAAc,KADH7+F,KAAKmpB,QAAQkX,QAAQnb,IAKpCw5E,EAAgB/+F,UAAUg/F,mBAAqB,SAAUtjD,EAAcvyB,GACnE9oB,KAAKunD,aAAe,IAAInM,GAAoBC,EAAcr7C,KAAK0B,MAC/D1B,KAAK8+F,eAAeh2E,GACpB9oB,KAAK2qE,uBAET+zB,EAAgB/+F,UAAUm/F,eAAiB,SAAUh2E,GACjD,IAAIi2E,EAAS/+F,KAAKunD,aAAatL,WAAWpU,SACD,IAApC/e,EAAQ/H,eAAayI,aACtBu1E,GAAUh+E,eAAayI,WAEc,IAApCV,EAAQ/H,eAAawI,aACtBw1E,GAAUh+E,eAAawI,WAE3BvpB,KAAKkpB,SAAS61E,IAElBL,EAAgB/+F,UAAUgrE,oBAAsB,WAC5C,IAAIq0B,EAAY,KACZ3yE,GAAY4yE,cAEZD,EAAY3yE,GAAYm6C,MAAMlB,OAAOtlE,OAEzC,IAAImqB,EAAY,KAEhB,GAAkB,OAAd60E,QAAoC/lF,IAAd+lF,EAAyB,CAE/C70E,EAAY60E,EAAU/0E,eACtB,IAAId,EAAU61E,EAAU71E,SACxBA,EAAUA,EAAQtmB,SACVnB,KAAO1B,KAAK0B,KACpB1B,KAAKmpB,QAAUA,EACfnpB,KAAKunD,aAAey3C,EAAUz3C,kBAGb,MAAby3C,IACIh/F,KAAKunD,wBAAwBnM,KAC7Bp7C,KAAKunD,aAAa23C,QAAUl/F,KAAKw7C,aAErCx7C,KAAKunD,aAAapO,kBAClBhvB,EAAYnqB,KAAKunD,aAAat9B,eAC9BjqB,KAAKmpB,QAAUnpB,KAAKunD,aAAap+B,SAGzCnpB,KAAKmpB,QAAQg2E,eAAgB,EAC7Bn/F,KAAKkqB,aAAaC,IAMtBu0E,EAAgB/+F,UAAUk/C,WAAa,SAAUzoC,GAC7C,IAAIopB,EAAex/B,KAAKunD,aACJ,MAAhB/nB,GACAA,EAAaqf,WAAWzoC,IAGhC1W,OAAOuC,eAAey8F,EAAgB/+F,UAAW,WAK7CuC,IAAK,WACD,OAAOlC,KAAKg6C,WAEhB33C,YAAY,EACZC,cAAc,IAKlBo8F,EAAgB/+F,UAAUi/F,oBAAsB,SAAUh7E,EAActa,EAAO4b,GAI3E5b,EAAQ,EACR,IAAI81F,EAAe,KAGfn8F,GAFY,IAAI2jD,IAEGQ,cAAcxjC,EAAM5jB,KAAOklB,EAAOuiC,gBAAkBjrC,mBAAiBi3C,YAAqC2rC,GAAc,GAC3IC,EAAcp8F,EAAO+iB,QAEzB,GADAo5E,EAAen8F,EAAOokD,OAClBg4C,GAAgC,OAAjBD,EAEf,IAAK,IADDpjD,EAAYh8C,KAAKunD,aAAavL,UACzB94C,EAAI,EAAGmR,EAAM+qF,EAAap+F,OAAQkC,EAAImR,EAAKnR,IAAK,CACrD,IAAIyzC,EAAayoD,EAAal8F,GAC1BqlC,EAAQyT,EAAUvG,SAASkB,GACjB,OAAVpO,QAAmC,IAAVA,IACzBj/B,GAASi/B,EAAMj/B,OAI3B,OAAS0c,QAASq5E,EAAa/1F,MAAOA,IAEnCo1F,GACT71E,GC5JEy2E,GAAwC,WAExC,SAASA,EAAuBhgF,EAAMC,EAAMC,EAAMC,EAAMoF,GAChDvF,aAAgBD,QAA8B,IAATE,EACrCvf,KAAKu/F,eAAejgF,EAAK5M,EAAG4M,EAAK3M,EAAG2M,EAAKhW,MAAOgW,EAAK/V,OAAQ,MAExD+V,aAAgBD,GAAcE,aAAgBmsC,SAA2B,IAATlsC,EACrExf,KAAKu/F,eAAejgF,EAAK5M,EAAG4M,EAAK3M,EAAG2M,EAAKhW,MAAOgW,EAAK/V,OAAQgW,GAExDD,aAAgBH,GAAUI,aAAgBH,QAAyB,IAATI,EAC/Dxf,KAAKu/F,eAAejgF,EAAK5M,EAAG4M,EAAK3M,EAAG4M,EAAKjW,MAAOiW,EAAKhW,OAAQ,MAExD+V,aAAgBH,GAAUI,aAAgBH,GAASI,aAAgBksC,SAA2B,IAATjsC,EAC1Fzf,KAAKu/F,eAAejgF,EAAK5M,EAAG4M,EAAK3M,EAAG4M,EAAKjW,MAAOiW,EAAKhW,OAAQiW,GAExDF,aAAgBF,QAAyB,IAATG,EACrCvf,KAAKu/F,eAAe,EAAG,EAAGjgF,EAAKhW,MAAOgW,EAAK/V,OAAQ,MAE9B,iBAAT+V,GAAqC,iBAATC,QAAqC,IAATC,EACpExf,KAAKu/F,eAAe,EAAG,EAAGjgF,EAAMC,EAAM,MAEjB,iBAATD,GAAqC,iBAATC,GAAqBC,aAAgBksC,SAA2B,IAATjsC,EAC/Fzf,KAAKu/F,eAAe,EAAG,EAAGjgF,EAAMC,EAAMC,GAGtCxf,KAAKu/F,eAAejgF,EAAMC,EAAMC,EAAMC,EAAM,MA6lBpD,OArlBA/f,OAAOuC,eAAeq9F,EAAuB3/F,UAAW,QAMpDuC,IAAK,WACD,OAAOlC,KAAKw/F,WAEhBp9F,IAAK,SAAU7B,GAEXP,KAAKw/F,UAAYj/F,EAEjBP,KAAKy/F,kBAGTp9F,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9F,EAAuB3/F,UAAW,aAKpDuC,IAAK,WACD,OAAOlC,KAAK0/F,gBAEhBt9F,IAAK,SAAU7B,GAEXP,KAAK2/F,aAAap/F,IAGtB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9F,EAAuB3/F,UAAW,cAKpDuC,IAAK,WACD,OAAOlC,KAAK4/F,cAEhBx9F,IAAK,SAAU7B,GAEXP,KAAK4/F,aAAer/F,GAGxB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9F,EAAuB3/F,UAAW,cAKpDuC,IAAK,WACD,OAAQlC,KAAK4/F,cAEjBx9F,IAAK,SAAU7B,GACXP,KAAK4/F,cAAgBr/F,GAEzB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9F,EAAuB3/F,UAAW,YAKpDuC,IAAK,WACD,OAAOlC,KAAK+yF,iBAEhB3wF,IAAK,SAAU7B,GACPP,KAAKqI,OAASytB,eAAapT,OAC3B1iB,KAAK+yF,gBAAkBxyF,IAM/B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9F,EAAuB3/F,UAAW,KAKpDuC,IAAK,WAED,YAD6C,IAAzBlC,KAAK+yF,gBAAmC/yF,KAAK+yF,gBAAgBrgF,EAAI,GAGzFtQ,IAAK,SAAU7B,GACPP,KAAKqI,OAASytB,eAAapT,OAC3B1iB,KAAK+yF,gBAAgBrgF,EAAInS,IAMjC8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9F,EAAuB3/F,UAAW,KAKpDuC,IAAK,WAED,YAD6C,IAAzBlC,KAAK+yF,gBAAmC/yF,KAAK+yF,gBAAgBpgF,EAAI,GAGzFvQ,IAAK,SAAU7B,GACPP,KAAKqI,OAASytB,eAAapT,OAC3B1iB,KAAK+yF,gBAAgBpgF,EAAIpS,IAMjC8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9F,EAAuB3/F,UAAW,QAKpDuC,IAAK,WACD,OAAOlC,KAAKyuD,SAAS/sD,MAEzBU,IAAK,SAAU7B,GACPP,KAAKqI,OAASytB,eAAapT,MAC3B1iB,KAAKyuD,SAAS1qB,MAAMxjC,IAG5B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9F,EAAuB3/F,UAAW,SAKpDuC,IAAK,WACD,OAAOlC,KAAKyuD,SAASnlD,OAEzBlH,IAAK,SAAU7B,GACX,GAAIP,KAAKyuD,SAASnlD,QAAU/I,GAASP,KAAKqI,OAASytB,eAAapT,KAAM,CAClE,IAAIhhB,EAAO1B,KAAKyuD,SAAS/sD,KACzBA,EAAK4H,MAAQ/I,EACbP,KAAKyuD,SAAS1qB,MAAMriC,KAG5BW,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9F,EAAuB3/F,UAAW,UAKpDuC,IAAK,WACD,OAAOlC,KAAKyuD,SAASllD,QAEzBnH,IAAK,SAAU7B,GACX,GAAIP,KAAKyuD,SAASllD,SAAWhJ,GAASP,KAAKqI,OAASytB,eAAapT,KAAM,CACnE,IAAIhhB,EAAO1B,KAAKyuD,SAAS/sD,KACzBA,EAAK6H,OAAShJ,EACdP,KAAKyuD,SAAS1qB,MAAMriC,KAG5BW,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9F,EAAuB3/F,UAAW,YAKpDuC,IAAK,WACD,OAAOlC,KAAKyuD,SAAS1vB,UAEzB18B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9F,EAAuB3/F,UAAW,YAKpDuC,IAAK,WAID,OAAOlC,KAAK4zE,aAEhBvxE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9F,EAAuB3/F,UAAW,QAKpDuC,IAAK,WACD,OAAOlC,KAAK6/F,cAEhBz9F,IAAK,SAAU7B,GACXP,KAAK8/F,cAAcv/F,GACnBP,KAAK6/F,aAAet/F,GAExB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9F,EAAuB3/F,UAAW,UAKpDuC,IAAK,WACD,OAAO,IAAImd,EAAW,IAAIF,EAAOnf,KAAK0S,EAAG1S,KAAK2S,GAAI3S,KAAK0B,OAE3DU,IAAK,SAAU7B,GACPP,KAAKqI,OAASytB,eAAapT,OAC3B1iB,KAAK6/B,SAAW,IAAI1gB,EAAO5e,EAAMmS,EAAGnS,EAAMoS,GAC1C3S,KAAK0B,KAAO,IAAI0d,EAAM7e,EAAM+I,MAAO/I,EAAMgJ,UAGjDlH,YAAY,EACZC,cAAc,IAMlBg9F,EAAuB3/F,UAAU4/F,eAAiB,SAAUjgF,EAAMC,EAAMC,EAAMC,EAAMoF,GAChF7kB,KAAK0S,EAAI4M,EACTtf,KAAK2S,EAAI4M,EACTvf,KAAK4zE,YAAc,IAAIxqB,GAAY5pC,EAAMC,IAO7C6/E,EAAuB3/F,UAAUmgG,cAAgB,SAAUz3F,GACvD,GAAIA,IAASytB,eAAapT,KAAM,CAC5B,OAAQra,GACJ,KAAKytB,eAAa1T,IACdpiB,KAAK+/F,KAAOnqE,eAAaxT,IACzB,MACJ,KAAK0T,eAAa27B,OACdzxD,KAAK+/F,KAAOnqE,eAAa67B,OACzB,MACJ,KAAK37B,eAAa0/B,KACdx1D,KAAK+/F,KAAOnqE,eAAa4/B,KACzB,MACJ,KAAK1/B,eAAaw7B,MACdtxD,KAAK+/F,KAAOnqE,eAAa07B,MAGjCtxD,KAAKy/F,mBAObH,EAAuB3/F,UAAU8/F,eAAiB,WAC9Cz/F,KAAKoxD,UAAYv7B,oBAAkBnT,MAMvC48E,EAAuB3/F,UAAUggG,aAAe,SAAUvuC,GACtD,GAAIpxD,KAAK+/F,OAASnqE,eAAalT,KAC3B1iB,KAAK0/F,eAAiBtuC,MAErB,CAED,IAAI4uC,GAAW,EACf,OAAQhgG,KAAK+/F,MACT,KAAKnqE,eAAa4/B,KACdwqC,EAAY5uC,IAAcv7B,oBAAkBoqE,SAAW7uC,IAAcv7B,oBAAkBqqE,YACnF9uC,IAAcv7B,oBAAkBsqE,YAAc/uC,IAAcv7B,oBAAkBnT,KAClF,MACJ,KAAKkT,eAAaxT,IACd49E,EAAY5uC,IAAcv7B,oBAAkBoqE,SAAW7uC,IAAcv7B,oBAAkBuqE,WACnFhvC,IAAcv7B,oBAAkBwqE,UAAYjvC,IAAcv7B,oBAAkBnT,KAChF,MACJ,KAAKkT,eAAa07B,MACd0uC,EAAY5uC,IAAcv7B,oBAAkBwqE,UAAYjvC,IAAcv7B,oBAAkByqE,aACpFlvC,IAAcv7B,oBAAkB0qE,aAAenvC,IAAcv7B,oBAAkBnT,KACnF,MACJ,KAAKkT,eAAa67B,OACduuC,EAAY5uC,IAAcv7B,oBAAkBsqE,YAAc/uC,IAAcv7B,oBAAkB2qE,cACnFpvC,IAAcv7B,oBAAkB0qE,aAAenvC,IAAcv7B,oBAAkBnT,KACtF,MACJ,KAAKkT,eAAa62B,KACduzC,EAAY5uC,IAAcv7B,oBAAkB4qE,cAAgBrvC,IAAcv7B,oBAAkBnT,KAGhGs9E,IACAhgG,KAAK0/F,eAAiBtuC,KAQlCkuC,EAAuB3/F,UAAUugC,KAAO,SAAU4vB,EAAOz0C,GACrD,IAAIolB,EAAOqvB,EAAMrvB,KACbjsB,EAASxU,KAAKqxE,gBAAgB5wC,EAAMplB,GACxCy0C,EAAM/wB,SAASyvB,gBAAgBxuD,KAAKyuD,SAAU,IAAItvC,EAAO3K,EAAO9B,EAAG8B,EAAO7B,GAAI,IAAIyM,EAAM5K,EAAOlL,MAAOkL,EAAOjL,UAMjH+1F,EAAuB3/F,UAAU0xE,gBAAkB,SAAU5wC,EAAMplB,GAC/D,IAAIpY,EAASjD,KAAKwU,OAOlB,OANIxU,KAAK0/F,iBAAmB7pE,oBAAkBnT,KAC1Czf,EAASjD,KAAK0gG,mBAAmBjgE,EAAMplB,GAElCrb,KAAKw/F,YAAc5pE,eAAalT,OACrCzf,EAASjD,KAAK2gG,cAAclgE,EAAMplB,IAE/BpY,GAMXq8F,EAAuB3/F,UAAU+gG,mBAAqB,SAAUjgE,EAAMplB,GACrDrb,KAAKwU,OAOlB,OANIxU,KAAKqI,OAASytB,eAAapT,KAClB1iB,KAAK4gG,yBAAyBngE,EAAMplB,GAGpCrb,KAAK6gG,2BAA2BpgE,EAAMplB,IAQvDikF,EAAuB3/F,UAAUihG,yBAA2B,SAAUngE,EAAMplB,GACxE,IAAI7G,EAASxU,KAAKwU,OAEdssF,EADargE,EAAK2xB,QACQ2J,gBAAgB1gD,EAAUolB,GAAM,GAC1D/tB,EAAI1S,KAAK0S,EACTC,EAAI3S,KAAK2S,EACb,OAAQ3S,KAAK0/F,gBACT,KAAK7pE,oBAAkBoqE,QACnBvtF,EAAI,EACJC,EAAI,EACJ,MACJ,KAAKkjB,oBAAkBuqE,UACnB1tF,GAAKouF,EAAax3F,MAAQtJ,KAAKsJ,OAAS,EACxCqJ,EAAI,EACJ,MACJ,KAAKkjB,oBAAkBwqE,SACnB3tF,EAAIouF,EAAax3F,MAAQtJ,KAAKsJ,MAC9BqJ,EAAI,EACJ,MACJ,KAAKkjB,oBAAkBqqE,WACnBxtF,EAAI,EACJC,GAAKmuF,EAAav3F,OAASvJ,KAAKuJ,QAAU,EAC1C,MACJ,KAAKssB,oBAAkB4qE,aACnB/tF,GAAKouF,EAAax3F,MAAQtJ,KAAKsJ,OAAS,EACxCqJ,GAAKmuF,EAAav3F,OAASvJ,KAAKuJ,QAAU,EAC1C,MACJ,KAAKssB,oBAAkByqE,YACnB5tF,EAAIouF,EAAax3F,MAAQtJ,KAAKsJ,MAC9BqJ,GAAKmuF,EAAav3F,OAASvJ,KAAKuJ,QAAU,EAC1C,MACJ,KAAKssB,oBAAkBsqE,WACnBztF,EAAI,EACJC,EAAImuF,EAAav3F,OAASvJ,KAAKuJ,OAC/B,MACJ,KAAKssB,oBAAkB2qE,aACnB9tF,GAAKouF,EAAax3F,MAAQtJ,KAAKsJ,OAAS,EACxCqJ,EAAImuF,EAAav3F,OAASvJ,KAAKuJ,OAC/B,MACJ,KAAKssB,oBAAkB0qE,YACnB7tF,EAAIouF,EAAax3F,MAAQtJ,KAAKsJ,MAC9BqJ,EAAImuF,EAAav3F,OAASvJ,KAAKuJ,OAKvC,OAFAiL,EAAO9B,EAAIA,EACX8B,EAAO7B,EAAIA,EACJ6B,GAMX8qF,EAAuB3/F,UAAUkhG,2BAA6B,SAAUpgE,EAAMplB,GAC1E,IAAIpY,EAASjD,KAAKwU,OACd49C,EAAU3xB,EAAK2xB,QACf0uC,EAAe1uC,EAAQ2J,gBAAgB1gD,EAAUolB,GAAM,GACvD/tB,EAAI1S,KAAK0S,EACTC,EAAI3S,KAAK2S,EACb,OAAQ3S,KAAK0/F,gBACT,KAAK7pE,oBAAkBoqE,QACfjgG,KAAKqI,OAASytB,eAAa0/B,MAC3B9iD,EAAI1S,KAAK+gG,YAAYD,EAAapuF,GAClCC,EAAI,GAEC3S,KAAKqI,OAASytB,eAAa1T,MAChC1P,EAAI1S,KAAK+gG,YAAYD,EAAapuF,GAClCC,EAAI3S,KAAK+gG,YAAYD,EAAanuF,IAEtC,MACJ,KAAKkjB,oBAAkBuqE,UACnB1tF,GAAKouF,EAAax3F,MAAQtJ,KAAKsJ,OAAS,EACxCqJ,EAAI3S,KAAK+gG,YAAYD,EAAanuF,GAClC,MACJ,KAAKkjB,oBAAkBwqE,SACfrgG,KAAKqI,OAASytB,eAAaw7B,OAC3B5+C,EAAIouF,EAAax3F,MAAQ8oD,EAAQkR,oBAAoBjoD,EAAUolB,GAAM,GAASzgC,KAAKsJ,MACnFqJ,EAAI,GAEC3S,KAAKqI,OAASytB,eAAa1T,MAChC1P,EAAIouF,EAAax3F,MAAQ8oD,EAAQkR,oBAAoBjoD,EAAUolB,GAAM,GAASzgC,KAAKsJ,MACnFqJ,EAAI3S,KAAK+gG,YAAYD,EAAanuF,IAEtC,MACJ,KAAKkjB,oBAAkBqqE,WACnBxtF,EAAI1S,KAAK+gG,YAAYD,EAAapuF,GAClCC,GAAKmuF,EAAav3F,OAASvJ,KAAKuJ,QAAU,EAC1C,MACJ,KAAKssB,oBAAkB4qE,aACnB/tF,GAAKouF,EAAax3F,MAAQtJ,KAAKsJ,OAAS,EACxCqJ,GAAKmuF,EAAav3F,OAASvJ,KAAKuJ,QAAU,EAC1C,MACJ,KAAKssB,oBAAkByqE,YACnB5tF,EAAIouF,EAAax3F,MAAQ8oD,EAAQkR,oBAAoBjoD,EAAUolB,GAAM,GAASzgC,KAAKsJ,MACnFqJ,GAAKmuF,EAAav3F,OAASvJ,KAAKuJ,QAAU,EAC1C,MACJ,KAAKssB,oBAAkBsqE,WACfngG,KAAKqI,OAASytB,eAAa0/B,MAC3B9iD,EAAI1S,KAAK+gG,YAAYD,EAAapuF,GAClCC,EAAImuF,EAAav3F,OAASvJ,KAAKuJ,QAE1BvJ,KAAKqI,OAASytB,eAAa27B,SAChC/+C,EAAI1S,KAAK+gG,YAAYD,EAAapuF,GAClCC,EAAImuF,EAAav3F,OAAS6oD,EAAQmR,sBAAsBloD,EAAUolB,GAAM,GAASzgC,KAAKuJ,QAE1F,MACJ,KAAKssB,oBAAkB2qE,aACnB9tF,GAAKouF,EAAax3F,MAAQtJ,KAAKsJ,OAAS,EACxCqJ,EAAImuF,EAAav3F,OAAS6oD,EAAQmR,sBAAsBloD,EAAUolB,GAAM,GAASzgC,KAAKuJ,OACtF,MACJ,KAAKssB,oBAAkB0qE,YACfvgG,KAAKqI,OAASytB,eAAaw7B,OAC3B5+C,EAAIouF,EAAax3F,MAAQ8oD,EAAQkR,oBAAoBjoD,EAAUolB,GAAM,GAASzgC,KAAKsJ,MACnFqJ,EAAImuF,EAAav3F,OAASvJ,KAAKuJ,QAE1BvJ,KAAKqI,OAASytB,eAAa27B,SAChC/+C,EAAIouF,EAAax3F,MAAQ8oD,EAAQkR,oBAAoBjoD,EAAUolB,GAAM,GAASzgC,KAAKsJ,MACnFqJ,EAAImuF,EAAav3F,OAAS6oD,EAAQmR,sBAAsBloD,EAAUolB,GAAM,GAASzgC,KAAKuJ,QAMlG,OAFAtG,EAAOyP,EAAIA,EACXzP,EAAO0P,EAAIA,EACJ1P,GAMXq8F,EAAuB3/F,UAAUghG,cAAgB,SAAUlgE,EAAMplB,GAChDrb,KAAKwU,OAOlB,OANIxU,KAAKqI,OAASytB,eAAapT,KAClB1iB,KAAKghG,oBAAoBvgE,EAAMplB,GAG/Brb,KAAKihG,sBAAsBxgE,EAAMplB,IAQlDikF,EAAuB3/F,UAAUqhG,oBAAsB,SAAUvgE,EAAMplB,GACtDrb,KAAKwU,OAAlB,IAEIssF,EADUrgE,EAAK2xB,QACQ2J,gBAAgB1gD,EAAUolB,GAAM,GACvD/tB,EAAI1S,KAAK0S,EACTC,EAAI3S,KAAK2S,EACTrJ,EAAQtJ,KAAKsJ,MACbC,EAASvJ,KAAKuJ,OAClB,OAAQvJ,KAAKw/F,WACT,KAAK5pE,eAAa4/B,KACd9iD,EAAI,EACJC,EAAI,EACJrJ,EAAQtJ,KAAKsJ,MACbC,EAASu3F,EAAav3F,OACtB,MACJ,KAAKqsB,eAAaxT,IACd1P,EAAI,EACJC,EAAI,EACJrJ,EAAQw3F,EAAax3F,MACrBC,EAASvJ,KAAKuJ,OACd,MACJ,KAAKqsB,eAAa07B,MACd5+C,EAAIouF,EAAax3F,MAAQtJ,KAAKsJ,MAC9BqJ,EAAI,EACJrJ,EAAQtJ,KAAKsJ,MACbC,EAASu3F,EAAav3F,OACtB,MACJ,KAAKqsB,eAAa67B,OACd/+C,EAAI,EACJC,EAAImuF,EAAav3F,OAASvJ,KAAKuJ,OAC/BD,EAAQw3F,EAAax3F,MACrBC,EAASvJ,KAAKuJ,OACd,MACJ,KAAKqsB,eAAa62B,KACd/5C,EAAI,EACJA,EAAI,EACJpJ,EAAQw3F,EAAax3F,MACrBC,EAASu3F,EAAav3F,OAI9B,OADS,IAAI8V,EAAW3M,EAAGC,EAAGrJ,EAAOC,IAOzC+1F,EAAuB3/F,UAAUshG,sBAAwB,SAAUxgE,EAAMplB,GACxDrb,KAAKwU,OAAlB,IACI49C,EAAU3xB,EAAK2xB,QACf0uC,EAAe1uC,EAAQ2J,gBAAgB1gD,EAAUolB,GAAM,GACvDzY,EAAaoqC,EAAQ4J,aAAaxkC,gBAClC9kB,EAAI1S,KAAK0S,EACTC,EAAI3S,KAAK2S,EACTrJ,EAAQtJ,KAAKsJ,MACbC,EAASvJ,KAAKuJ,OAClB,OAAQvJ,KAAKw/F,WACT,KAAK5pE,eAAa4/B,KACd9iD,EAAI1S,KAAK+gG,YAAYD,EAAapuF,GAClCC,EAAI,EACJrJ,EAAQtJ,KAAKsJ,MACbC,EAASu3F,EAAav3F,OACtB,MACJ,KAAKqsB,eAAaxT,IACd1P,EAAI1S,KAAK+gG,YAAYD,EAAapuF,GAClCC,EAAI3S,KAAK+gG,YAAYD,EAAanuF,GAClCrJ,EAAQ0e,EAAW1e,MACnBC,EAASvJ,KAAKuJ,OACVu3F,EAAav3F,OAAS,IACtBoJ,EAAIqV,EAAWze,OAASu3F,EAAanuF,GAEzC,MACJ,KAAKijB,eAAa07B,MACd5+C,EAAIouF,EAAax3F,MAAQ8oD,EAAQkR,oBAAoBjoD,EAAUolB,GAAM,GAASzgC,KAAKsJ,MACnFqJ,EAAI,EACJrJ,EAAQtJ,KAAKsJ,MACbC,EAASu3F,EAAav3F,OACtB,MACJ,KAAKqsB,eAAa67B,OACd/+C,EAAI1S,KAAK+gG,YAAYD,EAAapuF,GAClCC,EAAImuF,EAAav3F,OAAS6oD,EAAQmR,sBAAsBloD,EAAUolB,GAAM,GAASzgC,KAAKuJ,OACtFD,EAAQ0e,EAAW1e,MACnBC,EAASvJ,KAAKuJ,OACVu3F,EAAav3F,OAAS,IACtBoJ,GAAKqV,EAAWze,QAEpB,MACJ,KAAKqsB,eAAa62B,KACd/5C,EAAI,EACJA,EAAI,EACJpJ,EAAQw3F,EAAax3F,MACrBC,EAASu3F,EAAav3F,OAI9B,OADS,IAAI8V,EAAW3M,EAAGC,EAAGrJ,EAAOC,IAOzC+1F,EAAuB3/F,UAAUohG,YAAc,SAAUxgG,GACrD,OAAkB,IAAVA,GAA0B,IAAVA,GAAe,EAAIA,IAAW2gG,EAAAA,GAAc3gG,EAAQA,GAEzE++F"}